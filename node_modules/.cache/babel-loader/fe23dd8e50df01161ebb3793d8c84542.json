{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TraceEvent = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst _1 = require(\".\");\nconst Trace_1 = require(\"./Trace\");\n/**\n * Analytics instrumentation component that wraps event callbacks with logging logic.\n *\n * @example\n *  <TraceEvent events={[Event.onClick]} element={ElementName.SWAP_BUTTON}>\n *    <Button onClick={() => console.log('clicked')}>Click me</Button>\n *  </TraceEvent>\n */\nexports.TraceEvent = (0, react_1.memo)(props => {\n  const {\n      shouldLogImpression,\n      name,\n      properties,\n      events,\n      children\n    } = props,\n    traceProps = __rest(props, [\"shouldLogImpression\", \"name\", \"properties\", \"events\", \"children\"]);\n  return (0, jsx_runtime_1.jsx)(Trace_1.Trace, Object.assign({}, traceProps, {\n    children: (0, jsx_runtime_1.jsx)(Trace_1.TraceContext.Consumer, {\n      children: traceContext => react_1.Children.map(children, child => {\n        if (!(0, react_1.isValidElement)(child)) {\n          return child;\n        }\n        // For each child, augment event handlers defined in `events` with event tracing.\n        return (0, react_1.cloneElement)(child, getEventHandlers(child, traceContext, events, name, properties, shouldLogImpression));\n      })\n    })\n  }));\n});\nexports.TraceEvent.displayName = 'TraceEvent';\n/**\n * Given a set of child element and event props, returns a spreadable\n * object of the event handlers augmented with analytics logging.\n */\nfunction getEventHandlers(child, traceContext, events, name, properties) {\n  let shouldLogImpression = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  const eventHandlers = {};\n  for (const event of events) {\n    eventHandlers[event] = eventHandlerArgs => {\n      var _a;\n      // call child event handler with original arguments, must be in array\n      const args = Array.isArray(eventHandlerArgs) ? eventHandlerArgs : [eventHandlerArgs];\n      (_a = child.props[event]) === null || _a === void 0 ? void 0 : _a.apply(child, args);\n      // augment handler with analytics logging\n      if (shouldLogImpression) {\n        (0, _1.sendAnalyticsEvent)(name, Object.assign(Object.assign(Object.assign({}, traceContext), properties), {\n          action: event\n        }));\n      }\n    };\n  }\n  // return a spreadable event handler object\n  return eventHandlers;\n}","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","TraceEvent","jsx_runtime_1","require","react_1","_1","Trace_1","memo","props","shouldLogImpression","name","properties","events","children","traceProps","jsx","Trace","assign","TraceContext","Consumer","traceContext","Children","map","child","isValidElement","cloneElement","getEventHandlers","displayName","eventHandlers","event","eventHandlerArgs","_a","args","Array","isArray","apply","sendAnalyticsEvent","action"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@uniswap/analytics/lib/cjs/analytics/TraceEvent.js"],"sourcesContent":["\"use strict\";\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceEvent = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst _1 = require(\".\");\nconst Trace_1 = require(\"./Trace\");\n/**\n * Analytics instrumentation component that wraps event callbacks with logging logic.\n *\n * @example\n *  <TraceEvent events={[Event.onClick]} element={ElementName.SWAP_BUTTON}>\n *    <Button onClick={() => console.log('clicked')}>Click me</Button>\n *  </TraceEvent>\n */\nexports.TraceEvent = (0, react_1.memo)((props) => {\n    const { shouldLogImpression, name, properties, events, children } = props, traceProps = __rest(props, [\"shouldLogImpression\", \"name\", \"properties\", \"events\", \"children\"]);\n    return ((0, jsx_runtime_1.jsx)(Trace_1.Trace, Object.assign({}, traceProps, { children: (0, jsx_runtime_1.jsx)(Trace_1.TraceContext.Consumer, { children: (traceContext) => react_1.Children.map(children, (child) => {\n                if (!(0, react_1.isValidElement)(child)) {\n                    return child;\n                }\n                // For each child, augment event handlers defined in `events` with event tracing.\n                return (0, react_1.cloneElement)(child, getEventHandlers(child, traceContext, events, name, properties, shouldLogImpression));\n            }) }) })));\n});\nexports.TraceEvent.displayName = 'TraceEvent';\n/**\n * Given a set of child element and event props, returns a spreadable\n * object of the event handlers augmented with analytics logging.\n */\nfunction getEventHandlers(child, traceContext, events, name, properties, shouldLogImpression = true) {\n    const eventHandlers = {};\n    for (const event of events) {\n        eventHandlers[event] = (eventHandlerArgs) => {\n            var _a;\n            // call child event handler with original arguments, must be in array\n            const args = Array.isArray(eventHandlerArgs) ? eventHandlerArgs : [eventHandlerArgs];\n            (_a = child.props[event]) === null || _a === void 0 ? void 0 : _a.apply(child, args);\n            // augment handler with analytics logging\n            if (shouldLogImpression) {\n                (0, _1.sendAnalyticsEvent)(name, Object.assign(Object.assign(Object.assign({}, traceContext), properties), { action: event }));\n            }\n        };\n    }\n    // return a spreadable event handler object\n    return eventHandlers;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}