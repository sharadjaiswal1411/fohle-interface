{"ast":null,"code":"var _s = $RefreshSig$();\nimport { parse } from 'qs';\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useAppDispatch } from 'state/hooks';\nimport { updateUserDarkMode } from '../../state/user/reducer';\nexport default function DarkModeQueryParamReader() {\n  _s();\n  const {\n    search\n  } = useLocation();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (!search) return;\n    if (search.length < 2) return;\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true\n    });\n    const theme = parsed.theme;\n    if (typeof theme !== 'string') return;\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: false\n      }));\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({\n        userDarkMode: true\n      }));\n    }\n  }, [dispatch, search]);\n  return null;\n}\n_s(DarkModeQueryParamReader, \"KBuJUscXLtkQIrS0TLzorO6skIw=\", false, function () {\n  return [useLocation, useAppDispatch];\n});\n_c = DarkModeQueryParamReader;\nvar _c;\n$RefreshReg$(_c, \"DarkModeQueryParamReader\");","map":{"version":3,"names":["parse","useEffect","useLocation","useAppDispatch","updateUserDarkMode","DarkModeQueryParamReader","search","dispatch","length","parsed","parseArrays","ignoreQueryPrefix","theme","toLowerCase","userDarkMode"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/theme/components/DarkModeQueryParamReader.tsx"],"sourcesContent":["import { parse } from 'qs'\nimport { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { useAppDispatch } from 'state/hooks'\n\nimport { updateUserDarkMode } from '../../state/user/reducer'\n\nexport default function DarkModeQueryParamReader(): null {\n  const { search } = useLocation()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (!search) return\n    if (search.length < 2) return\n\n    const parsed = parse(search, {\n      parseArrays: false,\n      ignoreQueryPrefix: true,\n    })\n\n    const theme = parsed.theme\n\n    if (typeof theme !== 'string') return\n\n    if (theme.toLowerCase() === 'light') {\n      dispatch(updateUserDarkMode({ userDarkMode: false }))\n    } else if (theme.toLowerCase() === 'dark') {\n      dispatch(updateUserDarkMode({ userDarkMode: true }))\n    }\n  }, [dispatch, search])\n\n  return null\n}\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,IAAI;AAC1B,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,aAAa;AAE5C,SAASC,kBAAkB,QAAQ,0BAA0B;AAE7D,eAAe,SAASC,wBAAwB,GAAS;EAAA;EACvD,MAAM;IAAEC;EAAO,CAAC,GAAGJ,WAAW,EAAE;EAChC,MAAMK,QAAQ,GAAGJ,cAAc,EAAE;EAEjCF,SAAS,CAAC,MAAM;IACd,IAAI,CAACK,MAAM,EAAE;IACb,IAAIA,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IAEvB,MAAMC,MAAM,GAAGT,KAAK,CAACM,MAAM,EAAE;MAC3BI,WAAW,EAAE,KAAK;MAClBC,iBAAiB,EAAE;IACrB,CAAC,CAAC;IAEF,MAAMC,KAAK,GAAGH,MAAM,CAACG,KAAK;IAE1B,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAE/B,IAAIA,KAAK,CAACC,WAAW,EAAE,KAAK,OAAO,EAAE;MACnCN,QAAQ,CAACH,kBAAkB,CAAC;QAAEU,YAAY,EAAE;MAAM,CAAC,CAAC,CAAC;IACvD,CAAC,MAAM,IAAIF,KAAK,CAACC,WAAW,EAAE,KAAK,MAAM,EAAE;MACzCN,QAAQ,CAACH,kBAAkB,CAAC;QAAEU,YAAY,EAAE;MAAK,CAAC,CAAC,CAAC;IACtD;EACF,CAAC,EAAE,CAACP,QAAQ,EAAED,MAAM,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb;AAAC,GAzBuBD,wBAAwB;EAAA,QAC3BH,WAAW,EACbC,cAAc;AAAA;AAAA,KAFTE,wBAAwB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}