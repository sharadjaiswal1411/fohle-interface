{"ast":null,"code":"import{namehash}from'@ethersproject/hash';import{useSingleCallResult}from'lib/hooks/multicall';import{useMemo}from'react';import{isAddress}from'../utils';import isZero from'../utils/isZero';import{useENSRegistrarContract,useENSResolverContract}from'./useContract';import useDebounce from'./useDebounce';import useENSAddress from'./useENSAddress';/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */export default function useENSName(address){var _resolverAddress$resu,_nameCallRes$result;var debouncedAddress=useDebounce(address,200);var ensNodeArgument=useMemo(function(){if(!debouncedAddress||!isAddress(debouncedAddress))return[undefined];return[namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2),\".addr.reverse\"))];},[debouncedAddress]);var registrarContract=useENSRegistrarContract(false);var resolverAddress=useSingleCallResult(registrarContract,'resolver',ensNodeArgument);var resolverAddressResult=(_resolverAddress$resu=resolverAddress.result)===null||_resolverAddress$resu===void 0?void 0:_resolverAddress$resu[0];var resolverContract=useENSResolverContract(resolverAddressResult&&!isZero(resolverAddressResult)?resolverAddressResult:undefined,false);var nameCallRes=useSingleCallResult(resolverContract,'name',ensNodeArgument);var name=(_nameCallRes$result=nameCallRes.result)===null||_nameCallRes$result===void 0?void 0:_nameCallRes$result[0];/* ENS does not enforce that an address owns a .eth domain before setting it as a reverse proxy \n     and recommends that you perform a match on the forward resolution\n     see: https://docs.ens.domains/dapp-developer-guide/resolving-names#reverse-resolution\n  */var fwdAddr=useENSAddress(name);var checkedName=address===(fwdAddr===null||fwdAddr===void 0?void 0:fwdAddr.address)?name:null;var changed=debouncedAddress!==address;return useMemo(function(){return{ENSName:changed?null:checkedName,loading:changed||resolverAddress.loading||nameCallRes.loading};},[changed,nameCallRes.loading,checkedName,resolverAddress.loading]);}","map":{"version":3,"names":["namehash","useSingleCallResult","useMemo","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","useENSName","address","debouncedAddress","ensNodeArgument","undefined","toLowerCase","substr","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","nameCallRes","name","fwdAddr","checkedName","changed","ENSName","loading"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useENSName.ts"],"sourcesContent":["import { namehash } from '@ethersproject/hash'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\nimport useENSAddress from './useENSAddress'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    return [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)]\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const nameCallRes = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n  const name = nameCallRes.result?.[0]\n\n  /* ENS does not enforce that an address owns a .eth domain before setting it as a reverse proxy \n     and recommends that you perform a match on the forward resolution\n     see: https://docs.ens.domains/dapp-developer-guide/resolving-names#reverse-resolution\n  */\n  const fwdAddr = useENSAddress(name)\n  const checkedName = address === fwdAddr?.address ? name : null\n\n  const changed = debouncedAddress !== address\n  return useMemo(\n    () => ({\n      ENSName: changed ? null : checkedName,\n      loading: changed || resolverAddress.loading || nameCallRes.loading,\n    }),\n    [changed, nameCallRes.loading, checkedName, resolverAddress.loading]\n  )\n}\n"],"mappings":"AAAA,OAASA,QAAQ,KAAQ,qBAAqB,CAC9C,OAASC,mBAAmB,KAAQ,qBAAqB,CACzD,OAASC,OAAO,KAAQ,OAAO,CAE/B,OAASC,SAAS,KAAQ,UAAU,CACpC,MAAOC,OAAM,KAAM,iBAAiB,CACpC,OAASC,uBAAuB,CAAEC,sBAAsB,KAAQ,eAAe,CAC/E,MAAOC,YAAW,KAAM,eAAe,CACvC,MAAOC,cAAa,KAAM,iBAAiB,CAE3C;AACA;AACA;AACA,GACA,cAAe,SAASC,WAAU,CAACC,OAAgB,CAAgD,+CACjG,GAAMC,iBAAgB,CAAGJ,WAAW,CAACG,OAAO,CAAE,GAAG,CAAC,CAClD,GAAME,gBAAe,CAAGV,OAAO,CAAC,UAAM,CACpC,GAAI,CAACS,gBAAgB,EAAI,CAACR,SAAS,CAACQ,gBAAgB,CAAC,CAAE,MAAO,CAACE,SAAS,CAAC,CACzE,MAAO,CAACb,QAAQ,WAAIW,gBAAgB,CAACG,WAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAC,kBAAgB,CAAC,CAC/E,CAAC,CAAE,CAACJ,gBAAgB,CAAC,CAAC,CACtB,GAAMK,kBAAiB,CAAGX,uBAAuB,CAAC,KAAK,CAAC,CACxD,GAAMY,gBAAe,CAAGhB,mBAAmB,CAACe,iBAAiB,CAAE,UAAU,CAAEJ,eAAe,CAAC,CAC3F,GAAMM,sBAAqB,wBAAGD,eAAe,CAACE,MAAM,gDAAtB,sBAAyB,CAAC,CAAC,CACzD,GAAMC,iBAAgB,CAAGd,sBAAsB,CAC7CY,qBAAqB,EAAI,CAACd,MAAM,CAACc,qBAAqB,CAAC,CAAGA,qBAAqB,CAAGL,SAAS,CAC3F,KAAK,CACN,CACD,GAAMQ,YAAW,CAAGpB,mBAAmB,CAACmB,gBAAgB,CAAE,MAAM,CAAER,eAAe,CAAC,CAClF,GAAMU,KAAI,sBAAGD,WAAW,CAACF,MAAM,8CAAlB,oBAAqB,CAAC,CAAC,CAEpC;AACF;AACA;AACA,IACE,GAAMI,QAAO,CAAGf,aAAa,CAACc,IAAI,CAAC,CACnC,GAAME,YAAW,CAAGd,OAAO,IAAKa,OAAO,SAAPA,OAAO,iBAAPA,OAAO,CAAEb,OAAO,EAAGY,IAAI,CAAG,IAAI,CAE9D,GAAMG,QAAO,CAAGd,gBAAgB,GAAKD,OAAO,CAC5C,MAAOR,QAAO,CACZ,iBAAO,CACLwB,OAAO,CAAED,OAAO,CAAG,IAAI,CAAGD,WAAW,CACrCG,OAAO,CAAEF,OAAO,EAAIR,eAAe,CAACU,OAAO,EAAIN,WAAW,CAACM,OAC7D,CAAC,EAAC,CACF,CAACF,OAAO,CAAEJ,WAAW,CAACM,OAAO,CAAEH,WAAW,CAAEP,eAAe,CAACU,OAAO,CAAC,CACrE,CACH"},"metadata":{},"sourceType":"module"}