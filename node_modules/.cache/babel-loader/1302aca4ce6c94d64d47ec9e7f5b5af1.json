{"ast":null,"code":"'use strict';\n\nvar trim = require('trim');\nvar repeat = require('repeat-string');\nvar getIndent = require('./get-indentation');\nmodule.exports = indentation;\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\n\n/* Remove the minimum indent from every line in `value`.\n * Supports both tab, spaced, and mixed indentation (as\n * well as possible). */\nfunction indentation(value, maximum) {\n  var values = value.split(C_NEWLINE);\n  var position = values.length + 1;\n  var minIndent = Infinity;\n  var matrix = [];\n  var index;\n  var indentation;\n  var stops;\n  var padding;\n  values.unshift(repeat(C_SPACE, maximum) + '!');\n  while (position--) {\n    indentation = getIndent(values[position]);\n    matrix[position] = indentation.stops;\n    if (trim(values[position]).length === 0) {\n      continue;\n    }\n    if (indentation.indent) {\n      if (indentation.indent > 0 && indentation.indent < minIndent) {\n        minIndent = indentation.indent;\n      }\n    } else {\n      minIndent = Infinity;\n      break;\n    }\n  }\n  if (minIndent !== Infinity) {\n    position = values.length;\n    while (position--) {\n      stops = matrix[position];\n      index = minIndent;\n      while (index && !(index in stops)) {\n        index--;\n      }\n      if (trim(values[position]).length !== 0 && minIndent && index !== minIndent) {\n        padding = C_TAB;\n      } else {\n        padding = '';\n      }\n      values[position] = padding + values[position].slice(index in stops ? stops[index] + 1 : 0);\n    }\n  }\n  values.shift();\n  return values.join(C_NEWLINE);\n}","map":{"version":3,"names":["trim","require","repeat","getIndent","module","exports","indentation","C_SPACE","C_NEWLINE","C_TAB","value","maximum","values","split","position","length","minIndent","Infinity","matrix","index","stops","padding","unshift","indent","slice","shift","join"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/util/remove-indentation.js"],"sourcesContent":["'use strict';\n\nvar trim = require('trim');\nvar repeat = require('repeat-string');\nvar getIndent = require('./get-indentation');\n\nmodule.exports = indentation;\n\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\n\n/* Remove the minimum indent from every line in `value`.\n * Supports both tab, spaced, and mixed indentation (as\n * well as possible). */\nfunction indentation(value, maximum) {\n  var values = value.split(C_NEWLINE);\n  var position = values.length + 1;\n  var minIndent = Infinity;\n  var matrix = [];\n  var index;\n  var indentation;\n  var stops;\n  var padding;\n\n  values.unshift(repeat(C_SPACE, maximum) + '!');\n\n  while (position--) {\n    indentation = getIndent(values[position]);\n\n    matrix[position] = indentation.stops;\n\n    if (trim(values[position]).length === 0) {\n      continue;\n    }\n\n    if (indentation.indent) {\n      if (indentation.indent > 0 && indentation.indent < minIndent) {\n        minIndent = indentation.indent;\n      }\n    } else {\n      minIndent = Infinity;\n\n      break;\n    }\n  }\n\n  if (minIndent !== Infinity) {\n    position = values.length;\n\n    while (position--) {\n      stops = matrix[position];\n      index = minIndent;\n\n      while (index && !(index in stops)) {\n        index--;\n      }\n\n      if (\n        trim(values[position]).length !== 0 &&\n        minIndent &&\n        index !== minIndent\n      ) {\n        padding = C_TAB;\n      } else {\n        padding = '';\n      }\n\n      values[position] = padding + values[position].slice(\n        index in stops ? stops[index] + 1 : 0\n      );\n    }\n  }\n\n  values.shift();\n\n  return values.join(C_NEWLINE);\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIE,SAAS,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAE5CG,MAAM,CAACC,OAAO,GAAGC,WAAW;AAE5B,IAAIC,OAAO,GAAG,GAAG;AACjB,IAAIC,SAAS,GAAG,IAAI;AACpB,IAAIC,KAAK,GAAG,IAAI;;AAEhB;AACA;AACA;AACA,SAASH,WAAW,CAACI,KAAK,EAAEC,OAAO,EAAE;EACnC,IAAIC,MAAM,GAAGF,KAAK,CAACG,KAAK,CAACL,SAAS,CAAC;EACnC,IAAIM,QAAQ,GAAGF,MAAM,CAACG,MAAM,GAAG,CAAC;EAChC,IAAIC,SAAS,GAAGC,QAAQ;EACxB,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,KAAK;EACT,IAAIb,WAAW;EACf,IAAIc,KAAK;EACT,IAAIC,OAAO;EAEXT,MAAM,CAACU,OAAO,CAACpB,MAAM,CAACK,OAAO,EAAEI,OAAO,CAAC,GAAG,GAAG,CAAC;EAE9C,OAAOG,QAAQ,EAAE,EAAE;IACjBR,WAAW,GAAGH,SAAS,CAACS,MAAM,CAACE,QAAQ,CAAC,CAAC;IAEzCI,MAAM,CAACJ,QAAQ,CAAC,GAAGR,WAAW,CAACc,KAAK;IAEpC,IAAIpB,IAAI,CAACY,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MACvC;IACF;IAEA,IAAIT,WAAW,CAACiB,MAAM,EAAE;MACtB,IAAIjB,WAAW,CAACiB,MAAM,GAAG,CAAC,IAAIjB,WAAW,CAACiB,MAAM,GAAGP,SAAS,EAAE;QAC5DA,SAAS,GAAGV,WAAW,CAACiB,MAAM;MAChC;IACF,CAAC,MAAM;MACLP,SAAS,GAAGC,QAAQ;MAEpB;IACF;EACF;EAEA,IAAID,SAAS,KAAKC,QAAQ,EAAE;IAC1BH,QAAQ,GAAGF,MAAM,CAACG,MAAM;IAExB,OAAOD,QAAQ,EAAE,EAAE;MACjBM,KAAK,GAAGF,MAAM,CAACJ,QAAQ,CAAC;MACxBK,KAAK,GAAGH,SAAS;MAEjB,OAAOG,KAAK,IAAI,EAAEA,KAAK,IAAIC,KAAK,CAAC,EAAE;QACjCD,KAAK,EAAE;MACT;MAEA,IACEnB,IAAI,CAACY,MAAM,CAACE,QAAQ,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IACnCC,SAAS,IACTG,KAAK,KAAKH,SAAS,EACnB;QACAK,OAAO,GAAGZ,KAAK;MACjB,CAAC,MAAM;QACLY,OAAO,GAAG,EAAE;MACd;MAEAT,MAAM,CAACE,QAAQ,CAAC,GAAGO,OAAO,GAAGT,MAAM,CAACE,QAAQ,CAAC,CAACU,KAAK,CACjDL,KAAK,IAAIC,KAAK,GAAGA,KAAK,CAACD,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CACtC;IACH;EACF;EAEAP,MAAM,CAACa,KAAK,EAAE;EAEd,OAAOb,MAAM,CAACc,IAAI,CAAClB,SAAS,CAAC;AAC/B"},"metadata":{},"sourceType":"script"}