{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport useSwapApproval from 'lib/hooks/swap/useSwapApproval';\nimport { useApproval } from 'lib/hooks/useApproval';\nimport { useCallback } from 'react';\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks';\nimport { TransactionType } from '../state/transactions/types';\nexport { ApprovalState } from 'lib/hooks/useApproval';\nfunction useGetAndTrackApproval(getApproval) {\n  _s();\n  const addTransaction = useTransactionAdder();\n  return useCallback(() => {\n    return getApproval().then(pending => {\n      if (pending) {\n        const {\n          response,\n          tokenAddress,\n          spenderAddress: spender\n        } = pending;\n        addTransaction(response, {\n          type: TransactionType.APPROVAL,\n          tokenAddress,\n          spender\n        });\n      }\n    });\n  }, [addTransaction, getApproval]);\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\n_s(useGetAndTrackApproval, \"43RVjggNnL8w72qL/lyPDCEhYWQ=\", false, function () {\n  return [useTransactionAdder];\n});\nexport function useApproveCallback(amountToApprove, spender) {\n  _s2();\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval);\n  return [approval, useGetAndTrackApproval(getApproval)];\n}\n_s2(useApproveCallback, \"N9NjsEjIET6W95slhpLYunw6XEE=\", false, function () {\n  return [useApproval, useGetAndTrackApproval];\n});\nexport function useApproveCallbackFromTrade(trade, allowedSlippage) {\n  _s3();\n  const [approval, getApproval] = useSwapApproval(trade, allowedSlippage, useHasPendingApproval);\n  return [approval, useGetAndTrackApproval(getApproval)];\n}\n_s3(useApproveCallbackFromTrade, \"VNxJbtYk5Ufe5JMDMuQ57fKeIJg=\", false, function () {\n  return [useSwapApproval, useGetAndTrackApproval];\n});","map":{"version":3,"names":["useSwapApproval","useApproval","useCallback","useHasPendingApproval","useTransactionAdder","TransactionType","ApprovalState","useGetAndTrackApproval","getApproval","addTransaction","then","pending","response","tokenAddress","spenderAddress","spender","type","APPROVAL","useApproveCallback","amountToApprove","approval","useApproveCallbackFromTrade","trade","allowedSlippage"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useApproveCallback.ts"],"sourcesContent":["import { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport useSwapApproval from 'lib/hooks/swap/useSwapApproval'\nimport { ApprovalState, useApproval } from 'lib/hooks/useApproval'\nimport { useCallback } from 'react'\n\nimport { useHasPendingApproval, useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nexport { ApprovalState } from 'lib/hooks/useApproval'\n\nfunction useGetAndTrackApproval(getApproval: ReturnType<typeof useApproval>[1]) {\n  const addTransaction = useTransactionAdder()\n  return useCallback(() => {\n    return getApproval().then((pending) => {\n      if (pending) {\n        const { response, tokenAddress, spenderAddress: spender } = pending\n        addTransaction(response, { type: TransactionType.APPROVAL, tokenAddress, spender })\n      }\n    })\n  }, [addTransaction, getApproval])\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount<Currency>,\n  spender?: string\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useApproval(amountToApprove, spender, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n\nexport function useApproveCallbackFromTrade(\n  trade: Trade<Currency, Currency, TradeType> | undefined,\n  allowedSlippage: Percent\n): [ApprovalState, () => Promise<void>] {\n  const [approval, getApproval] = useSwapApproval(trade, allowedSlippage, useHasPendingApproval)\n  return [approval, useGetAndTrackApproval(getApproval)]\n}\n"],"mappings":";;;AAEA,OAAOA,eAAe,MAAM,gCAAgC;AAC5D,SAAwBC,WAAW,QAAQ,uBAAuB;AAClE,SAASC,WAAW,QAAQ,OAAO;AAEnC,SAASC,qBAAqB,EAAEC,mBAAmB,QAAQ,6BAA6B;AACxF,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SAASC,aAAa,QAAQ,uBAAuB;AAErD,SAASC,sBAAsB,CAACC,WAA8C,EAAE;EAAA;EAC9E,MAAMC,cAAc,GAAGL,mBAAmB,EAAE;EAC5C,OAAOF,WAAW,CAAC,MAAM;IACvB,OAAOM,WAAW,EAAE,CAACE,IAAI,CAAEC,OAAO,IAAK;MACrC,IAAIA,OAAO,EAAE;QACX,MAAM;UAAEC,QAAQ;UAAEC,YAAY;UAAEC,cAAc,EAAEC;QAAQ,CAAC,GAAGJ,OAAO;QACnEF,cAAc,CAACG,QAAQ,EAAE;UAAEI,IAAI,EAAEX,eAAe,CAACY,QAAQ;UAAEJ,YAAY;UAAEE;QAAQ,CAAC,CAAC;MACrF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,CAACN,cAAc,EAAED,WAAW,CAAC,CAAC;AACnC;;AAEA;AAAA,GAZSD,sBAAsB;EAAA,QACNH,mBAAmB;AAAA;AAY5C,OAAO,SAASc,kBAAkB,CAChCC,eAA0C,EAC1CJ,OAAgB,EACsB;EAAA;EACtC,MAAM,CAACK,QAAQ,EAAEZ,WAAW,CAAC,GAAGP,WAAW,CAACkB,eAAe,EAAEJ,OAAO,EAAEZ,qBAAqB,CAAC;EAC5F,OAAO,CAACiB,QAAQ,EAAEb,sBAAsB,CAACC,WAAW,CAAC,CAAC;AACxD;AAAC,IANeU,kBAAkB;EAAA,QAIAjB,WAAW,EACzBM,sBAAsB;AAAA;AAG1C,OAAO,SAASc,2BAA2B,CACzCC,KAAuD,EACvDC,eAAwB,EACc;EAAA;EACtC,MAAM,CAACH,QAAQ,EAAEZ,WAAW,CAAC,GAAGR,eAAe,CAACsB,KAAK,EAAEC,eAAe,EAAEpB,qBAAqB,CAAC;EAC9F,OAAO,CAACiB,QAAQ,EAAEb,sBAAsB,CAACC,WAAW,CAAC,CAAC;AACxD;AAAC,IANea,2BAA2B;EAAA,QAITrB,eAAe,EAC7BO,sBAAsB;AAAA"},"metadata":{},"sourceType":"module"}