{"ast":null,"code":"var _s = $RefreshSig$();\nimport { namehash } from '@ethersproject/hash';\nimport { useSingleCallResult } from 'lib/hooks/multicall';\nimport { useMemo } from 'react';\nimport { isAddress } from '../utils';\nimport isZero from '../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\nimport useDebounce from './useDebounce';\nimport useENSAddress from './useENSAddress';\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address) {\n  _s();\n  var _resolverAddress$resu, _nameCallRes$result;\n  const debouncedAddress = useDebounce(address, 200);\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined];\n    return [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)];\n  }, [debouncedAddress]);\n  const registrarContract = useENSRegistrarContract(false);\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  const resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  const nameCallRes = useSingleCallResult(resolverContract, 'name', ensNodeArgument);\n  const name = (_nameCallRes$result = nameCallRes.result) === null || _nameCallRes$result === void 0 ? void 0 : _nameCallRes$result[0];\n\n  /* ENS does not enforce that an address owns a .eth domain before setting it as a reverse proxy \n     and recommends that you perform a match on the forward resolution\n     see: https://docs.ens.domains/dapp-developer-guide/resolving-names#reverse-resolution\n  */\n  const fwdAddr = useENSAddress(name);\n  const checkedName = address === (fwdAddr === null || fwdAddr === void 0 ? void 0 : fwdAddr.address) ? name : null;\n  const changed = debouncedAddress !== address;\n  return useMemo(() => ({\n    ENSName: changed ? null : checkedName,\n    loading: changed || resolverAddress.loading || nameCallRes.loading\n  }), [changed, nameCallRes.loading, checkedName, resolverAddress.loading]);\n}\n_s(useENSName, \"LM/F3tNX1vJuJvGJgzdfsNjYLNI=\", false, function () {\n  return [useDebounce, useENSRegistrarContract, useSingleCallResult, useENSResolverContract, useSingleCallResult, useENSAddress];\n});","map":{"version":3,"names":["namehash","useSingleCallResult","useMemo","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","useENSName","address","debouncedAddress","ensNodeArgument","undefined","toLowerCase","substr","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","nameCallRes","name","fwdAddr","checkedName","changed","ENSName","loading"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useENSName.ts"],"sourcesContent":["import { namehash } from '@ethersproject/hash'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\nimport useENSAddress from './useENSAddress'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    return [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)]\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const nameCallRes = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n  const name = nameCallRes.result?.[0]\n\n  /* ENS does not enforce that an address owns a .eth domain before setting it as a reverse proxy \n     and recommends that you perform a match on the forward resolution\n     see: https://docs.ens.domains/dapp-developer-guide/resolving-names#reverse-resolution\n  */\n  const fwdAddr = useENSAddress(name)\n  const checkedName = address === fwdAddr?.address ? name : null\n\n  const changed = debouncedAddress !== address\n  return useMemo(\n    () => ({\n      ENSName: changed ? null : checkedName,\n      loading: changed || resolverAddress.loading || nameCallRes.loading,\n    }),\n    [changed, nameCallRes.loading, checkedName, resolverAddress.loading]\n  )\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,SAAS,QAAQ,UAAU;AACpC,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,uBAAuB,EAAEC,sBAAsB,QAAQ,eAAe;AAC/E,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,aAAa,MAAM,iBAAiB;;AAE3C;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAU,CAACC,OAAgB,EAAgD;EAAA;EAAA;EACjG,MAAMC,gBAAgB,GAAGJ,WAAW,CAACG,OAAO,EAAE,GAAG,CAAC;EAClD,MAAME,eAAe,GAAGV,OAAO,CAAC,MAAM;IACpC,IAAI,CAACS,gBAAgB,IAAI,CAACR,SAAS,CAACQ,gBAAgB,CAAC,EAAE,OAAO,CAACE,SAAS,CAAC;IACzE,OAAO,CAACb,QAAQ,CAAE,GAAEW,gBAAgB,CAACG,WAAW,EAAE,CAACC,MAAM,CAAC,CAAC,CAAE,eAAc,CAAC,CAAC;EAC/E,CAAC,EAAE,CAACJ,gBAAgB,CAAC,CAAC;EACtB,MAAMK,iBAAiB,GAAGX,uBAAuB,CAAC,KAAK,CAAC;EACxD,MAAMY,eAAe,GAAGhB,mBAAmB,CAACe,iBAAiB,EAAE,UAAU,EAAEJ,eAAe,CAAC;EAC3F,MAAMM,qBAAqB,4BAAGD,eAAe,CAACE,MAAM,0DAAtB,sBAAyB,CAAC,CAAC;EACzD,MAAMC,gBAAgB,GAAGd,sBAAsB,CAC7CY,qBAAqB,IAAI,CAACd,MAAM,CAACc,qBAAqB,CAAC,GAAGA,qBAAqB,GAAGL,SAAS,EAC3F,KAAK,CACN;EACD,MAAMQ,WAAW,GAAGpB,mBAAmB,CAACmB,gBAAgB,EAAE,MAAM,EAAER,eAAe,CAAC;EAClF,MAAMU,IAAI,0BAAGD,WAAW,CAACF,MAAM,wDAAlB,oBAAqB,CAAC,CAAC;;EAEpC;AACF;AACA;AACA;EACE,MAAMI,OAAO,GAAGf,aAAa,CAACc,IAAI,CAAC;EACnC,MAAME,WAAW,GAAGd,OAAO,MAAKa,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEb,OAAO,IAAGY,IAAI,GAAG,IAAI;EAE9D,MAAMG,OAAO,GAAGd,gBAAgB,KAAKD,OAAO;EAC5C,OAAOR,OAAO,CACZ,OAAO;IACLwB,OAAO,EAAED,OAAO,GAAG,IAAI,GAAGD,WAAW;IACrCG,OAAO,EAAEF,OAAO,IAAIR,eAAe,CAACU,OAAO,IAAIN,WAAW,CAACM;EAC7D,CAAC,CAAC,EACF,CAACF,OAAO,EAAEJ,WAAW,CAACM,OAAO,EAAEH,WAAW,EAAEP,eAAe,CAACU,OAAO,CAAC,CACrE;AACH;AAAC,GA/BuBlB,UAAU;EAAA,QACPF,WAAW,EAKVF,uBAAuB,EACzBJ,mBAAmB,EAElBK,sBAAsB,EAI3BL,mBAAmB,EAOvBO,aAAa;AAAA"},"metadata":{},"sourceType":"module"}