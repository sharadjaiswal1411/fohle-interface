{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { WINDOW } from '../helpers.js';\n\n/** HttpContext integration collects information about HTTP request headers */\nvar HttpContext = /*#__PURE__*/function () {\n  function HttpContext() {\n    _classCallCheck(this, HttpContext);\n    HttpContext.prototype.__init.call(this);\n  }\n  /**\n   * @inheritDoc\n   */\n  _createClass(HttpContext, [{\n    key: \"__init\",\n    value:\n    /**\n     * @inheritDoc\n     */\n    function __init() {\n      this.name = HttpContext.id;\n    }\n\n    /**\n     * @inheritDoc\n     */\n  }, {\n    key: \"setupOnce\",\n    value: function setupOnce() {\n      addGlobalEventProcessor(function (event) {\n        if (getCurrentHub().getIntegration(HttpContext)) {\n          // if none of the information we want exists, don't bother\n          if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n            return event;\n          }\n\n          // grab as much info as exists and add it to the event\n          var url = event.request && event.request.url || WINDOW.location && WINDOW.location.href;\n          var _ref = WINDOW.document || {},\n            referrer = _ref.referrer;\n          var _ref2 = WINDOW.navigator || {},\n            userAgent = _ref2.userAgent;\n          var headers = _objectSpread(_objectSpread(_objectSpread({}, event.request && event.request.headers), referrer && {\n            Referer: referrer\n          }), userAgent && {\n            'User-Agent': userAgent\n          });\n          var request = _objectSpread(_objectSpread({}, url && {\n            url: url\n          }), {}, {\n            headers: headers\n          });\n          return _objectSpread(_objectSpread({}, event), {}, {\n            request: request\n          });\n        }\n        return event;\n      });\n    }\n  }], [{\n    key: \"__initStatic\",\n    value: function __initStatic() {\n      this.id = 'HttpContext';\n    }\n  }]);\n  return HttpContext;\n}();\nHttpContext.__initStatic();\nexport { HttpContext };","map":{"version":3,"sources":["../../../../src/integrations/httpcontext.ts"],"names":[],"mappings":";;;;;;AAKA;AAAA,IACA,WAAA;EAAA,uBAAA;IAAA;IAAA,WAAA,CAAA,SAAA,CAAA,MAAA,CAAA,IAAA,CAAA,IAAA,CAAA;EAAA;EACA;AACA;AACA;EAFA;IAAA;IAAA;IAKA;AACA;AACA;IACA,kBAAA;MAAA,IAAA,CAAA,IAAA,GAAA,WAAA,CAAA,EAAA;IAAA;;IAEA;AACA;AACA;EAFA;IAAA;IAAA,OAGA,qBAAA;MACA,uBAAA,CAAA,UAAA,KAAA,EAAA;QACA,IAAA,aAAA,EAAA,CAAA,cAAA,CAAA,WAAA,CAAA,EAAA;UACA;UACA,IAAA,CAAA,MAAA,CAAA,SAAA,IAAA,CAAA,MAAA,CAAA,QAAA,IAAA,CAAA,MAAA,CAAA,QAAA,EAAA;YACA,OAAA,KAAA;UACA;;UAEA;UACA,IAAA,GAAA,GAAA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,OAAA,CAAA,GAAA,IAAA,MAAA,CAAA,QAAA,IAAA,MAAA,CAAA,QAAA,CAAA,IAAA;UACA,WAAA,MAAA,CAAA,QAAA,IAAA,CAAA,CAAA;YAAA,QAAA,QAAA,QAAA;UACA,YAAA,MAAA,CAAA,SAAA,IAAA,CAAA,CAAA;YAAA,SAAA,SAAA,SAAA;UAEA,IAAA,OAAA,iDACA,KAAA,CAAA,OAAA,IAAA,KAAA,CAAA,OAAA,CAAA,OAAA,GACA,QAAA,IAAA;YAAA,OAAA,EAAA;UAAA,CAAA,GACA,SAAA,IAAA;YAAA,YAAA,EAAA;UAAA,CAAA,CACA;UACA,IAAA,OAAA,mCAAA,GAAA,IAAA;YAAA,GAAA,EAAA;UAAA,CAAA;YAAA,OAAA,EAAA;UAAA,EAAA;UAEA,uCAAA,KAAA;YAAA,OAAA,EAAA;UAAA;QACA;QACA,OAAA,KAAA;MACA,CAAA,CAAA;IACA;EAAA;IAAA;IAAA,OAlCA,wBAAA;MAAA,IAAA,CAAA,EAAA,GAAA,aAAA;IAAA;EAAA;EAAA;AAAA;AAmCA,WAAA,CAAA,YAAA,EAAA","sourcesContent":["import { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { Event, Integration } from '@sentry/types';\n\nimport { WINDOW } from '../helpers';\n\n/** HttpContext integration collects information about HTTP request headers */\nexport class HttpContext implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public static id: string = 'HttpContext';\n\n  /**\n   * @inheritDoc\n   */\n  public name: string = HttpContext.id;\n\n  /**\n   * @inheritDoc\n   */\n  public setupOnce(): void {\n    addGlobalEventProcessor((event: Event) => {\n      if (getCurrentHub().getIntegration(HttpContext)) {\n        // if none of the information we want exists, don't bother\n        if (!WINDOW.navigator && !WINDOW.location && !WINDOW.document) {\n          return event;\n        }\n\n        // grab as much info as exists and add it to the event\n        const url = (event.request && event.request.url) || (WINDOW.location && WINDOW.location.href);\n        const { referrer } = WINDOW.document || {};\n        const { userAgent } = WINDOW.navigator || {};\n\n        const headers = {\n          ...(event.request && event.request.headers),\n          ...(referrer && { Referer: referrer }),\n          ...(userAgent && { 'User-Agent': userAgent }),\n        };\n        const request = { ...(url && { url }), headers };\n\n        return { ...event, request };\n      }\n      return event;\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}