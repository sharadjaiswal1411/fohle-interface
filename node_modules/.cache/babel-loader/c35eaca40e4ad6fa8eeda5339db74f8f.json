{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Interface}from'@ethersproject/abi';import{CurrencyAmount}from'@uniswap/sdk-core';import{abi as IUniswapV2PairABI}from'@uniswap/v2-core/build/IUniswapV2Pair.json';import{computePairAddress,Pair}from'@uniswap/v2-sdk';import{useMultipleContractSingleData}from'lib/hooks/multicall';import{useMemo}from'react';import{V2_FACTORY_ADDRESSES}from'../constants/addresses';var PAIR_INTERFACE=new Interface(IUniswapV2PairABI);export var PairState;(function(PairState){PairState[PairState[\"LOADING\"]=0]=\"LOADING\";PairState[PairState[\"NOT_EXISTS\"]=1]=\"NOT_EXISTS\";PairState[PairState[\"EXISTS\"]=2]=\"EXISTS\";PairState[PairState[\"INVALID\"]=3]=\"INVALID\";})(PairState||(PairState={}));export function useV2Pairs(currencies){var tokens=useMemo(function(){return currencies.map(function(_ref){var _ref2=_slicedToArray(_ref,2),currencyA=_ref2[0],currencyB=_ref2[1];return[currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,currencyB===null||currencyB===void 0?void 0:currencyB.wrapped];});},[currencies]);var pairAddresses=useMemo(function(){return tokens.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),tokenA=_ref4[0],tokenB=_ref4[1];return tokenA&&tokenB&&tokenA.chainId===tokenB.chainId&&!tokenA.equals(tokenB)&&V2_FACTORY_ADDRESSES[tokenA.chainId]?computePairAddress({factoryAddress:V2_FACTORY_ADDRESSES[tokenA.chainId],tokenA:tokenA,tokenB:tokenB}):undefined;});},[tokens]);var results=useMultipleContractSingleData(pairAddresses,PAIR_INTERFACE,'getReserves');return useMemo(function(){return results.map(function(result,i){var reserves=result.result,loading=result.loading;var tokenA=tokens[i][0];var tokenB=tokens[i][1];if(loading)return[PairState.LOADING,null];if(!tokenA||!tokenB||tokenA.equals(tokenB))return[PairState.INVALID,null];if(!reserves)return[PairState.NOT_EXISTS,null];var reserve0=reserves.reserve0,reserve1=reserves.reserve1;var _ref5=tokenA.sortsBefore(tokenB)?[tokenA,tokenB]:[tokenB,tokenA],_ref6=_slicedToArray(_ref5,2),token0=_ref6[0],token1=_ref6[1];return[PairState.EXISTS,new Pair(CurrencyAmount.fromRawAmount(token0,reserve0.toString()),CurrencyAmount.fromRawAmount(token1,reserve1.toString()))];});},[results,tokens]);}export function useV2Pair(tokenA,tokenB){var inputs=useMemo(function(){return[[tokenA,tokenB]];},[tokenA,tokenB]);return useV2Pairs(inputs)[0];}","map":{"version":3,"names":["Interface","CurrencyAmount","abi","IUniswapV2PairABI","computePairAddress","Pair","useMultipleContractSingleData","useMemo","V2_FACTORY_ADDRESSES","PAIR_INTERFACE","PairState","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","chainId","equals","factoryAddress","undefined","results","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","sortsBefore","token0","token1","EXISTS","fromRawAmount","toString","useV2Pair","inputs"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useV2Pairs.ts"],"sourcesContent":["import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { V2_FACTORY_ADDRESSES } from '../constants/addresses'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}