{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query/react';\nimport multicall from 'lib/state/multicall';\nimport { load, save } from 'redux-localstorage-simple';\nimport { isTestEnv } from 'utils/env';\nimport application from './application/reducer';\nimport burn from './burn/reducer';\nimport burnV3 from './burn/v3/reducer';\nimport connection from './connection/reducer';\nimport { updateVersion } from './global/actions';\nimport lists from './lists/reducer';\nimport logs from './logs/slice';\nimport mint from './mint/reducer';\nimport mintV3 from './mint/v3/reducer';\nimport { routingApi } from './routing/slice';\nimport swap from './swap/reducer';\nimport transactions from './transactions/reducer';\nimport user from './user/reducer';\nimport wallets from './wallets/reducer';\nconst PERSISTED_KEYS = ['user', 'transactions', 'lists'];\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    connection,\n    transactions,\n    wallets,\n    swap,\n    mint,\n    mintV3,\n    burn,\n    burnV3,\n    multicall: multicall.reducer,\n    lists,\n    logs,\n    [routingApi.reducerPath]: routingApi.reducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    thunk: true\n  }).concat(routingApi.middleware).concat(save({\n    states: PERSISTED_KEYS,\n    debounce: 1000\n  })),\n  preloadedState: load({\n    states: PERSISTED_KEYS,\n    disableWarnings: isTestEnv()\n  })\n});\nstore.dispatch(updateVersion());\nsetupListeners(store.dispatch);\nexport default store;","map":{"version":3,"names":["configureStore","setupListeners","multicall","load","save","isTestEnv","application","burn","burnV3","connection","updateVersion","lists","logs","mint","mintV3","routingApi","swap","transactions","user","wallets","PERSISTED_KEYS","store","reducer","reducerPath","middleware","getDefaultMiddleware","thunk","concat","states","debounce","preloadedState","disableWarnings","dispatch"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\nimport multicall from 'lib/state/multicall'\nimport { load, save } from 'redux-localstorage-simple'\nimport { isTestEnv } from 'utils/env'\n\nimport application from './application/reducer'\nimport burn from './burn/reducer'\nimport burnV3 from './burn/v3/reducer'\nimport connection from './connection/reducer'\nimport { updateVersion } from './global/actions'\nimport lists from './lists/reducer'\nimport logs from './logs/slice'\nimport mint from './mint/reducer'\nimport mintV3 from './mint/v3/reducer'\nimport { routingApi } from './routing/slice'\nimport swap from './swap/reducer'\nimport transactions from './transactions/reducer'\nimport pools from './pools/reducer'\n\nimport user from './user/reducer'\nimport wallets from './wallets/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    connection,\n    transactions,\n    wallets,\n    swap,\n    mint,\n    mintV3,\n    burn,\n    burnV3,\n    multicall: multicall.reducer,\n    lists,\n    logs,\n    [routingApi.reducerPath]: routingApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: true })\n      .concat(routingApi.middleware)\n      .concat(save({ states: PERSISTED_KEYS, debounce: 1000 })),\n  preloadedState: load({ states: PERSISTED_KEYS, disableWarnings: isTestEnv() }),\n})\n\nstore.dispatch(updateVersion())\n\nsetupListeners(store.dispatch)\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,8BAA8B;AAC7D,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,SAASC,IAAI,EAAEC,IAAI,QAAQ,2BAA2B;AACtD,SAASC,SAAS,QAAQ,WAAW;AAErC,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,YAAY,MAAM,wBAAwB;AAGjD,OAAOC,IAAI,MAAM,gBAAgB;AACjC,OAAOC,OAAO,MAAM,mBAAmB;AAEvC,MAAMC,cAAwB,GAAG,CAAC,MAAM,EAAE,cAAc,EAAE,OAAO,CAAC;AAElE,MAAMC,KAAK,GAAGrB,cAAc,CAAC;EAC3BsB,OAAO,EAAE;IACPhB,WAAW;IACXY,IAAI;IACJT,UAAU;IACVQ,YAAY;IACZE,OAAO;IACPH,IAAI;IACJH,IAAI;IACJC,MAAM;IACNP,IAAI;IACJC,MAAM;IACNN,SAAS,EAAEA,SAAS,CAACoB,OAAO;IAC5BX,KAAK;IACLC,IAAI;IACJ,CAACG,UAAU,CAACQ,WAAW,GAAGR,UAAU,CAACO;EACvC,CAAC;EACDE,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IAAEC,KAAK,EAAE;EAAK,CAAC,CAAC,CAClCC,MAAM,CAACZ,UAAU,CAACS,UAAU,CAAC,CAC7BG,MAAM,CAACvB,IAAI,CAAC;IAAEwB,MAAM,EAAER,cAAc;IAAES,QAAQ,EAAE;EAAK,CAAC,CAAC,CAAC;EAC7DC,cAAc,EAAE3B,IAAI,CAAC;IAAEyB,MAAM,EAAER,cAAc;IAAEW,eAAe,EAAE1B,SAAS;EAAG,CAAC;AAC/E,CAAC,CAAC;AAEFgB,KAAK,CAACW,QAAQ,CAACtB,aAAa,EAAE,CAAC;AAE/BT,cAAc,CAACoB,KAAK,CAACW,QAAQ,CAAC;AAE9B,eAAeX,KAAK"},"metadata":{},"sourceType":"module"}