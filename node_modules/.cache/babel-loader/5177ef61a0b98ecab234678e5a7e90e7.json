{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _defineProperty = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar wallet_1 = require(\"../wallet\");\nvar permissions_1 = require(\"../types/permissions\");\nvar hasPermission = function hasPermission(required, permissions) {\n  return permissions.some(function (permission) {\n    return permission.parentCapability === required;\n  });\n};\nvar requirePermission = function requirePermission() {\n  return function (_, propertyKey, descriptor) {\n    var originalMethod = descriptor.value;\n    descriptor.value = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var wallet, currentPermissions;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n              wallet = new wallet_1.Wallet(this.communicator);\n              _context.next = 3;\n              return wallet.getPermissions();\n            case 3:\n              currentPermissions = _context.sent;\n              if (hasPermission(propertyKey, currentPermissions)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 7;\n              return wallet.requestPermissions([_defineProperty({}, propertyKey, {})]);\n            case 7:\n              currentPermissions = _context.sent;\n            case 8:\n              if (hasPermission(propertyKey, currentPermissions)) {\n                _context.next = 10;\n                break;\n              }\n              throw new permissions_1.PermissionsError('Permissions rejected', permissions_1.PERMISSIONS_REQUEST_REJECTED);\n            case 10:\n              return _context.abrupt(\"return\", originalMethod.apply(this));\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return descriptor;\n  };\n};\nexports.default = requirePermission;","map":{"version":3,"sources":["../../../src/decorators/requirePermissions.ts"],"names":[],"mappings":";;;;;;;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AAEA,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,QAAiB,EAAE,WAAyB;EAAA,OACjE,WAAW,CAAC,IAAI,CAAC,UAAC,UAAU;IAAA,OAAK,UAAU,CAAC,gBAAgB,KAAK,QAAQ;EAAA,EAAC;AAAA;AAE5E,IAAM,iBAAiB,GAAG,SAApB,iBAAiB;EAAA,OAAS,UAAC,CAAU,EAAE,WAAmB,EAAE,UAA8B,EAAI;IAClG,IAAM,cAAc,GAAG,UAAU,CAAC,KAAK;IAEvC,UAAU,CAAC,KAAK,yEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cACjB;cACM,MAAM,GAAG,IAAI,QAAA,CAAA,MAAM,CAAE,IAAa,CAAC,YAAY,CAAC;cAAA;cAAA,OAEvB,MAAM,CAAC,cAAc,EAAE;YAAA;cAAlD,kBAAkB;cAAA,IAEjB,aAAa,CAAC,WAAsB,EAAE,kBAAkB,CAAC;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACjC,MAAM,CAAC,kBAAkB,CAAC,qBAAI,WAAsB,EAAG,CAAA,CAAE,EAAG,CAAC;YAAA;cAAxF,kBAAkB;YAAA;cAAA,IAGf,aAAa,CAAC,WAAsB,EAAE,kBAAkB,CAAC;gBAAA;gBAAA;cAAA;cAAA,MACtD,IAAI,aAAA,CAAA,gBAAgB,CAAC,sBAAsB,EAAE,aAAA,CAAA,4BAA4B,CAAC;YAAA;cAAA,iCAG3E,cAAc,CAAC,KAAK,CAAC,IAAI,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAClC;IAED,OAAO,UAAU;EACnB,CAAC;AAAA;AAED,OAAA,CAAA,OAAA,GAAe,iBAAiB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst wallet_1 = require(\"../wallet\");\nconst permissions_1 = require(\"../types/permissions\");\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new wallet_1.Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new permissions_1.PermissionsError('Permissions rejected', permissions_1.PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexports.default = requirePermission;\n//# sourceMappingURL=requirePermissions.js.map"]},"metadata":{},"sourceType":"script"}