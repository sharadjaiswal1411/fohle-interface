{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildProcessOptions = void 0;\nvar utils_1 = require(\"./utils\");\nfunction buildProcessOptions(opts, override) {\n  var colorCount = opts.colorCount,\n    quantizer = opts.quantizer,\n    generators = opts.generators,\n    filters = opts.filters;\n  // Merge with common quantizer options\n  var commonQuantizerOpts = {\n    colorCount: colorCount\n  };\n  var q = typeof quantizer === 'string' ? {\n    name: quantizer,\n    options: {}\n  } : quantizer;\n  q.options = utils_1.assignDeep({}, commonQuantizerOpts, q.options);\n  return utils_1.assignDeep({}, {\n    quantizer: q,\n    generators: generators,\n    filters: filters\n  }, override);\n}\nexports.buildProcessOptions = buildProcessOptions;","map":{"version":3,"sources":["../../../../packages/vibrant-core/src/options.ts"],"names":[],"mappings":";;;;;;AAKA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAUA,SAAgB,mBAAmB,CAAE,IAAa,EAAE,QAAkC,EAAA;EAC9E,IAAA,UAAU,GAAqC,IAAI,CAAA,UAAzC;IAAE,SAAS,GAA0B,IAAI,CAAA,SAA9B;IAAE,UAAU,GAAc,IAAI,CAAA,UAAlB;IAAE,OAAO,GAAK,IAAI,CAAA,OAAT;EAChD;EACA,IAAI,mBAAmB,GAAG;IAAE,UAAU,EAAA;EAAA,CAAE;EACxC,IAAI,CAAC,GAAG,OAAO,SAAS,KAAK,QAAQ,GACjC;IAAE,IAAI,EAAE,SAAS;IAAE,OAAO,EAAE,CAAA;EAAE,CAAE,GAChC,SAAS;EACb,CAAC,CAAC,OAAO,GAAG,OAAA,CAAA,UAAU,CAAC,CAAA,CAAE,EAAE,mBAAmB,EAAE,CAAC,CAAC,OAAO,CAAC;EAE1D,OAAO,OAAA,CAAA,UAAU,CAAC,CAAA,CAAE,EAAE;IACpB,SAAS,EAAE,CAAC;IACZ,UAAU,EAAA,UAAA;IACV,OAAO,EAAA;GACR,EAAE,QAAQ,CAAC;AACd;AAdA,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildProcessOptions = void 0;\nvar utils_1 = require(\"./utils\");\nfunction buildProcessOptions(opts, override) {\n    var colorCount = opts.colorCount, quantizer = opts.quantizer, generators = opts.generators, filters = opts.filters;\n    // Merge with common quantizer options\n    var commonQuantizerOpts = { colorCount: colorCount };\n    var q = typeof quantizer === 'string'\n        ? { name: quantizer, options: {} }\n        : quantizer;\n    q.options = utils_1.assignDeep({}, commonQuantizerOpts, q.options);\n    return utils_1.assignDeep({}, {\n        quantizer: q,\n        generators: generators,\n        filters: filters\n    }, override);\n}\nexports.buildProcessOptions = buildProcessOptions;\n//# sourceMappingURL=options.js.map"]},"metadata":{},"sourceType":"script"}