{"ast":null,"code":"'use strict';\n\nmodule.exports = setextHeading;\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_EQUALS = '=';\nvar C_DASH = '-';\nvar MAX_HEADING_INDENT = 3;\n\n/* Map of characters which can be used to mark setext\n * headers, mapping to their corresponding depth. */\nvar SETEXT_MARKERS = {};\nSETEXT_MARKERS[C_EQUALS] = 1;\nSETEXT_MARKERS[C_DASH] = 2;\nfunction setextHeading(eat, value, silent) {\n  var self = this;\n  var now = eat.now();\n  var length = value.length;\n  var index = -1;\n  var subvalue = '';\n  var content;\n  var queue;\n  var character;\n  var marker;\n  var depth;\n\n  /* Eat initial indentation. */\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {\n      index--;\n      break;\n    }\n    subvalue += character;\n  }\n\n  /* Eat content. */\n  content = '';\n  queue = '';\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character === C_NEWLINE) {\n      index--;\n      break;\n    }\n    if (character === C_SPACE || character === C_TAB) {\n      queue += character;\n    } else {\n      content += queue + character;\n      queue = '';\n    }\n  }\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n\n  /* Ensure the content is followed by a newline and a\n   * valid marker. */\n  character = value.charAt(++index);\n  marker = value.charAt(++index);\n  if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {\n    return;\n  }\n  subvalue += character;\n\n  /* Eat Setext-line. */\n  queue = marker;\n  depth = SETEXT_MARKERS[marker];\n  while (++index < length) {\n    character = value.charAt(index);\n    if (character !== marker) {\n      if (character !== C_NEWLINE) {\n        return;\n      }\n      index--;\n      break;\n    }\n    queue += character;\n  }\n  if (silent) {\n    return true;\n  }\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}","map":{"version":3,"names":["module","exports","setextHeading","C_NEWLINE","C_TAB","C_SPACE","C_EQUALS","C_DASH","MAX_HEADING_INDENT","SETEXT_MARKERS","eat","value","silent","self","now","length","index","subvalue","content","queue","character","marker","depth","charAt","column","offset","type","children","tokenizeInline"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/heading-setext.js"],"sourcesContent":["'use strict';\n\nmodule.exports = setextHeading;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_EQUALS = '=';\nvar C_DASH = '-';\n\nvar MAX_HEADING_INDENT = 3;\n\n/* Map of characters which can be used to mark setext\n * headers, mapping to their corresponding depth. */\nvar SETEXT_MARKERS = {};\n\nSETEXT_MARKERS[C_EQUALS] = 1;\nSETEXT_MARKERS[C_DASH] = 2;\n\nfunction setextHeading(eat, value, silent) {\n  var self = this;\n  var now = eat.now();\n  var length = value.length;\n  var index = -1;\n  var subvalue = '';\n  var content;\n  var queue;\n  var character;\n  var marker;\n  var depth;\n\n  /* Eat initial indentation. */\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_SPACE || index >= MAX_HEADING_INDENT) {\n      index--;\n      break;\n    }\n\n    subvalue += character;\n  }\n\n  /* Eat content. */\n  content = '';\n  queue = '';\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      index--;\n      break;\n    }\n\n    if (character === C_SPACE || character === C_TAB) {\n      queue += character;\n    } else {\n      content += queue + character;\n      queue = '';\n    }\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  subvalue += content + queue;\n\n  /* Ensure the content is followed by a newline and a\n   * valid marker. */\n  character = value.charAt(++index);\n  marker = value.charAt(++index);\n\n  if (character !== C_NEWLINE || !SETEXT_MARKERS[marker]) {\n    return;\n  }\n\n  subvalue += character;\n\n  /* Eat Setext-line. */\n  queue = marker;\n  depth = SETEXT_MARKERS[marker];\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (character !== marker) {\n      if (character !== C_NEWLINE) {\n        return;\n      }\n\n      index--;\n      break;\n    }\n\n    queue += character;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  return eat(subvalue + queue)({\n    type: 'heading',\n    depth: depth,\n    children: self.tokenizeInline(content, now)\n  });\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,IAAIC,SAAS,GAAG,IAAI;AACpB,IAAIC,KAAK,GAAG,IAAI;AAChB,IAAIC,OAAO,GAAG,GAAG;AACjB,IAAIC,QAAQ,GAAG,GAAG;AAClB,IAAIC,MAAM,GAAG,GAAG;AAEhB,IAAIC,kBAAkB,GAAG,CAAC;;AAE1B;AACA;AACA,IAAIC,cAAc,GAAG,CAAC,CAAC;AAEvBA,cAAc,CAACH,QAAQ,CAAC,GAAG,CAAC;AAC5BG,cAAc,CAACF,MAAM,CAAC,GAAG,CAAC;AAE1B,SAASL,aAAa,CAACQ,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACzC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,GAAG,GAAGJ,GAAG,CAACI,GAAG,EAAE;EACnB,IAAIC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EACzB,IAAIC,KAAK,GAAG,CAAC,CAAC;EACd,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,OAAO;EACX,IAAIC,KAAK;EACT,IAAIC,SAAS;EACb,IAAIC,MAAM;EACV,IAAIC,KAAK;;EAET;EACA,OAAO,EAAEN,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKf,OAAO,IAAIW,KAAK,IAAIR,kBAAkB,EAAE;MACxDQ,KAAK,EAAE;MACP;IACF;IAEAC,QAAQ,IAAIG,SAAS;EACvB;;EAEA;EACAF,OAAO,GAAG,EAAE;EACZC,KAAK,GAAG,EAAE;EAEV,OAAO,EAAEH,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKjB,SAAS,EAAE;MAC3Ba,KAAK,EAAE;MACP;IACF;IAEA,IAAII,SAAS,KAAKf,OAAO,IAAIe,SAAS,KAAKhB,KAAK,EAAE;MAChDe,KAAK,IAAIC,SAAS;IACpB,CAAC,MAAM;MACLF,OAAO,IAAIC,KAAK,GAAGC,SAAS;MAC5BD,KAAK,GAAG,EAAE;IACZ;EACF;EAEAL,GAAG,CAACU,MAAM,IAAIP,QAAQ,CAACF,MAAM;EAC7BD,GAAG,CAACW,MAAM,IAAIR,QAAQ,CAACF,MAAM;EAC7BE,QAAQ,IAAIC,OAAO,GAAGC,KAAK;;EAE3B;AACF;EACEC,SAAS,GAAGT,KAAK,CAACY,MAAM,CAAC,EAAEP,KAAK,CAAC;EACjCK,MAAM,GAAGV,KAAK,CAACY,MAAM,CAAC,EAAEP,KAAK,CAAC;EAE9B,IAAII,SAAS,KAAKjB,SAAS,IAAI,CAACM,cAAc,CAACY,MAAM,CAAC,EAAE;IACtD;EACF;EAEAJ,QAAQ,IAAIG,SAAS;;EAErB;EACAD,KAAK,GAAGE,MAAM;EACdC,KAAK,GAAGb,cAAc,CAACY,MAAM,CAAC;EAE9B,OAAO,EAAEL,KAAK,GAAGD,MAAM,EAAE;IACvBK,SAAS,GAAGT,KAAK,CAACY,MAAM,CAACP,KAAK,CAAC;IAE/B,IAAII,SAAS,KAAKC,MAAM,EAAE;MACxB,IAAID,SAAS,KAAKjB,SAAS,EAAE;QAC3B;MACF;MAEAa,KAAK,EAAE;MACP;IACF;IAEAG,KAAK,IAAIC,SAAS;EACpB;EAEA,IAAIR,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EAEA,OAAOF,GAAG,CAACO,QAAQ,GAAGE,KAAK,CAAC,CAAC;IAC3BO,IAAI,EAAE,SAAS;IACfJ,KAAK,EAAEA,KAAK;IACZK,QAAQ,EAAEd,IAAI,CAACe,cAAc,CAACV,OAAO,EAAEJ,GAAG;EAC5C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}