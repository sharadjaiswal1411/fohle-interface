{"ast":null,"code":"import { Point } from '@visx/point';\nimport { isSVGElement, isSVGGraphicsElement, isSVGSVGElement } from './typeGuards';\nimport getXAndYFromEvent from './getXAndYFromEvent';\nexport default function localPoint(node, event) {\n  if (!node || !event) return null;\n  var coords = getXAndYFromEvent(event); // find top-most SVG\n\n  var svg = isSVGElement(node) ? node.ownerSVGElement : node;\n  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;\n  if (isSVGSVGElement(svg) && screenCTM) {\n    var point = svg.createSVGPoint();\n    point.x = coords.x;\n    point.y = coords.y;\n    point = point.matrixTransform(screenCTM.inverse());\n    return new Point({\n      x: point.x,\n      y: point.y\n    });\n  } // fall back to bounding box\n\n  var rect = node.getBoundingClientRect();\n  return new Point({\n    x: coords.x - rect.left - node.clientLeft,\n    y: coords.y - rect.top - node.clientTop\n  });\n}","map":{"version":3,"names":["Point","isSVGElement","isSVGGraphicsElement","isSVGSVGElement","getXAndYFromEvent","localPoint","node","event","coords","svg","ownerSVGElement","screenCTM","getScreenCTM","point","createSVGPoint","x","y","matrixTransform","inverse","rect","getBoundingClientRect","left","clientLeft","top","clientTop"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@visx/event/esm/localPointGeneric.js"],"sourcesContent":["import { Point } from '@visx/point';\nimport { isSVGElement, isSVGGraphicsElement, isSVGSVGElement } from './typeGuards';\nimport getXAndYFromEvent from './getXAndYFromEvent';\nexport default function localPoint(node, event) {\n  if (!node || !event) return null;\n  var coords = getXAndYFromEvent(event); // find top-most SVG\n\n  var svg = isSVGElement(node) ? node.ownerSVGElement : node;\n  var screenCTM = isSVGGraphicsElement(svg) ? svg.getScreenCTM() : null;\n\n  if (isSVGSVGElement(svg) && screenCTM) {\n    var point = svg.createSVGPoint();\n    point.x = coords.x;\n    point.y = coords.y;\n    point = point.matrixTransform(screenCTM.inverse());\n    return new Point({\n      x: point.x,\n      y: point.y\n    });\n  } // fall back to bounding box\n\n\n  var rect = node.getBoundingClientRect();\n  return new Point({\n    x: coords.x - rect.left - node.clientLeft,\n    y: coords.y - rect.top - node.clientTop\n  });\n}"],"mappings":"AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,YAAY,EAAEC,oBAAoB,EAAEC,eAAe,QAAQ,cAAc;AAClF,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,eAAe,SAASC,UAAU,CAACC,IAAI,EAAEC,KAAK,EAAE;EAC9C,IAAI,CAACD,IAAI,IAAI,CAACC,KAAK,EAAE,OAAO,IAAI;EAChC,IAAIC,MAAM,GAAGJ,iBAAiB,CAACG,KAAK,CAAC,CAAC,CAAC;;EAEvC,IAAIE,GAAG,GAAGR,YAAY,CAACK,IAAI,CAAC,GAAGA,IAAI,CAACI,eAAe,GAAGJ,IAAI;EAC1D,IAAIK,SAAS,GAAGT,oBAAoB,CAACO,GAAG,CAAC,GAAGA,GAAG,CAACG,YAAY,EAAE,GAAG,IAAI;EAErE,IAAIT,eAAe,CAACM,GAAG,CAAC,IAAIE,SAAS,EAAE;IACrC,IAAIE,KAAK,GAAGJ,GAAG,CAACK,cAAc,EAAE;IAChCD,KAAK,CAACE,CAAC,GAAGP,MAAM,CAACO,CAAC;IAClBF,KAAK,CAACG,CAAC,GAAGR,MAAM,CAACQ,CAAC;IAClBH,KAAK,GAAGA,KAAK,CAACI,eAAe,CAACN,SAAS,CAACO,OAAO,EAAE,CAAC;IAClD,OAAO,IAAIlB,KAAK,CAAC;MACfe,CAAC,EAAEF,KAAK,CAACE,CAAC;MACVC,CAAC,EAAEH,KAAK,CAACG;IACX,CAAC,CAAC;EACJ,CAAC,CAAC;;EAGF,IAAIG,IAAI,GAAGb,IAAI,CAACc,qBAAqB,EAAE;EACvC,OAAO,IAAIpB,KAAK,CAAC;IACfe,CAAC,EAAEP,MAAM,CAACO,CAAC,GAAGI,IAAI,CAACE,IAAI,GAAGf,IAAI,CAACgB,UAAU;IACzCN,CAAC,EAAER,MAAM,CAACQ,CAAC,GAAGG,IAAI,CAACI,GAAG,GAAGjB,IAAI,CAACkB;EAChC,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}