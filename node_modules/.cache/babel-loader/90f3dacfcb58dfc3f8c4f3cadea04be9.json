{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { RouterPreference } from 'state/routing/slice';\nimport { TradeState } from 'state/routing/types';\nimport { useRoutingAPITrade } from 'state/routing/useRoutingAPITrade';\nimport { useClientSideRouter } from 'state/user/hooks';\nimport useAutoRouterSupported from './useAutoRouterSupported';\nimport { useClientSideV3Trade } from './useClientSideV3Trade';\nimport useDebounce from './useDebounce';\nimport useIsWindowVisible from './useIsWindowVisible';\n\n/**\n * Returns the best v2+v3 trade for a desired swap.\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */\nexport function useBestTrade(tradeType, amountSpecified, otherCurrency) {\n  _s();\n  const autoRouterSupported = useAutoRouterSupported();\n  const isWindowVisible = useIsWindowVisible();\n  const [debouncedAmount, debouncedOtherCurrency] = useDebounce(useMemo(() => [amountSpecified, otherCurrency], [amountSpecified, otherCurrency]), 200);\n  const [clientSideRouter] = useClientSideRouter();\n  const routingAPITrade = useRoutingAPITrade(tradeType, autoRouterSupported && isWindowVisible ? debouncedAmount : undefined, debouncedOtherCurrency, clientSideRouter ? RouterPreference.CLIENT : RouterPreference.API);\n  const isLoading = routingAPITrade.state === TradeState.LOADING;\n  const useFallback = !autoRouterSupported || routingAPITrade.state === TradeState.NO_ROUTE_FOUND;\n\n  // only use client side router if routing api trade failed or is not supported\n  const bestV3Trade = useClientSideV3Trade(tradeType, useFallback ? debouncedAmount : undefined, useFallback ? debouncedOtherCurrency : undefined);\n\n  // only return gas estimate from api if routing api trade is used\n  return useMemo(() => ({\n    ...(useFallback ? bestV3Trade : routingAPITrade),\n    ...(isLoading ? {\n      state: TradeState.LOADING\n    } : {})\n  }), [bestV3Trade, isLoading, routingAPITrade, useFallback]);\n}\n_s(useBestTrade, \"TvQeXAbRxk/F8cf3iPuXwC4PycY=\", false, function () {\n  return [useAutoRouterSupported, useIsWindowVisible, useDebounce, useClientSideRouter, useRoutingAPITrade, useClientSideV3Trade];\n});","map":{"version":3,"names":["useMemo","RouterPreference","TradeState","useRoutingAPITrade","useClientSideRouter","useAutoRouterSupported","useClientSideV3Trade","useDebounce","useIsWindowVisible","useBestTrade","tradeType","amountSpecified","otherCurrency","autoRouterSupported","isWindowVisible","debouncedAmount","debouncedOtherCurrency","clientSideRouter","routingAPITrade","undefined","CLIENT","API","isLoading","state","LOADING","useFallback","NO_ROUTE_FOUND","bestV3Trade"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useBestTrade.ts"],"sourcesContent":["import { Currency, CurrencyAmount, TradeType } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\nimport { RouterPreference } from 'state/routing/slice'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\nimport { useRoutingAPITrade } from 'state/routing/useRoutingAPITrade'\nimport { useClientSideRouter } from 'state/user/hooks'\n\nimport useAutoRouterSupported from './useAutoRouterSupported'\nimport { useClientSideV3Trade } from './useClientSideV3Trade'\nimport useDebounce from './useDebounce'\nimport useIsWindowVisible from './useIsWindowVisible'\n\n/**\n * Returns the best v2+v3 trade for a desired swap.\n * @param tradeType whether the swap is an exact in/out\n * @param amountSpecified the exact amount to swap in/out\n * @param otherCurrency the desired output/payment currency\n */\nexport function useBestTrade(\n  tradeType: TradeType,\n  amountSpecified?: CurrencyAmount<Currency>,\n  otherCurrency?: Currency\n): {\n  state: TradeState\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n} {\n  const autoRouterSupported = useAutoRouterSupported()\n  const isWindowVisible = useIsWindowVisible()\n\n  const [debouncedAmount, debouncedOtherCurrency] = useDebounce(\n    useMemo(() => [amountSpecified, otherCurrency], [amountSpecified, otherCurrency]),\n    200\n  )\n\n  const [clientSideRouter] = useClientSideRouter()\n  const routingAPITrade = useRoutingAPITrade(\n    tradeType,\n    autoRouterSupported && isWindowVisible ? debouncedAmount : undefined,\n    debouncedOtherCurrency,\n    clientSideRouter ? RouterPreference.CLIENT : RouterPreference.API\n  )\n\n  const isLoading = routingAPITrade.state === TradeState.LOADING\n  const useFallback = !autoRouterSupported || routingAPITrade.state === TradeState.NO_ROUTE_FOUND\n\n  // only use client side router if routing api trade failed or is not supported\n  const bestV3Trade = useClientSideV3Trade(\n    tradeType,\n    useFallback ? debouncedAmount : undefined,\n    useFallback ? debouncedOtherCurrency : undefined\n  )\n\n  // only return gas estimate from api if routing api trade is used\n  return useMemo(\n    () => ({\n      ...(useFallback ? bestV3Trade : routingAPITrade),\n      ...(isLoading ? { state: TradeState.LOADING } : {}),\n    }),\n    [bestV3Trade, isLoading, routingAPITrade, useFallback]\n  )\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,SAAyBC,UAAU,QAAQ,qBAAqB;AAChE,SAASC,kBAAkB,QAAQ,kCAAkC;AACrE,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,kBAAkB,MAAM,sBAAsB;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAY,CAC1BC,SAAoB,EACpBC,eAA0C,EAC1CC,aAAwB,EAIxB;EAAA;EACA,MAAMC,mBAAmB,GAAGR,sBAAsB,EAAE;EACpD,MAAMS,eAAe,GAAGN,kBAAkB,EAAE;EAE5C,MAAM,CAACO,eAAe,EAAEC,sBAAsB,CAAC,GAAGT,WAAW,CAC3DP,OAAO,CAAC,MAAM,CAACW,eAAe,EAAEC,aAAa,CAAC,EAAE,CAACD,eAAe,EAAEC,aAAa,CAAC,CAAC,EACjF,GAAG,CACJ;EAED,MAAM,CAACK,gBAAgB,CAAC,GAAGb,mBAAmB,EAAE;EAChD,MAAMc,eAAe,GAAGf,kBAAkB,CACxCO,SAAS,EACTG,mBAAmB,IAAIC,eAAe,GAAGC,eAAe,GAAGI,SAAS,EACpEH,sBAAsB,EACtBC,gBAAgB,GAAGhB,gBAAgB,CAACmB,MAAM,GAAGnB,gBAAgB,CAACoB,GAAG,CAClE;EAED,MAAMC,SAAS,GAAGJ,eAAe,CAACK,KAAK,KAAKrB,UAAU,CAACsB,OAAO;EAC9D,MAAMC,WAAW,GAAG,CAACZ,mBAAmB,IAAIK,eAAe,CAACK,KAAK,KAAKrB,UAAU,CAACwB,cAAc;;EAE/F;EACA,MAAMC,WAAW,GAAGrB,oBAAoB,CACtCI,SAAS,EACTe,WAAW,GAAGV,eAAe,GAAGI,SAAS,EACzCM,WAAW,GAAGT,sBAAsB,GAAGG,SAAS,CACjD;;EAED;EACA,OAAOnB,OAAO,CACZ,OAAO;IACL,IAAIyB,WAAW,GAAGE,WAAW,GAAGT,eAAe,CAAC;IAChD,IAAII,SAAS,GAAG;MAAEC,KAAK,EAAErB,UAAU,CAACsB;IAAQ,CAAC,GAAG,CAAC,CAAC;EACpD,CAAC,CAAC,EACF,CAACG,WAAW,EAAEL,SAAS,EAAEJ,eAAe,EAAEO,WAAW,CAAC,CACvD;AACH;AAAC,GA1CehB,YAAY;EAAA,QAQEJ,sBAAsB,EAC1BG,kBAAkB,EAEQD,WAAW,EAKlCH,mBAAmB,EACtBD,kBAAkB,EAWtBG,oBAAoB;AAAA"},"metadata":{},"sourceType":"module"}