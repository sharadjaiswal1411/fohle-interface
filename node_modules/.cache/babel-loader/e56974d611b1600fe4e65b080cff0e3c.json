{"ast":null,"code":"import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createReducer}from'@reduxjs/toolkit';import{Field,resetMintState,typeInput}from'./actions';export var initialState={independentField:Field.CURRENCY_A,typedValue:'',otherTypedValue:'',startPriceTypedValue:'',leftRangeTypedValue:'',rightRangeTypedValue:''};export default createReducer(initialState,function(builder){return builder.addCase(resetMintState,function(){return initialState;}).addCase(typeInput,function(state,_ref){var _ref$payload=_ref.payload,field=_ref$payload.field,typedValue=_ref$payload.typedValue,noLiquidity=_ref$payload.noLiquidity;if(noLiquidity){// they're typing into the field they've last typed in\nif(field===state.independentField){return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue});}// they're typing into a new field, store the other value\nelse{return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue,otherTypedValue:state.typedValue});}}else{return _objectSpread(_objectSpread({},state),{},{independentField:field,typedValue:typedValue,otherTypedValue:''});}});});","map":{"version":3,"names":["createReducer","Field","resetMintState","typeInput","initialState","independentField","CURRENCY_A","typedValue","otherTypedValue","startPriceTypedValue","leftRangeTypedValue","rightRangeTypedValue","builder","addCase","state","payload","field","noLiquidity"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/mint/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\n\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n  readonly startPriceTypedValue: string // for the case when there's no liquidity\n  readonly leftRangeTypedValue: string\n  readonly rightRangeTypedValue: string\n}\n\nexport const initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n  startPriceTypedValue: '',\n  leftRangeTypedValue: '',\n  rightRangeTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n        else {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n            otherTypedValue: state.typedValue,\n          }\n        }\n      } else {\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: '',\n        }\n      }\n    })\n)\n"],"mappings":"2KAAA,OAASA,aAAa,KAAQ,kBAAkB,CAEhD,OAASC,KAAK,CAAEC,cAAc,CAAEC,SAAS,KAAQ,WAAW,CAW5D,MAAO,IAAMC,aAAuB,CAAG,CACrCC,gBAAgB,CAAEJ,KAAK,CAACK,UAAU,CAClCC,UAAU,CAAE,EAAE,CACdC,eAAe,CAAE,EAAE,CACnBC,oBAAoB,CAAE,EAAE,CACxBC,mBAAmB,CAAE,EAAE,CACvBC,oBAAoB,CAAE,EACxB,CAAC,CAED,cAAeX,cAAa,CAAYI,YAAY,CAAE,SAACQ,OAAO,QAC5DA,QAAO,CACJC,OAAO,CAACX,cAAc,CAAE,iBAAME,aAAY,GAAC,CAC3CS,OAAO,CAACV,SAAS,CAAE,SAACW,KAAK,MAAsD,uBAAlDC,OAAO,CAAIC,KAAK,cAALA,KAAK,CAAET,UAAU,cAAVA,UAAU,CAAEU,WAAW,cAAXA,WAAW,CACrE,GAAIA,WAAW,CAAE,CACf;AACA,GAAID,KAAK,GAAKF,KAAK,CAACT,gBAAgB,CAAE,CACpC,sCACKS,KAAK,MACRT,gBAAgB,CAAEW,KAAK,CACvBT,UAAU,CAAVA,UAAU,GAEd,CACA;AAAA,IACK,CACH,sCACKO,KAAK,MACRT,gBAAgB,CAAEW,KAAK,CACvBT,UAAU,CAAVA,UAAU,CACVC,eAAe,CAAEM,KAAK,CAACP,UAAU,GAErC,CACF,CAAC,IAAM,CACL,sCACKO,KAAK,MACRT,gBAAgB,CAAEW,KAAK,CACvBT,UAAU,CAAVA,UAAU,CACVC,eAAe,CAAE,EAAE,GAEvB,CACF,CAAC,CAAC,GACL"},"metadata":{},"sourceType":"module"}