{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/components/bag/BagContent.tsx\",\n  _s = $RefreshSig$();\nimport { sendAnalyticsEvent, Trace } from '@uniswap/analytics';\nimport { EventName } from '@uniswap/analytics-events';\nimport { BagRow, PriceChangeBagRow, UnavailableAssetsHeaderRow } from 'nft/components/bag/BagRow';\nimport { Column } from 'nft/components/Flex';\nimport { useBag, useIsMobile } from 'nft/hooks';\nimport { BagItemStatus, BagStatus } from 'nft/types';\nimport { fetchPrice, formatAssetEventProperties, recalculateBagUsingPooledAssets } from 'nft/utils';\nimport { useEffect, useMemo } from 'react';\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BagContent = () => {\n  _s();\n  const bagStatus = useBag(s => s.bagStatus);\n  const setBagStatus = useBag(s => s.setBagStatus);\n  const markAssetAsReviewed = useBag(s => s.markAssetAsReviewed);\n  const didOpenUnavailableAssets = useBag(s => s.didOpenUnavailableAssets);\n  const setDidOpenUnavailableAssets = useBag(s => s.setDidOpenUnavailableAssets);\n  const uncheckedItemsInBag = useBag(s => s.itemsInBag);\n  const setItemsInBag = useBag(s => s.setItemsInBag);\n  const removeAssetsFromBag = useBag(s => s.removeAssetsFromBag);\n  const isMobile = useIsMobile();\n  const itemsInBag = useMemo(() => {\n    return recalculateBagUsingPooledAssets(uncheckedItemsInBag);\n  }, [uncheckedItemsInBag]);\n  const {\n    data: fetchedPriceData\n  } = useQuery(['fetchPrice', {}], () => fetchPrice(), {});\n  const {\n    unchangedAssets,\n    priceChangedAssets,\n    unavailableAssets,\n    availableItems\n  } = useMemo(() => {\n    const unchangedAssets = itemsInBag.filter(item => item.status === BagItemStatus.ADDED_TO_BAG || item.status === BagItemStatus.REVIEWED).map(item => item.asset);\n    const priceChangedAssets = itemsInBag.filter(item => item.status === BagItemStatus.REVIEWING_PRICE_CHANGE).map(item => item.asset);\n    const unavailableAssets = itemsInBag.filter(item => item.status === BagItemStatus.UNAVAILABLE).map(item => item.asset);\n    const availableItems = itemsInBag.filter(item => item.status !== BagItemStatus.UNAVAILABLE);\n    return {\n      unchangedAssets,\n      priceChangedAssets,\n      unavailableAssets,\n      availableItems\n    };\n  }, [itemsInBag]);\n  useEffect(() => {\n    const hasAssetsInReview = priceChangedAssets.length > 0;\n    const hasAssets = itemsInBag.length > 0;\n    if (hasAssetsInReview) sendAnalyticsEvent(EventName.NFT_BUY_BAG_CHANGED, {\n      usd_value: fetchedPriceData,\n      bag_quantity: itemsInBag,\n      ...formatAssetEventProperties(priceChangedAssets)\n    });\n    if (bagStatus === BagStatus.IN_REVIEW && !hasAssetsInReview) {\n      if (hasAssets) setBagStatus(BagStatus.CONFIRM_REVIEW);else setBagStatus(BagStatus.ADDING_TO_BAG);\n    }\n    if (bagStatus === BagStatus.CONFIRM_REVIEW && !hasAssets) {\n      setBagStatus(BagStatus.ADDING_TO_BAG);\n    }\n  }, [bagStatus, itemsInBag, priceChangedAssets, setBagStatus, fetchedPriceData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Column, {\n      display: priceChangedAssets.length > 0 || unavailableAssets.length > 0 ? 'flex' : 'none',\n      children: [unavailableAssets.length > 0 && /*#__PURE__*/_jsxDEV(Trace, {\n        name: EventName.NFT_BUY_BAG_CHANGED,\n        properties: {\n          usd_value: fetchedPriceData,\n          bag_quantity: itemsInBag.length,\n          ...formatAssetEventProperties(unavailableAssets)\n        },\n        shouldLogImpression: true,\n        children: /*#__PURE__*/_jsxDEV(UnavailableAssetsHeaderRow, {\n          assets: unavailableAssets,\n          usdPrice: fetchedPriceData,\n          clearUnavailableAssets: () => setItemsInBag(availableItems),\n          didOpenUnavailableAssets: didOpenUnavailableAssets,\n          setDidOpenUnavailableAssets: setDidOpenUnavailableAssets,\n          isMobile: isMobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), priceChangedAssets.map((asset, index) => /*#__PURE__*/_jsxDEV(PriceChangeBagRow, {\n        asset: asset,\n        usdPrice: fetchedPriceData,\n        markAssetAsReviewed: markAssetAsReviewed,\n        top: index === 0 && unavailableAssets.length === 0,\n        isMobile: isMobile\n      }, asset.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      children: unchangedAssets.slice(0).reverse().map(asset => /*#__PURE__*/_jsxDEV(BagRow, {\n        asset: asset,\n        usdPrice: fetchedPriceData,\n        removeAsset: removeAssetsFromBag,\n        showRemove: true,\n        isMobile: isMobile\n      }, asset.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BagContent, \"z2D+1mzRQVM8f7Bq0viCAzi+/7I=\", false, function () {\n  return [useBag, useBag, useBag, useBag, useBag, useBag, useBag, useBag, useIsMobile, useQuery];\n});\n_c = BagContent;\nvar _c;\n$RefreshReg$(_c, \"BagContent\");","map":{"version":3,"names":["sendAnalyticsEvent","Trace","EventName","BagRow","PriceChangeBagRow","UnavailableAssetsHeaderRow","Column","useBag","useIsMobile","BagItemStatus","BagStatus","fetchPrice","formatAssetEventProperties","recalculateBagUsingPooledAssets","useEffect","useMemo","useQuery","BagContent","bagStatus","s","setBagStatus","markAssetAsReviewed","didOpenUnavailableAssets","setDidOpenUnavailableAssets","uncheckedItemsInBag","itemsInBag","setItemsInBag","removeAssetsFromBag","isMobile","data","fetchedPriceData","unchangedAssets","priceChangedAssets","unavailableAssets","availableItems","filter","item","status","ADDED_TO_BAG","REVIEWED","map","asset","REVIEWING_PRICE_CHANGE","UNAVAILABLE","hasAssetsInReview","length","hasAssets","NFT_BUY_BAG_CHANGED","usd_value","bag_quantity","IN_REVIEW","CONFIRM_REVIEW","ADDING_TO_BAG","index","id","slice","reverse"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/components/bag/BagContent.tsx"],"sourcesContent":["import { sendAnalyticsEvent, Trace } from '@uniswap/analytics'\nimport { EventName } from '@uniswap/analytics-events'\nimport { BagRow, PriceChangeBagRow, UnavailableAssetsHeaderRow } from 'nft/components/bag/BagRow'\nimport { Column } from 'nft/components/Flex'\nimport { useBag, useIsMobile } from 'nft/hooks'\nimport { BagItemStatus, BagStatus } from 'nft/types'\nimport { fetchPrice, formatAssetEventProperties, recalculateBagUsingPooledAssets } from 'nft/utils'\nimport { useEffect, useMemo } from 'react'\nimport { useQuery } from 'react-query'\n\nexport const BagContent = () => {\n  const bagStatus = useBag((s) => s.bagStatus)\n  const setBagStatus = useBag((s) => s.setBagStatus)\n  const markAssetAsReviewed = useBag((s) => s.markAssetAsReviewed)\n  const didOpenUnavailableAssets = useBag((s) => s.didOpenUnavailableAssets)\n  const setDidOpenUnavailableAssets = useBag((s) => s.setDidOpenUnavailableAssets)\n  const uncheckedItemsInBag = useBag((s) => s.itemsInBag)\n  const setItemsInBag = useBag((s) => s.setItemsInBag)\n  const removeAssetsFromBag = useBag((s) => s.removeAssetsFromBag)\n\n  const isMobile = useIsMobile()\n\n  const itemsInBag = useMemo(() => {\n    return recalculateBagUsingPooledAssets(uncheckedItemsInBag)\n  }, [uncheckedItemsInBag])\n\n  const { data: fetchedPriceData } = useQuery(['fetchPrice', {}], () => fetchPrice(), {})\n\n  const { unchangedAssets, priceChangedAssets, unavailableAssets, availableItems } = useMemo(() => {\n    const unchangedAssets = itemsInBag\n      .filter((item) => item.status === BagItemStatus.ADDED_TO_BAG || item.status === BagItemStatus.REVIEWED)\n      .map((item) => item.asset)\n    const priceChangedAssets = itemsInBag\n      .filter((item) => item.status === BagItemStatus.REVIEWING_PRICE_CHANGE)\n      .map((item) => item.asset)\n    const unavailableAssets = itemsInBag\n      .filter((item) => item.status === BagItemStatus.UNAVAILABLE)\n      .map((item) => item.asset)\n    const availableItems = itemsInBag.filter((item) => item.status !== BagItemStatus.UNAVAILABLE)\n\n    return { unchangedAssets, priceChangedAssets, unavailableAssets, availableItems }\n  }, [itemsInBag])\n\n  useEffect(() => {\n    const hasAssetsInReview = priceChangedAssets.length > 0\n    const hasAssets = itemsInBag.length > 0\n\n    if (hasAssetsInReview)\n      sendAnalyticsEvent(EventName.NFT_BUY_BAG_CHANGED, {\n        usd_value: fetchedPriceData,\n        bag_quantity: itemsInBag,\n        ...formatAssetEventProperties(priceChangedAssets),\n      })\n\n    if (bagStatus === BagStatus.IN_REVIEW && !hasAssetsInReview) {\n      if (hasAssets) setBagStatus(BagStatus.CONFIRM_REVIEW)\n      else setBagStatus(BagStatus.ADDING_TO_BAG)\n    }\n\n    if (bagStatus === BagStatus.CONFIRM_REVIEW && !hasAssets) {\n      setBagStatus(BagStatus.ADDING_TO_BAG)\n    }\n  }, [bagStatus, itemsInBag, priceChangedAssets, setBagStatus, fetchedPriceData])\n\n  return (\n    <>\n      <Column display={priceChangedAssets.length > 0 || unavailableAssets.length > 0 ? 'flex' : 'none'}>\n        {unavailableAssets.length > 0 && (\n          <Trace\n            name={EventName.NFT_BUY_BAG_CHANGED}\n            properties={{\n              usd_value: fetchedPriceData,\n              bag_quantity: itemsInBag.length,\n              ...formatAssetEventProperties(unavailableAssets),\n            }}\n            shouldLogImpression\n          >\n            <UnavailableAssetsHeaderRow\n              assets={unavailableAssets}\n              usdPrice={fetchedPriceData}\n              clearUnavailableAssets={() => setItemsInBag(availableItems)}\n              didOpenUnavailableAssets={didOpenUnavailableAssets}\n              setDidOpenUnavailableAssets={setDidOpenUnavailableAssets}\n              isMobile={isMobile}\n            />\n          </Trace>\n        )}\n        {priceChangedAssets.map((asset, index) => (\n          <PriceChangeBagRow\n            key={asset.id}\n            asset={asset}\n            usdPrice={fetchedPriceData}\n            markAssetAsReviewed={markAssetAsReviewed}\n            top={index === 0 && unavailableAssets.length === 0}\n            isMobile={isMobile}\n          />\n        ))}\n      </Column>\n      <Column>\n        {unchangedAssets\n          .slice(0)\n          .reverse()\n          .map((asset) => (\n            <BagRow\n              key={asset.id}\n              asset={asset}\n              usdPrice={fetchedPriceData}\n              removeAsset={removeAssetsFromBag}\n              showRemove={true}\n              isMobile={isMobile}\n            />\n          ))}\n      </Column>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}