{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import{atomWithImmer}from'jotai/immer';import{useAtomValue}from'jotai/utils';import{useCallback}from'react';import useBlockNumber from'./useBlockNumber';// The oldest block (per chain) to be considered valid.\nvar oldestBlockMapAtom=atomWithImmer({});var DEFAULT_MAX_BLOCK_AGE=10;function useGetIsValidBlock(){var maxBlockAge=arguments.length>0&&arguments[0]!==undefined?arguments[0]:DEFAULT_MAX_BLOCK_AGE;var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var currentBlock=useBlockNumber();var oldestBlockMap=useAtomValue(oldestBlockMapAtom);var oldestBlock=chainId?oldestBlockMap[chainId]:0;return useCallback(function(block){if(!currentBlock)return false;if(currentBlock-block>maxBlockAge)return false;if(currentBlock<oldestBlock)return false;return true;},[currentBlock,maxBlockAge,oldestBlock]);}export default function useIsValidBlock(block){return useGetIsValidBlock()(block);}","map":{"version":3,"names":["useWeb3React","atomWithImmer","useAtomValue","useCallback","useBlockNumber","oldestBlockMapAtom","DEFAULT_MAX_BLOCK_AGE","useGetIsValidBlock","maxBlockAge","chainId","currentBlock","oldestBlockMap","oldestBlock","block","useIsValidBlock"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useIsValidBlock.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { atomWithImmer } from 'jotai/immer'\nimport { useAtomValue } from 'jotai/utils'\nimport { useCallback } from 'react'\n\nimport useBlockNumber from './useBlockNumber'\n\n// The oldest block (per chain) to be considered valid.\nconst oldestBlockMapAtom = atomWithImmer<{ [chainId: number]: number }>({})\n\nconst DEFAULT_MAX_BLOCK_AGE = 10\n\nfunction useGetIsValidBlock(maxBlockAge = DEFAULT_MAX_BLOCK_AGE): (block: number) => boolean {\n  const { chainId } = useWeb3React()\n  const currentBlock = useBlockNumber()\n  const oldestBlockMap = useAtomValue(oldestBlockMapAtom)\n  const oldestBlock = chainId ? oldestBlockMap[chainId] : 0\n  return useCallback(\n    (block: number) => {\n      if (!currentBlock) return false\n      if (currentBlock - block > maxBlockAge) return false\n      if (currentBlock < oldestBlock) return false\n      return true\n    },\n    [currentBlock, maxBlockAge, oldestBlock]\n  )\n}\n\nexport default function useIsValidBlock(block: number): boolean {\n  return useGetIsValidBlock()(block)\n}\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,aAAa,KAAQ,aAAa,CAC3C,OAASC,YAAY,KAAQ,aAAa,CAC1C,OAASC,WAAW,KAAQ,OAAO,CAEnC,MAAOC,eAAc,KAAM,kBAAkB,CAE7C;AACA,GAAMC,mBAAkB,CAAGJ,aAAa,CAAgC,CAAC,CAAC,CAAC,CAE3E,GAAMK,sBAAqB,CAAG,EAAE,CAEhC,QAASC,mBAAkB,EAAkE,IAAjEC,YAAW,2DAAGF,qBAAqB,CAC7D,kBAAoBN,YAAY,EAAE,CAA1BS,OAAO,eAAPA,OAAO,CACf,GAAMC,aAAY,CAAGN,cAAc,EAAE,CACrC,GAAMO,eAAc,CAAGT,YAAY,CAACG,kBAAkB,CAAC,CACvD,GAAMO,YAAW,CAAGH,OAAO,CAAGE,cAAc,CAACF,OAAO,CAAC,CAAG,CAAC,CACzD,MAAON,YAAW,CAChB,SAACU,KAAa,CAAK,CACjB,GAAI,CAACH,YAAY,CAAE,MAAO,MAAK,CAC/B,GAAIA,YAAY,CAAGG,KAAK,CAAGL,WAAW,CAAE,MAAO,MAAK,CACpD,GAAIE,YAAY,CAAGE,WAAW,CAAE,MAAO,MAAK,CAC5C,MAAO,KAAI,CACb,CAAC,CACD,CAACF,YAAY,CAAEF,WAAW,CAAEI,WAAW,CAAC,CACzC,CACH,CAEA,cAAe,SAASE,gBAAe,CAACD,KAAa,CAAW,CAC9D,MAAON,mBAAkB,EAAE,CAACM,KAAK,CAAC,CACpC"},"metadata":{},"sourceType":"module"}