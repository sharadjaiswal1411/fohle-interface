{"ast":null,"code":"/**\n * List of all the networks supported by the Thera ECOSYSTEM\n */\n// export enum SupportedChainId {\n//   MAINNET = 1,\n//   ROPSTEN = 3,\n//   RINKEBY = 4,\n//   GOERLI = 5,\n//   KOVAN = 42,\n\n//   ARBITRUM_ONE = 42161,\n//   ARBITRUM_RINKEBY = 421611,\n\n//   OPTIMISM = 10,\n//   OPTIMISM_GOERLI = 420,\n\n//   POLYGON = 137,\n//   POLYGON_MUMBAI = 80001,\n\n//   OPTIMISTIC_KOVAN = 69,\n\n//   CELO = 42220,\n//   CELO_ALFAJORES = 44787,\n// }\n\nexport let SupportedChainId;\n(function (SupportedChainId) {\n  SupportedChainId[SupportedChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n  SupportedChainId[SupportedChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n})(SupportedChainId || (SupportedChainId = {}));\nexport const CHAIN_IDS_TO_NAMES = {\n  [SupportedChainId.MAINNET]: 'mainnet',\n  [SupportedChainId.ROPSTEN]: 'ropsten',\n  [SupportedChainId.RINKEBY]: 'rinkeby',\n  [SupportedChainId.GOERLI]: 'goerli',\n  [SupportedChainId.KOVAN]: 'kovan',\n  [SupportedChainId.POLYGON]: 'polygon',\n  [SupportedChainId.POLYGON_MUMBAI]: 'polygon_mumbai',\n  [SupportedChainId.CELO]: 'celo',\n  [SupportedChainId.CELO_ALFAJORES]: 'celo_alfajores',\n  [SupportedChainId.ARBITRUM_ONE]: 'arbitrum',\n  [SupportedChainId.ARBITRUM_RINKEBY]: 'arbitrum_rinkeby',\n  [SupportedChainId.OPTIMISM]: 'optimism',\n  [SupportedChainId.OPTIMISM_GOERLI]: 'optimism_goerli',\n  [SupportedChainId.OPTIMISTIC_KOVAN]: 'optimism_kovan'\n};\n\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS = Object.values(SupportedChainId).filter(id => typeof id === 'number');\nexport function isSupportedChain(chainId) {\n  return !!chainId && !!SupportedChainId[chainId];\n}\nexport const SUPPORTED_GAS_ESTIMATE_CHAIN_IDS = [SupportedChainId.MAINNET, SupportedChainId.POLYGON, SupportedChainId.CELO, SupportedChainId.OPTIMISM, SupportedChainId.ARBITRUM_ONE];\n\n/**\n * Unsupported networks for V2 pool behavior.\n */\nexport const UNSUPPORTED_V2POOL_CHAIN_IDS = [SupportedChainId.POLYGON, SupportedChainId.OPTIMISM, SupportedChainId.ARBITRUM_ONE];\nexport const TESTNET_CHAIN_IDS = [SupportedChainId.ROPSTEN, SupportedChainId.RINKEBY, SupportedChainId.GOERLI, SupportedChainId.KOVAN, SupportedChainId.POLYGON_MUMBAI, SupportedChainId.ARBITRUM_RINKEBY, SupportedChainId.OPTIMISM_GOERLI];\n/**\n * All the chain IDs that are running the Ethereum protocol.\n */\nexport const L1_CHAIN_IDS = [SupportedChainId.MAINNET, SupportedChainId.ROPSTEN, SupportedChainId.RINKEBY, SupportedChainId.GOERLI, SupportedChainId.KOVAN, SupportedChainId.POLYGON, SupportedChainId.POLYGON_MUMBAI, SupportedChainId.CELO, SupportedChainId.CELO_ALFAJORES];\n/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */\nexport const L2_CHAIN_IDS = [SupportedChainId.ARBITRUM_ONE, SupportedChainId.ARBITRUM_RINKEBY, SupportedChainId.OPTIMISM, SupportedChainId.OPTIMISM_GOERLI];","map":{"version":3,"names":["SupportedChainId","CHAIN_IDS_TO_NAMES","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","POLYGON","POLYGON_MUMBAI","CELO","CELO_ALFAJORES","ARBITRUM_ONE","ARBITRUM_RINKEBY","OPTIMISM","OPTIMISM_GOERLI","OPTIMISTIC_KOVAN","ALL_SUPPORTED_CHAIN_IDS","Object","values","filter","id","isSupportedChain","chainId","SUPPORTED_GAS_ESTIMATE_CHAIN_IDS","UNSUPPORTED_V2POOL_CHAIN_IDS","TESTNET_CHAIN_IDS","L1_CHAIN_IDS","L2_CHAIN_IDS"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/constants/chains.ts"],"sourcesContent":["/**\n * List of all the networks supported by the Thera ECOSYSTEM\n */\n// export enum SupportedChainId {\n//   MAINNET = 1,\n//   ROPSTEN = 3,\n//   RINKEBY = 4,\n//   GOERLI = 5,\n//   KOVAN = 42,\n\n//   ARBITRUM_ONE = 42161,\n//   ARBITRUM_RINKEBY = 421611,\n\n//   OPTIMISM = 10,\n//   OPTIMISM_GOERLI = 420,\n\n//   POLYGON = 137,\n//   POLYGON_MUMBAI = 80001,\n\n//   OPTIMISTIC_KOVAN = 69,\n\n//   CELO = 42220,\n//   CELO_ALFAJORES = 44787,\n// }\n\n\nexport enum SupportedChainId {\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n}\n\nexport const CHAIN_IDS_TO_NAMES = {\n  [SupportedChainId.MAINNET]: 'mainnet',\n  [SupportedChainId.ROPSTEN]: 'ropsten',\n  [SupportedChainId.RINKEBY]: 'rinkeby',\n  [SupportedChainId.GOERLI]: 'goerli',\n  [SupportedChainId.KOVAN]: 'kovan',\n  [SupportedChainId.POLYGON]: 'polygon',\n  [SupportedChainId.POLYGON_MUMBAI]: 'polygon_mumbai',\n  [SupportedChainId.CELO]: 'celo',\n  [SupportedChainId.CELO_ALFAJORES]: 'celo_alfajores',\n  [SupportedChainId.ARBITRUM_ONE]: 'arbitrum',\n  [SupportedChainId.ARBITRUM_RINKEBY]: 'arbitrum_rinkeby',\n  [SupportedChainId.OPTIMISM]: 'optimism',\n  [SupportedChainId.OPTIMISM_GOERLI]: 'optimism_goerli',\n  [SupportedChainId.OPTIMISTIC_KOVAN]: 'optimism_kovan',\n}\n\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS: SupportedChainId[] = Object.values(SupportedChainId).filter(\n  (id) => typeof id === 'number'\n) as SupportedChainId[]\n\nexport function isSupportedChain(chainId: number | null | undefined): chainId is SupportedChainId {\n  return !!chainId && !!SupportedChainId[chainId]\n}\n\nexport const SUPPORTED_GAS_ESTIMATE_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.POLYGON,\n  SupportedChainId.CELO,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.ARBITRUM_ONE,\n]\n\n/**\n * Unsupported networks for V2 pool behavior.\n */\nexport const UNSUPPORTED_V2POOL_CHAIN_IDS = [\n  SupportedChainId.POLYGON,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.ARBITRUM_ONE,\n]\n\nexport const TESTNET_CHAIN_IDS = [\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n  SupportedChainId.POLYGON_MUMBAI,\n  SupportedChainId.ARBITRUM_RINKEBY,\n  SupportedChainId.OPTIMISM_GOERLI,\n] as const\n\nexport type SupportedTestnetChainId = typeof TESTNET_CHAIN_IDS[number]\n\n/**\n * All the chain IDs that are running the Ethereum protocol.\n */\nexport const L1_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n  SupportedChainId.POLYGON,\n  SupportedChainId.POLYGON_MUMBAI,\n  SupportedChainId.CELO,\n  SupportedChainId.CELO_ALFAJORES,\n] as const\n\nexport type SupportedL1ChainId = typeof L1_CHAIN_IDS[number]\n\n/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */\nexport const L2_CHAIN_IDS = [\n  SupportedChainId.ARBITRUM_ONE,\n  SupportedChainId.ARBITRUM_RINKEBY,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.OPTIMISM_GOERLI,\n] as const\n\nexport type SupportedL2ChainId = typeof L2_CHAIN_IDS[number]\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}