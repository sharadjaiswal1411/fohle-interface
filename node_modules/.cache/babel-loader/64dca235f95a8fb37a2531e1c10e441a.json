{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/NavBar/SearchBarDropdown.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { useTrace } from '@uniswap/analytics';\nimport { NavBarSearchTypes, SectionName } from '@uniswap/analytics-events';\nimport { useIsNftPage } from 'hooks/useIsNftPage';\nimport { Box } from 'nft/components/Box';\nimport { Column, Row } from 'nft/components/Flex';\nimport { subheadSmall } from 'nft/css/common.css';\nimport { useSearchHistory } from 'nft/hooks';\nimport { fetchTrendingCollections } from 'nft/queries';\nimport { fetchTrendingTokens } from 'nft/queries/genie/TrendingTokensFetcher';\nimport { formatEthPrice } from 'nft/utils/currency';\nimport { useEffect, useMemo, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { useLocation } from 'react-router-dom';\nimport { ClockIcon, TrendingArrow } from '../../nft/components/icons';\nimport * as styles from './SearchBar.css';\nimport { CollectionRow, SkeletonRow, TokenRow } from './SuggestionRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction isCollection(suggestion) {\n  return suggestion.decimals === undefined;\n}\nconst SearchBarDropdownSection = _ref => {\n  let {\n    toggleOpen,\n    suggestions,\n    header,\n    headerIcon = undefined,\n    hoveredIndex,\n    startingIndex,\n    setHoveredIndex,\n    isLoading,\n    eventProperties\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Column, {\n    gap: \"12\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      paddingX: \"16\",\n      paddingY: \"4\",\n      gap: \"8\",\n      color: \"gray300\",\n      className: subheadSmall,\n      style: {\n        lineHeight: '20px'\n      },\n      children: [headerIcon ? headerIcon : null, /*#__PURE__*/_jsxDEV(Box, {\n        children: header\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Column, {\n      gap: \"12\",\n      children: suggestions.map((suggestion, index) => isLoading ? /*#__PURE__*/_jsxDEV(SkeletonRow, {}, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : isCollection(suggestion) ? /*#__PURE__*/_jsxDEV(CollectionRow, {\n        collection: suggestion,\n        isHovered: hoveredIndex === index + startingIndex,\n        setHoveredIndex: setHoveredIndex,\n        toggleOpen: toggleOpen,\n        index: index + startingIndex,\n        eventProperties: {\n          position: index + startingIndex,\n          selected_search_result_name: suggestion.name,\n          selected_search_result_address: suggestion.address,\n          ...eventProperties\n        }\n      }, suggestion.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(TokenRow, {\n        token: suggestion,\n        isHovered: hoveredIndex === index + startingIndex,\n        setHoveredIndex: setHoveredIndex,\n        toggleOpen: toggleOpen,\n        index: index + startingIndex,\n        eventProperties: {\n          position: index + startingIndex,\n          selected_search_result_name: suggestion.name,\n          selected_search_result_address: suggestion.address,\n          ...eventProperties\n        }\n      }, suggestion.address, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c = SearchBarDropdownSection;\nexport const SearchBarDropdown = _ref2 => {\n  _s();\n  var _trendingCollections$, _trendingTokens$lengt;\n  let {\n    toggleOpen,\n    tokens,\n    collections,\n    queryText,\n    hasInput,\n    isLoading\n  } = _ref2;\n  const [hoveredIndex, setHoveredIndex] = useState(0);\n  const {\n    history: searchHistory,\n    updateItem: updateSearchHistory\n  } = useSearchHistory();\n  const shortenedHistory = useMemo(() => searchHistory.slice(0, 2), [searchHistory]);\n  const {\n    pathname\n  } = useLocation();\n  const isNFTPage = useIsNftPage();\n  const isTokenPage = pathname.includes('/tokens');\n  const [resultsState, setResultsState] = useState();\n  const {\n    data: trendingCollectionResults,\n    isLoading: trendingCollectionsAreLoading\n  } = useQuery(['trendingCollections', 'eth', 'twenty_four_hours'], () => fetchTrendingCollections({\n    volumeType: 'eth',\n    timePeriod: 'ONE_DAY',\n    size: 3\n  }));\n  const trendingCollections = useMemo(() => trendingCollectionResults ? trendingCollectionResults.map(collection => {\n    var _collection$floor, _collection$floor2;\n    return {\n      ...collection,\n      collectionAddress: collection.address,\n      floorPrice: formatEthPrice((_collection$floor = collection.floor) === null || _collection$floor === void 0 ? void 0 : _collection$floor.toString()),\n      stats: {\n        total_supply: collection.totalSupply,\n        one_day_change: collection.floorChange,\n        floor_price: formatEthPrice((_collection$floor2 = collection.floor) === null || _collection$floor2 === void 0 ? void 0 : _collection$floor2.toString())\n      }\n    };\n  }).slice(0, isNFTPage ? 3 : 2) : [...Array(isNFTPage ? 3 : 2)], [isNFTPage, trendingCollectionResults]);\n  const {\n    data: trendingTokenResults,\n    isLoading: trendingTokensAreLoading\n  } = useQuery(['trendingTokens'], () => fetchTrendingTokens(4), {\n    refetchOnWindowFocus: false,\n    refetchOnMount: false,\n    refetchOnReconnect: false\n  });\n  useEffect(() => {\n    trendingTokenResults === null || trendingTokenResults === void 0 ? void 0 : trendingTokenResults.forEach(updateSearchHistory);\n  }, [trendingTokenResults, updateSearchHistory]);\n  const trendingTokensLength = isTokenPage ? 3 : 2;\n  const trendingTokens = useMemo(() => trendingTokenResults ? trendingTokenResults.slice(0, trendingTokensLength) : [...Array(trendingTokensLength)], [trendingTokenResults, trendingTokensLength]);\n  const totalSuggestions = hasInput ? tokens.length + collections.length : Math.min(shortenedHistory.length, 2) + (isNFTPage || !isTokenPage ? (_trendingCollections$ = trendingCollections === null || trendingCollections === void 0 ? void 0 : trendingCollections.length) !== null && _trendingCollections$ !== void 0 ? _trendingCollections$ : 0 : 0) + (isTokenPage || !isNFTPage ? (_trendingTokens$lengt = trendingTokens === null || trendingTokens === void 0 ? void 0 : trendingTokens.length) !== null && _trendingTokens$lengt !== void 0 ? _trendingTokens$lengt : 0 : 0);\n\n  // Navigate search results via arrow keys\n  useEffect(() => {\n    const keyDownHandler = event => {\n      if (event.key === 'ArrowUp') {\n        event.preventDefault();\n        if (!hoveredIndex) {\n          setHoveredIndex(totalSuggestions - 1);\n        } else {\n          setHoveredIndex(hoveredIndex - 1);\n        }\n      } else if (event.key === 'ArrowDown') {\n        event.preventDefault();\n        if (hoveredIndex && hoveredIndex === totalSuggestions - 1) {\n          setHoveredIndex(0);\n        } else {\n          setHoveredIndex((hoveredIndex !== null && hoveredIndex !== void 0 ? hoveredIndex : -1) + 1);\n        }\n      }\n    };\n    document.addEventListener('keydown', keyDownHandler);\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler);\n    };\n  }, [toggleOpen, hoveredIndex, totalSuggestions]);\n  const hasVerifiedCollection = collections.some(collection => collection.isVerified);\n  const hasVerifiedToken = tokens.some(token => token.onDefaultList);\n  const showCollectionsFirst = isNFTPage && (hasVerifiedCollection || !hasVerifiedToken) || !isNFTPage && !hasVerifiedToken && hasVerifiedCollection;\n  const trace = JSON.stringify(useTrace({\n    section: SectionName.NAVBAR_SEARCH\n  }));\n  useEffect(() => {\n    const eventProperties = {\n      total_suggestions: totalSuggestions,\n      query_text: queryText,\n      ...JSON.parse(trace)\n    };\n    if (!isLoading) {\n      const tokenSearchResults = tokens.length > 0 ? /*#__PURE__*/_jsxDEV(SearchBarDropdownSection, {\n        hoveredIndex: hoveredIndex,\n        startingIndex: showCollectionsFirst ? collections.length : 0,\n        setHoveredIndex: setHoveredIndex,\n        toggleOpen: toggleOpen,\n        suggestions: tokens,\n        eventProperties: {\n          suggestion_type: NavBarSearchTypes.TOKEN_SUGGESTION,\n          ...eventProperties\n        },\n        header: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Tokens\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.notFoundContainer,\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"No tokens found.\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this);\n      const collectionSearchResults = collections.length > 0 ? /*#__PURE__*/_jsxDEV(SearchBarDropdownSection, {\n        hoveredIndex: hoveredIndex,\n        startingIndex: showCollectionsFirst ? 0 : tokens.length,\n        setHoveredIndex: setHoveredIndex,\n        toggleOpen: toggleOpen,\n        suggestions: collections,\n        eventProperties: {\n          suggestion_type: NavBarSearchTypes.COLLECTION_SUGGESTION,\n          ...eventProperties\n        },\n        header: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"NFT Collections\"\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        className: styles.notFoundContainer,\n        children: \"No NFT collections found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this);\n      const currentState = () => {\n        var _trendingTokens$lengt2;\n        return hasInput ?\n        /*#__PURE__*/\n        // Empty or Up to 8 combined tokens and nfts\n        _jsxDEV(Column, {\n          gap: \"20\",\n          children: showCollectionsFirst ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [collectionSearchResults, tokenSearchResults]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [tokenSearchResults, collectionSearchResults]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this) :\n        /*#__PURE__*/\n        // Recent Searches, Trending Tokens, Trending Collections\n        _jsxDEV(Column, {\n          gap: \"20\",\n          children: [shortenedHistory.length > 0 && /*#__PURE__*/_jsxDEV(SearchBarDropdownSection, {\n            hoveredIndex: hoveredIndex,\n            startingIndex: 0,\n            setHoveredIndex: setHoveredIndex,\n            toggleOpen: toggleOpen,\n            suggestions: shortenedHistory,\n            eventProperties: {\n              suggestion_type: NavBarSearchTypes.RECENT_SEARCH,\n              ...eventProperties\n            },\n            header: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Recent searches\"\n            }, void 0, false, void 0, this),\n            headerIcon: /*#__PURE__*/_jsxDEV(ClockIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), !isNFTPage && /*#__PURE__*/_jsxDEV(SearchBarDropdownSection, {\n            hoveredIndex: hoveredIndex,\n            startingIndex: shortenedHistory.length,\n            setHoveredIndex: setHoveredIndex,\n            toggleOpen: toggleOpen,\n            suggestions: trendingTokens,\n            eventProperties: {\n              suggestion_type: NavBarSearchTypes.TOKEN_TRENDING,\n              ...eventProperties\n            },\n            header: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Popular tokens\"\n            }, void 0, false, void 0, this),\n            headerIcon: /*#__PURE__*/_jsxDEV(TrendingArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this),\n            isLoading: trendingTokensAreLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), !isTokenPage && /*#__PURE__*/_jsxDEV(SearchBarDropdownSection, {\n            hoveredIndex: hoveredIndex,\n            startingIndex: shortenedHistory.length + (isNFTPage ? 0 : (_trendingTokens$lengt2 = trendingTokens === null || trendingTokens === void 0 ? void 0 : trendingTokens.length) !== null && _trendingTokens$lengt2 !== void 0 ? _trendingTokens$lengt2 : 0),\n            setHoveredIndex: setHoveredIndex,\n            toggleOpen: toggleOpen,\n            suggestions: trendingCollections,\n            eventProperties: {\n              suggestion_type: NavBarSearchTypes.COLLECTION_TRENDING,\n              ...eventProperties\n            },\n            header: /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Popular NFT collections\"\n            }, void 0, false, void 0, this),\n            headerIcon: /*#__PURE__*/_jsxDEV(TrendingArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this),\n            isLoading: trendingCollectionsAreLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this);\n      };\n      setResultsState(currentState);\n    }\n  }, [isLoading, tokens, collections, trendingCollections, trendingCollectionsAreLoading, trendingTokens, trendingTokensAreLoading, hoveredIndex, toggleOpen, shortenedHistory, hasInput, isNFTPage, isTokenPage, showCollectionsFirst, queryText, totalSuggestions, trace]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: styles.searchBarDropdownNft,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      opacity: isLoading ? '0.3' : '1',\n      transition: \"125\",\n      children: resultsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 340,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBarDropdown, \"adHDP/AzlX+KBVIRsbbwsPrusdA=\", false, function () {\n  return [useSearchHistory, useLocation, useIsNftPage, useQuery, useQuery, useTrace];\n});\n_c2 = SearchBarDropdown;\nvar _c, _c2;\n$RefreshReg$(_c, \"SearchBarDropdownSection\");\n$RefreshReg$(_c2, \"SearchBarDropdown\");","map":{"version":3,"names":["useTrace","NavBarSearchTypes","SectionName","useIsNftPage","Box","Column","Row","subheadSmall","useSearchHistory","fetchTrendingCollections","fetchTrendingTokens","formatEthPrice","useEffect","useMemo","useState","useQuery","useLocation","ClockIcon","TrendingArrow","styles","CollectionRow","SkeletonRow","TokenRow","isCollection","suggestion","decimals","undefined","SearchBarDropdownSection","toggleOpen","suggestions","header","headerIcon","hoveredIndex","startingIndex","setHoveredIndex","isLoading","eventProperties","lineHeight","map","index","position","selected_search_result_name","name","selected_search_result_address","address","SearchBarDropdown","tokens","collections","queryText","hasInput","history","searchHistory","updateItem","updateSearchHistory","shortenedHistory","slice","pathname","isNFTPage","isTokenPage","includes","resultsState","setResultsState","data","trendingCollectionResults","trendingCollectionsAreLoading","volumeType","timePeriod","size","trendingCollections","collection","collectionAddress","floorPrice","floor","toString","stats","total_supply","totalSupply","one_day_change","floorChange","floor_price","Array","trendingTokenResults","trendingTokensAreLoading","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","forEach","trendingTokensLength","trendingTokens","totalSuggestions","length","Math","min","keyDownHandler","event","key","preventDefault","document","addEventListener","removeEventListener","hasVerifiedCollection","some","isVerified","hasVerifiedToken","token","onDefaultList","showCollectionsFirst","trace","JSON","stringify","section","NAVBAR_SEARCH","total_suggestions","query_text","parse","tokenSearchResults","suggestion_type","TOKEN_SUGGESTION","notFoundContainer","collectionSearchResults","COLLECTION_SUGGESTION","currentState","RECENT_SEARCH","TOKEN_TRENDING","COLLECTION_TRENDING","searchBarDropdownNft"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/NavBar/SearchBarDropdown.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { useTrace } from '@uniswap/analytics'\nimport { NavBarSearchTypes, SectionName } from '@uniswap/analytics-events'\nimport { useIsNftPage } from 'hooks/useIsNftPage'\nimport { Box } from 'nft/components/Box'\nimport { Column, Row } from 'nft/components/Flex'\nimport { subheadSmall } from 'nft/css/common.css'\nimport { useSearchHistory } from 'nft/hooks'\nimport { fetchTrendingCollections } from 'nft/queries'\nimport { fetchTrendingTokens } from 'nft/queries/genie/TrendingTokensFetcher'\nimport { FungibleToken, GenieCollection, TimePeriod, TrendingCollection } from 'nft/types'\nimport { formatEthPrice } from 'nft/utils/currency'\nimport { ReactNode, useEffect, useMemo, useState } from 'react'\nimport { useQuery } from 'react-query'\nimport { useLocation } from 'react-router-dom'\n\nimport { ClockIcon, TrendingArrow } from '../../nft/components/icons'\nimport * as styles from './SearchBar.css'\nimport { CollectionRow, SkeletonRow, TokenRow } from './SuggestionRow'\n\nfunction isCollection(suggestion: GenieCollection | FungibleToken | TrendingCollection) {\n  return (suggestion as FungibleToken).decimals === undefined\n}\n\ninterface SearchBarDropdownSectionProps {\n  toggleOpen: () => void\n  suggestions: (GenieCollection | FungibleToken)[]\n  header: JSX.Element\n  headerIcon?: JSX.Element\n  hoveredIndex: number | undefined\n  startingIndex: number\n  setHoveredIndex: (index: number | undefined) => void\n  isLoading?: boolean\n  eventProperties: Record<string, unknown>\n}\n\nconst SearchBarDropdownSection = ({\n  toggleOpen,\n  suggestions,\n  header,\n  headerIcon = undefined,\n  hoveredIndex,\n  startingIndex,\n  setHoveredIndex,\n  isLoading,\n  eventProperties,\n}: SearchBarDropdownSectionProps) => {\n  return (\n    <Column gap=\"12\">\n      <Row paddingX=\"16\" paddingY=\"4\" gap=\"8\" color=\"gray300\" className={subheadSmall} style={{ lineHeight: '20px' }}>\n        {headerIcon ? headerIcon : null}\n        <Box>{header}</Box>\n      </Row>\n      <Column gap=\"12\">\n        {suggestions.map((suggestion, index) =>\n          isLoading ? (\n            <SkeletonRow key={index} />\n          ) : isCollection(suggestion) ? (\n            <CollectionRow\n              key={suggestion.address}\n              collection={suggestion as GenieCollection}\n              isHovered={hoveredIndex === index + startingIndex}\n              setHoveredIndex={setHoveredIndex}\n              toggleOpen={toggleOpen}\n              index={index + startingIndex}\n              eventProperties={{\n                position: index + startingIndex,\n                selected_search_result_name: suggestion.name,\n                selected_search_result_address: suggestion.address,\n                ...eventProperties,\n              }}\n            />\n          ) : (\n            <TokenRow\n              key={suggestion.address}\n              token={suggestion as FungibleToken}\n              isHovered={hoveredIndex === index + startingIndex}\n              setHoveredIndex={setHoveredIndex}\n              toggleOpen={toggleOpen}\n              index={index + startingIndex}\n              eventProperties={{\n                position: index + startingIndex,\n                selected_search_result_name: suggestion.name,\n                selected_search_result_address: suggestion.address,\n                ...eventProperties,\n              }}\n            />\n          )\n        )}\n      </Column>\n    </Column>\n  )\n}\n\ninterface SearchBarDropdownProps {\n  toggleOpen: () => void\n  tokens: FungibleToken[]\n  collections: GenieCollection[]\n  queryText: string\n  hasInput: boolean\n  isLoading: boolean\n}\n\nexport const SearchBarDropdown = ({\n  toggleOpen,\n  tokens,\n  collections,\n  queryText,\n  hasInput,\n  isLoading,\n}: SearchBarDropdownProps) => {\n  const [hoveredIndex, setHoveredIndex] = useState<number | undefined>(0)\n  const { history: searchHistory, updateItem: updateSearchHistory } = useSearchHistory()\n  const shortenedHistory = useMemo(() => searchHistory.slice(0, 2), [searchHistory])\n  const { pathname } = useLocation()\n  const isNFTPage = useIsNftPage()\n  const isTokenPage = pathname.includes('/tokens')\n  const [resultsState, setResultsState] = useState<ReactNode>()\n\n  const { data: trendingCollectionResults, isLoading: trendingCollectionsAreLoading } = useQuery(\n    ['trendingCollections', 'eth', 'twenty_four_hours'],\n    () => fetchTrendingCollections({ volumeType: 'eth', timePeriod: 'ONE_DAY' as TimePeriod, size: 3 })\n  )\n\n  const trendingCollections = useMemo(\n    () =>\n      trendingCollectionResults\n        ? trendingCollectionResults\n            .map((collection) => ({\n              ...collection,\n              collectionAddress: collection.address,\n              floorPrice: formatEthPrice(collection.floor?.toString()),\n              stats: {\n                total_supply: collection.totalSupply,\n                one_day_change: collection.floorChange,\n                floor_price: formatEthPrice(collection.floor?.toString()),\n              },\n            }))\n            .slice(0, isNFTPage ? 3 : 2)\n        : [...Array<GenieCollection>(isNFTPage ? 3 : 2)],\n    [isNFTPage, trendingCollectionResults]\n  )\n\n  const { data: trendingTokenResults, isLoading: trendingTokensAreLoading } = useQuery(\n    ['trendingTokens'],\n    () => fetchTrendingTokens(4),\n    {\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n    }\n  )\n  useEffect(() => {\n    trendingTokenResults?.forEach(updateSearchHistory)\n  }, [trendingTokenResults, updateSearchHistory])\n\n  const trendingTokensLength = isTokenPage ? 3 : 2\n  const trendingTokens = useMemo(\n    () =>\n      trendingTokenResults\n        ? trendingTokenResults.slice(0, trendingTokensLength)\n        : [...Array<FungibleToken>(trendingTokensLength)],\n    [trendingTokenResults, trendingTokensLength]\n  )\n\n  const totalSuggestions = hasInput\n    ? tokens.length + collections.length\n    : Math.min(shortenedHistory.length, 2) +\n      (isNFTPage || !isTokenPage ? trendingCollections?.length ?? 0 : 0) +\n      (isTokenPage || !isNFTPage ? trendingTokens?.length ?? 0 : 0)\n\n  // Navigate search results via arrow keys\n  useEffect(() => {\n    const keyDownHandler = (event: KeyboardEvent) => {\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n        if (!hoveredIndex) {\n          setHoveredIndex(totalSuggestions - 1)\n        } else {\n          setHoveredIndex(hoveredIndex - 1)\n        }\n      } else if (event.key === 'ArrowDown') {\n        event.preventDefault()\n        if (hoveredIndex && hoveredIndex === totalSuggestions - 1) {\n          setHoveredIndex(0)\n        } else {\n          setHoveredIndex((hoveredIndex ?? -1) + 1)\n        }\n      }\n    }\n\n    document.addEventListener('keydown', keyDownHandler)\n\n    return () => {\n      document.removeEventListener('keydown', keyDownHandler)\n    }\n  }, [toggleOpen, hoveredIndex, totalSuggestions])\n\n  const hasVerifiedCollection = collections.some((collection) => collection.isVerified)\n  const hasVerifiedToken = tokens.some((token) => token.onDefaultList)\n  const showCollectionsFirst =\n    (isNFTPage && (hasVerifiedCollection || !hasVerifiedToken)) ||\n    (!isNFTPage && !hasVerifiedToken && hasVerifiedCollection)\n\n  const trace = JSON.stringify(useTrace({ section: SectionName.NAVBAR_SEARCH }))\n\n  useEffect(() => {\n    const eventProperties = { total_suggestions: totalSuggestions, query_text: queryText, ...JSON.parse(trace) }\n    if (!isLoading) {\n      const tokenSearchResults =\n        tokens.length > 0 ? (\n          <SearchBarDropdownSection\n            hoveredIndex={hoveredIndex}\n            startingIndex={showCollectionsFirst ? collections.length : 0}\n            setHoveredIndex={setHoveredIndex}\n            toggleOpen={toggleOpen}\n            suggestions={tokens}\n            eventProperties={{\n              suggestion_type: NavBarSearchTypes.TOKEN_SUGGESTION,\n              ...eventProperties,\n            }}\n            header={<Trans>Tokens</Trans>}\n          />\n        ) : (\n          <Box className={styles.notFoundContainer}>\n            <Trans>No tokens found.</Trans>\n          </Box>\n        )\n\n      const collectionSearchResults =\n        collections.length > 0 ? (\n          <SearchBarDropdownSection\n            hoveredIndex={hoveredIndex}\n            startingIndex={showCollectionsFirst ? 0 : tokens.length}\n            setHoveredIndex={setHoveredIndex}\n            toggleOpen={toggleOpen}\n            suggestions={collections}\n            eventProperties={{\n              suggestion_type: NavBarSearchTypes.COLLECTION_SUGGESTION,\n              ...eventProperties,\n            }}\n            header={<Trans>NFT Collections</Trans>}\n          />\n        ) : (\n          <Box className={styles.notFoundContainer}>No NFT collections found.</Box>\n        )\n\n      const currentState = () =>\n        hasInput ? (\n          // Empty or Up to 8 combined tokens and nfts\n          <Column gap=\"20\">\n            {showCollectionsFirst ? (\n              <>\n                {collectionSearchResults}\n                {tokenSearchResults}\n              </>\n            ) : (\n              <>\n                {tokenSearchResults}\n                {collectionSearchResults}\n              </>\n            )}\n          </Column>\n        ) : (\n          // Recent Searches, Trending Tokens, Trending Collections\n          <Column gap=\"20\">\n            {shortenedHistory.length > 0 && (\n              <SearchBarDropdownSection\n                hoveredIndex={hoveredIndex}\n                startingIndex={0}\n                setHoveredIndex={setHoveredIndex}\n                toggleOpen={toggleOpen}\n                suggestions={shortenedHistory}\n                eventProperties={{\n                  suggestion_type: NavBarSearchTypes.RECENT_SEARCH,\n                  ...eventProperties,\n                }}\n                header={<Trans>Recent searches</Trans>}\n                headerIcon={<ClockIcon />}\n              />\n            )}\n            {!isNFTPage && (\n              <SearchBarDropdownSection\n                hoveredIndex={hoveredIndex}\n                startingIndex={shortenedHistory.length}\n                setHoveredIndex={setHoveredIndex}\n                toggleOpen={toggleOpen}\n                suggestions={trendingTokens}\n                eventProperties={{\n                  suggestion_type: NavBarSearchTypes.TOKEN_TRENDING,\n                  ...eventProperties,\n                }}\n                header={<Trans>Popular tokens</Trans>}\n                headerIcon={<TrendingArrow />}\n                isLoading={trendingTokensAreLoading}\n              />\n            )}\n            {!isTokenPage && (\n              <SearchBarDropdownSection\n                hoveredIndex={hoveredIndex}\n                startingIndex={shortenedHistory.length + (isNFTPage ? 0 : trendingTokens?.length ?? 0)}\n                setHoveredIndex={setHoveredIndex}\n                toggleOpen={toggleOpen}\n                suggestions={trendingCollections as unknown as GenieCollection[]}\n                eventProperties={{\n                  suggestion_type: NavBarSearchTypes.COLLECTION_TRENDING,\n                  ...eventProperties,\n                }}\n                header={<Trans>Popular NFT collections</Trans>}\n                headerIcon={<TrendingArrow />}\n                isLoading={trendingCollectionsAreLoading}\n              />\n            )}\n          </Column>\n        )\n\n      setResultsState(currentState)\n    }\n  }, [\n    isLoading,\n    tokens,\n    collections,\n    trendingCollections,\n    trendingCollectionsAreLoading,\n    trendingTokens,\n    trendingTokensAreLoading,\n    hoveredIndex,\n    toggleOpen,\n    shortenedHistory,\n    hasInput,\n    isNFTPage,\n    isTokenPage,\n    showCollectionsFirst,\n    queryText,\n    totalSuggestions,\n    trace,\n  ])\n\n  return (\n    <Box className={styles.searchBarDropdownNft}>\n      <Box opacity={isLoading ? '0.3' : '1'} transition=\"125\">\n        {resultsState}\n      </Box>\n    </Box>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}