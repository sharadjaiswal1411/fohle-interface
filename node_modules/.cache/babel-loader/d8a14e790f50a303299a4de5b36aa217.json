{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/link');\nmodule.exports = link;\nlink.locator = locate;\nvar own = {}.hasOwnProperty;\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\n\n/* Map of characters, which can be used to mark link\n * and image titles. */\nvar LINK_MARKERS = {};\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\n\n/* Map of characters, which can be used to mark link\n * and image titles in commonmark-mode. */\nvar COMMONMARK_LINK_MARKERS = {};\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var markers;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node;\n\n  /* Detect whether this is an image. */\n  if (character === '!') {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  }\n\n  /* Eat the opening. */\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  /* Exit when this is a link and we’re already inside\n   * a link. */\n  if (!isImage && self.inLink) {\n    return;\n  }\n  subvalue += character;\n  queue = '';\n  index++;\n\n  /* Eat the content. */\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n  now.column += index;\n  now.offset += index;\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n    if (character === C_TICK) {\n      /* Inline-code in link content. */\n      count = 1;\n      while (value.charAt(index + 1) === C_TICK) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === C_BACKSLASH) {\n      /* Allow brackets to be escaped. */\n      index++;\n      subqueue += value.charAt(index);\n      /* In GFM mode, brackets in code still count.\n       * In all other modes, they don’t.  This empty\n       * block prevents the next statements are\n       * entered. */\n    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n      depth++;\n    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n      if (depth) {\n        depth--;\n      } else {\n        /* Allow white-space between content and\n         * url in GFM mode. */\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n            if (!whitespace(character)) {\n              break;\n            }\n            subqueue += character;\n            index++;\n          }\n        }\n        if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n          return;\n        }\n        subqueue += C_PAREN_OPEN;\n        closed = true;\n        index++;\n        break;\n      }\n    }\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  }\n\n  /* Eat the content closing. */\n  if (!closed) {\n    return;\n  }\n  content = queue;\n  subvalue += queue + subqueue;\n  index++;\n\n  /* Eat white-space. */\n  while (index < length) {\n    character = value.charAt(index);\n    if (!whitespace(character)) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n\n  /* Eat the URL. */\n  character = value.charAt(index);\n  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n  queue = '';\n  beforeURL = subvalue;\n  if (character === C_LT) {\n    index++;\n    beforeURL += C_LT;\n    while (index < length) {\n      character = value.charAt(index);\n      if (character === C_GT) {\n        break;\n      }\n      if (commonmark && character === '\\n') {\n        return;\n      }\n      queue += character;\n      index++;\n    }\n    if (value.charAt(index) !== C_GT) {\n      return;\n    }\n    subvalue += C_LT + queue + C_GT;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n    while (index < length) {\n      character = value.charAt(index);\n      if (subqueue && own.call(markers, character)) {\n        break;\n      }\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n        subqueue += character;\n      } else {\n        if (character === C_PAREN_OPEN) {\n          depth++;\n        } else if (character === C_PAREN_CLOSE) {\n          if (depth === 0) {\n            break;\n          }\n          depth--;\n        }\n        queue += subqueue;\n        subqueue = '';\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n        queue += character;\n      }\n      index++;\n    }\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  }\n\n  /* Eat white-space. */\n  queue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (!whitespace(character)) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  subvalue += queue;\n\n  /* Eat the title. */\n  if (queue && own.call(markers, character)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = markers[character];\n    beforeTitle = subvalue;\n\n    /* In commonmark-mode, things are pretty easy: the\n     * marker cannot occur inside the title.\n     *\n     * Non-commonmark does, however, support nested\n     * delimiters. */\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n        if (character === marker) {\n          break;\n        }\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n        index++;\n        queue += character;\n      }\n      character = value.charAt(index);\n      if (character !== marker) {\n        return;\n      }\n      title = queue;\n      subvalue += queue + character;\n      index++;\n      while (index < length) {\n        character = value.charAt(index);\n        if (!whitespace(character)) {\n          break;\n        }\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n      while (index < length) {\n        character = value.charAt(index);\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === C_PAREN_CLOSE) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n        index++;\n      }\n    }\n  }\n  if (value.charAt(index) !== C_PAREN_CLOSE) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n  subvalue += C_PAREN_CLOSE;\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {\n    nonTerminated: false\n  });\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n  return eat(subvalue)(node);\n}","map":{"version":3,"names":["whitespace","require","locate","module","exports","link","locator","own","hasOwnProperty","C_BACKSLASH","C_BRACKET_OPEN","C_BRACKET_CLOSE","C_PAREN_OPEN","C_PAREN_CLOSE","C_LT","C_GT","C_TICK","C_DOUBLE_QUOTE","C_SINGLE_QUOTE","LINK_MARKERS","COMMONMARK_LINK_MARKERS","eat","value","silent","self","subvalue","index","character","charAt","pedantic","options","commonmark","gfm","closed","count","opening","beforeURL","beforeTitle","subqueue","hasMarker","markers","isImage","content","marker","length","title","depth","queue","url","now","exit","node","inLink","column","offset","call","decode","raw","unescape","test","end","nonTerminated","type","alt","enterLink","children","tokenizeInline"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/link.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/link');\n\nmodule.exports = link;\nlink.locator = locate;\n\nvar own = {}.hasOwnProperty;\n\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\n\n/* Map of characters, which can be used to mark link\n * and image titles. */\nvar LINK_MARKERS = {};\n\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\n\n/* Map of characters, which can be used to mark link\n * and image titles in commonmark-mode. */\nvar COMMONMARK_LINK_MARKERS = {};\n\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\n\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var markers;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node;\n\n  /* Detect whether this is an image. */\n  if (character === '!') {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  }\n\n  /* Eat the opening. */\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  /* Exit when this is a link and we’re already inside\n   * a link. */\n  if (!isImage && self.inLink) {\n    return;\n  }\n\n  subvalue += character;\n  queue = '';\n  index++;\n\n  /* Eat the content. */\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n\n  now.column += index;\n  now.offset += index;\n\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n\n    if (character === C_TICK) {\n      /* Inline-code in link content. */\n      count = 1;\n\n      while (value.charAt(index + 1) === C_TICK) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === C_BACKSLASH) {\n      /* Allow brackets to be escaped. */\n      index++;\n      subqueue += value.charAt(index);\n    /* In GFM mode, brackets in code still count.\n     * In all other modes, they don’t.  This empty\n     * block prevents the next statements are\n     * entered. */\n    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n      depth++;\n    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n      if (depth) {\n        depth--;\n      } else {\n        /* Allow white-space between content and\n         * url in GFM mode. */\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n\n            if (!whitespace(character)) {\n              break;\n            }\n\n            subqueue += character;\n            index++;\n          }\n        }\n\n        if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n          return;\n        }\n\n        subqueue += C_PAREN_OPEN;\n        closed = true;\n        index++;\n\n        break;\n      }\n    }\n\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  }\n\n  /* Eat the content closing. */\n  if (!closed) {\n    return;\n  }\n\n  content = queue;\n  subvalue += queue + subqueue;\n  index++;\n\n  /* Eat white-space. */\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  /* Eat the URL. */\n  character = value.charAt(index);\n  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n    beforeURL += C_LT;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === C_GT) {\n        break;\n      }\n\n      if (commonmark && character === '\\n') {\n        return;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    if (value.charAt(index) !== C_GT) {\n      return;\n    }\n\n    subvalue += C_LT + queue + C_GT;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (subqueue && own.call(markers, character)) {\n        break;\n      }\n\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n\n        subqueue += character;\n      } else {\n        if (character === C_PAREN_OPEN) {\n          depth++;\n        } else if (character === C_PAREN_CLOSE) {\n          if (depth === 0) {\n            break;\n          }\n\n          depth--;\n        }\n\n        queue += subqueue;\n        subqueue = '';\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        queue += character;\n      }\n\n      index++;\n    }\n\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  }\n\n  /* Eat white-space. */\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  subvalue += queue;\n\n  /* Eat the title. */\n  if (queue && own.call(markers, character)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = markers[character];\n    beforeTitle = subvalue;\n\n    /* In commonmark-mode, things are pretty easy: the\n     * marker cannot occur inside the title.\n     *\n     * Non-commonmark does, however, support nested\n     * delimiters. */\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          break;\n        }\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        index++;\n        queue += character;\n      }\n\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        return;\n      }\n\n      title = queue;\n      subvalue += queue + character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (!whitespace(character)) {\n          break;\n        }\n\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === C_PAREN_CLOSE) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n\n        index++;\n      }\n    }\n  }\n\n  if (value.charAt(index) !== C_PAREN_CLOSE) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  subvalue += C_PAREN_CLOSE;\n\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {nonTerminated: false});\n\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n\n  return eat(subvalue)(node);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}