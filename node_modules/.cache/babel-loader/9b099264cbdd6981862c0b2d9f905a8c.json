{"ast":null,"code":"import { BigNumber } from '@ethersproject/bignumber';\nimport { formatEther } from '@ethersproject/units';\nexport const buildActivityAsset = (event, collectionName, ethPriceInUSD) => {\n  var _event$tokenMetadata, _event$tokenMetadata2, _event$tokenMetadata3, _event$tokenMetadata4, _event$tokenMetadata5;\n  const assetUsdPrice = event.price ? formatEther(BigNumber.from(event.price).mul(BigNumber.from(Math.trunc(ethPriceInUSD * 100))).div(100)) : '0';\n  return {\n    address: event.collectionAddress,\n    collectionName,\n    imageUrl: (_event$tokenMetadata = event.tokenMetadata) === null || _event$tokenMetadata === void 0 ? void 0 : _event$tokenMetadata.imageUrl,\n    marketplace: event.marketplace,\n    name: (_event$tokenMetadata2 = event.tokenMetadata) === null || _event$tokenMetadata2 === void 0 ? void 0 : _event$tokenMetadata2.name,\n    tokenId: event.tokenId,\n    susFlag: (_event$tokenMetadata3 = event.tokenMetadata) === null || _event$tokenMetadata3 === void 0 ? void 0 : _event$tokenMetadata3.suspiciousFlag,\n    smallImageUrl: (_event$tokenMetadata4 = event.tokenMetadata) === null || _event$tokenMetadata4 === void 0 ? void 0 : _event$tokenMetadata4.smallImageUrl,\n    collectionSymbol: event.symbol,\n    priceInfo: {\n      USDPrice: assetUsdPrice,\n      ETHPrice: event.price,\n      basePrice: event.price,\n      baseAsset: 'ETH'\n    },\n    tokenType: (_event$tokenMetadata5 = event.tokenMetadata) === null || _event$tokenMetadata5 === void 0 ? void 0 : _event$tokenMetadata5.standard\n  };\n};","map":{"version":3,"names":["BigNumber","formatEther","buildActivityAsset","event","collectionName","ethPriceInUSD","assetUsdPrice","price","from","mul","Math","trunc","div","address","collectionAddress","imageUrl","tokenMetadata","marketplace","name","tokenId","susFlag","suspiciousFlag","smallImageUrl","collectionSymbol","symbol","priceInfo","USDPrice","ETHPrice","basePrice","baseAsset","tokenType","standard"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/buildActivityAsset.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\nimport { ActivityEvent, GenieAsset } from 'nft/types'\n\nexport const buildActivityAsset = (event: ActivityEvent, collectionName: string, ethPriceInUSD: number): GenieAsset => {\n  const assetUsdPrice = event.price\n    ? formatEther(\n        BigNumber.from(event.price)\n          .mul(BigNumber.from(Math.trunc(ethPriceInUSD * 100)))\n          .div(100)\n      )\n    : '0'\n\n  return {\n    address: event.collectionAddress,\n    collectionName,\n    imageUrl: event.tokenMetadata?.imageUrl,\n    marketplace: event.marketplace,\n    name: event.tokenMetadata?.name,\n    tokenId: event.tokenId,\n    susFlag: event.tokenMetadata?.suspiciousFlag,\n    smallImageUrl: event.tokenMetadata?.smallImageUrl,\n    collectionSymbol: event.symbol,\n    priceInfo: {\n      USDPrice: assetUsdPrice,\n      ETHPrice: event.price,\n      basePrice: event.price,\n      baseAsset: 'ETH',\n    },\n    tokenType: event.tokenMetadata?.standard,\n  } as GenieAsset\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,sBAAsB;AAGlD,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAoB,EAAEC,cAAsB,EAAEC,aAAqB,KAAiB;EAAA;EACrH,MAAMC,aAAa,GAAGH,KAAK,CAACI,KAAK,GAC7BN,WAAW,CACTD,SAAS,CAACQ,IAAI,CAACL,KAAK,CAACI,KAAK,CAAC,CACxBE,GAAG,CAACT,SAAS,CAACQ,IAAI,CAACE,IAAI,CAACC,KAAK,CAACN,aAAa,GAAG,GAAG,CAAC,CAAC,CAAC,CACpDO,GAAG,CAAC,GAAG,CAAC,CACZ,GACD,GAAG;EAEP,OAAO;IACLC,OAAO,EAAEV,KAAK,CAACW,iBAAiB;IAChCV,cAAc;IACdW,QAAQ,0BAAEZ,KAAK,CAACa,aAAa,yDAAnB,qBAAqBD,QAAQ;IACvCE,WAAW,EAAEd,KAAK,CAACc,WAAW;IAC9BC,IAAI,2BAAEf,KAAK,CAACa,aAAa,0DAAnB,sBAAqBE,IAAI;IAC/BC,OAAO,EAAEhB,KAAK,CAACgB,OAAO;IACtBC,OAAO,2BAAEjB,KAAK,CAACa,aAAa,0DAAnB,sBAAqBK,cAAc;IAC5CC,aAAa,2BAAEnB,KAAK,CAACa,aAAa,0DAAnB,sBAAqBM,aAAa;IACjDC,gBAAgB,EAAEpB,KAAK,CAACqB,MAAM;IAC9BC,SAAS,EAAE;MACTC,QAAQ,EAAEpB,aAAa;MACvBqB,QAAQ,EAAExB,KAAK,CAACI,KAAK;MACrBqB,SAAS,EAAEzB,KAAK,CAACI,KAAK;MACtBsB,SAAS,EAAE;IACb,CAAC;IACDC,SAAS,2BAAE3B,KAAK,CAACa,aAAa,0DAAnB,sBAAqBe;EAClC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}