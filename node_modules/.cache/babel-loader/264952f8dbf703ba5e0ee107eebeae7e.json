{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nvar types_1 = require(\"../types\");\nvar util_1 = require(\"../util\");\nvar TIMEOUT = 5 * 60 * 1000; // 5 minutes\nvar JSONRPC_TEMPLATE = {\n  jsonrpc: \"2.0\",\n  id: 0\n};\nvar FilterPolyfill = /*#__PURE__*/function () {\n  function FilterPolyfill(provider) {\n    _classCallCheck(this, FilterPolyfill);\n    this.logFilters = new Map(); // <id, filter>\n    this.blockFilters = new Set(); // <id>\n    this.pendingTransactionFilters = new Set(); // <id, true>\n    this.cursors = new Map(); // <id, cursor>\n    this.timeouts = new Map(); // <id, setTimeout id>\n    this.nextFilterId = (0, types_1.IntNumber)(1);\n    this.provider = provider;\n  }\n  _createClass(FilterPolyfill, [{\n    key: \"newFilter\",\n    value: function () {\n      var _newFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(param) {\n        var filter, id, cursor;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                filter = filterFromParam(param);\n                id = this.makeFilterId();\n                _context.next = 4;\n                return this.setInitialCursorPosition(id, filter.fromBlock);\n              case 4:\n                cursor = _context.sent;\n                console.log(\"Installing new log filter(\".concat(id, \"):\"), filter, \"initial cursor position:\", cursor);\n                this.logFilters.set(id, filter);\n                this.setFilterTimeout(id);\n                return _context.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function newFilter(_x) {\n        return _newFilter.apply(this, arguments);\n      }\n      return newFilter;\n    }()\n  }, {\n    key: \"newBlockFilter\",\n    value: function () {\n      var _newBlockFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var id, cursor;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context2.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n              case 3:\n                cursor = _context2.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.blockFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context2.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function newBlockFilter() {\n        return _newBlockFilter.apply(this, arguments);\n      }\n      return newBlockFilter;\n    }()\n  }, {\n    key: \"newPendingTransactionFilter\",\n    value: function () {\n      var _newPendingTransactionFilter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var id, cursor;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = this.makeFilterId();\n                _context3.next = 3;\n                return this.setInitialCursorPosition(id, \"latest\");\n              case 3:\n                cursor = _context3.sent;\n                console.log(\"Installing new block filter (\".concat(id, \") with initial cursor position:\"), cursor);\n                this.pendingTransactionFilters.add(id);\n                this.setFilterTimeout(id);\n                return _context3.abrupt(\"return\", (0, util_1.hexStringFromIntNumber)(id));\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function newPendingTransactionFilter() {\n        return _newPendingTransactionFilter.apply(this, arguments);\n      }\n      return newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"uninstallFilter\",\n    value: function uninstallFilter(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n      console.log(\"Uninstalling filter (\".concat(id, \")\"));\n      this.deleteFilter(id);\n      return true;\n    }\n  }, {\n    key: \"getFilterChanges\",\n    value: function getFilterChanges(filterId) {\n      var id = (0, util_1.intNumberFromHexString)(filterId);\n      if (this.timeouts.has(id)) {\n        // extend timeout\n        this.setFilterTimeout(id);\n      }\n      if (this.logFilters.has(id)) {\n        return this.getLogFilterChanges(id);\n      } else if (this.blockFilters.has(id)) {\n        return this.getBlockFilterChanges(id);\n      } else if (this.pendingTransactionFilters.has(id)) {\n        return this.getPendingTransactionFilterChanges(id);\n      }\n      return Promise.resolve(filterNotFoundError());\n    }\n  }, {\n    key: \"getFilterLogs\",\n    value: function () {\n      var _getFilterLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(filterId) {\n        var id, filter;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = (0, util_1.intNumberFromHexString)(filterId);\n                filter = this.logFilters.get(id);\n                if (filter) {\n                  _context4.next = 4;\n                  break;\n                }\n                return _context4.abrupt(\"return\", filterNotFoundError());\n              case 4:\n                return _context4.abrupt(\"return\", this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(filter)]\n                })));\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function getFilterLogs(_x2) {\n        return _getFilterLogs.apply(this, arguments);\n      }\n      return getFilterLogs;\n    }()\n  }, {\n    key: \"makeFilterId\",\n    value: function makeFilterId() {\n      return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n  }, {\n    key: \"sendAsyncPromise\",\n    value: function sendAsyncPromise(request) {\n      var _this = this;\n      return new Promise(function (resolve, reject) {\n        _this.provider.sendAsync(request, function (err, response) {\n          if (err) {\n            return reject(err);\n          }\n          if (Array.isArray(response) || response == null) {\n            return reject(new Error(\"unexpected response received: \".concat(JSON.stringify(response))));\n          }\n          resolve(response);\n        });\n      });\n    }\n  }, {\n    key: \"deleteFilter\",\n    value: function deleteFilter(id) {\n      console.log(\"Deleting filter (\".concat(id, \")\"));\n      this.logFilters.delete(id);\n      this.blockFilters.delete(id);\n      this.pendingTransactionFilters.delete(id);\n      this.cursors.delete(id);\n      this.timeouts.delete(id);\n    }\n  }, {\n    key: \"getLogFilterChanges\",\n    value: function () {\n      var _getLogFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(id) {\n        var filter, cursorPosition, currentBlockHeight, toBlock, response, blocks, highestBlock, newCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                filter = this.logFilters.get(id);\n                cursorPosition = this.cursors.get(id);\n                if (!(!cursorPosition || !filter)) {\n                  _context5.next = 4;\n                  break;\n                }\n                return _context5.abrupt(\"return\", filterNotFoundError());\n              case 4:\n                _context5.next = 6;\n                return this.getCurrentBlockHeight();\n              case 6:\n                currentBlockHeight = _context5.sent;\n                toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context5.next = 10;\n                  break;\n                }\n                return _context5.abrupt(\"return\", emptyResult());\n              case 10:\n                if (!(cursorPosition > filter.toBlock)) {\n                  _context5.next = 12;\n                  break;\n                }\n                return _context5.abrupt(\"return\", emptyResult());\n              case 12:\n                console.log(\"Fetching logs from \".concat(cursorPosition, \" to \").concat(toBlock, \" for filter \").concat(id));\n                _context5.next = 15;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getLogs\",\n                  params: [paramFromFilter(Object.assign(Object.assign({}, filter), {\n                    fromBlock: cursorPosition,\n                    toBlock: toBlock\n                  }))]\n                }));\n              case 15:\n                response = _context5.sent;\n                if (Array.isArray(response.result)) {\n                  blocks = response.result.map(function (log) {\n                    return (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\");\n                  });\n                  highestBlock = Math.max.apply(Math, _toConsumableArray(blocks));\n                  if (highestBlock && highestBlock > cursorPosition) {\n                    newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                    console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                    this.cursors.set(id, newCursorPosition);\n                  }\n                }\n                return _context5.abrupt(\"return\", response);\n              case 18:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function getLogFilterChanges(_x3) {\n        return _getLogFilterChanges.apply(this, arguments);\n      }\n      return getLogFilterChanges;\n    }()\n  }, {\n    key: \"getBlockFilterChanges\",\n    value: function () {\n      var _getBlockFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(id) {\n        var _this2 = this;\n        var cursorPosition, currentBlockHeight, blocks, newCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                cursorPosition = this.cursors.get(id);\n                if (cursorPosition) {\n                  _context6.next = 3;\n                  break;\n                }\n                return _context6.abrupt(\"return\", filterNotFoundError());\n              case 3:\n                _context6.next = 5;\n                return this.getCurrentBlockHeight();\n              case 5:\n                currentBlockHeight = _context6.sent;\n                if (!(cursorPosition > currentBlockHeight)) {\n                  _context6.next = 8;\n                  break;\n                }\n                return _context6.abrupt(\"return\", emptyResult());\n              case 8:\n                console.log(\"Fetching blocks from \".concat(cursorPosition, \" to \").concat(currentBlockHeight, \" for filter (\").concat(id, \")\"));\n                _context6.next = 11;\n                return Promise.all(\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(function (i) {\n                  return _this2.getBlockHashByNumber((0, types_1.IntNumber)(i));\n                }));\n              case 11:\n                blocks = _context6.sent.filter(function (hash) {\n                  return !!hash;\n                });\n                // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n                newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n                console.log(\"Moving cursor position for filter (\".concat(id, \") from \").concat(cursorPosition, \" to \").concat(newCursorPosition));\n                this.cursors.set(id, newCursorPosition);\n                return _context6.abrupt(\"return\", Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  result: blocks\n                }));\n              case 16:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function getBlockFilterChanges(_x4) {\n        return _getBlockFilterChanges.apply(this, arguments);\n      }\n      return getBlockFilterChanges;\n    }()\n  }, {\n    key: \"getPendingTransactionFilterChanges\",\n    value: function () {\n      var _getPendingTransactionFilterChanges = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(_id) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", Promise.resolve(emptyResult()));\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n      function getPendingTransactionFilterChanges(_x5) {\n        return _getPendingTransactionFilterChanges.apply(this, arguments);\n      }\n      return getPendingTransactionFilterChanges;\n    }()\n  }, {\n    key: \"setInitialCursorPosition\",\n    value: function () {\n      var _setInitialCursorPosition = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(id, startBlock) {\n        var currentBlockHeight, initialCursorPosition;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.getCurrentBlockHeight();\n              case 2:\n                currentBlockHeight = _context8.sent;\n                initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight ? startBlock : currentBlockHeight;\n                this.cursors.set(id, initialCursorPosition);\n                return _context8.abrupt(\"return\", initialCursorPosition);\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function setInitialCursorPosition(_x6, _x7) {\n        return _setInitialCursorPosition.apply(this, arguments);\n      }\n      return setInitialCursorPosition;\n    }()\n  }, {\n    key: \"setFilterTimeout\",\n    value: function setFilterTimeout(id) {\n      var _this3 = this;\n      var existing = this.timeouts.get(id);\n      if (existing) {\n        window.clearTimeout(existing);\n      }\n      var timeout = window.setTimeout(function () {\n        console.log(\"Filter (\".concat(id, \") timed out\"));\n        _this3.deleteFilter(id);\n      }, TIMEOUT);\n      this.timeouts.set(id, timeout);\n    }\n  }, {\n    key: \"getCurrentBlockHeight\",\n    value: function () {\n      var _getCurrentBlockHeight = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var _yield$this$sendAsync, result;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_blockNumber\",\n                  params: []\n                }));\n              case 2:\n                _yield$this$sendAsync = _context9.sent;\n                result = _yield$this$sendAsync.result;\n                return _context9.abrupt(\"return\", (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result)));\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function getCurrentBlockHeight() {\n        return _getCurrentBlockHeight.apply(this, arguments);\n      }\n      return getCurrentBlockHeight;\n    }()\n  }, {\n    key: \"getBlockHashByNumber\",\n    value: function () {\n      var _getBlockHashByNumber = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(blockNumber) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n                  method: \"eth_getBlockByNumber\",\n                  params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false]\n                }));\n              case 2:\n                response = _context10.sent;\n                if (!(response.result && typeof response.result.hash === \"string\")) {\n                  _context10.next = 5;\n                  break;\n                }\n                return _context10.abrupt(\"return\", (0, util_1.ensureHexString)(response.result.hash));\n              case 5:\n                return _context10.abrupt(\"return\", null);\n              case 6:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function getBlockHashByNumber(_x8) {\n        return _getBlockHashByNumber.apply(this, arguments);\n      }\n      return getBlockHashByNumber;\n    }()\n  }]);\n  return FilterPolyfill;\n}();\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n  return {\n    fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n    toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n    addresses: param.address === undefined ? null : Array.isArray(param.address) ? param.address : [param.address],\n    topics: param.topics || []\n  };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n  var param = {\n    fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n    toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n    topics: filter.topics\n  };\n  if (filter.addresses !== null) {\n    param.address = filter.addresses;\n  }\n  return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n  if (value === undefined || value === \"latest\" || value === \"pending\") {\n    return \"latest\";\n  } else if (value === \"earliest\") {\n    return (0, types_1.IntNumber)(0);\n  } else if ((0, util_1.isHexString)(value)) {\n    return (0, util_1.intNumberFromHexString)(value);\n  }\n  throw new Error(\"Invalid block option: \".concat(String(value)));\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n  if (value === \"latest\") {\n    return value;\n  }\n  return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    error: {\n      code: -32000,\n      message: \"filter not found\"\n    }\n  });\n}\nfunction emptyResult() {\n  return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), {\n    result: []\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","filterFromParam","FilterPolyfill","types_1","require","util_1","TIMEOUT","JSONRPC_TEMPLATE","jsonrpc","id","provider","logFilters","Map","blockFilters","Set","pendingTransactionFilters","cursors","timeouts","nextFilterId","IntNumber","param","filter","makeFilterId","setInitialCursorPosition","fromBlock","cursor","console","log","set","setFilterTimeout","hexStringFromIntNumber","add","filterId","intNumberFromHexString","deleteFilter","has","getLogFilterChanges","getBlockFilterChanges","getPendingTransactionFilterChanges","Promise","resolve","filterNotFoundError","get","sendAsyncPromise","assign","method","params","paramFromFilter","request","reject","sendAsync","err","response","Array","isArray","Error","JSON","stringify","delete","cursorPosition","getCurrentBlockHeight","currentBlockHeight","toBlock","emptyResult","result","blocks","map","blockNumber","highestBlock","Math","max","newCursorPosition","all","range","i","getBlockHashByNumber","hash","length","_id","startBlock","initialCursorPosition","existing","window","clearTimeout","timeout","setTimeout","ensureHexString","intBlockHeightFromHexBlockHeight","addresses","address","undefined","topics","hexBlockHeightFromIntBlockHeight","isHexString","String","error","code","message"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@coinbase/wallet-sdk/dist/provider/FilterPolyfill.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.filterFromParam = exports.FilterPolyfill = void 0;\nconst types_1 = require(\"../types\");\nconst util_1 = require(\"../util\");\nconst TIMEOUT = 5 * 60 * 1000; // 5 minutes\nconst JSONRPC_TEMPLATE = {\n    jsonrpc: \"2.0\",\n    id: 0,\n};\nclass FilterPolyfill {\n    constructor(provider) {\n        this.logFilters = new Map(); // <id, filter>\n        this.blockFilters = new Set(); // <id>\n        this.pendingTransactionFilters = new Set(); // <id, true>\n        this.cursors = new Map(); // <id, cursor>\n        this.timeouts = new Map(); // <id, setTimeout id>\n        this.nextFilterId = (0, types_1.IntNumber)(1);\n        this.provider = provider;\n    }\n    async newFilter(param) {\n        const filter = filterFromParam(param);\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, filter.fromBlock);\n        console.log(`Installing new log filter(${id}):`, filter, \"initial cursor position:\", cursor);\n        this.logFilters.set(id, filter);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newBlockFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.blockFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    async newPendingTransactionFilter() {\n        const id = this.makeFilterId();\n        const cursor = await this.setInitialCursorPosition(id, \"latest\");\n        console.log(`Installing new block filter (${id}) with initial cursor position:`, cursor);\n        this.pendingTransactionFilters.add(id);\n        this.setFilterTimeout(id);\n        return (0, util_1.hexStringFromIntNumber)(id);\n    }\n    uninstallFilter(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        console.log(`Uninstalling filter (${id})`);\n        this.deleteFilter(id);\n        return true;\n    }\n    getFilterChanges(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        if (this.timeouts.has(id)) {\n            // extend timeout\n            this.setFilterTimeout(id);\n        }\n        if (this.logFilters.has(id)) {\n            return this.getLogFilterChanges(id);\n        }\n        else if (this.blockFilters.has(id)) {\n            return this.getBlockFilterChanges(id);\n        }\n        else if (this.pendingTransactionFilters.has(id)) {\n            return this.getPendingTransactionFilterChanges(id);\n        }\n        return Promise.resolve(filterNotFoundError());\n    }\n    async getFilterLogs(filterId) {\n        const id = (0, util_1.intNumberFromHexString)(filterId);\n        const filter = this.logFilters.get(id);\n        if (!filter) {\n            return filterNotFoundError();\n        }\n        return this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [paramFromFilter(filter)] }));\n    }\n    makeFilterId() {\n        return (0, types_1.IntNumber)(++this.nextFilterId);\n    }\n    sendAsyncPromise(request) {\n        return new Promise((resolve, reject) => {\n            this.provider.sendAsync(request, (err, response) => {\n                if (err) {\n                    return reject(err);\n                }\n                if (Array.isArray(response) || response == null) {\n                    return reject(new Error(`unexpected response received: ${JSON.stringify(response)}`));\n                }\n                resolve(response);\n            });\n        });\n    }\n    deleteFilter(id) {\n        console.log(`Deleting filter (${id})`);\n        this.logFilters.delete(id);\n        this.blockFilters.delete(id);\n        this.pendingTransactionFilters.delete(id);\n        this.cursors.delete(id);\n        this.timeouts.delete(id);\n    }\n    async getLogFilterChanges(id) {\n        const filter = this.logFilters.get(id);\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition || !filter) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const toBlock = filter.toBlock === \"latest\" ? currentBlockHeight : filter.toBlock;\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        if (cursorPosition > filter.toBlock) {\n            return emptyResult();\n        }\n        console.log(`Fetching logs from ${cursorPosition} to ${toBlock} for filter ${id}`);\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getLogs\", params: [\n                paramFromFilter(Object.assign(Object.assign({}, filter), { fromBlock: cursorPosition, toBlock })),\n            ] }));\n        if (Array.isArray(response.result)) {\n            const blocks = response.result.map(log => (0, util_1.intNumberFromHexString)(log.blockNumber || \"0x0\"));\n            const highestBlock = Math.max(...blocks);\n            if (highestBlock && highestBlock > cursorPosition) {\n                const newCursorPosition = (0, types_1.IntNumber)(highestBlock + 1);\n                console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n                this.cursors.set(id, newCursorPosition);\n            }\n        }\n        return response;\n    }\n    async getBlockFilterChanges(id) {\n        const cursorPosition = this.cursors.get(id);\n        if (!cursorPosition) {\n            return filterNotFoundError();\n        }\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        if (cursorPosition > currentBlockHeight) {\n            return emptyResult();\n        }\n        console.log(`Fetching blocks from ${cursorPosition} to ${currentBlockHeight} for filter (${id})`);\n        const blocks = (await Promise.all(\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        (0, util_1.range)(cursorPosition, currentBlockHeight + 1).map(i => this.getBlockHashByNumber((0, types_1.IntNumber)(i))))).filter(hash => !!hash);\n        // eslint-disable-next-line @typescript-eslint/restrict-plus-operands\n        const newCursorPosition = (0, types_1.IntNumber)(cursorPosition + blocks.length);\n        console.log(`Moving cursor position for filter (${id}) from ${cursorPosition} to ${newCursorPosition}`);\n        this.cursors.set(id, newCursorPosition);\n        return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: blocks });\n    }\n    async getPendingTransactionFilterChanges(_id) {\n        // pending transaction filters are not supported\n        return Promise.resolve(emptyResult());\n    }\n    async setInitialCursorPosition(id, startBlock) {\n        const currentBlockHeight = await this.getCurrentBlockHeight();\n        const initialCursorPosition = typeof startBlock === \"number\" && startBlock > currentBlockHeight\n            ? startBlock\n            : currentBlockHeight;\n        this.cursors.set(id, initialCursorPosition);\n        return initialCursorPosition;\n    }\n    setFilterTimeout(id) {\n        const existing = this.timeouts.get(id);\n        if (existing) {\n            window.clearTimeout(existing);\n        }\n        const timeout = window.setTimeout(() => {\n            console.log(`Filter (${id}) timed out`);\n            this.deleteFilter(id);\n        }, TIMEOUT);\n        this.timeouts.set(id, timeout);\n    }\n    async getCurrentBlockHeight() {\n        const { result } = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_blockNumber\", params: [] }));\n        return (0, util_1.intNumberFromHexString)((0, util_1.ensureHexString)(result));\n    }\n    async getBlockHashByNumber(blockNumber) {\n        const response = await this.sendAsyncPromise(Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { method: \"eth_getBlockByNumber\", params: [(0, util_1.hexStringFromIntNumber)(blockNumber), false] }));\n        if (response.result && typeof response.result.hash === \"string\") {\n            return (0, util_1.ensureHexString)(response.result.hash);\n        }\n        return null;\n    }\n}\nexports.FilterPolyfill = FilterPolyfill;\nfunction filterFromParam(param) {\n    return {\n        fromBlock: intBlockHeightFromHexBlockHeight(param.fromBlock),\n        toBlock: intBlockHeightFromHexBlockHeight(param.toBlock),\n        addresses: param.address === undefined\n            ? null\n            : Array.isArray(param.address)\n                ? param.address\n                : [param.address],\n        topics: param.topics || [],\n    };\n}\nexports.filterFromParam = filterFromParam;\nfunction paramFromFilter(filter) {\n    const param = {\n        fromBlock: hexBlockHeightFromIntBlockHeight(filter.fromBlock),\n        toBlock: hexBlockHeightFromIntBlockHeight(filter.toBlock),\n        topics: filter.topics,\n    };\n    if (filter.addresses !== null) {\n        param.address = filter.addresses;\n    }\n    return param;\n}\nfunction intBlockHeightFromHexBlockHeight(value) {\n    if (value === undefined || value === \"latest\" || value === \"pending\") {\n        return \"latest\";\n    }\n    else if (value === \"earliest\") {\n        return (0, types_1.IntNumber)(0);\n    }\n    else if ((0, util_1.isHexString)(value)) {\n        return (0, util_1.intNumberFromHexString)(value);\n    }\n    throw new Error(`Invalid block option: ${String(value)}`);\n}\nfunction hexBlockHeightFromIntBlockHeight(value) {\n    if (value === \"latest\") {\n        return value;\n    }\n    return (0, util_1.hexStringFromIntNumber)(value);\n}\nfunction filterNotFoundError() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { error: { code: -32000, message: \"filter not found\" } });\n}\nfunction emptyResult() {\n    return Object.assign(Object.assign({}, JSONRPC_TEMPLATE), { result: [] });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}