{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{networkConnection,walletConnectConnection}from'connection';import{getChainInfo}from'constants/chainInfo';import{isSupportedChain,SupportedChainId}from'constants/chains';import{FALLBACK_URLS,RPC_URLS}from'constants/networks';function getRpcUrl(chainId){switch(chainId){case SupportedChainId.MAINNET:case SupportedChainId.RINKEBY:case SupportedChainId.ROPSTEN:case SupportedChainId.KOVAN:case SupportedChainId.GOERLI:return RPC_URLS[chainId][0];// Attempting to add a chain using an infura URL will not work, as the URL will be unreachable from the MetaMask background page.\n// MetaMask allows switching to any publicly reachable URL, but for novel chains, it will display a warning if it is not on the \"Safe\" list.\n// See the definition of FALLBACK_URLS for more details.\ndefault:return FALLBACK_URLS[chainId][0];}}export var switchChain=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(connector,chainId){var info,addChainParameter;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isSupportedChain(chainId)){_context.next=4;break;}throw new Error(\"Chain \".concat(chainId,\" not supported for connector (\").concat(typeof connector,\")\"));case 4:if(!(connector===walletConnectConnection.connector||connector===networkConnection.connector)){_context.next=9;break;}_context.next=7;return connector.activate(chainId);case 7:_context.next=13;break;case 9:info=getChainInfo(chainId);addChainParameter={chainId:chainId,chainName:info.label,rpcUrls:[getRpcUrl(chainId)],nativeCurrency:info.nativeCurrency,blockExplorerUrls:[info.explorer]};_context.next=13;return connector.activate(addChainParameter);case 13:case\"end\":return _context.stop();}}},_callee);}));return function switchChain(_x,_x2){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["networkConnection","walletConnectConnection","getChainInfo","isSupportedChain","SupportedChainId","FALLBACK_URLS","RPC_URLS","getRpcUrl","chainId","MAINNET","RINKEBY","ROPSTEN","KOVAN","GOERLI","switchChain","connector","Error","activate","info","addChainParameter","chainName","label","rpcUrls","nativeCurrency","blockExplorerUrls","explorer"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/switchChain.ts"],"sourcesContent":["import { Connector } from '@web3-react/types'\nimport { networkConnection, walletConnectConnection } from 'connection'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { isSupportedChain, SupportedChainId } from 'constants/chains'\nimport { FALLBACK_URLS, RPC_URLS } from 'constants/networks'\n\nfunction getRpcUrl(chainId: SupportedChainId): string {\n  switch (chainId) {\n    case SupportedChainId.MAINNET:\n    case SupportedChainId.RINKEBY:\n    case SupportedChainId.ROPSTEN:\n    case SupportedChainId.KOVAN:\n    case SupportedChainId.GOERLI:\n      return RPC_URLS[chainId][0]\n    // Attempting to add a chain using an infura URL will not work, as the URL will be unreachable from the MetaMask background page.\n    // MetaMask allows switching to any publicly reachable URL, but for novel chains, it will display a warning if it is not on the \"Safe\" list.\n    // See the definition of FALLBACK_URLS for more details.\n    default:\n      return FALLBACK_URLS[chainId][0]\n  }\n}\n\nexport const switchChain = async (connector: Connector, chainId: SupportedChainId) => {\n  if (!isSupportedChain(chainId)) {\n    throw new Error(`Chain ${chainId} not supported for connector (${typeof connector})`)\n  } else if (connector === walletConnectConnection.connector || connector === networkConnection.connector) {\n    await connector.activate(chainId)\n  } else {\n    const info = getChainInfo(chainId)\n    const addChainParameter = {\n      chainId,\n      chainName: info.label,\n      rpcUrls: [getRpcUrl(chainId)],\n      nativeCurrency: info.nativeCurrency,\n      blockExplorerUrls: [info.explorer],\n    }\n    await connector.activate(addChainParameter)\n  }\n}\n"],"mappings":"qVACA,OAASA,iBAAiB,CAAEC,uBAAuB,KAAQ,YAAY,CACvE,OAASC,YAAY,KAAQ,qBAAqB,CAClD,OAASC,gBAAgB,CAAEC,gBAAgB,KAAQ,kBAAkB,CACrE,OAASC,aAAa,CAAEC,QAAQ,KAAQ,oBAAoB,CAE5D,QAASC,UAAS,CAACC,OAAyB,CAAU,CACpD,OAAQA,OAAO,EACb,IAAKJ,iBAAgB,CAACK,OAAO,CAC7B,IAAKL,iBAAgB,CAACM,OAAO,CAC7B,IAAKN,iBAAgB,CAACO,OAAO,CAC7B,IAAKP,iBAAgB,CAACQ,KAAK,CAC3B,IAAKR,iBAAgB,CAACS,MAAM,CAC1B,MAAOP,SAAQ,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAC7B;AACA;AACA;AACA,QACE,MAAOH,cAAa,CAACG,OAAO,CAAC,CAAC,CAAC,CAAC,EAEtC,CAEA,MAAO,IAAMM,YAAW,0FAAG,iBAAOC,SAAoB,CAAEP,OAAyB,gJAC1EL,gBAAgB,CAACK,OAAO,CAAC,8BACtB,IAAIQ,MAAK,iBAAUR,OAAO,0CAAiC,MAAOO,UAAS,MAAI,aAC5EA,SAAS,GAAKd,uBAAuB,CAACc,SAAS,EAAIA,SAAS,GAAKf,iBAAiB,CAACe,SAAS,gDAC/FA,UAAS,CAACE,QAAQ,CAACT,OAAO,CAAC,sCAE3BU,IAAI,CAAGhB,YAAY,CAACM,OAAO,CAAC,CAC5BW,iBAAiB,CAAG,CACxBX,OAAO,CAAPA,OAAO,CACPY,SAAS,CAAEF,IAAI,CAACG,KAAK,CACrBC,OAAO,CAAE,CAACf,SAAS,CAACC,OAAO,CAAC,CAAC,CAC7Be,cAAc,CAAEL,IAAI,CAACK,cAAc,CACnCC,iBAAiB,CAAE,CAACN,IAAI,CAACO,QAAQ,CACnC,CAAC,wBACKV,UAAS,CAACE,QAAQ,CAACE,iBAAiB,CAAC,wDAE9C,kBAhBYL,YAAW,gDAgBvB"},"metadata":{},"sourceType":"module"}