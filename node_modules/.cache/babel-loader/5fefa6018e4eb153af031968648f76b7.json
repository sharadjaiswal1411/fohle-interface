{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function () {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")),\n  CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", {\n  enumerable: true,\n  get: function () {\n    return types_2.ClientError;\n  }\n});\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n  var oHeaders = {};\n  if (headers) {\n    if (typeof Headers !== 'undefined' && headers instanceof Headers || headers instanceof CrossFetch.Headers) {\n      oHeaders = HeadersInstanceToPlainObject(headers);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function (_a) {\n        var name = _a[0],\n          value = _a[1];\n        oHeaders[name] = value;\n      });\n    } else {\n      oHeaders = headers;\n    }\n  }\n  return oHeaders;\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */function () {\n  function GraphQLClient(url, options) {\n    this.url = url;\n    this.options = options || {};\n  }\n  GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, localFetch, others, body, response, result, headers_1, status_1, errorResult;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n            body = createRequestBody_1.default(query, variables);\n            return [4 /*yield*/, localFetch(this.url, __assign({\n              method: 'POST',\n              headers: __assign(__assign(__assign({}, typeof body === 'string' ? {\n                'Content-Type': 'application/json'\n              } : {}), resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              body: body\n            }, others))];\n          case 1:\n            response = _c.sent();\n            return [4 /*yield*/, getResult(response)];\n          case 2:\n            result = _c.sent();\n            if (response.ok && !result.errors && result.data) {\n              headers_1 = response.headers, status_1 = response.status;\n              return [2 /*return*/, __assign(__assign({}, result), {\n                headers: headers_1,\n                status: status_1\n              })];\n            } else {\n              errorResult = typeof result === 'string' ? {\n                error: result\n              } : result;\n              throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n                status: response.status,\n                headers: response.headers\n              }), {\n                query: query,\n                variables: variables\n              });\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\n   * Send a GraphQL document to the server.\n   */\n  GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, headers, _b, localFetch, others, resolvedDoc, body, response, result, errorResult;\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n            resolvedDoc = resolveRequestDocument(document);\n            body = createRequestBody_1.default(resolvedDoc, variables);\n            return [4 /*yield*/, localFetch(this.url, __assign({\n              method: 'POST',\n              headers: __assign(__assign(__assign({}, typeof body === 'string' ? {\n                'Content-Type': 'application/json'\n              } : {}), resolveHeaders(headers)), resolveHeaders(requestHeaders)),\n              body: body\n            }, others))];\n          case 1:\n            response = _c.sent();\n            return [4 /*yield*/, getResult(response)];\n          case 2:\n            result = _c.sent();\n            if (response.ok && !result.errors && result.data) {\n              return [2 /*return*/, result.data];\n            } else {\n              errorResult = typeof result === 'string' ? {\n                error: result\n              } : result;\n              throw new types_1.ClientError(__assign(__assign({}, errorResult), {\n                status: response.status\n              }), {\n                query: resolvedDoc,\n                variables: variables\n              });\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  GraphQLClient.prototype.setHeaders = function (headers) {\n    this.options.headers = headers;\n    return this;\n  };\n  /**\n   * Attach a header to the client. All subsequent requests will have this header.\n   */\n  GraphQLClient.prototype.setHeader = function (key, value) {\n    var _a;\n    var headers = this.options.headers;\n    if (headers) {\n      // todo what if headers is in nested array form... ?\n      //@ts-ignore\n      headers[key] = value;\n    } else {\n      this.options.headers = (_a = {}, _a[key] = value, _a);\n    }\n    return this;\n  };\n  return GraphQLClient;\n}();\nexports.GraphQLClient = GraphQLClient;\n/**\n * todo\n */\nfunction rawRequest(url, query, variables) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.rawRequest(query, variables)];\n    });\n  });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables) {\n  return __awaiter(this, void 0, void 0, function () {\n    var client;\n    return __generator(this, function (_a) {\n      client = new GraphQLClient(url);\n      return [2 /*return*/, client.request(document, variables)];\n    });\n  });\n}\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n  var contentType = response.headers.get('Content-Type');\n  if (contentType && contentType.startsWith('application/json')) {\n    return response.json();\n  } else {\n    return response.text();\n  }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n  if (typeof document === 'string') return document;\n  return printer_1.print(document);\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n  var variables = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    variables[_i - 1] = arguments[_i];\n  }\n  return chunks.reduce(function (accumulator, chunk, index) {\n    return \"\" + accumulator + chunk + (index in variables ? variables[index] : '');\n  }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n  var o = {};\n  headers.forEach(function (v, k) {\n    o[k] = v;\n  });\n  return o;\n}","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gql = exports.request = exports.rawRequest = exports.GraphQLClient = exports.ClientError = void 0;\nvar cross_fetch_1 = __importStar(require(\"cross-fetch\")), CrossFetch = cross_fetch_1;\nvar printer_1 = require(\"graphql/language/printer\");\nvar createRequestBody_1 = __importDefault(require(\"./createRequestBody\"));\nvar types_1 = require(\"./types\");\nvar types_2 = require(\"./types\");\nObject.defineProperty(exports, \"ClientError\", { enumerable: true, get: function () { return types_2.ClientError; } });\n/**\n * Convert the given headers configuration into a plain object.\n */\nvar resolveHeaders = function (headers) {\n    var oHeaders = {};\n    if (headers) {\n        if ((typeof Headers !== 'undefined' && headers instanceof Headers) ||\n            headers instanceof CrossFetch.Headers) {\n            oHeaders = HeadersInstanceToPlainObject(headers);\n        }\n        else if (Array.isArray(headers)) {\n            headers.forEach(function (_a) {\n                var name = _a[0], value = _a[1];\n                oHeaders[name] = value;\n            });\n        }\n        else {\n            oHeaders = headers;\n        }\n    }\n    return oHeaders;\n};\n/**\n * todo\n */\nvar GraphQLClient = /** @class */ (function () {\n    function GraphQLClient(url, options) {\n        this.url = url;\n        this.options = options || {};\n    }\n    GraphQLClient.prototype.rawRequest = function (query, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, body, response, result, headers_1, status_1, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        body = createRequestBody_1.default(query, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            headers_1 = response.headers, status_1 = response.status;\n                            return [2 /*return*/, __assign(__assign({}, result), { headers: headers_1, status: status_1 })];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status, headers: response.headers }), { query: query, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Send a GraphQL document to the server.\n     */\n    GraphQLClient.prototype.request = function (document, variables, requestHeaders) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, headers, _b, localFetch, others, resolvedDoc, body, response, result, errorResult;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.options, headers = _a.headers, _b = _a.fetch, localFetch = _b === void 0 ? cross_fetch_1.default : _b, others = __rest(_a, [\"headers\", \"fetch\"]);\n                        resolvedDoc = resolveRequestDocument(document);\n                        body = createRequestBody_1.default(resolvedDoc, variables);\n                        return [4 /*yield*/, localFetch(this.url, __assign({ method: 'POST', headers: __assign(__assign(__assign({}, (typeof body === 'string' ? { 'Content-Type': 'application/json' } : {})), resolveHeaders(headers)), resolveHeaders(requestHeaders)), body: body }, others))];\n                    case 1:\n                        response = _c.sent();\n                        return [4 /*yield*/, getResult(response)];\n                    case 2:\n                        result = _c.sent();\n                        if (response.ok && !result.errors && result.data) {\n                            return [2 /*return*/, result.data];\n                        }\n                        else {\n                            errorResult = typeof result === 'string' ? { error: result } : result;\n                            throw new types_1.ClientError(__assign(__assign({}, errorResult), { status: response.status }), { query: resolvedDoc, variables: variables });\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    GraphQLClient.prototype.setHeaders = function (headers) {\n        this.options.headers = headers;\n        return this;\n    };\n    /**\n     * Attach a header to the client. All subsequent requests will have this header.\n     */\n    GraphQLClient.prototype.setHeader = function (key, value) {\n        var _a;\n        var headers = this.options.headers;\n        if (headers) {\n            // todo what if headers is in nested array form... ?\n            //@ts-ignore\n            headers[key] = value;\n        }\n        else {\n            this.options.headers = (_a = {}, _a[key] = value, _a);\n        }\n        return this;\n    };\n    return GraphQLClient;\n}());\nexports.GraphQLClient = GraphQLClient;\n/**\n * todo\n */\nfunction rawRequest(url, query, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.rawRequest(query, variables)];\n        });\n    });\n}\nexports.rawRequest = rawRequest;\n/**\n * Send a GraphQL Document to the GraphQL server for exectuion.\n *\n * @example\n *\n * ```ts\n * // You can pass a raw string\n *\n * await request('https://foo.bar/graphql', `\n *   {\n *     query {\n *       users\n *     }\n *   }\n * `)\n *\n * // You can also pass a GraphQL DocumentNode. Convenient if you\n * // are using graphql-tag package.\n *\n * import gql from 'graphql-tag'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * // If you don't actually care about using DocumentNode but just\n * // want the tooling support for gql template tag like IDE syntax\n * // coloring and prettier autoformat then note you can use the\n * // passthrough gql tag shipped with graphql-request to save a bit\n * // of performance and not have to install another dep into your project.\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n * ```\n */\nfunction request(url, document, variables) {\n    return __awaiter(this, void 0, void 0, function () {\n        var client;\n        return __generator(this, function (_a) {\n            client = new GraphQLClient(url);\n            return [2 /*return*/, client.request(document, variables)];\n        });\n    });\n}\nexports.request = request;\nexports.default = request;\n/**\n * todo\n */\nfunction getResult(response) {\n    var contentType = response.headers.get('Content-Type');\n    if (contentType && contentType.startsWith('application/json')) {\n        return response.json();\n    }\n    else {\n        return response.text();\n    }\n}\n/**\n * helpers\n */\nfunction resolveRequestDocument(document) {\n    if (typeof document === 'string')\n        return document;\n    return printer_1.print(document);\n}\n/**\n * Convenience passthrough template tag to get the benefits of tooling for the gql template tag. This does not actually parse the input into a GraphQL DocumentNode like graphql-tag package does. It just returns the string with any variables given interpolated. Can save you a bit of performance and having to install another package.\n *\n * @example\n *\n * import { gql } from 'graphql-request'\n *\n * await request('https://foo.bar/graphql', gql`...`)\n *\n * @remarks\n *\n * Several tools in the Node GraphQL ecosystem are hardcoded to specially treat any template tag named \"gql\". For example see this prettier issue: https://github.com/prettier/prettier/issues/4360. Using this template tag has no runtime effect beyond variable interpolation.\n */\nfunction gql(chunks) {\n    var variables = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        variables[_i - 1] = arguments[_i];\n    }\n    return chunks.reduce(function (accumulator, chunk, index) { return \"\" + accumulator + chunk + (index in variables ? variables[index] : ''); }, '');\n}\nexports.gql = gql;\n/**\n * Convert Headers instance into regular object\n */\nfunction HeadersInstanceToPlainObject(headers) {\n    var o = {};\n    headers.forEach(function (v, k) {\n        o[k] = v;\n    });\n    return o;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}