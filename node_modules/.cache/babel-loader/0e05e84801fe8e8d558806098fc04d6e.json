{"ast":null,"code":"import { SupportedChainId } from '../constants/chains';\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId) {\n  if (typeof chainId === 'number' && chainId in SupportedChainId) {\n    return chainId;\n  }\n  return undefined;\n}","map":{"version":3,"names":["SupportedChainId","supportedChainId","chainId","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/supportedChainId.ts"],"sourcesContent":["import { SupportedChainId } from '../constants/chains'\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId: number | undefined): SupportedChainId | undefined {\n  if (typeof chainId === 'number' && chainId in SupportedChainId) {\n    return chainId\n  }\n  return undefined\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,qBAAqB;;AAEtD;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgB,CAACC,OAA2B,EAAgC;EAC1F,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIA,OAAO,IAAIF,gBAAgB,EAAE;IAC9D,OAAOE,OAAO;EAChB;EACA,OAAOC,SAAS;AAClB"},"metadata":{},"sourceType":"module"}