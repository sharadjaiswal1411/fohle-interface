{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/GasEstimateBadge.tsx\";\nimport { Trans } from \"@lingui/react\";\nimport { sendEvent } from 'components/analytics';\nimport { AutoColumn } from 'components/Column';\nimport { LoadingOpacityContainer } from 'components/Loader/styled';\nimport { RowFixed } from 'components/Row';\nimport { MouseoverTooltipContent } from 'components/Tooltip';\nimport { ThemedText } from 'theme';\nimport { ReactComponent as GasIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/gas-icon.svg\";\nimport { ResponsiveTooltipContainer } from './styleds';\nimport SwapRoute from './SwapRoute';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GasWrapper = _styled(RowFixed).withConfig({\n  displayName: \"GasEstimateBadge__GasWrapper\",\n  componentId: \"sc-qnhalc-0\"\n})([\"border-radius:8px;padding:4px 6px;height:24px;color:\", \";background-color:\", \";font-size:14px;font-weight:500;user-select:none;\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textTertiary;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.deprecated_bg1;\n});\nconst StyledGasIcon = _styled(GasIcon).withConfig({\n  displayName: \"GasEstimateBadge__StyledGasIcon\",\n  componentId: \"sc-qnhalc-1\"\n})([\"margin-right:4px;height:14px;& > *{stroke:\", \";}\"], _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.textTertiary;\n});\nexport default function GasEstimateBadge(_ref4) {\n  var _trade$gasUseEstimate;\n  let {\n    trade,\n    loading,\n    showRoute,\n    disableHover\n  } = _ref4;\n  const formattedGasPriceString = (trade === null || trade === void 0 ? void 0 : trade.gasUseEstimateUSD) ? trade.gasUseEstimateUSD.toFixed(2) === '0.00' ? '<$0.01' : '$' + trade.gasUseEstimateUSD.toFixed(2) : undefined;\n  return /*#__PURE__*/_jsxDEV(MouseoverTooltipContent, {\n    wrap: false,\n    disableHover: disableHover,\n    content: loading ? null : /*#__PURE__*/_jsxDEV(ResponsiveTooltipContainer, {\n      origin: \"top right\",\n      style: {\n        padding: showRoute ? '0' : '12px',\n        border: 'none',\n        borderRadius: showRoute ? '16px' : '12px',\n        maxWidth: '400px'\n      },\n      children: showRoute ? trade ? /*#__PURE__*/_jsxDEV(SwapRoute, {\n        trade: trade,\n        syncing: loading,\n        fixedOpen: showRoute\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this) : null : /*#__PURE__*/_jsxDEV(AutoColumn, {\n        gap: \"4px\",\n        justify: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n          fontSize: \"12px\",\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Estimated network fee\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedBody, {\n          textAlign: \"center\",\n          fontWeight: 500,\n          style: {\n            userSelect: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"${0}\",\n            values: {\n              0: trade === null || trade === void 0 ? void 0 : (_trade$gasUseEstimate = trade.gasUseEstimateUSD) === null || _trade$gasUseEstimate === void 0 ? void 0 : _trade$gasUseEstimate.toFixed(2)\n            }\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n          fontSize: \"10px\",\n          textAlign: \"center\",\n          maxWidth: \"140px\",\n          color: \"text3\",\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Estimate may differ due to your wallet gas settings\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this),\n    placement: \"bottom\",\n    onOpen: () => sendEvent({\n      category: 'Gas',\n      action: 'Gas Details Tooltip Open'\n    }),\n    children: /*#__PURE__*/_jsxDEV(LoadingOpacityContainer, {\n      $loading: loading,\n      children: /*#__PURE__*/_jsxDEV(GasWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(StyledGasIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), formattedGasPriceString !== null && formattedGasPriceString !== void 0 ? formattedGasPriceString : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = GasEstimateBadge;\nvar _c;\n$RefreshReg$(_c, \"GasEstimateBadge\");","map":{"version":3,"names":["sendEvent","AutoColumn","LoadingOpacityContainer","RowFixed","MouseoverTooltipContent","ThemedText","ResponsiveTooltipContainer","SwapRoute","GasWrapper","styled","theme","textTertiary","deprecated_bg1","StyledGasIcon","GasIcon","GasEstimateBadge","trade","loading","showRoute","disableHover","formattedGasPriceString","gasUseEstimateUSD","toFixed","undefined","padding","border","borderRadius","maxWidth","userSelect","category","action"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/GasEstimateBadge.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport { sendEvent } from 'components/analytics'\nimport { AutoColumn } from 'components/Column'\nimport { LoadingOpacityContainer } from 'components/Loader/styled'\nimport { RowFixed } from 'components/Row'\nimport { MouseoverTooltipContent } from 'components/Tooltip'\nimport { InterfaceTrade } from 'state/routing/types'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\n\nimport { ReactComponent as GasIcon } from '../../assets/images/gas-icon.svg'\nimport { ResponsiveTooltipContainer } from './styleds'\nimport SwapRoute from './SwapRoute'\n\nconst GasWrapper = styled(RowFixed)`\n  border-radius: 8px;\n  padding: 4px 6px;\n  height: 24px;\n  color: ${({ theme }) => theme.textTertiary};\n  background-color: ${({ theme }) => theme.deprecated_bg1};\n  font-size: 14px;\n  font-weight: 500;\n  user-select: none;\n`\nconst StyledGasIcon = styled(GasIcon)`\n  margin-right: 4px;\n  height: 14px;\n  & > * {\n    stroke: ${({ theme }) => theme.textTertiary};\n  }\n`\n\nexport default function GasEstimateBadge({\n  trade,\n  loading,\n  showRoute,\n  disableHover,\n}: {\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined | null // dollar amount in active chain's stablecoin\n  loading: boolean\n  showRoute?: boolean // show route instead of gas estimation summary\n  disableHover?: boolean\n}) {\n  const formattedGasPriceString = trade?.gasUseEstimateUSD\n    ? trade.gasUseEstimateUSD.toFixed(2) === '0.00'\n      ? '<$0.01'\n      : '$' + trade.gasUseEstimateUSD.toFixed(2)\n    : undefined\n\n  return (\n    <MouseoverTooltipContent\n      wrap={false}\n      disableHover={disableHover}\n      content={\n        loading ? null : (\n          <ResponsiveTooltipContainer\n            origin=\"top right\"\n            style={{\n              padding: showRoute ? '0' : '12px',\n              border: 'none',\n              borderRadius: showRoute ? '16px' : '12px',\n              maxWidth: '400px',\n            }}\n          >\n            {showRoute ? (\n              trade ? (\n                <SwapRoute trade={trade} syncing={loading} fixedOpen={showRoute} />\n              ) : null\n            ) : (\n              <AutoColumn gap=\"4px\" justify=\"center\">\n                <ThemedText.DeprecatedMain fontSize=\"12px\" textAlign=\"center\">\n                  <Trans>Estimated network fee</Trans>\n                </ThemedText.DeprecatedMain>\n                <ThemedText.DeprecatedBody textAlign=\"center\" fontWeight={500} style={{ userSelect: 'none' }}>\n                  <Trans>${trade?.gasUseEstimateUSD?.toFixed(2)}</Trans>\n                </ThemedText.DeprecatedBody>\n                <ThemedText.DeprecatedMain fontSize=\"10px\" textAlign=\"center\" maxWidth=\"140px\" color=\"text3\">\n                  <Trans>Estimate may differ due to your wallet gas settings</Trans>\n                </ThemedText.DeprecatedMain>\n              </AutoColumn>\n            )}\n          </ResponsiveTooltipContainer>\n        )\n      }\n      placement=\"bottom\"\n      onOpen={() =>\n        sendEvent({\n          category: 'Gas',\n          action: 'Gas Details Tooltip Open',\n        })\n      }\n    >\n      <LoadingOpacityContainer $loading={loading}>\n        <GasWrapper>\n          <StyledGasIcon />\n          {formattedGasPriceString ?? null}\n        </GasWrapper>\n      </LoadingOpacityContainer>\n    </MouseoverTooltipContent>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}