{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAsyncMiddleware = void 0;\n/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\nfunction createAsyncMiddleware(asyncMiddleware) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res, next, end) {\n      var resolveNextPromise, nextPromise, returnHandlerCallback, nextWasCalled, asyncNext;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              // nextPromise is the key to the implementation\n              // it is resolved by the return handler passed to the\n              // \"next\" function\n              nextPromise = new Promise(function (resolve) {\n                resolveNextPromise = resolve;\n              });\n              returnHandlerCallback = null;\n              nextWasCalled = false; // This will be called by the consumer's async middleware.\n              asyncNext = /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          nextWasCalled = true;\n                          // We pass a return handler to next(). When it is called by the engine,\n                          // the consumer's async middleware will resume executing.\n                          // eslint-disable-next-line node/callback-return\n                          next(function (runReturnHandlersCallback) {\n                            // This callback comes from JsonRpcEngine._runReturnHandlers\n                            returnHandlerCallback = runReturnHandlersCallback;\n                            resolveNextPromise();\n                          });\n                          _context.next = 4;\n                          return nextPromise;\n                        case 4:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n                return function asyncNext() {\n                  return _ref2.apply(this, arguments);\n                };\n              }();\n              _context2.prev = 4;\n              _context2.next = 7;\n              return asyncMiddleware(req, res, asyncNext);\n            case 7:\n              if (!nextWasCalled) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 10;\n              return nextPromise;\n            case 10:\n              // we must wait until the return handler is called\n              returnHandlerCallback(null);\n              _context2.next = 14;\n              break;\n            case 13:\n              end(null);\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](4);\n              if (returnHandlerCallback) {\n                returnHandlerCallback(_context2.t0);\n              } else {\n                end(_context2.t0);\n              }\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[4, 16]]);\n    }));\n    return function (_x, _x2, _x3, _x4) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n}\nexports.createAsyncMiddleware = createAsyncMiddleware;","map":{"version":3,"sources":["../src/createAsyncMiddleware.ts"],"names":[],"mappings":";;;;;;;;AAgBA;;;;;;;;;;;;;;;;AAgBG;AACH,SAAgB,qBAAqB,CACnC,eAA6C,EAAA;EAE7C;IAAA,oEAAO,kBAAO,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAC/B;cACA;cACA;cAEM,WAAW,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAI;gBAC1C,kBAAkB,GAAG,OAAO;cAC9B,CAAC,CAAC;cAEE,qBAAqB,GAAY,IAAI;cACrC,aAAa,GAAG,KAAK,EAEzB;cACM,SAAS;gBAAA,qEAAG;kBAAA;oBAAA;sBAAA;wBAAA;0BAChB,aAAa,GAAG,IAAI;0BAEpB;0BACA;0BACA;0BACA,IAAI,CAAC,UAAC,yBAAyB,EAAI;4BACjC;4BACA,qBAAqB,GAAG,yBAAyB;4BACjD,kBAAkB,EAAE;0BACtB,CAAC,CAAC;0BAAC;0BAAA,OACG,WAAW;wBAAA;wBAAA;0BAAA;sBAAA;oBAAA;kBAAA;gBAAA,CAClB;gBAAA,gBAZK,SAAS;kBAAA;gBAAA;cAAA;cAAA;cAAA;cAAA,OAeP,eAAe,CAAC,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC;YAAA;cAAA,KAEtC,aAAa;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACT,WAAW;YAAA;cAAE;cAClB,qBAA+C,CAAC,IAAI,CAAC;cAAC;cAAA;YAAA;cAEvD,GAAG,CAAC,IAAI,CAAC;YAAC;cAAA;cAAA;YAAA;cAAA;cAAA;cAGZ,IAAI,qBAAqB,EAAE;gBACxB,qBAA+C,cAAO;eACxD,MAAM;gBACL,GAAG,cAAO;;YACX;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAEJ;IAAA;MAAA;IAAA;EAAA;AACH;AA/CA,OAAA,CAAA,qBAAA,GAAA,qBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createAsyncMiddleware = void 0;\n/**\n * JsonRpcEngine only accepts callback-based middleware directly.\n * createAsyncMiddleware exists to enable consumers to pass in async middleware\n * functions.\n *\n * Async middleware have no \"end\" function. Instead, they \"end\" if they return\n * without calling \"next\". Rather than passing in explicit return handlers,\n * async middleware can simply await \"next\", and perform operations on the\n * response object when execution resumes.\n *\n * To accomplish this, createAsyncMiddleware passes the async middleware a\n * wrapped \"next\" function. That function calls the internal JsonRpcEngine\n * \"next\" function with a return handler that resolves a promise when called.\n *\n * The return handler will always be called. Its resolution of the promise\n * enables the control flow described above.\n */\nfunction createAsyncMiddleware(asyncMiddleware) {\n    return async (req, res, next, end) => {\n        // nextPromise is the key to the implementation\n        // it is resolved by the return handler passed to the\n        // \"next\" function\n        let resolveNextPromise;\n        const nextPromise = new Promise((resolve) => {\n            resolveNextPromise = resolve;\n        });\n        let returnHandlerCallback = null;\n        let nextWasCalled = false;\n        // This will be called by the consumer's async middleware.\n        const asyncNext = async () => {\n            nextWasCalled = true;\n            // We pass a return handler to next(). When it is called by the engine,\n            // the consumer's async middleware will resume executing.\n            // eslint-disable-next-line node/callback-return\n            next((runReturnHandlersCallback) => {\n                // This callback comes from JsonRpcEngine._runReturnHandlers\n                returnHandlerCallback = runReturnHandlersCallback;\n                resolveNextPromise();\n            });\n            await nextPromise;\n        };\n        try {\n            await asyncMiddleware(req, res, asyncNext);\n            if (nextWasCalled) {\n                await nextPromise; // we must wait until the return handler is called\n                returnHandlerCallback(null);\n            }\n            else {\n                end(null);\n            }\n        }\n        catch (error) {\n            if (returnHandlerCallback) {\n                returnHandlerCallback(error);\n            }\n            else {\n                end(error);\n            }\n        }\n    };\n}\nexports.createAsyncMiddleware = createAsyncMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlQXN5bmNNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NyZWF0ZUFzeW5jTWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFnQkE7Ozs7Ozs7Ozs7Ozs7Ozs7R0FnQkc7QUFDSCxTQUFnQixxQkFBcUIsQ0FDbkMsZUFBNkM7SUFFN0MsT0FBTyxLQUFLLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDbkMsK0NBQStDO1FBQy9DLHFEQUFxRDtRQUNyRCxrQkFBa0I7UUFDbEIsSUFBSSxrQkFBOEIsQ0FBQztRQUNuQyxNQUFNLFdBQVcsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQzFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztRQUMvQixDQUFDLENBQUMsQ0FBQztRQUVILElBQUkscUJBQXFCLEdBQVksSUFBSSxDQUFDO1FBQzFDLElBQUksYUFBYSxHQUFHLEtBQUssQ0FBQztRQUUxQiwwREFBMEQ7UUFDMUQsTUFBTSxTQUFTLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDM0IsYUFBYSxHQUFHLElBQUksQ0FBQztZQUVyQix1RUFBdUU7WUFDdkUseURBQXlEO1lBQ3pELGdEQUFnRDtZQUNoRCxJQUFJLENBQUMsQ0FBQyx5QkFBeUIsRUFBRSxFQUFFO2dCQUNqQyw0REFBNEQ7Z0JBQzVELHFCQUFxQixHQUFHLHlCQUF5QixDQUFDO2dCQUNsRCxrQkFBa0IsRUFBRSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxXQUFXLENBQUM7UUFDcEIsQ0FBQyxDQUFDO1FBRUYsSUFBSTtZQUNGLE1BQU0sZUFBZSxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsU0FBUyxDQUFDLENBQUM7WUFFM0MsSUFBSSxhQUFhLEVBQUU7Z0JBQ2pCLE1BQU0sV0FBVyxDQUFDLENBQUMsa0RBQWtEO2dCQUNwRSxxQkFBK0MsQ0FBQyxJQUFJLENBQUMsQ0FBQzthQUN4RDtpQkFBTTtnQkFDTCxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7YUFDWDtTQUNGO1FBQUMsT0FBTyxLQUFLLEVBQUU7WUFDZCxJQUFJLHFCQUFxQixFQUFFO2dCQUN4QixxQkFBK0MsQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUN6RDtpQkFBTTtnQkFDTCxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDWjtTQUNGO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQS9DRCxzREErQ0MifQ=="]},"metadata":{},"sourceType":"script"}