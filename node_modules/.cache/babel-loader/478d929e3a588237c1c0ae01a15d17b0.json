{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{FeeAmount}from'@uniswap/v3-sdk';import{useWeb3React}from'@web3-react/core';import{SupportedChainId}from'constants/chains';import{useMemo}from'react';import{useAllCurrencyCombinations}from'./useAllCurrencyCombinations';import{PoolState,usePools}from'./usePools';/**\n * Returns all the existing pools that should be considered for swapping between an input currency and an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */export function useV3SwapPools(currencyIn,currencyOut){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var allCurrencyCombinations=useAllCurrencyCombinations(currencyIn,currencyOut);var allCurrencyCombinationsWithAllFees=useMemo(function(){return allCurrencyCombinations.reduce(function(list,_ref){var _ref2=_slicedToArray(_ref,2),tokenA=_ref2[0],tokenB=_ref2[1];return chainId===SupportedChainId.MAINNET?list.concat([[tokenA,tokenB,FeeAmount.LOW],[tokenA,tokenB,FeeAmount.MEDIUM],[tokenA,tokenB,FeeAmount.HIGH]]):list.concat([[tokenA,tokenB,FeeAmount.LOWEST],[tokenA,tokenB,FeeAmount.LOW],[tokenA,tokenB,FeeAmount.MEDIUM],[tokenA,tokenB,FeeAmount.HIGH]]);},[]);},[allCurrencyCombinations,chainId]);var pools=usePools(allCurrencyCombinationsWithAllFees);return useMemo(function(){return{pools:pools.filter(function(tuple){return tuple[0]===PoolState.EXISTS&&tuple[1]!==null;}).map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),pool=_ref4[1];return pool;}),loading:pools.some(function(_ref5){var _ref6=_slicedToArray(_ref5,1),state=_ref6[0];return state===PoolState.LOADING;})};},[pools]);}","map":{"version":3,"names":["FeeAmount","useWeb3React","SupportedChainId","useMemo","useAllCurrencyCombinations","PoolState","usePools","useV3SwapPools","currencyIn","currencyOut","chainId","allCurrencyCombinations","allCurrencyCombinationsWithAllFees","reduce","list","tokenA","tokenB","MAINNET","concat","LOW","MEDIUM","HIGH","LOWEST","pools","filter","tuple","EXISTS","map","pool","loading","some","state","LOADING"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useV3SwapPools.ts"],"sourcesContent":["import { Currency, Token } from '@uniswap/sdk-core'\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { SupportedChainId } from 'constants/chains'\nimport { useMemo } from 'react'\n\nimport { useAllCurrencyCombinations } from './useAllCurrencyCombinations'\nimport { PoolState, usePools } from './usePools'\n\n/**\n * Returns all the existing pools that should be considered for swapping between an input currency and an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useV3SwapPools(\n  currencyIn?: Currency,\n  currencyOut?: Currency\n): {\n  pools: Pool[]\n  loading: boolean\n} {\n  const { chainId } = useWeb3React()\n\n  const allCurrencyCombinations = useAllCurrencyCombinations(currencyIn, currencyOut)\n\n  const allCurrencyCombinationsWithAllFees: [Token, Token, FeeAmount][] = useMemo(\n    () =>\n      allCurrencyCombinations.reduce<[Token, Token, FeeAmount][]>((list, [tokenA, tokenB]) => {\n        return chainId === SupportedChainId.MAINNET\n          ? list.concat([\n              [tokenA, tokenB, FeeAmount.LOW],\n              [tokenA, tokenB, FeeAmount.MEDIUM],\n              [tokenA, tokenB, FeeAmount.HIGH],\n            ])\n          : list.concat([\n              [tokenA, tokenB, FeeAmount.LOWEST],\n              [tokenA, tokenB, FeeAmount.LOW],\n              [tokenA, tokenB, FeeAmount.MEDIUM],\n              [tokenA, tokenB, FeeAmount.HIGH],\n            ])\n      }, []),\n    [allCurrencyCombinations, chainId]\n  )\n\n  const pools = usePools(allCurrencyCombinationsWithAllFees)\n\n  return useMemo(() => {\n    return {\n      pools: pools\n        .filter((tuple): tuple is [PoolState.EXISTS, Pool] => {\n          return tuple[0] === PoolState.EXISTS && tuple[1] !== null\n        })\n        .map(([, pool]) => pool),\n      loading: pools.some(([state]) => state === PoolState.LOADING),\n    }\n  }, [pools])\n}\n"],"mappings":"4KACA,OAASA,SAAS,KAAc,iBAAiB,CACjD,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,OAAO,KAAQ,OAAO,CAE/B,OAASC,0BAA0B,KAAQ,8BAA8B,CACzE,OAASC,SAAS,CAAEC,QAAQ,KAAQ,YAAY,CAEhD;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,eAAc,CAC5BC,UAAqB,CACrBC,WAAsB,CAItB,CACA,kBAAoBR,YAAY,EAAE,CAA1BS,OAAO,eAAPA,OAAO,CAEf,GAAMC,wBAAuB,CAAGP,0BAA0B,CAACI,UAAU,CAAEC,WAAW,CAAC,CAEnF,GAAMG,mCAA+D,CAAGT,OAAO,CAC7E,iBACEQ,wBAAuB,CAACE,MAAM,CAA8B,SAACC,IAAI,MAAuB,kCAApBC,MAAM,UAAEC,MAAM,UAChF,MAAON,QAAO,GAAKR,gBAAgB,CAACe,OAAO,CACvCH,IAAI,CAACI,MAAM,CAAC,CACV,CAACH,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACmB,GAAG,CAAC,CAC/B,CAACJ,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACoB,MAAM,CAAC,CAClC,CAACL,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACqB,IAAI,CAAC,CACjC,CAAC,CACFP,IAAI,CAACI,MAAM,CAAC,CACV,CAACH,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACsB,MAAM,CAAC,CAClC,CAACP,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACmB,GAAG,CAAC,CAC/B,CAACJ,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACoB,MAAM,CAAC,CAClC,CAACL,MAAM,CAAEC,MAAM,CAAEhB,SAAS,CAACqB,IAAI,CAAC,CACjC,CAAC,CACR,CAAC,CAAE,EAAE,CAAC,GACR,CAACV,uBAAuB,CAAED,OAAO,CAAC,CACnC,CAED,GAAMa,MAAK,CAAGjB,QAAQ,CAACM,kCAAkC,CAAC,CAE1D,MAAOT,QAAO,CAAC,UAAM,CACnB,MAAO,CACLoB,KAAK,CAAEA,KAAK,CACTC,MAAM,CAAC,SAACC,KAAK,CAAwC,CACpD,MAAOA,MAAK,CAAC,CAAC,CAAC,GAAKpB,SAAS,CAACqB,MAAM,EAAID,KAAK,CAAC,CAAC,CAAC,GAAK,IAAI,CAC3D,CAAC,CAAC,CACDE,GAAG,CAAC,kDAAIC,IAAI,gBAAMA,KAAI,GAAC,CAC1BC,OAAO,CAAEN,KAAK,CAACO,IAAI,CAAC,kDAAEC,KAAK,gBAAMA,MAAK,GAAK1B,SAAS,CAAC2B,OAAO,GAC9D,CAAC,CACH,CAAC,CAAE,CAACT,KAAK,CAAC,CAAC,CACb"},"metadata":{},"sourceType":"module"}