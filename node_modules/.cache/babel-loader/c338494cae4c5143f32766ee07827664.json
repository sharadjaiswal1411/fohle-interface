{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n  message: _ref => {\n    let {\n      schemaCode\n    } = _ref;\n    return (0, codegen_1.str)`must match pattern \"${schemaCode}\"`;\n  },\n  params: _ref2 => {\n    let {\n      schemaCode\n    } = _ref2;\n    return (0, codegen_1._)`{pattern: ${schemaCode}}`;\n  }\n};\nconst def = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt) {\n    const {\n      data,\n      $data,\n      schema,\n      schemaCode,\n      it\n    } = cxt;\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n    const regExp = $data ? (0, codegen_1._)`(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n    cxt.fail$data((0, codegen_1._)`!${regExp}.test(${data})`);\n  }\n};\nexports.default = def;","map":{"version":3,"sources":["../../../lib/vocabularies/validation/pattern.ts"],"names":[],"mappings":";;;;;AAEA,MAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,uBAAA,CAAA;AAIA,MAAM,KAAK,GAA2B;EACpC,OAAO,EAAE;IAAA,IAAC;MAAC;IAAU,CAAC;IAAA,OAAK,CAAA,CAAA,EAAA,SAAA,CAAA,GAAG,CAAA,uBAAuB,UAAU,GAAG;EAAA;EAClE,MAAM,EAAE;IAAA,IAAC;MAAC;IAAU,CAAC;IAAA,OAAK,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,aAAa,UAAU,GAAG;EAAA;CACtD;AAED,MAAM,GAAG,GAA0B;EACjC,OAAO,EAAE,SAAS;EAClB,IAAI,EAAE,QAAQ;EACd,UAAU,EAAE,QAAQ;EACpB,KAAK,EAAE,IAAI;EACX,KAAK;EACL,IAAI,CAAC,GAAe,EAAA;IAClB,MAAM;MAAC,IAAI;MAAE,KAAK;MAAE,MAAM;MAAE,UAAU;MAAE;IAAE,CAAC,GAAG,GAAG;IACjD;IACA,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,EAAE;IAC1C,MAAM,MAAM,GAAG,KAAK,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,eAAe,UAAU,KAAK,CAAC,IAAI,GAAG,CAAA,CAAA,EAAA,MAAA,CAAA,UAAU,EAAC,GAAG,EAAE,MAAM,CAAC;IACrF,GAAG,CAAC,SAAS,CAAC,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,IAAI,MAAM,SAAS,IAAI,GAAG,CAAC;EAC5C;CACD;AAED,OAAA,CAAA,OAAA,GAAe,GAAG","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst code_1 = require(\"../code\");\nconst codegen_1 = require(\"../../compile/codegen\");\nconst error = {\n    message: ({ schemaCode }) => (0, codegen_1.str) `must match pattern \"${schemaCode}\"`,\n    params: ({ schemaCode }) => (0, codegen_1._) `{pattern: ${schemaCode}}`,\n};\nconst def = {\n    keyword: \"pattern\",\n    type: \"string\",\n    schemaType: \"string\",\n    $data: true,\n    error,\n    code(cxt) {\n        const { data, $data, schema, schemaCode, it } = cxt;\n        // TODO regexp should be wrapped in try/catchs\n        const u = it.opts.unicodeRegExp ? \"u\" : \"\";\n        const regExp = $data ? (0, codegen_1._) `(new RegExp(${schemaCode}, ${u}))` : (0, code_1.usePattern)(cxt, schema);\n        cxt.fail$data((0, codegen_1._) `!${regExp}.test(${data})`);\n    },\n};\nexports.default = def;\n//# sourceMappingURL=pattern.js.map"]},"metadata":{},"sourceType":"script"}