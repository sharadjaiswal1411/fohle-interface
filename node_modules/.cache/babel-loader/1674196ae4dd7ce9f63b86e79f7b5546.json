{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { ConnectionType } from 'connection';\nconst initialState = {\n  errorByConnectionType: {\n    [ConnectionType.INJECTED]: undefined,\n    [ConnectionType.WALLET_CONNECT]: undefined,\n    [ConnectionType.COINBASE_WALLET]: undefined,\n    [ConnectionType.NETWORK]: undefined,\n    [ConnectionType.GNOSIS_SAFE]: undefined\n  }\n};\nconst connectionSlice = createSlice({\n  name: 'connection',\n  initialState,\n  reducers: {\n    updateConnectionError(state, _ref) {\n      let {\n        payload: {\n          connectionType,\n          error\n        }\n      } = _ref;\n      state.errorByConnectionType[connectionType] = error;\n    }\n  }\n});\nexport const {\n  updateConnectionError\n} = connectionSlice.actions;\nexport default connectionSlice.reducer;","map":{"version":3,"names":["createSlice","ConnectionType","initialState","errorByConnectionType","INJECTED","undefined","WALLET_CONNECT","COINBASE_WALLET","NETWORK","GNOSIS_SAFE","connectionSlice","name","reducers","updateConnectionError","state","payload","connectionType","error","actions","reducer"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/connection/reducer.ts"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\nimport { ConnectionType } from 'connection'\n\ninterface ConnectionState {\n  errorByConnectionType: Record<ConnectionType, string | undefined>\n}\n\nconst initialState: ConnectionState = {\n  errorByConnectionType: {\n    [ConnectionType.INJECTED]: undefined,\n    [ConnectionType.WALLET_CONNECT]: undefined,\n    [ConnectionType.COINBASE_WALLET]: undefined,\n    [ConnectionType.NETWORK]: undefined,\n    [ConnectionType.GNOSIS_SAFE]: undefined,\n  },\n}\n\nconst connectionSlice = createSlice({\n  name: 'connection',\n  initialState,\n  reducers: {\n    updateConnectionError(\n      state,\n      { payload: { connectionType, error } }: { payload: { connectionType: ConnectionType; error: string | undefined } }\n    ) {\n      state.errorByConnectionType[connectionType] = error\n    },\n  },\n})\n\nexport const { updateConnectionError } = connectionSlice.actions\nexport default connectionSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,YAAY;AAM3C,MAAMC,YAA6B,GAAG;EACpCC,qBAAqB,EAAE;IACrB,CAACF,cAAc,CAACG,QAAQ,GAAGC,SAAS;IACpC,CAACJ,cAAc,CAACK,cAAc,GAAGD,SAAS;IAC1C,CAACJ,cAAc,CAACM,eAAe,GAAGF,SAAS;IAC3C,CAACJ,cAAc,CAACO,OAAO,GAAGH,SAAS;IACnC,CAACJ,cAAc,CAACQ,WAAW,GAAGJ;EAChC;AACF,CAAC;AAED,MAAMK,eAAe,GAAGV,WAAW,CAAC;EAClCW,IAAI,EAAE,YAAY;EAClBT,YAAY;EACZU,QAAQ,EAAE;IACRC,qBAAqB,CACnBC,KAAK,QAEL;MAAA,IADA;QAAEC,OAAO,EAAE;UAAEC,cAAc;UAAEC;QAAM;MAA8E,CAAC;MAElHH,KAAK,CAACX,qBAAqB,CAACa,cAAc,CAAC,GAAGC,KAAK;IACrD;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAsB,CAAC,GAAGH,eAAe,CAACQ,OAAO;AAChE,eAAeR,eAAe,CAACS,OAAO"},"metadata":{},"sourceType":"module"}