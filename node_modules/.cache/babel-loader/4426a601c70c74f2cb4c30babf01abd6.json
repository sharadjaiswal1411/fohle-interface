{"ast":null,"code":"import { useTheme as _useTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/Swap/index.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { sendAnalyticsEvent, Trace, TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, ElementName, EventName, PageName, SectionName } from '@uniswap/analytics-events';\nimport { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { sendEvent } from 'components/analytics';\nimport { NetworkAlert } from 'components/NetworkAlert/NetworkAlert';\nimport PriceImpactWarning from 'components/swap/PriceImpactWarning';\nimport SwapDetailsDropdown from 'components/swap/SwapDetailsDropdown';\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter';\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal';\nimport { MouseoverTooltip } from 'components/Tooltip';\nimport { isSupportedChain } from 'constants/chains';\nimport { usePermit2Enabled } from 'featureFlags/flags/permit2';\nimport usePermit, { PermitState } from 'hooks/usePermit2';\nimport { useSwapCallback } from 'hooks/useSwapCallback';\nimport useTransactionDeadline from 'hooks/useTransactionDeadline';\nimport JSBI from 'jsbi';\nimport { formatSwapQuoteReceivedEventProperties } from 'lib/utils/analytics';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { AlertTriangle, ArrowDown, CheckCircle, HelpCircle, Info } from 'react-feather';\nimport { useNavigate } from 'react-router-dom';\nimport { Text } from 'rebass';\nimport { useToggleWalletModal } from 'state/application/hooks';\nimport { TradeState } from 'state/routing/types';\nimport { useTransactionAdder } from 'state/transactions/hooks';\nimport { currencyAmountToPreciseFloat, formatTransactionAmount } from 'utils/formatNumbers';\nimport AddressInputPanel from '../../components/AddressInputPanel';\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary, ButtonYellow } from '../../components/Button';\nimport { GrayCard } from '../../components/Card';\nimport { AutoColumn } from '../../components/Column';\nimport SwapCurrencyInputPanel from '../../components/CurrencyInputPanel/SwapCurrencyInputPanel';\nimport Loader from '../../components/Loader';\nimport { AutoRow } from '../../components/Row';\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee';\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal';\nimport { ArrowWrapper, PageWrapper, SwapCallbackError, SwapWrapper } from '../../components/swap/styleds';\nimport SwapHeader from '../../components/swap/SwapHeader';\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink';\nimport { TOKEN_SHORTHANDS } from '../../constants/tokens';\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback';\nimport useENSAddress from '../../hooks/useENSAddress';\nimport { useERC20PermitFromTrade, UseERC20PermitState } from '../../hooks/useERC20Permit';\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet';\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported';\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice';\nimport useWrapCallback, { WrapErrorText, WrapType } from '../../hooks/useWrapCallback';\nimport { Field } from '../../state/swap/actions';\nimport { useDefaultsFromURLSearch, useDerivedSwapInfo, useSwapActionHandlers, useSwapState } from '../../state/swap/hooks';\nimport { useExpertModeManager } from '../../state/user/hooks';\nimport { LinkStyledButton, ThemedText } from '../../theme';\nimport { computeFiatValuePriceImpact } from '../../utils/computeFiatValuePriceImpact';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport { computeRealizedPriceImpact, warningSeverity } from '../../utils/prices';\nimport { supportedChainId } from '../../utils/supportedChainId';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ArrowContainer = _styled.div.withConfig({\n  displayName: \"Swap__ArrowContainer\",\n  componentId: \"sc-1es900k-0\"\n})([\"display:inline-block;display:inline-flex;align-items:center;justify-content:center;width:100%;height:100%;\"]);\nconst SwapSection = _styled.div.withConfig({\n  displayName: \"Swap__SwapSection\",\n  componentId: \"sc-1es900k-1\"\n})([\"position:relative;background-color:\", \";border-radius:12px;padding:16px;color:\", \";font-size:14px;line-height:20px;font-weight:500;&:before{box-sizing:border-box;background-size:100%;border-radius:inherit;position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;content:'';border:1px solid \", \";}&:hover:before{border-color:\", \";}&:focus-within:before{border-color:\", \";}\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.backgroundModule;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.textSecondary;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.backgroundModule;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.stateOverlayHover;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.stateOverlayPressed;\n});\nconst OutputSwapSection = _styled(SwapSection).withConfig({\n  displayName: \"Swap__OutputSwapSection\",\n  componentId: \"sc-1es900k-2\"\n})([\"border-bottom:\", \";border-bottom-left-radius:\", \";border-bottom-right-radius:\", \";\"], _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return `1px solid ${theme.backgroundSurface}`;\n}, _ref7 => {\n  let {\n    showDetailsDropdown\n  } = _ref7;\n  return showDetailsDropdown && '0';\n}, _ref8 => {\n  let {\n    showDetailsDropdown\n  } = _ref8;\n  return showDetailsDropdown && '0';\n});\nconst DetailsSwapSection = _styled(SwapSection).withConfig({\n  displayName: \"Swap__DetailsSwapSection\",\n  componentId: \"sc-1es900k-3\"\n})([\"padding:0;border-top-left-radius:0;border-top-right-radius:0;\"]);\nexport function getIsValidSwapQuote(trade, tradeState, swapInputError) {\n  return !!swapInputError && !!trade && (tradeState === TradeState.VALID || tradeState === TradeState.SYNCING);\n}\nfunction largerPercentValue(a, b) {\n  if (a && b) {\n    return a.greaterThan(b) ? a : b;\n  } else if (a) {\n    return a;\n  } else if (b) {\n    return b;\n  }\n  return undefined;\n}\nconst TRADE_STRING = 'SwapRouter';\nexport default function Swap(_ref9) {\n  _s();\n  var _loadedUrlParams$Fiel, _loadedUrlParams$Fiel2, _parsedAmounts$indepe3, _trade$inputAmount2, _parsedAmounts$Field$, _trade$inputAmount4, _trade$inputAmount4$c, _trade$outputAmount2, _trade$outputAmount2$, _importTokensNotInDef, _importTokensNotInDef2, _currencies$Field$INP, _currencies$Field$OUT, _currencies$Field$INP2, _currencies$Field$INP3, _currencies$Field$INP4, _currencies$Field$INP5;\n  let {\n    className\n  } = _ref9;\n  const navigate = useNavigate();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const loadedUrlParams = useDefaultsFromURLSearch();\n  const [newSwapQuoteNeedsLogging, setNewSwapQuoteNeedsLogging] = useState(true);\n  const [fetchingSwapQuoteStartTime, setFetchingSwapQuoteStartTime] = useState();\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : (_loadedUrlParams$Fiel = loadedUrlParams[Field.INPUT]) === null || _loadedUrlParams$Fiel === void 0 ? void 0 : _loadedUrlParams$Fiel.currencyId), useCurrency(loadedUrlParams === null || loadedUrlParams === void 0 ? void 0 : (_loadedUrlParams$Fiel2 = loadedUrlParams[Field.OUTPUT]) === null || _loadedUrlParams$Fiel2 === void 0 ? void 0 : _loadedUrlParams$Fiel2.currencyId)];\n  const [dismissTokenWarning, setDismissTokenWarning] = useState(false);\n  const urlLoadedTokens = useMemo(() => {\n    var _filter, _ref10;\n    return (_filter = (_ref10 = [loadedInputCurrency, loadedOutputCurrency]) === null || _ref10 === void 0 ? void 0 : _ref10.filter(c => {\n      var _c$isToken;\n      return (_c$isToken = c === null || c === void 0 ? void 0 : c.isToken) !== null && _c$isToken !== void 0 ? _c$isToken : false;\n    })) !== null && _filter !== void 0 ? _filter : [];\n  }, [loadedInputCurrency, loadedOutputCurrency]);\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n  }, []);\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens();\n  const importTokensNotInDefault = useMemo(() => urlLoadedTokens && urlLoadedTokens.filter(token => {\n    return !(token.address in defaultTokens);\n  }).filter(token => {\n    // Any token addresses that are loaded from the shorthands map do not need to show the import URL\n    const supported = supportedChainId(chainId);\n    if (!supported) return true;\n    return !Object.keys(TOKEN_SHORTHANDS).some(shorthand => {\n      const shorthandTokenAddress = TOKEN_SHORTHANDS[shorthand][supported];\n      return shorthandTokenAddress && shorthandTokenAddress === token.address;\n    });\n  }), [chainId, defaultTokens, urlLoadedTokens]);\n  const theme = _useTheme();\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useToggleWalletModal();\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager();\n  // swap state\n  const {\n    independentField,\n    typedValue,\n    recipient\n  } = useSwapState();\n  const {\n    trade: {\n      state: tradeState,\n      trade\n    },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError\n  } = useDerivedSwapInfo();\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue);\n  const showWrap = wrapType !== WrapType.NOT_APPLICABLE;\n  const {\n    address: recipientAddress\n  } = useENSAddress(recipient);\n  const parsedAmounts = useMemo(() => showWrap ? {\n    [Field.INPUT]: parsedAmount,\n    [Field.OUTPUT]: parsedAmount\n  } : {\n    [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.inputAmount,\n    [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade === null || trade === void 0 ? void 0 : trade.outputAmount\n  }, [independentField, parsedAmount, showWrap, trade]);\n  const [routeNotFound, routeIsLoading, routeIsSyncing] = useMemo(() => [!(trade === null || trade === void 0 ? void 0 : trade.swaps), TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState], [trade, tradeState]);\n  const fiatValueInput = useStablecoinValue(parsedAmounts[Field.INPUT]);\n  const fiatValueOutput = useStablecoinValue(parsedAmounts[Field.OUTPUT]);\n  const stablecoinPriceImpact = useMemo(() => routeIsSyncing ? undefined : computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput), [fiatValueInput, fiatValueOutput, routeIsSyncing]);\n  const {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient\n  } = useSwapActionHandlers();\n  const isValid = !swapInputError;\n  const dependentField = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT;\n  const handleTypeInput = useCallback(value => {\n    onUserInput(Field.INPUT, value);\n  }, [onUserInput]);\n  const handleTypeOutput = useCallback(value => {\n    onUserInput(Field.OUTPUT, value);\n  }, [onUserInput]);\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true);\n    navigate('/swap/');\n  }, [navigate]);\n\n  // modal and loading\n  const [{\n    showConfirm,\n    tradeToConfirm,\n    swapErrorMessage,\n    attemptingTxn,\n    txHash\n  }, setSwapState] = useState({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined\n  });\n  const formattedAmounts = useMemo(() => {\n    var _parsedAmounts$indepe, _parsedAmounts$indepe2;\n    return {\n      [independentField]: typedValue,\n      [dependentField]: showWrap ? (_parsedAmounts$indepe = (_parsedAmounts$indepe2 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe2 === void 0 ? void 0 : _parsedAmounts$indepe2.toExact()) !== null && _parsedAmounts$indepe !== void 0 ? _parsedAmounts$indepe : '' : formatTransactionAmount(currencyAmountToPreciseFloat(parsedAmounts[dependentField]))\n    };\n  }, [dependentField, independentField, parsedAmounts, showWrap, typedValue]);\n  const userHasSpecifiedInputOutput = Boolean(currencies[Field.INPUT] && currencies[Field.OUTPUT] && ((_parsedAmounts$indepe3 = parsedAmounts[independentField]) === null || _parsedAmounts$indepe3 === void 0 ? void 0 : _parsedAmounts$indepe3.greaterThan(JSBI.BigInt(0))));\n  const permit2Enabled = usePermit2Enabled();\n  const maximumAmountIn = useMemo(() => {\n    const maximumAmountIn = trade === null || trade === void 0 ? void 0 : trade.maximumAmountIn(allowedSlippage);\n    return (maximumAmountIn === null || maximumAmountIn === void 0 ? void 0 : maximumAmountIn.currency.isToken) ? maximumAmountIn : undefined;\n  }, [allowedSlippage, trade]);\n  const permit = usePermit(permit2Enabled ? maximumAmountIn : undefined, permit2Enabled && chainId ? UNIVERSAL_ROUTER_ADDRESS(chainId) : undefined);\n  const isApprovalLoading = permit.state === PermitState.APPROVAL_LOADING;\n  const [isPermitPending, setIsPermitPending] = useState(false);\n  const [isPermitFailed, setIsPermitFailed] = useState(false);\n  const addTransaction = useTransactionAdder();\n  const updatePermit = useCallback(async () => {\n    setIsPermitPending(true);\n    try {\n      var _permit$callback;\n      const approval = await ((_permit$callback = permit.callback) === null || _permit$callback === void 0 ? void 0 : _permit$callback.call(permit));\n      if (approval) {\n        sendAnalyticsEvent(EventName.APPROVE_TOKEN_TXN_SUBMITTED, {\n          chain_id: chainId,\n          token_symbol: maximumAmountIn === null || maximumAmountIn === void 0 ? void 0 : maximumAmountIn.currency.symbol,\n          token_address: maximumAmountIn === null || maximumAmountIn === void 0 ? void 0 : maximumAmountIn.currency.address\n        });\n        const {\n          response,\n          info\n        } = approval;\n        addTransaction(response, info);\n      }\n      setIsPermitFailed(false);\n    } catch (e) {\n      console.error(e);\n      setIsPermitFailed(true);\n    } finally {\n      setIsPermitPending(false);\n    }\n  }, [addTransaction, chainId, maximumAmountIn === null || maximumAmountIn === void 0 ? void 0 : maximumAmountIn.currency.address, maximumAmountIn === null || maximumAmountIn === void 0 ? void 0 : maximumAmountIn.currency.symbol, permit]);\n\n  // check whether the user has approved the router on the input token\n  const [approvalState, approveCallback] = useApproveCallbackFromTrade(permit2Enabled ? undefined : trade, allowedSlippage);\n  const transactionDeadline = useTransactionDeadline();\n  const {\n    state: signatureState,\n    signatureData,\n    gatherPermitSignature\n  } = useERC20PermitFromTrade(permit2Enabled ? undefined : trade, allowedSlippage, transactionDeadline);\n  const [approvalPending, setApprovalPending] = useState(false);\n  const handleApprove = useCallback(async () => {\n    setApprovalPending(true);\n    try {\n      if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n        try {\n          await gatherPermitSignature();\n        } catch (error) {\n          // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n          if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n            await approveCallback();\n          }\n        }\n      } else {\n        var _trade$inputAmount;\n        await approveCallback();\n        sendEvent({\n          category: 'Swap',\n          action: 'Approve',\n          label: [TRADE_STRING, trade === null || trade === void 0 ? void 0 : (_trade$inputAmount = trade.inputAmount) === null || _trade$inputAmount === void 0 ? void 0 : _trade$inputAmount.currency.symbol].join('/')\n        });\n      }\n    } finally {\n      setApprovalPending(false);\n    }\n  }, [signatureState, gatherPermitSignature, approveCallback, trade === null || trade === void 0 ? void 0 : (_trade$inputAmount2 = trade.inputAmount) === null || _trade$inputAmount2 === void 0 ? void 0 : _trade$inputAmount2.currency.symbol]);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approvalState, approvalSubmitted]);\n  const maxInputAmount = useMemo(() => maxAmountSpend(currencyBalances[Field.INPUT]), [currencyBalances]);\n  const showMaxButton = Boolean((maxInputAmount === null || maxInputAmount === void 0 ? void 0 : maxInputAmount.greaterThan(0)) && !((_parsedAmounts$Field$ = parsedAmounts[Field.INPUT]) === null || _parsedAmounts$Field$ === void 0 ? void 0 : _parsedAmounts$Field$.equalTo(maxInputAmount)));\n\n  // the callback to execute the swap\n  const {\n    callback: swapCallback,\n    error: swapCallbackError\n  } = useSwapCallback(trade, allowedSlippage, recipient, signatureData, permit);\n  const handleSwap = useCallback(() => {\n    if (!swapCallback) {\n      return;\n    }\n    if (stablecoinPriceImpact && !confirmPriceImpactWithoutFee(stablecoinPriceImpact)) {\n      return;\n    }\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined\n    });\n    swapCallback().then(hash => {\n      var _trade$inputAmount3, _trade$inputAmount3$c, _trade$outputAmount, _trade$outputAmount$c;\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: undefined,\n        txHash: hash\n      });\n      sendEvent({\n        category: 'Swap',\n        action: 'transaction hash',\n        label: hash\n      });\n      sendEvent({\n        category: 'Swap',\n        action: recipient === null ? 'Swap w/o Send' : (recipientAddress !== null && recipientAddress !== void 0 ? recipientAddress : recipient) === account ? 'Swap w/o Send + recipient' : 'Swap w/ Send',\n        label: [TRADE_STRING, trade === null || trade === void 0 ? void 0 : (_trade$inputAmount3 = trade.inputAmount) === null || _trade$inputAmount3 === void 0 ? void 0 : (_trade$inputAmount3$c = _trade$inputAmount3.currency) === null || _trade$inputAmount3$c === void 0 ? void 0 : _trade$inputAmount3$c.symbol, trade === null || trade === void 0 ? void 0 : (_trade$outputAmount = trade.outputAmount) === null || _trade$outputAmount === void 0 ? void 0 : (_trade$outputAmount$c = _trade$outputAmount.currency) === null || _trade$outputAmount$c === void 0 ? void 0 : _trade$outputAmount$c.symbol, 'MH'].join('/')\n      });\n    }).catch(error => {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined\n      });\n    });\n  }, [swapCallback, stablecoinPriceImpact, tradeToConfirm, showConfirm, recipient, recipientAddress, account, trade === null || trade === void 0 ? void 0 : (_trade$inputAmount4 = trade.inputAmount) === null || _trade$inputAmount4 === void 0 ? void 0 : (_trade$inputAmount4$c = _trade$inputAmount4.currency) === null || _trade$inputAmount4$c === void 0 ? void 0 : _trade$inputAmount4$c.symbol, trade === null || trade === void 0 ? void 0 : (_trade$outputAmount2 = trade.outputAmount) === null || _trade$outputAmount2 === void 0 ? void 0 : (_trade$outputAmount2$ = _trade$outputAmount2.currency) === null || _trade$outputAmount2$ === void 0 ? void 0 : _trade$outputAmount2$.symbol]);\n\n  // errors\n  const [swapQuoteReceivedDate, setSwapQuoteReceivedDate] = useState();\n\n  // warnings on the greater of fiat value price impact and execution price impact\n  const {\n    priceImpactSeverity,\n    largerPriceImpact\n  } = useMemo(() => {\n    const marketPriceImpact = (trade === null || trade === void 0 ? void 0 : trade.priceImpact) ? computeRealizedPriceImpact(trade) : undefined;\n    const largerPriceImpact = largerPercentValue(marketPriceImpact, stablecoinPriceImpact);\n    return {\n      priceImpactSeverity: warningSeverity(largerPriceImpact),\n      largerPriceImpact\n    };\n  }, [stablecoinPriceImpact, trade]);\n  const isArgentWallet = useIsArgentWallet();\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow = !permit2Enabled && !isArgentWallet && !swapInputError && (approvalState === ApprovalState.NOT_APPROVED || approvalState === ApprovalState.PENDING || approvalSubmitted && approvalState === ApprovalState.APPROVED) && !(priceImpactSeverity > 3 && !isExpertMode);\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '');\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash]);\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n  const handleInputSelect = useCallback(inputCurrency => {\n    setApprovalSubmitted(false); // reset 2 step UI for approvals\n    onCurrencySelection(Field.INPUT, inputCurrency);\n  }, [onCurrencySelection]);\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact());\n    sendEvent({\n      category: 'Swap',\n      action: 'Max'\n    });\n  }, [maxInputAmount, onUserInput]);\n  const handleOutputSelect = useCallback(outputCurrency => onCurrencySelection(Field.OUTPUT, outputCurrency), [onCurrencySelection]);\n  const swapIsUnsupported = useIsSwapUnsupported(currencies[Field.INPUT], currencies[Field.OUTPUT]);\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode;\n  const showPriceImpactWarning = largerPriceImpact && priceImpactSeverity > 3;\n\n  // Handle time based logging events and event properties.\n  useEffect(() => {\n    const now = new Date();\n    // If a trade exists, and we need to log the receipt of this new swap quote:\n    if (newSwapQuoteNeedsLogging && !!trade) {\n      var _trade$gasUseEstimate;\n      // Set the current datetime as the time of receipt of latest swap quote.\n      setSwapQuoteReceivedDate(now);\n      // Log swap quote.\n      sendAnalyticsEvent(EventName.SWAP_QUOTE_RECEIVED, formatSwapQuoteReceivedEventProperties(trade, (_trade$gasUseEstimate = trade.gasUseEstimateUSD) !== null && _trade$gasUseEstimate !== void 0 ? _trade$gasUseEstimate : undefined, fetchingSwapQuoteStartTime));\n      // Latest swap quote has just been logged, so we don't need to log the current trade anymore\n      // unless user inputs change again and a new trade is in the process of being generated.\n      setNewSwapQuoteNeedsLogging(false);\n      // New quote is not being fetched, so set start time of quote fetch to undefined.\n      setFetchingSwapQuoteStartTime(undefined);\n    }\n    // If another swap quote is being loaded based on changed user inputs:\n    if (routeIsLoading) {\n      setNewSwapQuoteNeedsLogging(true);\n      if (!fetchingSwapQuoteStartTime) setFetchingSwapQuoteStartTime(now);\n    }\n  }, [newSwapQuoteNeedsLogging, routeIsSyncing, routeIsLoading, fetchingSwapQuoteStartTime, trade, setSwapQuoteReceivedDate]);\n  const approveTokenButtonDisabled = approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted || signatureState === UseERC20PermitState.SIGNED;\n  const showDetailsDropdown = Boolean(!showWrap && userHasSpecifiedInputOutput && (trade || routeIsLoading || routeIsSyncing));\n  return /*#__PURE__*/_jsxDEV(Trace, {\n    page: PageName.SWAP_PAGE,\n    shouldLogImpression: true,\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TokenSafetyModal, {\n        isOpen: importTokensNotInDefault.length > 0 && !dismissTokenWarning,\n        tokenAddress: (_importTokensNotInDef = importTokensNotInDefault[0]) === null || _importTokensNotInDef === void 0 ? void 0 : _importTokensNotInDef.address,\n        secondTokenAddress: (_importTokensNotInDef2 = importTokensNotInDefault[1]) === null || _importTokensNotInDef2 === void 0 ? void 0 : _importTokensNotInDef2.address,\n        onContinue: handleConfirmTokenWarning,\n        onCancel: handleDismissTokenWarning,\n        showCancel: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PageWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(SwapWrapper, {\n          className: className,\n          id: \"swap-page\",\n          children: [/*#__PURE__*/_jsxDEV(SwapHeader, {\n            allowedSlippage: allowedSlippage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ConfirmSwapModal, {\n            isOpen: showConfirm,\n            trade: trade,\n            originalTrade: tradeToConfirm,\n            onAcceptChanges: handleAcceptChanges,\n            attemptingTxn: attemptingTxn,\n            txHash: txHash,\n            recipient: recipient,\n            allowedSlippage: allowedSlippage,\n            onConfirm: handleSwap,\n            swapErrorMessage: swapErrorMessage,\n            onDismiss: handleConfirmDismiss,\n            swapQuoteReceivedDate: swapQuoteReceivedDate,\n            fiatValueInput: fiatValueInput,\n            fiatValueOutput: fiatValueOutput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(SwapSection, {\n              children: /*#__PURE__*/_jsxDEV(Trace, {\n                section: SectionName.CURRENCY_INPUT_PANEL,\n                children: /*#__PURE__*/_jsxDEV(SwapCurrencyInputPanel, {\n                  label: independentField === Field.OUTPUT && !showWrap ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"From (at most)\"\n                  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"From\"\n                  }, void 0, false, void 0, this),\n                  value: formattedAmounts[Field.INPUT],\n                  showMaxButton: showMaxButton,\n                  currency: (_currencies$Field$INP = currencies[Field.INPUT]) !== null && _currencies$Field$INP !== void 0 ? _currencies$Field$INP : null,\n                  onUserInput: handleTypeInput,\n                  onMax: handleMaxInput,\n                  fiatValue: fiatValueInput !== null && fiatValueInput !== void 0 ? fiatValueInput : undefined,\n                  onCurrencySelect: handleInputSelect,\n                  otherCurrency: currencies[Field.OUTPUT],\n                  showCommonBases: true,\n                  id: SectionName.CURRENCY_INPUT_PANEL,\n                  loading: independentField === Field.OUTPUT && routeIsSyncing\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ArrowWrapper, {\n              clickable: isSupportedChain(chainId),\n              children: /*#__PURE__*/_jsxDEV(TraceEvent, {\n                events: [BrowserEvent.onClick],\n                name: EventName.SWAP_TOKENS_REVERSED,\n                element: ElementName.SWAP_TOKENS_REVERSE_ARROW_BUTTON,\n                children: /*#__PURE__*/_jsxDEV(ArrowContainer, {\n                  onClick: () => {\n                    setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    onSwitchTokens();\n                  },\n                  color: theme.textPrimary,\n                  children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                    size: \"16\",\n                    color: currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.textPrimary : theme.textTertiary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 613,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(OutputSwapSection, {\n                showDetailsDropdown: showDetailsDropdown,\n                children: [/*#__PURE__*/_jsxDEV(Trace, {\n                  section: SectionName.CURRENCY_OUTPUT_PANEL,\n                  children: /*#__PURE__*/_jsxDEV(SwapCurrencyInputPanel, {\n                    value: formattedAmounts[Field.OUTPUT],\n                    onUserInput: handleTypeOutput,\n                    label: independentField === Field.INPUT && !showWrap ? /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"To (at least)\"\n                    }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"To\"\n                    }, void 0, false, void 0, this),\n                    showMaxButton: false,\n                    hideBalance: false,\n                    fiatValue: fiatValueOutput !== null && fiatValueOutput !== void 0 ? fiatValueOutput : undefined,\n                    priceImpact: stablecoinPriceImpact,\n                    currency: (_currencies$Field$OUT = currencies[Field.OUTPUT]) !== null && _currencies$Field$OUT !== void 0 ? _currencies$Field$OUT : null,\n                    onCurrencySelect: handleOutputSelect,\n                    otherCurrency: currencies[Field.INPUT],\n                    showCommonBases: true,\n                    id: SectionName.CURRENCY_OUTPUT_PANEL,\n                    loading: independentField === Field.INPUT && routeIsSyncing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 627,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 19\n                }, this), recipient !== null && !showWrap ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n                    justify: \"space-between\",\n                    style: {\n                      padding: '0 1rem'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(ArrowWrapper, {\n                      clickable: false,\n                      children: /*#__PURE__*/_jsxDEV(ArrowDown, {\n                        size: \"16\",\n                        color: theme.textSecondary\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 650,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 649,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(LinkStyledButton, {\n                      id: \"remove-recipient-button\",\n                      onClick: () => onChangeRecipient(null),\n                      children: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"- Remove recipient\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 652,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AddressInputPanel, {\n                    id: \"recipient\",\n                    value: recipient,\n                    onChange: onChangeRecipient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 656,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 17\n              }, this), showDetailsDropdown && /*#__PURE__*/_jsxDEV(DetailsSwapSection, {\n                children: /*#__PURE__*/_jsxDEV(SwapDetailsDropdown, {\n                  trade: trade,\n                  syncing: routeIsSyncing,\n                  loading: routeIsLoading,\n                  allowedSlippage: allowedSlippage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 662,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 661,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 15\n            }, this), showPriceImpactWarning && /*#__PURE__*/_jsxDEV(PriceImpactWarning, {\n              priceImpact: largerPriceImpact\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [swapIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                disabled: true,\n                children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n                  mb: \"4px\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Unsupported Asset\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this) : !account ? /*#__PURE__*/_jsxDEV(TraceEvent, {\n                events: [BrowserEvent.onClick],\n                name: EventName.CONNECT_WALLET_BUTTON_CLICKED,\n                properties: {\n                  received_swap_quote: getIsValidSwapQuote(trade, tradeState, swapInputError)\n                },\n                element: ElementName.CONNECT_WALLET_BUTTON,\n                children: /*#__PURE__*/_jsxDEV(ButtonLight, {\n                  onClick: toggleWalletModal,\n                  fontWeight: 600,\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Connect Wallet\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 686,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 680,\n                columnNumber: 19\n              }, this) : showWrap ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                disabled: Boolean(wrapInputError),\n                onClick: onWrap,\n                fontWeight: 600,\n                children: wrapInputError ? /*#__PURE__*/_jsxDEV(WrapErrorText, {\n                  wrapInputError: wrapInputError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 693,\n                  columnNumber: 23\n                }, this) : wrapType === WrapType.WRAP ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Wrap\"\n                }, void 0, false, void 0, this) : wrapType === WrapType.UNWRAP ? /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Unwrap\"\n                }, void 0, false, void 0, this) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? /*#__PURE__*/_jsxDEV(GrayCard, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n                  mb: \"4px\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Insufficient liquidity for this trade.\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 19\n              }, this) : showApproveFlow ? /*#__PURE__*/_jsxDEV(AutoRow, {\n                style: {\n                  flexWrap: 'nowrap',\n                  width: '100%'\n                },\n                children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                  style: {\n                    width: '100%'\n                  },\n                  gap: \"12px\",\n                  children: [/*#__PURE__*/_jsxDEV(ButtonConfirmed, {\n                    fontWeight: 600,\n                    onClick: handleApprove,\n                    disabled: approveTokenButtonDisabled,\n                    width: \"100%\",\n                    altDisabledStyle: approvalState === ApprovalState.PENDING // show solid button while waiting\n                    ,\n                    confirmed: approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED,\n                    children: /*#__PURE__*/_jsxDEV(AutoRow, {\n                      justify: \"space-between\",\n                      style: {\n                        flexWrap: 'nowrap'\n                      },\n                      height: \"20px\",\n                      children: [approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        color: \"textSecondary\",\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"You can now trade {0}\",\n                          values: {\n                            0: (_currencies$Field$INP2 = currencies[Field.INPUT]) === null || _currencies$Field$INP2 === void 0 ? void 0 : _currencies$Field$INP2.symbol\n                          }\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 722,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                        width: \"100%\",\n                        textAlign: \"center\",\n                        color: \"white\",\n                        children: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"Allow the Uniswap Protocol to use your {0}\",\n                          values: {\n                            0: (_currencies$Field$INP3 = currencies[Field.INPUT]) === null || _currencies$Field$INP3 === void 0 ? void 0 : _currencies$Field$INP3.symbol\n                          }\n                        }, void 0, false, void 0, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 726,\n                        columnNumber: 29\n                      }, this), approvalPending || approvalState === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Loader, {\n                        stroke: theme.white\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 732,\n                        columnNumber: 29\n                      }, this) : approvalSubmitted && approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                        size: \"20\",\n                        color: theme.accentSuccess\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 735,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n                        text: /*#__PURE__*/_jsxDEV(Trans, {\n                          id: \"You must give the Uniswap smart contracts permission to use your {0}. You only have to do this once per token.\",\n                          values: {\n                            0: (_currencies$Field$INP4 = currencies[Field.INPUT]) === null || _currencies$Field$INP4 === void 0 ? void 0 : _currencies$Field$INP4.symbol\n                          }\n                        }, void 0, false, void 0, this),\n                        children: /*#__PURE__*/_jsxDEV(HelpCircle, {\n                          size: \"20\",\n                          color: theme.white,\n                          style: {\n                            marginLeft: '8px'\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 745,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 737,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 719,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 709,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n                    onClick: () => {\n                      if (isExpertMode) {\n                        handleSwap();\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined\n                        });\n                      }\n                    },\n                    width: \"100%\",\n                    id: \"swap-button\",\n                    disabled: !isValid || routeIsSyncing || routeIsLoading || approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED || priceImpactTooHigh,\n                    error: isValid && priceImpactSeverity > 2,\n                    children: /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: 16,\n                      fontWeight: 600,\n                      children: priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"High Price Impact\"\n                      }, void 0, false, void 0, this) : trade && priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap Anyway\"\n                      }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Swap\"\n                      }, void 0, false, void 0, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 775,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 750,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this) : isValid && (permit.state === PermitState.APPROVAL_OR_PERMIT_NEEDED || permit.state === PermitState.APPROVAL_LOADING) ? /*#__PURE__*/_jsxDEV(ButtonYellow, {\n                onClick: updatePermit,\n                disabled: isPermitPending || isApprovalLoading,\n                style: {\n                  gap: 14\n                },\n                children: isPermitPending ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Loader, {\n                    size: \"20px\",\n                    stroke: theme.accentWarning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 797,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                    color: \"accentWarning\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Approve in your wallet\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 798,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : isPermitFailed ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n                    size: 20,\n                    stroke: theme.accentWarning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 804,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                    color: \"accentWarning\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Approval failed. Try again.\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 805,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : isApprovalLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Loader, {\n                    size: \"20px\",\n                    stroke: theme.accentWarning\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 811,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                    color: \"accentWarning\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Approval pending\"\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 812,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      height: 20\n                    },\n                    children: /*#__PURE__*/_jsxDEV(MouseoverTooltip, {\n                      text: /*#__PURE__*/_jsxDEV(Trans, {\n                        id: \"Permission is required for Uniswap to swap each token. This will expire after one month for your security.\"\n                      }, void 0, false, void 0, this),\n                      children: /*#__PURE__*/_jsxDEV(Info, {\n                        size: 20,\n                        color: theme.accentWarning\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 827,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ThemedText.SubHeader, {\n                    color: \"accentWarning\",\n                    children: /*#__PURE__*/_jsxDEV(Trans, {\n                      id: \"Approve use of {0}\",\n                      values: {\n                        0: (_currencies$Field$INP5 = currencies[Field.INPUT]) === null || _currencies$Field$INP5 === void 0 ? void 0 : _currencies$Field$INP5.symbol\n                      }\n                    }, void 0, false, void 0, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 830,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(ButtonError, {\n                onClick: () => {\n                  if (isExpertMode) {\n                    handleSwap();\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined\n                    });\n                  }\n                },\n                id: \"swap-button\",\n                disabled: !isValid || routeIsSyncing || routeIsLoading || priceImpactTooHigh || (permit2Enabled ? permit.state === PermitState.LOADING : Boolean(swapCallbackError)),\n                error: isValid && priceImpactSeverity > 2 && (permit2Enabled || !swapCallbackError),\n                children: /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: 20,\n                  fontWeight: 600,\n                  children: swapInputError ? swapInputError : routeIsSyncing || routeIsLoading ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Swap\"\n                  }, void 0, false, void 0, this) : priceImpactTooHigh ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Price Impact Too High\"\n                  }, void 0, false, void 0, this) : priceImpactSeverity > 2 ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Swap Anyway\"\n                  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Swap\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 861,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 837,\n                columnNumber: 19\n              }, this), isExpertMode && swapErrorMessage ? /*#__PURE__*/_jsxDEV(SwapCallbackError, {\n                error: swapErrorMessage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 53\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NetworkAlert, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 882,\n        columnNumber: 9\n      }, this), !swapIsUnsupported ? null : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n        show: swapIsUnsupported,\n        currencies: [currencies[Field.INPUT], currencies[Field.OUTPUT]]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}\n_s(Swap, \"X+8k74BWfYF0uDp5bIEb9W7EMJA=\", false, function () {\n  return [useNavigate, useWeb3React, useDefaultsFromURLSearch, useCurrency, useCurrency, useAllTokens, _useTheme, useToggleWalletModal, useExpertModeManager, useSwapState, useDerivedSwapInfo, useWrapCallback, useENSAddress, useStablecoinValue, useStablecoinValue, useSwapActionHandlers, usePermit2Enabled, usePermit, useTransactionAdder, useApproveCallbackFromTrade, useTransactionDeadline, useERC20PermitFromTrade, useSwapCallback, useIsArgentWallet, useIsSwapUnsupported];\n});\n_c = Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["sendAnalyticsEvent","Trace","TraceEvent","BrowserEvent","ElementName","EventName","PageName","SectionName","UNIVERSAL_ROUTER_ADDRESS","useWeb3React","sendEvent","NetworkAlert","PriceImpactWarning","SwapDetailsDropdown","UnsupportedCurrencyFooter","TokenSafetyModal","MouseoverTooltip","isSupportedChain","usePermit2Enabled","usePermit","PermitState","useSwapCallback","useTransactionDeadline","JSBI","formatSwapQuoteReceivedEventProperties","useCallback","useEffect","useMemo","useState","AlertTriangle","ArrowDown","CheckCircle","HelpCircle","Info","useNavigate","Text","useToggleWalletModal","TradeState","useTransactionAdder","currencyAmountToPreciseFloat","formatTransactionAmount","AddressInputPanel","ButtonConfirmed","ButtonError","ButtonLight","ButtonPrimary","ButtonYellow","GrayCard","AutoColumn","SwapCurrencyInputPanel","Loader","AutoRow","confirmPriceImpactWithoutFee","ConfirmSwapModal","ArrowWrapper","PageWrapper","SwapCallbackError","SwapWrapper","SwapHeader","SwitchLocaleLink","TOKEN_SHORTHANDS","useAllTokens","useCurrency","ApprovalState","useApproveCallbackFromTrade","useENSAddress","useERC20PermitFromTrade","UseERC20PermitState","useIsArgentWallet","useIsSwapUnsupported","useStablecoinValue","useWrapCallback","WrapErrorText","WrapType","Field","useDefaultsFromURLSearch","useDerivedSwapInfo","useSwapActionHandlers","useSwapState","useExpertModeManager","LinkStyledButton","ThemedText","computeFiatValuePriceImpact","maxAmountSpend","computeRealizedPriceImpact","warningSeverity","supportedChainId","ArrowContainer","styled","div","SwapSection","theme","backgroundModule","textSecondary","stateOverlayHover","stateOverlayPressed","OutputSwapSection","backgroundSurface","showDetailsDropdown","DetailsSwapSection","getIsValidSwapQuote","trade","tradeState","swapInputError","VALID","SYNCING","largerPercentValue","a","b","greaterThan","undefined","TRADE_STRING","Swap","className","navigate","account","chainId","loadedUrlParams","newSwapQuoteNeedsLogging","setNewSwapQuoteNeedsLogging","fetchingSwapQuoteStartTime","setFetchingSwapQuoteStartTime","loadedInputCurrency","loadedOutputCurrency","INPUT","currencyId","OUTPUT","dismissTokenWarning","setDismissTokenWarning","urlLoadedTokens","filter","c","isToken","handleConfirmTokenWarning","defaultTokens","importTokensNotInDefault","token","address","supported","Object","keys","some","shorthand","shorthandTokenAddress","useTheme","toggleWalletModal","isExpertMode","independentField","typedValue","recipient","state","allowedSlippage","currencyBalances","parsedAmount","currencies","inputError","wrapType","execute","onWrap","wrapInputError","showWrap","NOT_APPLICABLE","recipientAddress","parsedAmounts","inputAmount","outputAmount","routeNotFound","routeIsLoading","routeIsSyncing","swaps","LOADING","fiatValueInput","fiatValueOutput","stablecoinPriceImpact","onSwitchTokens","onCurrencySelection","onUserInput","onChangeRecipient","isValid","dependentField","handleTypeInput","value","handleTypeOutput","handleDismissTokenWarning","showConfirm","tradeToConfirm","swapErrorMessage","attemptingTxn","txHash","setSwapState","formattedAmounts","toExact","userHasSpecifiedInputOutput","Boolean","BigInt","permit2Enabled","maximumAmountIn","currency","permit","isApprovalLoading","APPROVAL_LOADING","isPermitPending","setIsPermitPending","isPermitFailed","setIsPermitFailed","addTransaction","updatePermit","approval","callback","APPROVE_TOKEN_TXN_SUBMITTED","chain_id","token_symbol","symbol","token_address","response","info","e","console","error","approvalState","approveCallback","transactionDeadline","signatureState","signatureData","gatherPermitSignature","approvalPending","setApprovalPending","handleApprove","NOT_SIGNED","code","category","action","label","join","approvalSubmitted","setApprovalSubmitted","PENDING","maxInputAmount","showMaxButton","equalTo","swapCallback","swapCallbackError","handleSwap","then","hash","catch","message","swapQuoteReceivedDate","setSwapQuoteReceivedDate","priceImpactSeverity","largerPriceImpact","marketPriceImpact","priceImpact","isArgentWallet","showApproveFlow","NOT_APPROVED","APPROVED","handleConfirmDismiss","handleAcceptChanges","handleInputSelect","inputCurrency","handleMaxInput","handleOutputSelect","outputCurrency","swapIsUnsupported","priceImpactTooHigh","showPriceImpactWarning","now","Date","SWAP_QUOTE_RECEIVED","gasUseEstimateUSD","approveTokenButtonDisabled","SIGNED","SWAP_PAGE","length","display","CURRENCY_INPUT_PANEL","onClick","SWAP_TOKENS_REVERSED","SWAP_TOKENS_REVERSE_ARROW_BUTTON","textPrimary","textTertiary","CURRENCY_OUTPUT_PANEL","padding","CONNECT_WALLET_BUTTON_CLICKED","received_swap_quote","CONNECT_WALLET_BUTTON","WRAP","UNWRAP","textAlign","flexWrap","width","white","accentSuccess","marginLeft","APPROVAL_OR_PERMIT_NEEDED","gap","accentWarning","height"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/Swap/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, Trace, TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, ElementName, EventName, PageName, SectionName } from '@uniswap/analytics-events'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Percent, Token, TradeType } from '@uniswap/sdk-core'\nimport { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendEvent } from 'components/analytics'\nimport { NetworkAlert } from 'components/NetworkAlert/NetworkAlert'\nimport PriceImpactWarning from 'components/swap/PriceImpactWarning'\nimport SwapDetailsDropdown from 'components/swap/SwapDetailsDropdown'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport { isSupportedChain } from 'constants/chains'\nimport { usePermit2Enabled } from 'featureFlags/flags/permit2'\nimport usePermit, { PermitState } from 'hooks/usePermit2'\nimport { useSwapCallback } from 'hooks/useSwapCallback'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport JSBI from 'jsbi'\nimport { formatSwapQuoteReceivedEventProperties } from 'lib/utils/analytics'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { ReactNode } from 'react'\nimport { AlertTriangle, ArrowDown, CheckCircle, HelpCircle, Info } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useToggleWalletModal } from 'state/application/hooks'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { TradeState } from 'state/routing/types'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport styled, { useTheme } from 'styled-components/macro'\nimport { currencyAmountToPreciseFloat, formatTransactionAmount } from 'utils/formatNumbers'\n\nimport AddressInputPanel from '../../components/AddressInputPanel'\nimport { ButtonConfirmed, ButtonError, ButtonLight, ButtonPrimary, ButtonYellow } from '../../components/Button'\nimport { GrayCard } from '../../components/Card'\nimport { AutoColumn } from '../../components/Column'\nimport SwapCurrencyInputPanel from '../../components/CurrencyInputPanel/SwapCurrencyInputPanel'\nimport Loader from '../../components/Loader'\nimport { AutoRow } from '../../components/Row'\nimport confirmPriceImpactWithoutFee from '../../components/swap/confirmPriceImpactWithoutFee'\nimport ConfirmSwapModal from '../../components/swap/ConfirmSwapModal'\nimport { ArrowWrapper, PageWrapper, SwapCallbackError, SwapWrapper } from '../../components/swap/styleds'\nimport SwapHeader from '../../components/swap/SwapHeader'\nimport { SwitchLocaleLink } from '../../components/SwitchLocaleLink'\nimport { TOKEN_SHORTHANDS } from '../../constants/tokens'\nimport { useAllTokens, useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport useENSAddress from '../../hooks/useENSAddress'\nimport { useERC20PermitFromTrade, UseERC20PermitState } from '../../hooks/useERC20Permit'\nimport useIsArgentWallet from '../../hooks/useIsArgentWallet'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport { useStablecoinValue } from '../../hooks/useStablecoinPrice'\nimport useWrapCallback, { WrapErrorText, WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager } from '../../state/user/hooks'\nimport { LinkStyledButton, ThemedText } from '../../theme'\nimport { computeFiatValuePriceImpact } from '../../utils/computeFiatValuePriceImpact'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeRealizedPriceImpact, warningSeverity } from '../../utils/prices'\nimport { supportedChainId } from '../../utils/supportedChainId'\n\nconst ArrowContainer = styled.div`\n  display: inline-block;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n  height: 100%;\n`\n\nconst SwapSection = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.backgroundModule};\n  border-radius: 12px;\n  padding: 16px;\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 14px;\n  line-height: 20px;\n  font-weight: 500;\n\n  &:before {\n    box-sizing: border-box;\n    background-size: 100%;\n    border-radius: inherit;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n\n    width: 100%;\n    height: 100%;\n    pointer-events: none;\n    content: '';\n    border: 1px solid ${({ theme }) => theme.backgroundModule};\n  }\n\n  &:hover:before {\n    border-color: ${({ theme }) => theme.stateOverlayHover};\n  }\n\n  &:focus-within:before {\n    border-color: ${({ theme }) => theme.stateOverlayPressed};\n  }\n`\n\nconst OutputSwapSection = styled(SwapSection)<{ showDetailsDropdown: boolean }>`\n  border-bottom: ${({ theme }) => `1px solid ${theme.backgroundSurface}`};\n  border-bottom-left-radius: ${({ showDetailsDropdown }) => showDetailsDropdown && '0'};\n  border-bottom-right-radius: ${({ showDetailsDropdown }) => showDetailsDropdown && '0'};\n`\n\nconst DetailsSwapSection = styled(SwapSection)`\n  padding: 0;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n`\n\nexport function getIsValidSwapQuote(\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined,\n  tradeState: TradeState,\n  swapInputError?: ReactNode\n): boolean {\n  return !!swapInputError && !!trade && (tradeState === TradeState.VALID || tradeState === TradeState.SYNCING)\n}\n\nfunction largerPercentValue(a?: Percent, b?: Percent) {\n  if (a && b) {\n    return a.greaterThan(b) ? a : b\n  } else if (a) {\n    return a\n  } else if (b) {\n    return b\n  }\n  return undefined\n}\n\nconst TRADE_STRING = 'SwapRouter'\n\nexport default function Swap({ className }: { className?: string }) {\n  const navigate = useNavigate()\n  const { account, chainId } = useWeb3React()\n  const loadedUrlParams = useDefaultsFromURLSearch()\n  const [newSwapQuoteNeedsLogging, setNewSwapQuoteNeedsLogging] = useState(true)\n  const [fetchingSwapQuoteStartTime, setFetchingSwapQuoteStartTime] = useState<Date | undefined>()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.[Field.INPUT]?.currencyId),\n    useCurrency(loadedUrlParams?.[Field.OUTPUT]?.currencyId),\n  ]\n  const [dismissTokenWarning, setDismissTokenWarning] = useState<boolean>(false)\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c?.isToken ?? false) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency]\n  )\n  const handleConfirmTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n  }, [])\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault = useMemo(\n    () =>\n      urlLoadedTokens &&\n      urlLoadedTokens\n        .filter((token: Token) => {\n          return !(token.address in defaultTokens)\n        })\n        .filter((token: Token) => {\n          // Any token addresses that are loaded from the shorthands map do not need to show the import URL\n          const supported = supportedChainId(chainId)\n          if (!supported) return true\n          return !Object.keys(TOKEN_SHORTHANDS).some((shorthand) => {\n            const shorthandTokenAddress = TOKEN_SHORTHANDS[shorthand][supported]\n            return shorthandTokenAddress && shorthandTokenAddress === token.address\n          })\n        }),\n    [chainId, defaultTokens, urlLoadedTokens]\n  )\n\n  const theme = useTheme()\n\n  // toggle wallet when disconnected\n  const toggleWalletModal = useToggleWalletModal()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const {\n    trade: { state: tradeState, trade },\n    allowedSlippage,\n    currencyBalances,\n    parsedAmount,\n    currencies,\n    inputError: swapInputError,\n  } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const { address: recipientAddress } = useENSAddress(recipient)\n\n  const parsedAmounts = useMemo(\n    () =>\n      showWrap\n        ? {\n            [Field.INPUT]: parsedAmount,\n            [Field.OUTPUT]: parsedAmount,\n          }\n        : {\n            [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n            [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n          },\n    [independentField, parsedAmount, showWrap, trade]\n  )\n\n  const [routeNotFound, routeIsLoading, routeIsSyncing] = useMemo(\n    () => [!trade?.swaps, TradeState.LOADING === tradeState, TradeState.SYNCING === tradeState],\n    [trade, tradeState]\n  )\n\n  const fiatValueInput = useStablecoinValue(parsedAmounts[Field.INPUT])\n  const fiatValueOutput = useStablecoinValue(parsedAmounts[Field.OUTPUT])\n  const stablecoinPriceImpact = useMemo(\n    () => (routeIsSyncing ? undefined : computeFiatValuePriceImpact(fiatValueInput, fiatValueOutput)),\n    [fiatValueInput, fiatValueOutput, routeIsSyncing]\n  )\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput]\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput]\n  )\n\n  // reset if they close warning without tokens in params\n  const handleDismissTokenWarning = useCallback(() => {\n    setDismissTokenWarning(true)\n    navigate('/swap/')\n  }, [navigate])\n\n  // modal and loading\n  const [{ showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    showConfirm: boolean\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = useMemo(\n    () => ({\n      [independentField]: typedValue,\n      [dependentField]: showWrap\n        ? parsedAmounts[independentField]?.toExact() ?? ''\n        : formatTransactionAmount(currencyAmountToPreciseFloat(parsedAmounts[dependentField])),\n    }),\n    [dependentField, independentField, parsedAmounts, showWrap, typedValue]\n  )\n\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0))\n  )\n\n  const permit2Enabled = usePermit2Enabled()\n  const maximumAmountIn = useMemo(() => {\n    const maximumAmountIn = trade?.maximumAmountIn(allowedSlippage)\n    return maximumAmountIn?.currency.isToken ? (maximumAmountIn as CurrencyAmount<Token>) : undefined\n  }, [allowedSlippage, trade])\n  const permit = usePermit(\n    permit2Enabled ? maximumAmountIn : undefined,\n    permit2Enabled && chainId ? UNIVERSAL_ROUTER_ADDRESS(chainId) : undefined\n  )\n  const isApprovalLoading = permit.state === PermitState.APPROVAL_LOADING\n  const [isPermitPending, setIsPermitPending] = useState(false)\n  const [isPermitFailed, setIsPermitFailed] = useState(false)\n  const addTransaction = useTransactionAdder()\n  const updatePermit = useCallback(async () => {\n    setIsPermitPending(true)\n    try {\n      const approval = await permit.callback?.()\n      if (approval) {\n        sendAnalyticsEvent(EventName.APPROVE_TOKEN_TXN_SUBMITTED, {\n          chain_id: chainId,\n          token_symbol: maximumAmountIn?.currency.symbol,\n          token_address: maximumAmountIn?.currency.address,\n        })\n\n        const { response, info } = approval\n        addTransaction(response, info)\n      }\n      setIsPermitFailed(false)\n    } catch (e) {\n      console.error(e)\n      setIsPermitFailed(true)\n    } finally {\n      setIsPermitPending(false)\n    }\n  }, [addTransaction, chainId, maximumAmountIn?.currency.address, maximumAmountIn?.currency.symbol, permit])\n\n  // check whether the user has approved the router on the input token\n  const [approvalState, approveCallback] = useApproveCallbackFromTrade(\n    permit2Enabled ? undefined : trade,\n    allowedSlippage\n  )\n  const transactionDeadline = useTransactionDeadline()\n  const {\n    state: signatureState,\n    signatureData,\n    gatherPermitSignature,\n  } = useERC20PermitFromTrade(permit2Enabled ? undefined : trade, allowedSlippage, transactionDeadline)\n\n  const [approvalPending, setApprovalPending] = useState<boolean>(false)\n  const handleApprove = useCallback(async () => {\n    setApprovalPending(true)\n    try {\n      if (signatureState === UseERC20PermitState.NOT_SIGNED && gatherPermitSignature) {\n        try {\n          await gatherPermitSignature()\n        } catch (error) {\n          // try to approve if gatherPermitSignature failed for any reason other than the user rejecting it\n          if (error?.code !== 4001) {\n            await approveCallback()\n          }\n        }\n      } else {\n        await approveCallback()\n\n        sendEvent({\n          category: 'Swap',\n          action: 'Approve',\n          label: [TRADE_STRING, trade?.inputAmount?.currency.symbol].join('/'),\n        })\n      }\n    } finally {\n      setApprovalPending(false)\n    }\n  }, [signatureState, gatherPermitSignature, approveCallback, trade?.inputAmount?.currency.symbol])\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approvalState, approvalSubmitted])\n\n  const maxInputAmount: CurrencyAmount<Currency> | undefined = useMemo(\n    () => maxAmountSpend(currencyBalances[Field.INPUT]),\n    [currencyBalances]\n  )\n  const showMaxButton = Boolean(maxInputAmount?.greaterThan(0) && !parsedAmounts[Field.INPUT]?.equalTo(maxInputAmount))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(\n    trade,\n    allowedSlippage,\n    recipient,\n    signatureData,\n    permit\n  )\n\n  const handleSwap = useCallback(() => {\n\n    if (!swapCallback) {\n      return\n    }\n    if (stablecoinPriceImpact && !confirmPriceImpactWithoutFee(stablecoinPriceImpact)) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, showConfirm, swapErrorMessage: undefined, txHash: hash })\n        sendEvent({\n          category: 'Swap',\n          action: 'transaction hash',\n          label: hash,\n        })\n        sendEvent({\n          category: 'Swap',\n          action:\n            recipient === null\n              ? 'Swap w/o Send'\n              : (recipientAddress ?? recipient) === account\n              ? 'Swap w/o Send + recipient'\n              : 'Swap w/ Send',\n          label: [TRADE_STRING, trade?.inputAmount?.currency?.symbol, trade?.outputAmount?.currency?.symbol, 'MH'].join(\n            '/'\n          ),\n        })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          showConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [\n    swapCallback,\n    stablecoinPriceImpact,\n    tradeToConfirm,\n    showConfirm,\n    recipient,\n    recipientAddress,\n    account,\n    trade?.inputAmount?.currency?.symbol,\n    trade?.outputAmount?.currency?.symbol,\n  ])\n\n  // errors\n  const [swapQuoteReceivedDate, setSwapQuoteReceivedDate] = useState<Date | undefined>()\n\n  // warnings on the greater of fiat value price impact and execution price impact\n  const { priceImpactSeverity, largerPriceImpact } = useMemo(() => {\n    const marketPriceImpact = trade?.priceImpact ? computeRealizedPriceImpact(trade) : undefined\n    const largerPriceImpact = largerPercentValue(marketPriceImpact, stablecoinPriceImpact)\n    return { priceImpactSeverity: warningSeverity(largerPriceImpact), largerPriceImpact }\n  }, [stablecoinPriceImpact, trade])\n\n  const isArgentWallet = useIsArgentWallet()\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !permit2Enabled &&\n    !isArgentWallet &&\n    !swapInputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ showConfirm: false, tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn, showConfirm })\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency: Currency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n    },\n    [onCurrencySelection]\n  )\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && onUserInput(Field.INPUT, maxInputAmount.toExact())\n    sendEvent({\n      category: 'Swap',\n      action: 'Max',\n    })\n  }, [maxInputAmount, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency: Currency) => onCurrencySelection(Field.OUTPUT, outputCurrency),\n    [onCurrencySelection]\n  )\n\n  const swapIsUnsupported = useIsSwapUnsupported(currencies[Field.INPUT], currencies[Field.OUTPUT])\n\n  const priceImpactTooHigh = priceImpactSeverity > 3 && !isExpertMode\n  const showPriceImpactWarning = largerPriceImpact && priceImpactSeverity > 3\n\n  // Handle time based logging events and event properties.\n  useEffect(() => {\n    const now = new Date()\n    // If a trade exists, and we need to log the receipt of this new swap quote:\n    if (newSwapQuoteNeedsLogging && !!trade) {\n      // Set the current datetime as the time of receipt of latest swap quote.\n      setSwapQuoteReceivedDate(now)\n      // Log swap quote.\n      sendAnalyticsEvent(\n        EventName.SWAP_QUOTE_RECEIVED,\n        formatSwapQuoteReceivedEventProperties(trade, trade.gasUseEstimateUSD ?? undefined, fetchingSwapQuoteStartTime)\n      )\n      // Latest swap quote has just been logged, so we don't need to log the current trade anymore\n      // unless user inputs change again and a new trade is in the process of being generated.\n      setNewSwapQuoteNeedsLogging(false)\n      // New quote is not being fetched, so set start time of quote fetch to undefined.\n      setFetchingSwapQuoteStartTime(undefined)\n    }\n    // If another swap quote is being loaded based on changed user inputs:\n    if (routeIsLoading) {\n      setNewSwapQuoteNeedsLogging(true)\n      if (!fetchingSwapQuoteStartTime) setFetchingSwapQuoteStartTime(now)\n    }\n  }, [\n    newSwapQuoteNeedsLogging,\n    routeIsSyncing,\n    routeIsLoading,\n    fetchingSwapQuoteStartTime,\n    trade,\n    setSwapQuoteReceivedDate,\n  ])\n\n  const approveTokenButtonDisabled =\n    approvalState !== ApprovalState.NOT_APPROVED || approvalSubmitted || signatureState === UseERC20PermitState.SIGNED\n\n  const showDetailsDropdown = Boolean(\n    !showWrap && userHasSpecifiedInputOutput && (trade || routeIsLoading || routeIsSyncing)\n  )\n\n  return (\n    <Trace page={PageName.SWAP_PAGE} shouldLogImpression>\n      <>\n        <TokenSafetyModal\n          isOpen={importTokensNotInDefault.length > 0 && !dismissTokenWarning}\n          tokenAddress={importTokensNotInDefault[0]?.address}\n          secondTokenAddress={importTokensNotInDefault[1]?.address}\n          onContinue={handleConfirmTokenWarning}\n          onCancel={handleDismissTokenWarning}\n          showCancel={true}\n        />\n        <PageWrapper>\n          <SwapWrapper className={className} id=\"swap-page\">\n            <SwapHeader allowedSlippage={allowedSlippage} />\n            <ConfirmSwapModal\n              isOpen={showConfirm}\n              trade={trade}\n              originalTrade={tradeToConfirm}\n              onAcceptChanges={handleAcceptChanges}\n              attemptingTxn={attemptingTxn}\n              txHash={txHash}\n              recipient={recipient}\n              allowedSlippage={allowedSlippage}\n              onConfirm={handleSwap}\n              swapErrorMessage={swapErrorMessage}\n              onDismiss={handleConfirmDismiss}\n              swapQuoteReceivedDate={swapQuoteReceivedDate}\n              fiatValueInput={fiatValueInput}\n              fiatValueOutput={fiatValueOutput}\n            />\n\n            <div style={{ display: 'relative' }}>\n              <SwapSection>\n                <Trace section={SectionName.CURRENCY_INPUT_PANEL}>\n                  <SwapCurrencyInputPanel\n                    label={\n                      independentField === Field.OUTPUT && !showWrap ? (\n                        <Trans>From (at most)</Trans>\n                      ) : (\n                        <Trans>From</Trans>\n                      )\n                    }\n                    value={formattedAmounts[Field.INPUT]}\n                    showMaxButton={showMaxButton}\n                    currency={currencies[Field.INPUT] ?? null}\n                    onUserInput={handleTypeInput}\n                    onMax={handleMaxInput}\n                    fiatValue={fiatValueInput ?? undefined}\n                    onCurrencySelect={handleInputSelect}\n                    otherCurrency={currencies[Field.OUTPUT]}\n                    showCommonBases={true}\n                    id={SectionName.CURRENCY_INPUT_PANEL}\n                    loading={independentField === Field.OUTPUT && routeIsSyncing}\n                  />\n                </Trace>\n              </SwapSection>\n              <ArrowWrapper clickable={isSupportedChain(chainId)}>\n                <TraceEvent\n                  events={[BrowserEvent.onClick]}\n                  name={EventName.SWAP_TOKENS_REVERSED}\n                  element={ElementName.SWAP_TOKENS_REVERSE_ARROW_BUTTON}\n                >\n                  <ArrowContainer\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={theme.textPrimary}\n                  >\n                    <ArrowDown\n                      size=\"16\"\n                      color={\n                        currencies[Field.INPUT] && currencies[Field.OUTPUT] ? theme.textPrimary : theme.textTertiary\n                      }\n                    />\n                  </ArrowContainer>\n                </TraceEvent>\n              </ArrowWrapper>\n            </div>\n            <AutoColumn gap=\"md\">\n              <div>\n                <OutputSwapSection showDetailsDropdown={showDetailsDropdown}>\n                  <Trace section={SectionName.CURRENCY_OUTPUT_PANEL}>\n                    <SwapCurrencyInputPanel\n                      value={formattedAmounts[Field.OUTPUT]}\n                      onUserInput={handleTypeOutput}\n                      label={\n                        independentField === Field.INPUT && !showWrap ? <Trans>To (at least)</Trans> : <Trans>To</Trans>\n                      }\n                      showMaxButton={false}\n                      hideBalance={false}\n                      fiatValue={fiatValueOutput ?? undefined}\n                      priceImpact={stablecoinPriceImpact}\n                      currency={currencies[Field.OUTPUT] ?? null}\n                      onCurrencySelect={handleOutputSelect}\n                      otherCurrency={currencies[Field.INPUT]}\n                      showCommonBases={true}\n                      id={SectionName.CURRENCY_OUTPUT_PANEL}\n                      loading={independentField === Field.INPUT && routeIsSyncing}\n                    />\n                  </Trace>\n\n                  {recipient !== null && !showWrap ? (\n                    <>\n                      <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                        <ArrowWrapper clickable={false}>\n                          <ArrowDown size=\"16\" color={theme.textSecondary} />\n                        </ArrowWrapper>\n                        <LinkStyledButton id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                          <Trans>- Remove recipient</Trans>\n                        </LinkStyledButton>\n                      </AutoRow>\n                      <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n                    </>\n                  ) : null}\n                </OutputSwapSection>\n                {showDetailsDropdown && (\n                  <DetailsSwapSection>\n                    <SwapDetailsDropdown\n                      trade={trade}\n                      syncing={routeIsSyncing}\n                      loading={routeIsLoading}\n                      allowedSlippage={allowedSlippage}\n                    />\n                  </DetailsSwapSection>\n                )}\n              </div>\n              {showPriceImpactWarning && <PriceImpactWarning priceImpact={largerPriceImpact} />}\n              <div>\n                {swapIsUnsupported ? (\n                  <ButtonPrimary disabled={true}>\n                    <ThemedText.DeprecatedMain mb=\"4px\">\n                      <Trans>Unsupported Asset</Trans>\n                    </ThemedText.DeprecatedMain>\n                  </ButtonPrimary>\n                ) : !account ? (\n                  <TraceEvent\n                    events={[BrowserEvent.onClick]}\n                    name={EventName.CONNECT_WALLET_BUTTON_CLICKED}\n                    properties={{ received_swap_quote: getIsValidSwapQuote(trade, tradeState, swapInputError) }}\n                    element={ElementName.CONNECT_WALLET_BUTTON}\n                  >\n                    <ButtonLight onClick={toggleWalletModal} fontWeight={600}>\n                      <Trans>Connect Wallet</Trans>\n                    </ButtonLight>\n                  </TraceEvent>\n                ) : showWrap ? (\n                  <ButtonPrimary disabled={Boolean(wrapInputError)} onClick={onWrap} fontWeight={600}>\n                    {wrapInputError ? (\n                      <WrapErrorText wrapInputError={wrapInputError} />\n                    ) : wrapType === WrapType.WRAP ? (\n                      <Trans>Wrap</Trans>\n                    ) : wrapType === WrapType.UNWRAP ? (\n                      <Trans>Unwrap</Trans>\n                    ) : null}\n                  </ButtonPrimary>\n                ) : routeNotFound && userHasSpecifiedInputOutput && !routeIsLoading && !routeIsSyncing ? (\n                  <GrayCard style={{ textAlign: 'center' }}>\n                    <ThemedText.DeprecatedMain mb=\"4px\">\n                      <Trans>Insufficient liquidity for this trade.</Trans>\n                    </ThemedText.DeprecatedMain>\n                  </GrayCard>\n                ) : showApproveFlow ? (\n                  <AutoRow style={{ flexWrap: 'nowrap', width: '100%' }}>\n                    <AutoColumn style={{ width: '100%' }} gap=\"12px\">\n                      <ButtonConfirmed\n                        fontWeight={600}\n                        onClick={handleApprove}\n                        disabled={approveTokenButtonDisabled}\n                        width=\"100%\"\n                        altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                        confirmed={\n                          approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED\n                        }\n                      >\n                        <AutoRow justify=\"space-between\" style={{ flexWrap: 'nowrap' }} height=\"20px\">\n                          {/* we need to shorten this string on mobile */}\n                          {approvalState === ApprovalState.APPROVED || signatureState === UseERC20PermitState.SIGNED ? (\n                            <ThemedText.SubHeader width=\"100%\" textAlign=\"center\" color=\"textSecondary\">\n                              <Trans>You can now trade {currencies[Field.INPUT]?.symbol}</Trans>\n                            </ThemedText.SubHeader>\n                          ) : (\n                            <ThemedText.SubHeader width=\"100%\" textAlign=\"center\" color=\"white\">\n                              <Trans>Allow the Uniswap Protocol to use your {currencies[Field.INPUT]?.symbol}</Trans>\n                            </ThemedText.SubHeader>\n                          )}\n\n                          {approvalPending || approvalState === ApprovalState.PENDING ? (\n                            <Loader stroke={theme.white} />\n                          ) : (approvalSubmitted && approvalState === ApprovalState.APPROVED) ||\n                            signatureState === UseERC20PermitState.SIGNED ? (\n                            <CheckCircle size=\"20\" color={theme.accentSuccess} />\n                          ) : (\n                            <MouseoverTooltip\n                              text={\n                                <Trans>\n                                  You must give the Uniswap smart contracts permission to use your{' '}\n                                  {currencies[Field.INPUT]?.symbol}. You only have to do this once per token.\n                                </Trans>\n                              }\n                            >\n                              <HelpCircle size=\"20\" color={theme.white} style={{ marginLeft: '8px' }} />\n                            </MouseoverTooltip>\n                          )}\n                        </AutoRow>\n                      </ButtonConfirmed>\n                      <ButtonError\n                        onClick={() => {\n                          if (isExpertMode) {\n                            handleSwap()\n                          } else {\n                            setSwapState({\n                              tradeToConfirm: trade,\n                              attemptingTxn: false,\n                              swapErrorMessage: undefined,\n                              showConfirm: true,\n                              txHash: undefined,\n                            })\n                          }\n                        }}\n                        width=\"100%\"\n                        id=\"swap-button\"\n                        disabled={\n                          !isValid ||\n                          routeIsSyncing ||\n                          routeIsLoading ||\n                          (approvalState !== ApprovalState.APPROVED && signatureState !== UseERC20PermitState.SIGNED) ||\n                          priceImpactTooHigh\n                        }\n                        error={isValid && priceImpactSeverity > 2}\n                      >\n                        <Text fontSize={16} fontWeight={600}>\n                          {priceImpactTooHigh ? (\n                            <Trans>High Price Impact</Trans>\n                          ) : trade && priceImpactSeverity > 2 ? (\n                            <Trans>Swap Anyway</Trans>\n                          ) : (\n                            <Trans>Swap</Trans>\n                          )}\n                        </Text>\n                      </ButtonError>\n                    </AutoColumn>\n                  </AutoRow>\n                ) : isValid &&\n                  (permit.state === PermitState.APPROVAL_OR_PERMIT_NEEDED ||\n                    permit.state === PermitState.APPROVAL_LOADING) ? (\n                  <ButtonYellow\n                    onClick={updatePermit}\n                    disabled={isPermitPending || isApprovalLoading}\n                    style={{ gap: 14 }}\n                  >\n                    {isPermitPending ? (\n                      <>\n                        <Loader size=\"20px\" stroke={theme.accentWarning} />\n                        <ThemedText.SubHeader color=\"accentWarning\">\n                          <Trans>Approve in your wallet</Trans>\n                        </ThemedText.SubHeader>\n                      </>\n                    ) : isPermitFailed ? (\n                      <>\n                        <AlertTriangle size={20} stroke={theme.accentWarning} />\n                        <ThemedText.SubHeader color=\"accentWarning\">\n                          <Trans>Approval failed. Try again.</Trans>\n                        </ThemedText.SubHeader>\n                      </>\n                    ) : isApprovalLoading ? (\n                      <>\n                        <Loader size=\"20px\" stroke={theme.accentWarning} />\n                        <ThemedText.SubHeader color=\"accentWarning\">\n                          <Trans>Approval pending</Trans>\n                        </ThemedText.SubHeader>\n                      </>\n                    ) : (\n                      <>\n                        <div style={{ height: 20 }}>\n                          <MouseoverTooltip\n                            text={\n                              <Trans>\n                                Permission is required for Uniswap to swap each token. This will expire after one month\n                                for your security.\n                              </Trans>\n                            }\n                          >\n                            <Info size={20} color={theme.accentWarning} />\n                          </MouseoverTooltip>\n                        </div>\n                        <ThemedText.SubHeader color=\"accentWarning\">\n                          <Trans>Approve use of {currencies[Field.INPUT]?.symbol}</Trans>\n                        </ThemedText.SubHeader>\n                      </>\n                    )}\n                  </ButtonYellow>\n                ) : (\n                  <ButtonError\n                    onClick={() => {\n                      if (isExpertMode) {\n                        handleSwap()\n                      } else {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        })\n                      }\n                    }}\n                    id=\"swap-button\"\n                    disabled={\n                      !isValid ||\n                      routeIsSyncing ||\n                      routeIsLoading ||\n                      priceImpactTooHigh ||\n                      (permit2Enabled ? permit.state === PermitState.LOADING : Boolean(swapCallbackError))\n                    }\n                    error={isValid && priceImpactSeverity > 2 && (permit2Enabled || !swapCallbackError)}\n                  >\n                    <Text fontSize={20} fontWeight={600}>\n                      {swapInputError ? (\n                        swapInputError\n                      ) : routeIsSyncing || routeIsLoading ? (\n                        <Trans>Swap</Trans>\n                      ) : priceImpactTooHigh ? (\n                        <Trans>Price Impact Too High</Trans>\n                      ) : priceImpactSeverity > 2 ? (\n                        <Trans>Swap Anyway</Trans>\n                      ) : (\n                        <Trans>Swap</Trans>\n                      )}\n                    </Text>\n                  </ButtonError>\n                )}\n                {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n              </div>\n            </AutoColumn>\n          </SwapWrapper>\n          <NetworkAlert />\n        </PageWrapper>\n        <SwitchLocaleLink />\n        {!swapIsUnsupported ? null : (\n          <UnsupportedCurrencyFooter\n            show={swapIsUnsupported}\n            currencies={[currencies[Field.INPUT], currencies[Field.OUTPUT]]}\n          />\n        )}\n      </>\n    </Trace>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}