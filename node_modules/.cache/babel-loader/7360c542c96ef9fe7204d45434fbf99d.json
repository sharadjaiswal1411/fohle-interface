{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Swatch = void 0;\nvar converter_1 = require(\"./converter\");\nvar Swatch = /** @class */function () {\n  function Swatch(rgb, population) {\n    this._rgb = rgb;\n    this._population = population;\n  }\n  Swatch.applyFilters = function (colors, filters) {\n    return filters.length > 0 ? colors.filter(function (_a) {\n      var r = _a.r,\n        g = _a.g,\n        b = _a.b;\n      for (var j = 0; j < filters.length; j++) {\n        if (!filters[j](r, g, b, 255)) return false;\n      }\n      return true;\n    }) : colors;\n  };\n  /**\n   * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n   * @param {Swatch} swatch\n   */\n  Swatch.clone = function (swatch) {\n    return new Swatch(swatch._rgb, swatch._population);\n  };\n  Object.defineProperty(Swatch.prototype, \"r\", {\n    /**\n     * The red value in the RGB value\n     */\n    get: function () {\n      return this._rgb[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"g\", {\n    /**\n     * The green value in the RGB value\n     */\n    get: function () {\n      return this._rgb[1];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"b\", {\n    /**\n     * The blue value in the RGB value\n     */\n    get: function () {\n      return this._rgb[2];\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"rgb\", {\n    /**\n     * The color value as a rgb value\n     */\n    get: function () {\n      return this._rgb;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hsl\", {\n    /**\n     * The color value as a hsl value\n     */\n    get: function () {\n      if (!this._hsl) {\n        var _a = this._rgb,\n          r = _a[0],\n          g = _a[1],\n          b = _a[2];\n        this._hsl = converter_1.rgbToHsl(r, g, b);\n      }\n      return this._hsl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"hex\", {\n    /**\n     * The color value as a hex string\n     */\n    get: function () {\n      if (!this._hex) {\n        var _a = this._rgb,\n          r = _a[0],\n          g = _a[1],\n          b = _a[2];\n        this._hex = converter_1.rgbToHex(r, g, b);\n      }\n      return this._hex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"population\", {\n    get: function () {\n      return this._population;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Get the JSON object for the swatch\n   */\n  Swatch.prototype.toJSON = function () {\n    return {\n      rgb: this.rgb,\n      population: this.population\n    };\n  };\n  /**\n   * Get the color value as a rgb value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getRgb = function () {\n    return this._rgb;\n  };\n  /**\n   * Get the color value as a hsl value\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getHsl = function () {\n    return this.hsl;\n  };\n  /**\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getPopulation = function () {\n    return this._population;\n  };\n  /**\n   * Get the color value as a hex string\n   * @deprecated Use property instead\n   */\n  // TODO: deprecate internally, use property instead\n  Swatch.prototype.getHex = function () {\n    return this.hex;\n  };\n  Swatch.prototype.getYiq = function () {\n    if (!this._yiq) {\n      var rgb = this._rgb;\n      this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n    }\n    return this._yiq;\n  };\n  Object.defineProperty(Swatch.prototype, \"titleTextColor\", {\n    get: function () {\n      if (this._titleTextColor) {\n        this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000';\n      }\n      return this._titleTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Swatch.prototype, \"bodyTextColor\", {\n    get: function () {\n      if (this._bodyTextColor) {\n        this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000';\n      }\n      return this._bodyTextColor;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Swatch.prototype.getTitleTextColor = function () {\n    return this.titleTextColor;\n  };\n  Swatch.prototype.getBodyTextColor = function () {\n    return this.bodyTextColor;\n  };\n  return Swatch;\n}();\nexports.Swatch = Swatch;","map":{"version":3,"sources":["../../../../packages/vibrant-color/src/index.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Swatch = void 0;\nvar converter_1 = require(\"./converter\");\nvar Swatch = /** @class */ (function () {\n    function Swatch(rgb, population) {\n        this._rgb = rgb;\n        this._population = population;\n    }\n    Swatch.applyFilters = function (colors, filters) {\n        return filters.length > 0\n            ? colors.filter(function (_a) {\n                var r = _a.r, g = _a.g, b = _a.b;\n                for (var j = 0; j < filters.length; j++) {\n                    if (!filters[j](r, g, b, 255))\n                        return false;\n                }\n                return true;\n            })\n            : colors;\n    };\n    /**\n     * Make a value copy of a swatch based on a previous one. Returns a new Swatch instance\n     * @param {Swatch} swatch\n     */\n    Swatch.clone = function (swatch) {\n        return new Swatch(swatch._rgb, swatch._population);\n    };\n    Object.defineProperty(Swatch.prototype, \"r\", {\n        /**\n         * The red value in the RGB value\n         */\n        get: function () {\n            return this._rgb[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"g\", {\n        /**\n         * The green value in the RGB value\n         */\n        get: function () {\n            return this._rgb[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"b\", {\n        /**\n         * The blue value in the RGB value\n         */\n        get: function () {\n            return this._rgb[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"rgb\", {\n        /**\n         * The color value as a rgb value\n         */\n        get: function () {\n            return this._rgb;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"hsl\", {\n        /**\n         * The color value as a hsl value\n         */\n        get: function () {\n            if (!this._hsl) {\n                var _a = this._rgb, r = _a[0], g = _a[1], b = _a[2];\n                this._hsl = converter_1.rgbToHsl(r, g, b);\n            }\n            return this._hsl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"hex\", {\n        /**\n         * The color value as a hex string\n         */\n        get: function () {\n            if (!this._hex) {\n                var _a = this._rgb, r = _a[0], g = _a[1], b = _a[2];\n                this._hex = converter_1.rgbToHex(r, g, b);\n            }\n            return this._hex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"population\", {\n        get: function () {\n            return this._population;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the JSON object for the swatch\n     */\n    Swatch.prototype.toJSON = function () {\n        return {\n            rgb: this.rgb,\n            population: this.population\n        };\n    };\n    /**\n     * Get the color value as a rgb value\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getRgb = function () {\n        return this._rgb;\n    };\n    /**\n     * Get the color value as a hsl value\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getHsl = function () {\n        return this.hsl;\n    };\n    /**\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getPopulation = function () {\n        return this._population;\n    };\n    /**\n     * Get the color value as a hex string\n     * @deprecated Use property instead\n     */\n    // TODO: deprecate internally, use property instead\n    Swatch.prototype.getHex = function () {\n        return this.hex;\n    };\n    Swatch.prototype.getYiq = function () {\n        if (!this._yiq) {\n            var rgb = this._rgb;\n            this._yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n        }\n        return this._yiq;\n    };\n    Object.defineProperty(Swatch.prototype, \"titleTextColor\", {\n        get: function () {\n            if (this._titleTextColor) {\n                this._titleTextColor = this.getYiq() < 200 ? '#fff' : '#000';\n            }\n            return this._titleTextColor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Swatch.prototype, \"bodyTextColor\", {\n        get: function () {\n            if (this._bodyTextColor) {\n                this._bodyTextColor = this.getYiq() < 150 ? '#fff' : '#000';\n            }\n            return this._bodyTextColor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Swatch.prototype.getTitleTextColor = function () {\n        return this.titleTextColor;\n    };\n    Swatch.prototype.getBodyTextColor = function () {\n        return this.bodyTextColor;\n    };\n    return Swatch;\n}());\nexports.Swatch = Swatch;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}