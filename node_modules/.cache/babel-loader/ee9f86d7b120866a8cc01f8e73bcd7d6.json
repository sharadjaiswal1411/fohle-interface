{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { getGlobalScope } from '@amplitude/analytics-client-common';\nvar LocalStorage = /** @class */function () {\n  function LocalStorage() {}\n  LocalStorage.prototype.isEnabled = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var random, testStorage, testKey, value, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            /* istanbul ignore if */\n            if (!getGlobalScope()) {\n              return [2 /*return*/, false];\n            }\n            random = String(Date.now());\n            testStorage = new LocalStorage();\n            testKey = 'AMP_TEST';\n            _b.label = 1;\n          case 1:\n            _b.trys.push([1, 4, 5, 7]);\n            return [4 /*yield*/, testStorage.set(testKey, random)];\n          case 2:\n            _b.sent();\n            return [4 /*yield*/, testStorage.get(testKey)];\n          case 3:\n            value = _b.sent();\n            return [2 /*return*/, value === random];\n          case 4:\n            _a = _b.sent();\n            /* istanbul ignore next */\n            return [2 /*return*/, false];\n          case 5:\n            return [4 /*yield*/, testStorage.remove(testKey)];\n          case 6:\n            _b.sent();\n            return [7 /*endfinally*/];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  LocalStorage.prototype.get = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var value, _a;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _b.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this.getRaw(key)];\n          case 1:\n            value = _b.sent();\n            if (!value) {\n              return [2 /*return*/, undefined];\n            }\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n            return [2 /*return*/, JSON.parse(value)];\n          case 2:\n            _a = _b.sent();\n            /* istanbul ignore next */\n            return [2 /*return*/, undefined];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  LocalStorage.prototype.getRaw = function (key) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        return [2 /*return*/, ((_a = getGlobalScope()) === null || _a === void 0 ? void 0 : _a.localStorage.getItem(key)) || undefined];\n      });\n    });\n  };\n  LocalStorage.prototype.set = function (key, value) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        try {\n          (_a = getGlobalScope()) === null || _a === void 0 ? void 0 : _a.localStorage.setItem(key, JSON.stringify(value));\n        } catch (_c) {\n          //\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  LocalStorage.prototype.remove = function (key) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        try {\n          (_a = getGlobalScope()) === null || _a === void 0 ? void 0 : _a.localStorage.removeItem(key);\n        } catch (_c) {\n          //\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  LocalStorage.prototype.reset = function () {\n    var _a;\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_b) {\n        try {\n          (_a = getGlobalScope()) === null || _a === void 0 ? void 0 : _a.localStorage.clear();\n        } catch (_c) {\n          //\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  return LocalStorage;\n}();\nexport { LocalStorage };","map":{"version":3,"sources":["../../../src/storage/local-storage.ts"],"names":[],"mappings":"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","sourcesContent":["import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { Storage } from '@amplitude/analytics-types';\n\nexport class LocalStorage<T> implements Storage<T> {\n  async isEnabled(): Promise<boolean> {\n    /* istanbul ignore if */\n    if (!getGlobalScope()) {\n      return false;\n    }\n\n    const random = String(Date.now());\n    const testStorage = new LocalStorage<string>();\n    const testKey = 'AMP_TEST';\n    try {\n      await testStorage.set(testKey, random);\n      const value = await testStorage.get(testKey);\n      return value === random;\n    } catch {\n      /* istanbul ignore next */\n      return false;\n    } finally {\n      await testStorage.remove(testKey);\n    }\n  }\n\n  async get(key: string): Promise<T | undefined> {\n    try {\n      const value = await this.getRaw(key);\n      if (!value) {\n        return undefined;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return JSON.parse(value);\n    } catch {\n      /* istanbul ignore next */\n      return undefined;\n    }\n  }\n\n  async getRaw(key: string): Promise<string | undefined> {\n    return getGlobalScope()?.localStorage.getItem(key) || undefined;\n  }\n\n  async set(key: string, value: T): Promise<void> {\n    try {\n      getGlobalScope()?.localStorage.setItem(key, JSON.stringify(value));\n    } catch {\n      //\n    }\n  }\n\n  async remove(key: string): Promise<void> {\n    try {\n      getGlobalScope()?.localStorage.removeItem(key);\n    } catch {\n      //\n    }\n  }\n\n  async reset(): Promise<void> {\n    try {\n      getGlobalScope()?.localStorage.clear();\n    } catch {\n      //\n    }\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}