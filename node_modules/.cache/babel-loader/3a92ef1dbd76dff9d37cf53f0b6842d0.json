{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/LiveChart/ProChartToggle.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport useTheme from 'hooks/useTheme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToggleButton = styled.span`\n  position: absolute;\n  transition: all 0.2s ease;\n  background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textPrimary;\n}};\n  ${_ref2 => {\n  var _element$offsetLeft;\n  let {\n    element\n  } = _ref2;\n  return `\n    transform: translateX(${(_element$offsetLeft = element === null || element === void 0 ? void 0 : element.offsetLeft) !== null && _element$offsetLeft !== void 0 ? _element$offsetLeft : 55}px);\n    width: ${(element === null || element === void 0 ? void 0 : element.offsetWidth) || 44}px;\n  `;\n}}\n  border-radius: ${_ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size === 'md' ? '16px' : '12px';\n}};\n  height: 100%;\n\n  top: 0;\n`;\n_c = ToggleButton;\nconst ToggleElement = styled.span`\n  font-size: ${_ref4 => {\n  let {\n    size\n  } = _ref4;\n  return size === 'md' ? '16px' : '12px';\n}};\n  font-weight: 500;\n  height: ${_ref5 => {\n  let {\n    size,\n    border\n  } = _ref5;\n  return (size === 'md' ? 32 : 20) + (border ? 0 : 2) + 'px';\n}};\n  padding: 6px 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 1;\n  transition: all 0.2s ease;\n  color: ${_ref6 => {\n  let {\n    theme,\n    isActive,\n    disabled\n  } = _ref6;\n  return isActive ? theme.accentActive : disabled ? theme.white : theme.white;\n}};\n  cursor: ${_ref7 => {\n  let {\n    disabled\n  } = _ref7;\n  return disabled ? 'inherit' : 'pointer';\n}};\n`;\n_c2 = ToggleElement;\nconst ToggleWrapper = styled.button`\n  position: relative;\n  border-radius: ${_ref8 => {\n  let {\n    size\n  } = _ref8;\n  return size === 'md' ? '18px' : '12px';\n}};\n  border: ${_ref9 => {\n  let {\n    background,\n    border\n  } = _ref9;\n  return border ? `2px solid ${background}` : 'none';\n}};\n  background: ${_ref10 => {\n  let {\n    background\n  } = _ref10;\n  return background;\n}};\n  display: flex;\n  width: fit-content;\n  outline: none;\n  padding: 0;\n`;\n_c3 = ToggleWrapper;\nexport default function ProChartToggle(_ref11) {\n  _s();\n  let {\n    id,\n    activeName = 'pro',\n    buttons = [{\n      name: 'basic',\n      title: 'Basic'\n    }, {\n      name: 'pro',\n      title: 'Pro'\n    }],\n    toggle,\n    size = 'sm',\n    border = false\n  } = _ref11;\n  const buttonsRef = useRef({});\n  const theme = useTheme();\n  const [activeElement, setActiveElement] = useState();\n  useEffect(() => {\n    setActiveElement(buttonsRef.current[activeName]);\n  }, [activeName]);\n  return /*#__PURE__*/_jsxDEV(ToggleWrapper, {\n    id: id,\n    size: size,\n    border: border,\n    background: `${theme.backgroundSurface}${buttons.some(b => b.disabled) ? '20' : ''}`,\n    children: [buttons.map(button => {\n      return /*#__PURE__*/_jsxDEV(ToggleElement, {\n        ref: el => {\n          buttonsRef.current[button.name] = el;\n        },\n        isActive: activeName === button.name,\n        size: size,\n        border: border,\n        disabled: button.disabled,\n        onClick: () => {\n          !button.disabled && toggle(button.name);\n        },\n        children: button.title\n      }, button.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      element: activeElement,\n      size: size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(ProChartToggle, \"V8d3iDj4b0lmooKSMVTsmgtBpyM=\", false, function () {\n  return [useTheme];\n});\n_c4 = ProChartToggle;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ToggleButton\");\n$RefreshReg$(_c2, \"ToggleElement\");\n$RefreshReg$(_c3, \"ToggleWrapper\");\n$RefreshReg$(_c4, \"ProChartToggle\");","map":{"version":3,"names":["useEffect","useRef","useState","styled","useTheme","ToggleButton","span","theme","textPrimary","element","offsetLeft","offsetWidth","size","ToggleElement","border","isActive","disabled","accentActive","white","ToggleWrapper","button","background","ProChartToggle","id","activeName","buttons","name","title","toggle","buttonsRef","activeElement","setActiveElement","current","backgroundSurface","some","b","map","el"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/LiveChart/ProChartToggle.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\n\nimport useTheme from 'hooks/useTheme'\n\nconst ToggleButton = styled.span<{ size?: string; element?: HTMLSpanElement }>`\n  position: absolute;\n  transition: all 0.2s ease;\n  background-color: ${({ theme }) => theme.textPrimary};\n  ${({ element }) => `\n    transform: translateX(${element?.offsetLeft ?? 55}px);\n    width: ${element?.offsetWidth || 44}px;\n  `}\n  border-radius: ${({ size }) => (size === 'md' ? '16px' : '12px')};\n  height: 100%;\n\n  top: 0;\n`\n\nconst ToggleElement = styled.span<{\n  isActive?: boolean\n  size?: string\n  border?: boolean\n  disabled?: boolean\n}>`\n  font-size: ${({ size }) => (size === 'md' ? '16px' : '12px')};\n  font-weight: 500;\n  height: ${({ size, border }) => (size === 'md' ? 32 : 20) + (border ? 0 : 2) + 'px'};\n  padding: 6px 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  z-index: 1;\n  transition: all 0.2s ease;\n  color: ${({ theme, isActive, disabled }) => (isActive ? theme.accentActive : disabled ? theme.white : theme.white)};\n  cursor: ${({ disabled }) => (disabled ? 'inherit' : 'pointer')};\n`\n\nconst ToggleWrapper = styled.button<{ size?: string; border?: boolean; background?: string }>`\n  position: relative;\n  border-radius: ${({ size }) => (size === 'md' ? '18px' : '12px')};\n  border: ${({ background, border }) => (border ? `2px solid ${background}` : 'none')};\n  background: ${({ background }) => background};\n  display: flex;\n  width: fit-content;\n  outline: none;\n  padding: 0;\n`\n\nexport interface IToggleButton {\n  name: string\n  title: string\n  disabled?: boolean\n}\nexport interface ProChartToggleProps {\n  id?: string\n  activeName?: string\n  buttons?: IToggleButton[]\n  toggle: (name: string) => void\n  size?: 'sm' | 'md'\n  border?: boolean\n}\n\nexport default function ProChartToggle({\n  id,\n  activeName = 'pro',\n  buttons = [\n    { name: 'basic', title: 'Basic' },\n    { name: 'pro', title: 'Pro' },\n  ],\n  toggle,\n  size = 'sm',\n  border = false,\n}: ProChartToggleProps) {\n  const buttonsRef = useRef<any>({})\n  const theme = useTheme()\n  const [activeElement, setActiveElement] = useState()\n\n  useEffect(() => {\n    setActiveElement(buttonsRef.current[activeName])\n  }, [activeName])\n\n  return (\n    <ToggleWrapper\n      id={id}\n      size={size}\n      border={border}\n      background={`${theme.backgroundSurface}${buttons.some((b: any) => b.disabled) ? '20' : ''}`}\n    >\n      {buttons.map(button => {\n        return (\n          <ToggleElement\n            key={button.name}\n            ref={el => {\n              buttonsRef.current[button.name] = el\n            }}\n            isActive={activeName === button.name}\n            size={size}\n            border={border}\n            disabled={button.disabled}\n            onClick={() => {\n              !button.disabled && toggle(button.name)\n            }}\n          >\n            {button.title}\n          </ToggleElement>\n        )\n      })}\n      <ToggleButton element={activeElement} size={size} />\n    </ToggleWrapper>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}