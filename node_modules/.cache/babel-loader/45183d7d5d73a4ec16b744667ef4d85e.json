{"ast":null,"code":"var _s = $RefreshSig$();\nimport { TradeType } from '@uniswap/sdk-core';\nimport { useWeb3React } from '@web3-react/core';\nimport { usePermit2Enabled } from 'featureFlags/flags/permit2';\nimport { useSwapCallback as useLibSwapCallBack } from 'lib/hooks/swap/useSwapCallback';\nimport { useMemo } from 'react';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { TransactionType } from '../state/transactions/types';\nimport { currencyId } from '../utils/currencyId';\nimport useENS from './useENS';\nimport useTransactionDeadline from './useTransactionDeadline';\nimport { useUniversalRouterSwapCallback } from './useUniversalRouter';\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(trade,\n// trade to execute, required\nallowedSlippage,\n// in bips\nrecipientAddressOrName,\n// the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\nsignatureData, permit) {\n  _s();\n  const {\n    account\n  } = useWeb3React();\n  const deadline = useTransactionDeadline();\n  const addTransaction = useTransactionAdder();\n  const {\n    address: recipientAddress\n  } = useENS(recipientAddressOrName);\n  const recipient = recipientAddressOrName === null ? account : recipientAddress;\n  const permit2Enabled = usePermit2Enabled();\n  const {\n    state,\n    callback: libCallback,\n    error\n  } = useLibSwapCallBack({\n    trade: permit2Enabled ? undefined : trade,\n    allowedSlippage,\n    recipientAddressOrName: recipient,\n    signatureData,\n    deadline\n  });\n  const universalRouterSwapCallback = useUniversalRouterSwapCallback(permit2Enabled ? trade : undefined, {\n    slippageTolerance: allowedSlippage,\n    deadline,\n    permit: permit === null || permit === void 0 ? void 0 : permit.signature\n  });\n  const swapCallback = permit2Enabled ? universalRouterSwapCallback : libCallback;\n  const callback = useMemo(() => {\n    if (!trade || !swapCallback) return null;\n    return () => swapCallback().then(response => {\n      addTransaction(response, trade.tradeType === TradeType.EXACT_INPUT ? {\n        type: TransactionType.SWAP,\n        tradeType: TradeType.EXACT_INPUT,\n        inputCurrencyId: currencyId(trade.inputAmount.currency),\n        inputCurrencyAmountRaw: trade.inputAmount.quotient.toString(),\n        expectedOutputCurrencyAmountRaw: trade.outputAmount.quotient.toString(),\n        outputCurrencyId: currencyId(trade.outputAmount.currency),\n        minimumOutputCurrencyAmountRaw: trade.minimumAmountOut(allowedSlippage).quotient.toString()\n      } : {\n        type: TransactionType.SWAP,\n        tradeType: TradeType.EXACT_OUTPUT,\n        inputCurrencyId: currencyId(trade.inputAmount.currency),\n        maximumInputCurrencyAmountRaw: trade.maximumAmountIn(allowedSlippage).quotient.toString(),\n        outputCurrencyId: currencyId(trade.outputAmount.currency),\n        outputCurrencyAmountRaw: trade.outputAmount.quotient.toString(),\n        expectedInputCurrencyAmountRaw: trade.inputAmount.quotient.toString()\n      });\n      return response.hash;\n    });\n  }, [addTransaction, allowedSlippage, swapCallback, trade]);\n  return {\n    state,\n    callback,\n    error\n  };\n}\n_s(useSwapCallback, \"+QpV8BUFpBKRXVN9zxaxbGVIM24=\", false, function () {\n  return [useWeb3React, useTransactionDeadline, useTransactionAdder, useENS, usePermit2Enabled, useLibSwapCallBack, useUniversalRouterSwapCallback];\n});","map":{"version":3,"names":["TradeType","useWeb3React","usePermit2Enabled","useSwapCallback","useLibSwapCallBack","useMemo","useTransactionAdder","TransactionType","currencyId","useENS","useTransactionDeadline","useUniversalRouterSwapCallback","trade","allowedSlippage","recipientAddressOrName","signatureData","permit","account","deadline","addTransaction","address","recipientAddress","recipient","permit2Enabled","state","callback","libCallback","error","undefined","universalRouterSwapCallback","slippageTolerance","signature","swapCallback","then","response","tradeType","EXACT_INPUT","type","SWAP","inputCurrencyId","inputAmount","currency","inputCurrencyAmountRaw","quotient","toString","expectedOutputCurrencyAmountRaw","outputAmount","outputCurrencyId","minimumOutputCurrencyAmountRaw","minimumAmountOut","EXACT_OUTPUT","maximumInputCurrencyAmountRaw","maximumAmountIn","outputCurrencyAmountRaw","expectedInputCurrencyAmountRaw","hash"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useSwapCallback.tsx"],"sourcesContent":["import { Trade } from '@uniswap/router-sdk'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePermit2Enabled } from 'featureFlags/flags/permit2'\nimport { SwapCallbackState, useSwapCallback as useLibSwapCallBack } from 'lib/hooks/swap/useSwapCallback'\nimport { ReactNode, useMemo } from 'react'\n\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { TransactionType } from '../state/transactions/types'\nimport { currencyId } from '../utils/currencyId'\nimport useENS from './useENS'\nimport { SignatureData } from './useERC20Permit'\nimport { Permit } from './usePermit2'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport { useUniversalRouterSwapCallback } from './useUniversalRouter'\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n  allowedSlippage: Percent, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n  signatureData: SignatureData | undefined | null,\n  permit: Permit | undefined\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: ReactNode | null } {\n  const { account } = useWeb3React()\n\n  const deadline = useTransactionDeadline()\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  const permit2Enabled = usePermit2Enabled()\n  const {\n    state,\n    callback: libCallback,\n    error,\n  } = useLibSwapCallBack({\n    trade: permit2Enabled ? undefined : trade,\n    allowedSlippage,\n    recipientAddressOrName: recipient,\n    signatureData,\n    deadline,\n  })\n  const universalRouterSwapCallback = useUniversalRouterSwapCallback(permit2Enabled ? trade : undefined, {\n    slippageTolerance: allowedSlippage,\n    deadline,\n    permit: permit?.signature,\n  })\n  const swapCallback = permit2Enabled ? universalRouterSwapCallback : libCallback\n\n  const callback = useMemo(() => {\n    if (!trade || !swapCallback) return null\n    return () =>\n      swapCallback().then((response) => {\n        addTransaction(\n          response,\n          trade.tradeType === TradeType.EXACT_INPUT\n            ? {\n                type: TransactionType.SWAP,\n                tradeType: TradeType.EXACT_INPUT,\n                inputCurrencyId: currencyId(trade.inputAmount.currency),\n                inputCurrencyAmountRaw: trade.inputAmount.quotient.toString(),\n                expectedOutputCurrencyAmountRaw: trade.outputAmount.quotient.toString(),\n                outputCurrencyId: currencyId(trade.outputAmount.currency),\n                minimumOutputCurrencyAmountRaw: trade.minimumAmountOut(allowedSlippage).quotient.toString(),\n              }\n            : {\n                type: TransactionType.SWAP,\n                tradeType: TradeType.EXACT_OUTPUT,\n                inputCurrencyId: currencyId(trade.inputAmount.currency),\n                maximumInputCurrencyAmountRaw: trade.maximumAmountIn(allowedSlippage).quotient.toString(),\n                outputCurrencyId: currencyId(trade.outputAmount.currency),\n                outputCurrencyAmountRaw: trade.outputAmount.quotient.toString(),\n                expectedInputCurrencyAmountRaw: trade.inputAmount.quotient.toString(),\n              }\n        )\n        return response.hash\n      })\n  }, [addTransaction, allowedSlippage, swapCallback, trade])\n\n  return {\n    state,\n    callback,\n    error,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}