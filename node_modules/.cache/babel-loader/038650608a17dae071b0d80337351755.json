{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Trans}from\"@lingui/react\";import{TraceEvent}from'@uniswap/analytics';import{BrowserEvent,ElementName,EventName}from'@uniswap/analytics-events';import useTransactionDeadline from'hooks/useTransactionDeadline';import{formatPercentInBasisPointsNumber,formatPercentNumber,formatToDecimal,getDurationFromDateMilliseconds,getDurationUntilTimestampSeconds,getTokenAddress}from'lib/utils/analytics';import{Text}from'rebass';import{useClientSideRouter,useUserSlippageTolerance}from'state/user/hooks';import{computeRealizedPriceImpact}from'utils/prices';import{ButtonError}from'../Button';import{AutoRow}from'../Row';import{SwapCallbackError}from'./styleds';import{getTokenPath}from'./SwapRoute';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var formatRoutesEventProperties=function formatRoutesEventProperties(routes){var routesEventProperties={routes_percentages:[],routes_protocols:[]};routes.forEach(function(route,index){routesEventProperties['routes_percentages'].push(formatPercentNumber(route.percent));routesEventProperties['routes_protocols'].push(route.protocol);routesEventProperties[\"route_\".concat(index,\"_input_currency_symbols\")]=route.path.map(function(pathStep){var _pathStep$0$symbol;return(_pathStep$0$symbol=pathStep[0].symbol)!==null&&_pathStep$0$symbol!==void 0?_pathStep$0$symbol:'';});routesEventProperties[\"route_\".concat(index,\"_output_currency_symbols\")]=route.path.map(function(pathStep){var _pathStep$1$symbol;return(_pathStep$1$symbol=pathStep[1].symbol)!==null&&_pathStep$1$symbol!==void 0?_pathStep$1$symbol:'';});routesEventProperties[\"route_\".concat(index,\"_input_currency_addresses\")]=route.path.map(function(pathStep){return getTokenAddress(pathStep[0]);});routesEventProperties[\"route_\".concat(index,\"_output_currency_addresses\")]=route.path.map(function(pathStep){return getTokenAddress(pathStep[1]);});routesEventProperties[\"route_\".concat(index,\"_fee_amounts_hundredths_of_bps\")]=route.path.map(function(pathStep){return pathStep[2];});});return routesEventProperties;};var formatAnalyticsEventProperties=function formatAnalyticsEventProperties(_ref){var trade=_ref.trade,hash=_ref.hash,allowedSlippage=_ref.allowedSlippage,transactionDeadlineSecondsSinceEpoch=_ref.transactionDeadlineSecondsSinceEpoch,isAutoSlippage=_ref.isAutoSlippage,isAutoRouterApi=_ref.isAutoRouterApi,swapQuoteReceivedDate=_ref.swapQuoteReceivedDate,routes=_ref.routes,fiatValueInput=_ref.fiatValueInput,fiatValueOutput=_ref.fiatValueOutput;return _objectSpread({estimated_network_fee_usd:trade.gasUseEstimateUSD?formatToDecimal(trade.gasUseEstimateUSD,2):undefined,transaction_hash:hash,transaction_deadline_seconds:getDurationUntilTimestampSeconds(transactionDeadlineSecondsSinceEpoch),token_in_address:getTokenAddress(trade.inputAmount.currency),token_out_address:getTokenAddress(trade.outputAmount.currency),token_in_symbol:trade.inputAmount.currency.symbol,token_out_symbol:trade.outputAmount.currency.symbol,token_in_amount:formatToDecimal(trade.inputAmount,trade.inputAmount.currency.decimals),token_out_amount:formatToDecimal(trade.outputAmount,trade.outputAmount.currency.decimals),token_in_amount_usd:fiatValueInput?parseFloat(fiatValueInput.toFixed(2)):undefined,token_out_amount_usd:fiatValueOutput?parseFloat(fiatValueOutput.toFixed(2)):undefined,price_impact_basis_points:formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),allowed_slippage_basis_points:formatPercentInBasisPointsNumber(allowedSlippage),is_auto_router_api:isAutoRouterApi,is_auto_slippage:isAutoSlippage,chain_id:trade.inputAmount.currency.chainId===trade.outputAmount.currency.chainId?trade.inputAmount.currency.chainId:undefined,duration_from_first_quote_to_swap_submission_milliseconds:swapQuoteReceivedDate?getDurationFromDateMilliseconds(swapQuoteReceivedDate):undefined,swap_quote_block_number:trade.blockNumber},formatRoutesEventProperties(routes));};export default function SwapModalFooter(_ref2){var _useTransactionDeadli;var trade=_ref2.trade,allowedSlippage=_ref2.allowedSlippage,hash=_ref2.hash,onConfirm=_ref2.onConfirm,swapErrorMessage=_ref2.swapErrorMessage,disabledConfirm=_ref2.disabledConfirm,swapQuoteReceivedDate=_ref2.swapQuoteReceivedDate,fiatValueInput=_ref2.fiatValueInput,fiatValueOutput=_ref2.fiatValueOutput;var transactionDeadlineSecondsSinceEpoch=(_useTransactionDeadli=useTransactionDeadline())===null||_useTransactionDeadli===void 0?void 0:_useTransactionDeadli.toNumber();// in seconds since epoch\nvar isAutoSlippage=useUserSlippageTolerance()[0]==='auto';var _useClientSideRouter=useClientSideRouter(),_useClientSideRouter2=_slicedToArray(_useClientSideRouter,1),clientSideRouter=_useClientSideRouter2[0];var routes=getTokenPath(trade);return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(AutoRow,{children:[/*#__PURE__*/_jsx(TraceEvent,{events:[BrowserEvent.onClick],element:ElementName.CONFIRM_SWAP_BUTTON,name:EventName.SWAP_SUBMITTED_BUTTON_CLICKED,properties:formatAnalyticsEventProperties({trade:trade,hash:hash,allowedSlippage:allowedSlippage,transactionDeadlineSecondsSinceEpoch:transactionDeadlineSecondsSinceEpoch,isAutoSlippage:isAutoSlippage,isAutoRouterApi:!clientSideRouter,swapQuoteReceivedDate:swapQuoteReceivedDate,routes:routes,fiatValueInput:fiatValueInput,fiatValueOutput:fiatValueOutput}),children:/*#__PURE__*/_jsx(ButtonError,{onClick:onConfirm,disabled:disabledConfirm,style:{margin:'10px 0 0 0'},id:ElementName.CONFIRM_SWAP_BUTTON,children:/*#__PURE__*/_jsx(Text,{fontSize:20,fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"Confirm Swap\"})})})}),swapErrorMessage?/*#__PURE__*/_jsx(SwapCallbackError,{error:swapErrorMessage}):null]})});}","map":{"version":3,"names":["TraceEvent","BrowserEvent","ElementName","EventName","useTransactionDeadline","formatPercentInBasisPointsNumber","formatPercentNumber","formatToDecimal","getDurationFromDateMilliseconds","getDurationUntilTimestampSeconds","getTokenAddress","Text","useClientSideRouter","useUserSlippageTolerance","computeRealizedPriceImpact","ButtonError","AutoRow","SwapCallbackError","getTokenPath","formatRoutesEventProperties","routes","routesEventProperties","routes_percentages","routes_protocols","forEach","route","index","push","percent","protocol","path","map","pathStep","symbol","formatAnalyticsEventProperties","trade","hash","allowedSlippage","transactionDeadlineSecondsSinceEpoch","isAutoSlippage","isAutoRouterApi","swapQuoteReceivedDate","fiatValueInput","fiatValueOutput","estimated_network_fee_usd","gasUseEstimateUSD","undefined","transaction_hash","transaction_deadline_seconds","token_in_address","inputAmount","currency","token_out_address","outputAmount","token_in_symbol","token_out_symbol","token_in_amount","decimals","token_out_amount","token_in_amount_usd","parseFloat","toFixed","token_out_amount_usd","price_impact_basis_points","allowed_slippage_basis_points","is_auto_router_api","is_auto_slippage","chain_id","chainId","duration_from_first_quote_to_swap_submission_milliseconds","swap_quote_block_number","blockNumber","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","toNumber","clientSideRouter","onClick","CONFIRM_SWAP_BUTTON","SWAP_SUBMITTED_BUTTON_CLICKED","margin"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/SwapModalFooter.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, ElementName, EventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Percent, Token, TradeType } from '@uniswap/sdk-core'\nimport useTransactionDeadline from 'hooks/useTransactionDeadline'\nimport {\n  formatPercentInBasisPointsNumber,\n  formatPercentNumber,\n  formatToDecimal,\n  getDurationFromDateMilliseconds,\n  getDurationUntilTimestampSeconds,\n  getTokenAddress,\n} from 'lib/utils/analytics'\nimport { ReactNode } from 'react'\nimport { Text } from 'rebass'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { useClientSideRouter, useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeRealizedPriceImpact } from 'utils/prices'\n\nimport { ButtonError } from '../Button'\nimport { AutoRow } from '../Row'\nimport { SwapCallbackError } from './styleds'\nimport { getTokenPath, RoutingDiagramEntry } from './SwapRoute'\n\ninterface AnalyticsEventProps {\n  trade: InterfaceTrade<Currency, Currency, TradeType>\n  hash: string | undefined\n  allowedSlippage: Percent\n  transactionDeadlineSecondsSinceEpoch: number | undefined\n  isAutoSlippage: boolean\n  isAutoRouterApi: boolean\n  swapQuoteReceivedDate: Date | undefined\n  routes: RoutingDiagramEntry[]\n  fiatValueInput?: CurrencyAmount<Token> | null\n  fiatValueOutput?: CurrencyAmount<Token> | null\n}\n\nconst formatRoutesEventProperties = (routes: RoutingDiagramEntry[]) => {\n  const routesEventProperties: Record<string, any[]> = {\n    routes_percentages: [],\n    routes_protocols: [],\n  }\n\n  routes.forEach((route, index) => {\n    routesEventProperties['routes_percentages'].push(formatPercentNumber(route.percent))\n    routesEventProperties['routes_protocols'].push(route.protocol)\n    routesEventProperties[`route_${index}_input_currency_symbols`] = route.path.map(\n      (pathStep) => pathStep[0].symbol ?? ''\n    )\n    routesEventProperties[`route_${index}_output_currency_symbols`] = route.path.map(\n      (pathStep) => pathStep[1].symbol ?? ''\n    )\n    routesEventProperties[`route_${index}_input_currency_addresses`] = route.path.map((pathStep) =>\n      getTokenAddress(pathStep[0])\n    )\n    routesEventProperties[`route_${index}_output_currency_addresses`] = route.path.map((pathStep) =>\n      getTokenAddress(pathStep[1])\n    )\n    routesEventProperties[`route_${index}_fee_amounts_hundredths_of_bps`] = route.path.map((pathStep) => pathStep[2])\n  })\n\n  return routesEventProperties\n}\n\nconst formatAnalyticsEventProperties = ({\n  trade,\n  hash,\n  allowedSlippage,\n  transactionDeadlineSecondsSinceEpoch,\n  isAutoSlippage,\n  isAutoRouterApi,\n  swapQuoteReceivedDate,\n  routes,\n  fiatValueInput,\n  fiatValueOutput,\n}: AnalyticsEventProps) => ({\n  estimated_network_fee_usd: trade.gasUseEstimateUSD ? formatToDecimal(trade.gasUseEstimateUSD, 2) : undefined,\n  transaction_hash: hash,\n  transaction_deadline_seconds: getDurationUntilTimestampSeconds(transactionDeadlineSecondsSinceEpoch),\n  token_in_address: getTokenAddress(trade.inputAmount.currency),\n  token_out_address: getTokenAddress(trade.outputAmount.currency),\n  token_in_symbol: trade.inputAmount.currency.symbol,\n  token_out_symbol: trade.outputAmount.currency.symbol,\n  token_in_amount: formatToDecimal(trade.inputAmount, trade.inputAmount.currency.decimals),\n  token_out_amount: formatToDecimal(trade.outputAmount, trade.outputAmount.currency.decimals),\n  token_in_amount_usd: fiatValueInput ? parseFloat(fiatValueInput.toFixed(2)) : undefined,\n  token_out_amount_usd: fiatValueOutput ? parseFloat(fiatValueOutput.toFixed(2)) : undefined,\n  price_impact_basis_points: formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),\n  allowed_slippage_basis_points: formatPercentInBasisPointsNumber(allowedSlippage),\n  is_auto_router_api: isAutoRouterApi,\n  is_auto_slippage: isAutoSlippage,\n  chain_id:\n    trade.inputAmount.currency.chainId === trade.outputAmount.currency.chainId\n      ? trade.inputAmount.currency.chainId\n      : undefined,\n  duration_from_first_quote_to_swap_submission_milliseconds: swapQuoteReceivedDate\n    ? getDurationFromDateMilliseconds(swapQuoteReceivedDate)\n    : undefined,\n  swap_quote_block_number: trade.blockNumber,\n  ...formatRoutesEventProperties(routes),\n})\n\nexport default function SwapModalFooter({\n  trade,\n  allowedSlippage,\n  hash,\n  onConfirm,\n  swapErrorMessage,\n  disabledConfirm,\n  swapQuoteReceivedDate,\n  fiatValueInput,\n  fiatValueOutput,\n}: {\n  trade: InterfaceTrade<Currency, Currency, TradeType>\n  hash: string | undefined\n  allowedSlippage: Percent\n  onConfirm: () => void\n  swapErrorMessage: ReactNode | undefined\n  disabledConfirm: boolean\n  swapQuoteReceivedDate: Date | undefined\n  fiatValueInput?: CurrencyAmount<Token> | null\n  fiatValueOutput?: CurrencyAmount<Token> | null\n}) {\n  const transactionDeadlineSecondsSinceEpoch = useTransactionDeadline()?.toNumber() // in seconds since epoch\n  const isAutoSlippage = useUserSlippageTolerance()[0] === 'auto'\n  const [clientSideRouter] = useClientSideRouter()\n  const routes = getTokenPath(trade)\n\n  return (\n    <>\n      <AutoRow>\n        <TraceEvent\n          events={[BrowserEvent.onClick]}\n          element={ElementName.CONFIRM_SWAP_BUTTON}\n          name={EventName.SWAP_SUBMITTED_BUTTON_CLICKED}\n          properties={formatAnalyticsEventProperties({\n            trade,\n            hash,\n            allowedSlippage,\n            transactionDeadlineSecondsSinceEpoch,\n            isAutoSlippage,\n            isAutoRouterApi: !clientSideRouter,\n            swapQuoteReceivedDate,\n            routes,\n            fiatValueInput,\n            fiatValueOutput,\n          })}\n        >\n          <ButtonError\n            onClick={onConfirm}\n            disabled={disabledConfirm}\n            style={{ margin: '10px 0 0 0' }}\n            id={ElementName.CONFIRM_SWAP_BUTTON}\n          >\n            <Text fontSize={20} fontWeight={500}>\n              <Trans>Confirm Swap</Trans>\n            </Text>\n          </ButtonError>\n        </TraceEvent>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}