{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useMemo, useRef } from 'react';\nimport { useLazyCandelsticksQuery } from 'services/geckoTermial';\nconst configurationData = {\n  supported_resolutions: ['1', '5', '15', '1H', '2H', '4H', '1D']\n};\nexport const useDatafeed = (poolDetail, tokenId) => {\n  _s();\n  const [getCandles, {\n    isLoading\n  }] = useLazyCandelsticksQuery();\n  const intervalRef = useRef();\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  const base = poolDetail.included[0].id === tokenId ? poolDetail.included[0].attributes.symbol : poolDetail.included[1].attributes.symbol;\n  const quote = poolDetail.included[0].id !== tokenId ? poolDetail.included[0].attributes.symbol : poolDetail.included[1].attributes.symbol;\n  const label = `${base}/${quote}`;\n  return useMemo(() => {\n    return {\n      onReady: callback => {\n        setTimeout(() => callback(configurationData));\n      },\n      resolveSymbol: async (_symbolName, onSymbolResolvedCallback, _onResolveErrorCallback) => {\n        try {\n          const symbolInfo = {\n            ticker: label,\n            name: label,\n            full_name: label,\n            listed_exchange: '',\n            format: 'price',\n            description: label,\n            type: 'crypto',\n            session: '24x7',\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            exchange: '',\n            minmov: 1,\n            pricescale: 10000,\n            has_intraday: true,\n            has_empty_bars: true,\n            has_weekly_and_monthly: true,\n            has_daily: true,\n            supported_resolutions: configurationData.supported_resolutions,\n            data_status: 'streaming'\n          };\n          onSymbolResolvedCallback(symbolInfo);\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      getBars: async (_symbolInfo, resolution, periodParams, onHistoryCallback, _onErrorCallback) => {\n        var _data$data, _data$data2, _data$data2$meta;\n        if (isLoading) return;\n        const data = await getCandles({\n          token_id: tokenId,\n          pool_id: poolDetail.data.id,\n          from: periodParams.from,\n          to: periodParams.to,\n          resolution,\n          count_back: periodParams.countBack,\n          for_update: false,\n          currency: 'token'\n        });\n        onHistoryCallback((data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.data.map(item => ({\n          time: new Date(item.dt).getTime(),\n          open: item.o,\n          high: item.h,\n          close: item.c,\n          low: item.l,\n          volume: item.v\n        }))) || [], {\n          noData: (data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : (_data$data2$meta = _data$data2.meta) === null || _data$data2$meta === void 0 ? void 0 : _data$data2$meta.noData) === true\n        });\n      },\n      searchSymbols: () => {\n        // TODO(viet-nv): check no empty function rule\n      },\n      subscribeBars: async (_symbolInfo, resolution, onTick, _listenerGuid, _onResetCacheNeededCallback) => {\n        const getData = async () => {\n          var _data$data3;\n          const data = await getCandles({\n            token_id: tokenId,\n            pool_id: poolDetail.data.id,\n            from: Math.floor(Date.now() / 1000) - +resolution * 60,\n            to: Math.floor(Date.now() / 1000),\n            resolution,\n            for_update: true,\n            currency: 'token'\n          });\n          onTick(((data === null || data === void 0 ? void 0 : (_data$data3 = data.data) === null || _data$data3 === void 0 ? void 0 : _data$data3.data) || []).map(item => ({\n            time: new Date(item.dt).getTime(),\n            open: item.o,\n            high: item.h,\n            close: item.c,\n            low: item.l,\n            volume: item.v\n          }))[0]);\n        };\n        if (intervalRef.current) clearInterval(intervalRef.current);\n        intervalRef.current = setInterval(getData, 30000);\n        getData();\n      },\n      unsubscribeBars: () => {\n        //\n      }\n    };\n  }, [getCandles, isLoading, poolDetail.data.id, label, tokenId]);\n};\n_s(useDatafeed, \"dT4ptAmmfNHfpvFuNTr6RwTtPj4=\", false, function () {\n  return [useLazyCandelsticksQuery];\n});","map":{"version":3,"names":["useEffect","useMemo","useRef","useLazyCandelsticksQuery","configurationData","supported_resolutions","useDatafeed","poolDetail","tokenId","getCandles","isLoading","intervalRef","current","clearInterval","base","included","id","attributes","symbol","quote","label","onReady","callback","setTimeout","resolveSymbol","_symbolName","onSymbolResolvedCallback","_onResolveErrorCallback","symbolInfo","ticker","name","full_name","listed_exchange","format","description","type","session","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","exchange","minmov","pricescale","has_intraday","has_empty_bars","has_weekly_and_monthly","has_daily","data_status","error","console","log","getBars","_symbolInfo","resolution","periodParams","onHistoryCallback","_onErrorCallback","data","token_id","pool_id","from","to","count_back","countBack","for_update","currency","map","item","time","Date","dt","getTime","open","o","high","h","close","c","low","l","volume","v","noData","meta","searchSymbols","subscribeBars","onTick","_listenerGuid","_onResetCacheNeededCallback","getData","Math","floor","now","setInterval","unsubscribeBars"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/TradingViewChart/datafeed.tsx"],"sourcesContent":["import { useEffect, useMemo, useRef } from 'react'\nimport { PoolResponse, useLazyCandelsticksQuery } from 'services/geckoTermial'\n\nimport {\n  ErrorCallback,\n  HistoryCallback,\n  LibrarySymbolInfo,\n  PeriodParams,\n  ResolutionString,\n  ResolveCallback,\n  SubscribeBarsCallback,\n  Timezone,\n} from './charting_library'\n\nconst configurationData = {\n  supported_resolutions: ['1', '5', '15', '1H', '2H', '4H', '1D'],\n}\n\nexport const useDatafeed = (poolDetail: PoolResponse, tokenId: string) => {\n  const [getCandles, { isLoading }] = useLazyCandelsticksQuery()\n\n  const intervalRef = useRef<any>()\n\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current)\n      }\n    }\n  }, [])\n\n  const base =\n    poolDetail.included[0].id === tokenId\n      ? poolDetail.included[0].attributes.symbol\n      : poolDetail.included[1].attributes.symbol\n  const quote =\n    poolDetail.included[0].id !== tokenId\n      ? poolDetail.included[0].attributes.symbol\n      : poolDetail.included[1].attributes.symbol\n\n  const label = `${base}/${quote}`\n\n  return useMemo(() => {\n    return {\n      onReady: (callback: any) => {\n        setTimeout(() => callback(configurationData))\n      },\n      resolveSymbol: async (\n        _symbolName: string,\n        onSymbolResolvedCallback: ResolveCallback,\n        _onResolveErrorCallback: ErrorCallback,\n      ) => {\n        try {\n          const symbolInfo: LibrarySymbolInfo = {\n            ticker: label,\n            name: label,\n            full_name: label,\n            listed_exchange: '',\n            format: 'price',\n            description: label,\n            type: 'crypto',\n            session: '24x7',\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone as Timezone,\n            exchange: '',\n            minmov: 1,\n            pricescale: 10000,\n            has_intraday: true,\n            has_empty_bars: true,\n            has_weekly_and_monthly: true,\n            has_daily: true,\n            supported_resolutions: configurationData.supported_resolutions as ResolutionString[],\n            data_status: 'streaming',\n          }\n          onSymbolResolvedCallback(symbolInfo)\n        } catch (error) {\n          console.log(error)\n        }\n      },\n      getBars: async (\n        // symbolInfo is not used\n        _symbolInfo: LibrarySymbolInfo,\n        resolution: ResolutionString,\n        periodParams: PeriodParams,\n        onHistoryCallback: HistoryCallback,\n        _onErrorCallback: ErrorCallback,\n      ) => {\n        if (isLoading) return\n\n        const data = await getCandles({\n          token_id: tokenId,\n          pool_id: poolDetail.data.id,\n          from: periodParams.from,\n          to: periodParams.to,\n          resolution,\n          count_back: periodParams.countBack,\n          for_update: false,\n          currency: 'token',\n        })\n\n        onHistoryCallback(\n          data?.data?.data.map((item: any) => ({\n            time: new Date(item.dt).getTime(),\n            open: item.o,\n            high: item.h,\n            close: item.c,\n            low: item.l,\n            volume: item.v,\n          })) || [],\n          {\n            noData: data?.data?.meta?.noData === true,\n          },\n        )\n      },\n      searchSymbols: () => {\n        // TODO(viet-nv): check no empty function rule\n      },\n      subscribeBars: async (\n        _symbolInfo: LibrarySymbolInfo,\n        resolution: ResolutionString,\n        onTick: SubscribeBarsCallback,\n        _listenerGuid: string,\n        _onResetCacheNeededCallback: () => void,\n      ) => {\n        const getData = async () => {\n          const data = await getCandles({\n            token_id: tokenId,\n            pool_id: poolDetail.data.id,\n            from: Math.floor(Date.now() / 1000) - +resolution * 60,\n            to: Math.floor(Date.now() / 1000),\n            resolution,\n            for_update: true,\n            currency: 'token',\n          })\n\n          onTick(\n            (data?.data?.data || []).map((item: any) => ({\n              time: new Date(item.dt).getTime(),\n              open: item.o,\n              high: item.h,\n              close: item.c,\n              low: item.l,\n              volume: item.v,\n            }))[0],\n          )\n        }\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        intervalRef.current = setInterval(getData, 30000)\n        getData()\n      },\n      unsubscribeBars: () => {\n        //\n      },\n    }\n  }, [getCandles, isLoading, poolDetail.data.id, label, tokenId])\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}