{"ast":null,"code":"import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useQuery}from'@apollo/client';import gql from'graphql-tag';import{useMemo}from'react';import{apolloClient}from'./apollo';var query=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query FeeTierDistribution($token0: String!, $token1: String!) {\\n    _meta {\\n      block {\\n        number\\n      }\\n    }\\n    asToken0: pools(\\n      orderBy: totalValueLockedToken0\\n      orderDirection: desc\\n      where: { token0: $token0, token1: $token1 }\\n    ) {\\n      feeTier\\n      totalValueLockedToken0\\n      totalValueLockedToken1\\n    }\\n    asToken1: pools(\\n      orderBy: totalValueLockedToken0\\n      orderDirection: desc\\n      where: { token0: $token1, token1: $token0 }\\n    ) {\\n      feeTier\\n      totalValueLockedToken0\\n      totalValueLockedToken1\\n    }\\n  }\\n\"])));export default function useFeeTierDistributionQuery(token0,token1,interval){var _useQuery=useQuery(query,{variables:{token0:token0===null||token0===void 0?void 0:token0.toLowerCase(),token1:token1===null||token1===void 0?void 0:token1.toLowerCase()},pollInterval:interval,client:apolloClient}),data=_useQuery.data,isLoading=_useQuery.loading,error=_useQuery.error;return useMemo(function(){return{error:error,isLoading:isLoading,data:data};},[data,error,isLoading]);}","map":{"version":3,"names":["useQuery","gql","useMemo","apolloClient","query","useFeeTierDistributionQuery","token0","token1","interval","variables","toLowerCase","pollInterval","client","data","isLoading","loading","error"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/thegraph/FeeTierDistributionQuery.ts"],"sourcesContent":["import { ApolloError, useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { FeeTierDistributionQuery } from './__generated__/types-and-hooks'\nimport { apolloClient } from './apollo'\n\nconst query = gql`\n  query FeeTierDistribution($token0: String!, $token1: String!) {\n    _meta {\n      block {\n        number\n      }\n    }\n    asToken0: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token0, token1: $token1 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n    asToken1: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token1, token1: $token0 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n  }\n`\n\nexport default function useFeeTierDistributionQuery(\n  token0: string | undefined,\n  token1: string | undefined,\n  interval: number\n): { error: ApolloError | undefined; isLoading: boolean; data: FeeTierDistributionQuery } {\n  const {\n    data,\n    loading: isLoading,\n    error,\n  } = useQuery(query, {\n    variables: {\n      token0: token0?.toLowerCase(),\n      token1: token1?.toLowerCase(),\n    },\n    pollInterval: interval,\n    client: apolloClient,\n  })\n\n  return useMemo(\n    () => ({\n      error,\n      isLoading,\n      data,\n    }),\n    [data, error, isLoading]\n  )\n}\n"],"mappings":"gNAAA,OAAsBA,QAAQ,KAAQ,gBAAgB,CACtD,MAAOC,IAAG,KAAM,aAAa,CAC7B,OAASC,OAAO,KAAQ,OAAO,CAG/B,OAASC,YAAY,KAAQ,UAAU,CAEvC,GAAMC,MAAK,CAAGH,GAAG,qpBA0BhB,CAED,cAAe,SAASI,4BAA2B,CACjDC,MAA0B,CAC1BC,MAA0B,CAC1BC,QAAgB,CACwE,CACxF,cAIIR,QAAQ,CAACI,KAAK,CAAE,CAClBK,SAAS,CAAE,CACTH,MAAM,CAAEA,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEI,WAAW,EAAE,CAC7BH,MAAM,CAAEA,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEG,WAAW,EAC7B,CAAC,CACDC,YAAY,CAAEH,QAAQ,CACtBI,MAAM,CAAET,YACV,CAAC,CAAC,CAVAU,IAAI,WAAJA,IAAI,CACKC,SAAS,WAAlBC,OAAO,CACPC,KAAK,WAALA,KAAK,CAUP,MAAOd,QAAO,CACZ,iBAAO,CACLc,KAAK,CAALA,KAAK,CACLF,SAAS,CAATA,SAAS,CACTD,IAAI,CAAJA,IACF,CAAC,EAAC,CACF,CAACA,IAAI,CAAEG,KAAK,CAAEF,SAAS,CAAC,CACzB,CACH"},"metadata":{},"sourceType":"module"}