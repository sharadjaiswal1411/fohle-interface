{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { IdentifyOperation } from '@amplitude/analytics-types';\nimport { UNSET_VALUE } from './constants';\nimport { isValidProperties } from './utils/valid-properties';\nvar Identify = /** @class */function () {\n  function Identify() {\n    this._propertySet = new Set();\n    this._properties = {};\n  }\n  Identify.prototype.getUserProperties = function () {\n    return __assign({}, this._properties);\n  };\n  Identify.prototype.set = function (property, value) {\n    this._safeSet(IdentifyOperation.SET, property, value);\n    return this;\n  };\n  Identify.prototype.setOnce = function (property, value) {\n    this._safeSet(IdentifyOperation.SET_ONCE, property, value);\n    return this;\n  };\n  Identify.prototype.append = function (property, value) {\n    this._safeSet(IdentifyOperation.APPEND, property, value);\n    return this;\n  };\n  Identify.prototype.prepend = function (property, value) {\n    this._safeSet(IdentifyOperation.PREPEND, property, value);\n    return this;\n  };\n  Identify.prototype.postInsert = function (property, value) {\n    this._safeSet(IdentifyOperation.POSTINSERT, property, value);\n    return this;\n  };\n  Identify.prototype.preInsert = function (property, value) {\n    this._safeSet(IdentifyOperation.PREINSERT, property, value);\n    return this;\n  };\n  Identify.prototype.remove = function (property, value) {\n    this._safeSet(IdentifyOperation.REMOVE, property, value);\n    return this;\n  };\n  Identify.prototype.add = function (property, value) {\n    this._safeSet(IdentifyOperation.ADD, property, value);\n    return this;\n  };\n  Identify.prototype.unset = function (property) {\n    this._safeSet(IdentifyOperation.UNSET, property, UNSET_VALUE);\n    return this;\n  };\n  Identify.prototype.clearAll = function () {\n    // When clear all happens, all properties are unset. Reset the entire object.\n    this._properties = {};\n    this._properties[IdentifyOperation.CLEAR_ALL] = UNSET_VALUE;\n    return this;\n  };\n  // Returns whether or not this set actually worked.\n  Identify.prototype._safeSet = function (operation, property, value) {\n    if (this._validate(operation, property, value)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var userPropertyMap = this._properties[operation];\n      if (userPropertyMap === undefined) {\n        userPropertyMap = {};\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._properties[operation] = userPropertyMap;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      userPropertyMap[property] = value;\n      this._propertySet.add(property);\n      return true;\n    }\n    return false;\n  };\n  Identify.prototype._validate = function (operation, property, value) {\n    if (this._properties[IdentifyOperation.CLEAR_ALL] !== undefined) {\n      // clear all already set. Skipping operation;\n      return false;\n    }\n    if (this._propertySet.has(property)) {\n      // Property already used. Skipping operation\n      return false;\n    }\n    if (operation === IdentifyOperation.ADD) {\n      return typeof value === 'number';\n    }\n    if (operation !== IdentifyOperation.UNSET && operation !== IdentifyOperation.REMOVE) {\n      return isValidProperties(property, value);\n    }\n    return true;\n  };\n  return Identify;\n}();\nexport { Identify };","map":{"version":3,"sources":["../../src/identify.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  IdentifyOperation,\n  IdentifyUserProperties,\n  ValidPropertyType,\n  Identify as IIdentify,\n} from '@amplitude/analytics-types';\nimport { UNSET_VALUE } from './constants';\nimport { isValidProperties } from './utils/valid-properties';\n\nexport class Identify implements IIdentify {\n  protected readonly _propertySet: Set<string> = new Set<string>();\n  protected _properties: IdentifyUserProperties = {};\n\n  public getUserProperties(): IdentifyUserProperties {\n    return { ...this._properties };\n  }\n\n  public set(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET, property, value);\n    return this;\n  }\n\n  public setOnce(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.SET_ONCE, property, value);\n    return this;\n  }\n\n  public append(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.APPEND, property, value);\n    return this;\n  }\n\n  public prepend(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREPEND, property, value);\n    return this;\n  }\n\n  public postInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.POSTINSERT, property, value);\n    return this;\n  }\n\n  public preInsert(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.PREINSERT, property, value);\n    return this;\n  }\n\n  public remove(property: string, value: ValidPropertyType): Identify {\n    this._safeSet(IdentifyOperation.REMOVE, property, value);\n    return this;\n  }\n\n  public add(property: string, value: number): Identify {\n    this._safeSet(IdentifyOperation.ADD, property, value);\n    return this;\n  }\n\n  public unset(property: string): Identify {\n    this._safeSet(IdentifyOperation.UNSET, property, UNSET_VALUE);\n    return this;\n  }\n\n  public clearAll(): Identify {\n    // When clear all happens, all properties are unset. Reset the entire object.\n    this._properties = {};\n    this._properties[IdentifyOperation.CLEAR_ALL] = UNSET_VALUE;\n\n    return this;\n  }\n\n  // Returns whether or not this set actually worked.\n  private _safeSet(operation: IdentifyOperation, property: string, value: ValidPropertyType): boolean {\n    if (this._validate(operation, property, value)) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      let userPropertyMap: any = this._properties[operation];\n      if (userPropertyMap === undefined) {\n        userPropertyMap = {};\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this._properties[operation] = userPropertyMap;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      userPropertyMap[property] = value;\n      this._propertySet.add(property);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _validate(operation: IdentifyOperation, property: string, value: ValidPropertyType): boolean {\n    if (this._properties[IdentifyOperation.CLEAR_ALL] !== undefined) {\n      // clear all already set. Skipping operation;\n      return false;\n    }\n\n    if (this._propertySet.has(property)) {\n      // Property already used. Skipping operation\n      return false;\n    }\n\n    if (operation === IdentifyOperation.ADD) {\n      return typeof value === 'number';\n    }\n\n    if (operation !== IdentifyOperation.UNSET && operation !== IdentifyOperation.REMOVE) {\n      return isValidProperties(property, value);\n    }\n    return true;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}