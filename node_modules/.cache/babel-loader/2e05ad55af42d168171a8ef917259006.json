{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _createSuper = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(function () {\n      throw err;\n    });\n  }\n}\nfunction arrayClone(arr) {\n  var n = arr.length;\n  var copy = new Array(n);\n  for (var i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\nvar SafeEventEmitter = /*#__PURE__*/function (_events_1$EventEmitte) {\n  _inherits(SafeEventEmitter, _events_1$EventEmitte);\n  var _super = _createSuper(SafeEventEmitter);\n  function SafeEventEmitter() {\n    _classCallCheck(this, SafeEventEmitter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(SafeEventEmitter, [{\n    key: \"emit\",\n    value: function emit(type) {\n      var doError = type === 'error';\n      var events = this._events;\n      if (events !== undefined) {\n        doError = doError && events.error === undefined;\n      } else if (!doError) {\n        return false;\n      }\n      // If there is no 'error' event listener then throw.\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      if (doError) {\n        var er;\n        if (args.length > 0) {\n          er = args[0];\n        }\n        if (er instanceof Error) {\n          // Note: The comments on the `throw` lines are intentional, they show\n          // up in Node's output if this results in an unhandled exception.\n          throw er; // Unhandled 'error' event\n        }\n        // At least give some kind of context to the user\n        var err = new Error(\"Unhandled error.\".concat(er ? \" (\".concat(er.message, \")\") : ''));\n        err.context = er;\n        throw err; // Unhandled 'error' event\n      }\n\n      var handler = events[type];\n      if (handler === undefined) {\n        return false;\n      }\n      if (typeof handler === 'function') {\n        safeApply(handler, this, args);\n      } else {\n        var len = handler.length;\n        var listeners = arrayClone(handler);\n        for (var i = 0; i < len; i += 1) {\n          safeApply(listeners[i], this, args);\n        }\n      }\n      return true;\n    }\n  }]);\n  return SafeEventEmitter;\n}(events_1.EventEmitter);\nexports.default = SafeEventEmitter;","map":{"version":3,"sources":["index.ts"],"names":[],"mappings":";;;;;;;;;AAAA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAOA,SAAS,SAAS,CAAsB,OAAsC,EAAE,OAAU,EAAE,IAAO,EAAA;EACjG,IAAI;IACF,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC;GACtC,CAAC,OAAO,GAAG,EAAE;IACZ;IACA,UAAU,CAAC,YAAK;MACd,MAAM,GAAG;IACX,CAAC,CAAC;EACH;AACH;AAEA,SAAS,UAAU,CAAK,GAAQ,EAAA;EAC9B,IAAM,CAAC,GAAG,GAAG,CAAC,MAAM;EACpB,IAAM,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC;EACzB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;IAC7B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;EACjB;EACD,OAAO,IAAI;AACb;AAAC,IAEoB,gBAAiB;EAAA;EAAA;EAAA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OACpC,cAAM,IAAY,EAAgB;MAChC,IAAI,OAAO,GAAG,IAAI,KAAK,OAAO;MAE9B,IAAM,MAAM,GAAc,IAAY,CAAC,OAAO;MAC9C,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,OAAO,GAAG,OAAO,IAAI,MAAM,CAAC,KAAK,KAAK,SAAS;OAChD,MAAM,IAAI,CAAC,OAAO,EAAE;QACnB,OAAO,KAAK;MACb;MAED;MAAA,kCAVqB,IAAW;QAAX,IAAW;MAAA;MAWhC,IAAI,OAAO,EAAE;QACX,IAAI,EAAE;QACN,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;UAClB,EAAE,GAAI,IAAI;QACZ;QACD,IAAI,EAAE,YAAY,KAAK,EAAE;UACvB;UACA;UACA,MAAM,EAAE,CAAC,CAAC;QACX;QACD;QACA,IAAM,GAAG,GAAG,IAAI,KAAK,2BAAoB,EAAE,eAAQ,EAAE,CAAC,OAAO,SAAM,EAAE,EAAG;QACvE,GAAW,CAAC,OAAO,GAAG,EAAE;QACzB,MAAM,GAAG,CAAC,CAAC;MACZ;;MAED,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC;MAE5B,IAAI,OAAO,KAAK,SAAS,EAAE;QACzB,OAAO,KAAK;MACb;MAED,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;QACjC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC;OAC/B,MAAM;QACL,IAAM,GAAG,GAAG,OAAO,CAAC,MAAM;QAC1B,IAAM,SAAS,GAAG,UAAU,CAAC,OAAO,CAAC;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE;UAC/B,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;QACpC;MACF;MAED,OAAO,IAAI;IACb;EAAC;EAAA;AAAA,EA7C2C,QAAA,CAAA,YAAY;AAA1D,OAAA,CAAA,OAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}