{"ast":null,"code":"import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{BigNumber}from'@ethersproject/bignumber';import{NftStandard}from'graphql/data/__generated__/types-and-hooks';import{BagItemStatus,BagStatus}from'nft/types';import{v4 as uuidv4}from'uuid';import create from'zustand';import{devtools}from'zustand/middleware';export var useBag=create()(devtools(function(set,get){return{bagStatus:BagStatus.ADDING_TO_BAG,bagExpanded:false,bagManuallyClosed:false,setBagStatus:function setBagStatus(newBagStatus){return set(function(){return{bagStatus:newBagStatus};});},markAssetAsReviewed:function markAssetAsReviewed(asset,toKeep){return set(function(_ref){var itemsInBag=_ref.itemsInBag;if(itemsInBag.length===0)return{itemsInBag:[]};var itemsInBagCopy=_toConsumableArray(itemsInBag);var index=itemsInBagCopy.findIndex(function(item){return item.asset.id===asset.id;});if(!toKeep&&index!==-1)itemsInBagCopy.splice(index,1);else if(index!==-1){itemsInBagCopy[index].status=BagItemStatus.REVIEWED;}return{itemsInBag:itemsInBagCopy};});},didOpenUnavailableAssets:false,setDidOpenUnavailableAssets:function setDidOpenUnavailableAssets(didOpen){return set(function(){return{didOpenUnavailableAssets:didOpen};});},setBagExpanded:function setBagExpanded(_ref2){var bagExpanded=_ref2.bagExpanded,manualClose=_ref2.manualClose;return set(function(_ref3){var bagManuallyClosed=_ref3.bagManuallyClosed;return{bagExpanded:bagExpanded,bagManuallyClosed:manualClose||bagManuallyClosed};});},toggleBag:function toggleBag(){return set(function(_ref4){var bagExpanded=_ref4.bagExpanded;return{bagExpanded:!bagExpanded};});},usedSweep:false,isLocked:false,setLocked:function setLocked(_isLocked){return set(function(){return{isLocked:_isLocked};});},itemsInBag:[],setItemsInBag:function setItemsInBag(items){return set(function(){return{itemsInBag:items};});},totalEthPrice:BigNumber.from(0),setTotalEthPrice:function setTotalEthPrice(totalEthPrice){return set(function(){return{totalEthPrice:totalEthPrice};});},totalUsdPrice:undefined,setTotalUsdPrice:function setTotalUsdPrice(totalUsdPrice){return set(function(){return{totalUsdPrice:totalUsdPrice};});},addAssetsToBag:function addAssetsToBag(assets){var fromSweep=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;return set(function(_ref5){var itemsInBag=_ref5.itemsInBag;if(get().isLocked)return{itemsInBag:get().itemsInBag};var items=[];var itemsInBagCopy=_toConsumableArray(itemsInBag);assets.forEach(function(asset){var index=-1;if(asset.tokenType!==NftStandard.Erc1155){index=itemsInBag.findIndex(function(n){return n.asset.tokenId===asset.tokenId&&n.asset.address===asset.address;});}if(index!==-1){itemsInBagCopy[index].inSweep=fromSweep;}else{var assetWithId={asset:_objectSpread({id:uuidv4()},asset),status:BagItemStatus.ADDED_TO_BAG,inSweep:fromSweep};items.push(assetWithId);}});if(itemsInBag.length===0)return{itemsInBag:items,bagStatus:BagStatus.ADDING_TO_BAG,usedSweep:fromSweep};else return{itemsInBag:[].concat(_toConsumableArray(itemsInBagCopy),items),bagStatus:BagStatus.ADDING_TO_BAG,usedSweep:fromSweep};});},removeAssetsFromBag:function removeAssetsFromBag(assets){var fromSweep=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;set(function(_ref6){var itemsInBag=_ref6.itemsInBag;if(get().isLocked)return{itemsInBag:get().itemsInBag};if(itemsInBag.length===0)return{itemsInBag:[]};var itemsCopy=itemsInBag.filter(function(item){return!assets.some(function(asset){return asset.id?asset.id===item.asset.id:asset.tokenId===item.asset.tokenId&&asset.address===item.asset.address;});});return{itemsInBag:itemsCopy,usedSweep:fromSweep};});},lockSweepItems:function lockSweepItems(contractAddress){return set(function(_ref7){var itemsInBag=_ref7.itemsInBag;if(get().isLocked)return{itemsInBag:get().itemsInBag};var itemsInBagCopy=itemsInBag.map(function(item){return item.asset.address===contractAddress&&item.inSweep?_objectSpread(_objectSpread({},item),{},{inSweep:false}):item;});if(itemsInBag.length===0)return{itemsInBag:itemsInBag};else return{itemsInBag:_toConsumableArray(itemsInBagCopy)};});},reset:function reset(){return set(function(){if(!get().isLocked)return{bagStatus:BagStatus.ADDING_TO_BAG,itemsInBag:[],didOpenUnavailableAssets:false,isLocked:false,bagManuallyClosed:false,bagExpanded:false};else return{};});}};},{name:'useBag'}));","map":{"version":3,"names":["BigNumber","NftStandard","BagItemStatus","BagStatus","v4","uuidv4","create","devtools","useBag","set","get","bagStatus","ADDING_TO_BAG","bagExpanded","bagManuallyClosed","setBagStatus","newBagStatus","markAssetAsReviewed","asset","toKeep","itemsInBag","length","itemsInBagCopy","index","findIndex","item","id","splice","status","REVIEWED","didOpenUnavailableAssets","setDidOpenUnavailableAssets","didOpen","setBagExpanded","manualClose","toggleBag","usedSweep","isLocked","setLocked","_isLocked","setItemsInBag","items","totalEthPrice","from","setTotalEthPrice","totalUsdPrice","undefined","setTotalUsdPrice","addAssetsToBag","assets","fromSweep","forEach","tokenType","Erc1155","n","tokenId","address","inSweep","assetWithId","ADDED_TO_BAG","push","removeAssetsFromBag","itemsCopy","filter","some","lockSweepItems","contractAddress","map","reset","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useBag.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { BagItem, BagItemStatus, BagStatus, UpdatedGenieAsset } from 'nft/types'\nimport { v4 as uuidv4 } from 'uuid'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface BagState {\n  bagStatus: BagStatus\n  bagManuallyClosed: boolean\n  setBagExpanded: ({ bagExpanded, manualClose }: { bagExpanded: boolean; manualClose?: boolean }) => void\n  setBagStatus: (state: BagStatus) => void\n  itemsInBag: BagItem[]\n  setItemsInBag: (items: BagItem[]) => void\n  totalEthPrice: BigNumber\n  setTotalEthPrice: (totalEthPrice: BigNumber) => void\n  totalUsdPrice: number | undefined\n  setTotalUsdPrice: (totalUsdPrice: number | undefined) => void\n  addAssetsToBag: (asset: UpdatedGenieAsset[], fromSweep?: boolean) => void\n  removeAssetsFromBag: (assets: UpdatedGenieAsset[], fromSweep?: boolean) => void\n  markAssetAsReviewed: (asset: UpdatedGenieAsset, toKeep: boolean) => void\n  lockSweepItems: (contractAddress: string) => void\n  didOpenUnavailableAssets: boolean\n  setDidOpenUnavailableAssets: (didOpen: boolean) => void\n  bagExpanded: boolean\n  toggleBag: () => void\n  usedSweep: boolean\n  isLocked: boolean\n  setLocked: (isLocked: boolean) => void\n  reset: () => void\n}\n\nexport const useBag = create<BagState>()(\n  devtools(\n    (set, get) => ({\n      bagStatus: BagStatus.ADDING_TO_BAG,\n      bagExpanded: false,\n      bagManuallyClosed: false,\n      setBagStatus: (newBagStatus) =>\n        set(() => ({\n          bagStatus: newBagStatus,\n        })),\n      markAssetAsReviewed: (asset, toKeep) =>\n        set(({ itemsInBag }) => {\n          if (itemsInBag.length === 0) return { itemsInBag: [] }\n          const itemsInBagCopy = [...itemsInBag]\n          const index = itemsInBagCopy.findIndex((item) => item.asset.id === asset.id)\n          if (!toKeep && index !== -1) itemsInBagCopy.splice(index, 1)\n          else if (index !== -1) {\n            itemsInBagCopy[index].status = BagItemStatus.REVIEWED\n          }\n          return {\n            itemsInBag: itemsInBagCopy,\n          }\n        }),\n      didOpenUnavailableAssets: false,\n      setDidOpenUnavailableAssets: (didOpen) =>\n        set(() => ({\n          didOpenUnavailableAssets: didOpen,\n        })),\n      setBagExpanded: ({ bagExpanded, manualClose }) =>\n        set(({ bagManuallyClosed }) => ({ bagExpanded, bagManuallyClosed: manualClose || bagManuallyClosed })),\n      toggleBag: () => set(({ bagExpanded }) => ({ bagExpanded: !bagExpanded })),\n      usedSweep: false,\n      isLocked: false,\n      setLocked: (_isLocked) =>\n        set(() => ({\n          isLocked: _isLocked,\n        })),\n      itemsInBag: [],\n      setItemsInBag: (items) =>\n        set(() => ({\n          itemsInBag: items,\n        })),\n      totalEthPrice: BigNumber.from(0),\n      setTotalEthPrice: (totalEthPrice) =>\n        set(() => ({\n          totalEthPrice,\n        })),\n      totalUsdPrice: undefined,\n      setTotalUsdPrice: (totalUsdPrice) =>\n        set(() => ({\n          totalUsdPrice,\n        })),\n      addAssetsToBag: (assets, fromSweep = false) =>\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          const items: BagItem[] = []\n          const itemsInBagCopy = [...itemsInBag]\n          assets.forEach((asset) => {\n            let index = -1\n            if (asset.tokenType !== NftStandard.Erc1155) {\n              index = itemsInBag.findIndex(\n                (n) => n.asset.tokenId === asset.tokenId && n.asset.address === asset.address\n              )\n            }\n            if (index !== -1) {\n              itemsInBagCopy[index].inSweep = fromSweep\n            } else {\n              const assetWithId = {\n                asset: { id: uuidv4(), ...asset },\n                status: BagItemStatus.ADDED_TO_BAG,\n                inSweep: fromSweep,\n              }\n              items.push(assetWithId)\n            }\n          })\n          if (itemsInBag.length === 0)\n            return {\n              itemsInBag: items,\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              usedSweep: fromSweep,\n            }\n          else\n            return {\n              itemsInBag: [...itemsInBagCopy, ...items],\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              usedSweep: fromSweep,\n            }\n        }),\n      removeAssetsFromBag: (assets, fromSweep = false) => {\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          if (itemsInBag.length === 0) return { itemsInBag: [] }\n          const itemsCopy = itemsInBag.filter(\n            (item) =>\n              !assets.some((asset) =>\n                asset.id\n                  ? asset.id === item.asset.id\n                  : asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n              )\n          )\n          return {\n            itemsInBag: itemsCopy,\n            usedSweep: fromSweep,\n          }\n        })\n      },\n      lockSweepItems: (contractAddress) =>\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          const itemsInBagCopy = itemsInBag.map((item) =>\n            item.asset.address === contractAddress && item.inSweep ? { ...item, inSweep: false } : item\n          )\n          if (itemsInBag.length === 0)\n            return {\n              itemsInBag,\n            }\n          else\n            return {\n              itemsInBag: [...itemsInBagCopy],\n            }\n        }),\n      reset: () =>\n        set(() => {\n          if (!get().isLocked)\n            return {\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              itemsInBag: [],\n              didOpenUnavailableAssets: false,\n              isLocked: false,\n              bagManuallyClosed: false,\n              bagExpanded: false,\n            }\n          else return {}\n        }),\n    }),\n    { name: 'useBag' }\n  )\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}