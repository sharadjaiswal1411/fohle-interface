{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import{SupportedChainId}from'constants/chains';import{nativeOnChain}from'constants/tokens';import{useMemo}from'react';export default function useNativeCurrency(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;return useMemo(function(){return chainId?nativeOnChain(chainId):// display mainnet when not connected\nnativeOnChain(SupportedChainId.MAINNET);},[chainId]);}","map":{"version":3,"names":["useWeb3React","SupportedChainId","nativeOnChain","useMemo","useNativeCurrency","chainId","MAINNET"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useNativeCurrency.ts"],"sourcesContent":["import { NativeCurrency, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { SupportedChainId } from 'constants/chains'\nimport { nativeOnChain } from 'constants/tokens'\nimport { useMemo } from 'react'\n\nexport default function useNativeCurrency(): NativeCurrency | Token {\n  const { chainId } = useWeb3React()\n  return useMemo(\n    () =>\n      chainId\n        ? nativeOnChain(chainId)\n        : // display mainnet when not connected\n          nativeOnChain(SupportedChainId.MAINNET),\n    [chainId]\n  )\n}\n"],"mappings":"AACA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,aAAa,KAAQ,kBAAkB,CAChD,OAASC,OAAO,KAAQ,OAAO,CAE/B,cAAe,SAASC,kBAAiB,EAA2B,CAClE,kBAAoBJ,YAAY,EAAE,CAA1BK,OAAO,eAAPA,OAAO,CACf,MAAOF,QAAO,CACZ,iBACEE,QAAO,CACHH,aAAa,CAACG,OAAO,CAAC,CACtB;AACAH,aAAa,CAACD,gBAAgB,CAACK,OAAO,CAAC,GAC7C,CAACD,OAAO,CAAC,CACV,CACH"},"metadata":{},"sourceType":"module"}