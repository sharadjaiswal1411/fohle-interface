{"ast":null,"code":"import { createAction } from '@reduxjs/toolkit';\nvar ApplicationModal;\n(function (ApplicationModal) {\n  ApplicationModal[ApplicationModal[\"WALLET\"] = 0] = \"WALLET\";\n  ApplicationModal[ApplicationModal[\"SETTINGS\"] = 1] = \"SETTINGS\";\n  ApplicationModal[ApplicationModal[\"MENU\"] = 2] = \"MENU\";\n})(ApplicationModal || (ApplicationModal = {}));\nconst updateBlockNumber = createAction('application/updateBlockNumber');\nconst setOpenModal = createAction('application/setOpenModal');\nconst addPopup = createAction('application/addPopup');\nconst removePopup = createAction('application/removePopup');\nconst updateSubgraphStatus = createAction('application/updateSubgraphStatus');\nconst updateActiveNetworkVersion = createAction('application/updateActiveNetworkVersion');","map":{"version":3,"names":["createAction","ApplicationModal","updateBlockNumber","setOpenModal","addPopup","removePopup","updateSubgraphStatus","updateActiveNetworkVersion"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/application/actions.ts"],"sourcesContent":["import { createAction } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { NetworkInfo } from 'constants/networks'\n\ntype PopupContent = {\n  listUpdate: {\n    listUrl: string\n    oldList: TokenList\n    newList: TokenList\n    auto: boolean\n  }\n}\n\n enum ApplicationModal {\n  WALLET,\n  SETTINGS,\n  MENU,\n}\n\nconst updateBlockNumber = createAction<{ chainId: number; blockNumber: number }>('application/updateBlockNumber')\nconst setOpenModal = createAction<ApplicationModal | null>('application/setOpenModal')\nconst addPopup = createAction<{ key?: string; removeAfterMs?: number | null; content: PopupContent }>(\n  'application/addPopup'\n)\nconst removePopup = createAction<{ key: string }>('application/removePopup')\nconst updateSubgraphStatus = createAction<{\n  available: boolean | null\n  syncedBlock: number | undefined\n  headBlock: number | undefined\n}>('application/updateSubgraphStatus')\nconst updateActiveNetworkVersion = createAction<{ activeNetworkVersion: NetworkInfo }>(\n  'application/updateActiveNetworkVersion'\n)\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAAA,IAazCC,gBAAgB;AAAA,WAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;EAAhBA,gBAAgB,CAAhBA,gBAAgB;AAAA,GAAhBA,gBAAgB,KAAhBA,gBAAgB;AAMtB,MAAMC,iBAAiB,GAAGF,YAAY,CAA2C,+BAA+B,CAAC;AACjH,MAAMG,YAAY,GAAGH,YAAY,CAA0B,0BAA0B,CAAC;AACtF,MAAMI,QAAQ,GAAGJ,YAAY,CAC3B,sBAAsB,CACvB;AACD,MAAMK,WAAW,GAAGL,YAAY,CAAkB,yBAAyB,CAAC;AAC5E,MAAMM,oBAAoB,GAAGN,YAAY,CAItC,kCAAkC,CAAC;AACtC,MAAMO,0BAA0B,GAAGP,YAAY,CAC7C,wCAAwC,CACzC"},"metadata":{},"sourceType":"module"}