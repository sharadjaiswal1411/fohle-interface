{"ast":null,"code":"import{DEFAULT_LOCALE}from'constants/locales';import numbro from'numbro';export var isNumber=function isNumber(s){var reg=/^-?\\d+\\.?\\d*$/;return reg.test(s)&&!isNaN(parseFloat(s))&&isFinite(parseFloat(s));};export var floorFormatter=function floorFormatter(n){if(n===0)return'0.00';if(!n)return'';if(n<0.001){return'<0.001';}if(n>=0.001&&n<1){return\"\".concat(parseFloat(n.toFixed(3)).toLocaleString(DEFAULT_LOCALE,{minimumFractionDigits:1,maximumFractionDigits:3}));}if(n>=1&&n<1e6){return\"\".concat(parseFloat(n.toPrecision(6)).toLocaleString(DEFAULT_LOCALE,{minimumFractionDigits:0,maximumFractionDigits:2}));}if(n>=1e6&&n<1e15){return numbro(n).format({average:true,mantissa:2,optionalMantissa:true,abbreviations:{million:'M',billion:'B',trillion:'T'}}).toUpperCase();}if(n>=1e15){return\"\".concat(n.toExponential(3).replace(/(\\.[0-9]*[1-9])0*|(\\.0*)/,'$1'));}return\"\".concat(Number(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE,{minimumFractionDigits:2}));};export var volumeFormatter=function volumeFormatter(n){if(n===0)return'0.00';if(!n)return'';if(n<0.01){return'<0.01';}if(n>=0.01&&n<1){return\"\".concat(parseFloat(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE));}if(n>=1&&n<1000){return\"\".concat(Number(Math.round(n).toLocaleString(DEFAULT_LOCALE)));}if(n>=1000){return numbro(n).format({average:true,mantissa:1,optionalMantissa:true,abbreviations:{thousand:'K',million:'M',billion:'B',trillion:'T'}}).toUpperCase();}return\"\".concat(Number(n.toFixed(1)).toLocaleString(DEFAULT_LOCALE,{minimumFractionDigits:1}));};export var quantityFormatter=function quantityFormatter(n){if(n===0)return'0.00';if(!n)return'';if(n>=1&&n<1000){return\"\".concat(Number(Math.round(n).toLocaleString(DEFAULT_LOCALE)));}if(n>=1000){return numbro(n).format({average:true,mantissa:1,thousandSeparated:true,optionalMantissa:true,abbreviations:{thousand:'K',million:'M',billion:'B',trillion:'T'}}).toUpperCase();}return\"\".concat(Number(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE,{minimumFractionDigits:2}));};export var roundWholePercentage=function roundWholePercentage(n){if(n===0)return'0';if(!n)return'';if(n<1){return'<1';}return Math.round(n).toString();};","map":{"version":3,"names":["DEFAULT_LOCALE","numbro","isNumber","s","reg","test","isNaN","parseFloat","isFinite","floorFormatter","n","toFixed","toLocaleString","minimumFractionDigits","maximumFractionDigits","toPrecision","format","average","mantissa","optionalMantissa","abbreviations","million","billion","trillion","toUpperCase","toExponential","replace","Number","volumeFormatter","Math","round","thousand","quantityFormatter","thousandSeparated","roundWholePercentage","toString"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/numbers.ts"],"sourcesContent":["import { DEFAULT_LOCALE } from 'constants/locales'\nimport numbro from 'numbro'\n\nexport const isNumber = (s: string): boolean => {\n  const reg = /^-?\\d+\\.?\\d*$/\n  return reg.test(s) && !isNaN(parseFloat(s)) && isFinite(parseFloat(s))\n}\n\nexport const floorFormatter = (n: number): string => {\n  if (n === 0) return '0.00'\n  if (!n) return ''\n  if (n < 0.001) {\n    return '<0.001'\n  }\n  if (n >= 0.001 && n < 1) {\n    return `${parseFloat(n.toFixed(3)).toLocaleString(DEFAULT_LOCALE, {\n      minimumFractionDigits: 1,\n      maximumFractionDigits: 3,\n    })}`\n  }\n  if (n >= 1 && n < 1e6) {\n    return `${parseFloat(n.toPrecision(6)).toLocaleString(DEFAULT_LOCALE, {\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 2,\n    })}`\n  }\n  if (n >= 1e6 && n < 1e15) {\n    return numbro(n)\n      .format({\n        average: true,\n        mantissa: 2,\n        optionalMantissa: true,\n        abbreviations: {\n          million: 'M',\n          billion: 'B',\n          trillion: 'T',\n        },\n      })\n      .toUpperCase()\n  }\n  if (n >= 1e15) {\n    return `${n.toExponential(3).replace(/(\\.[0-9]*[1-9])0*|(\\.0*)/, '$1')}`\n  }\n  return `${Number(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE, { minimumFractionDigits: 2 })}`\n}\n\nexport const volumeFormatter = (n: number): string => {\n  if (n === 0) return '0.00'\n  if (!n) return ''\n  if (n < 0.01) {\n    return '<0.01'\n  }\n  if (n >= 0.01 && n < 1) {\n    return `${parseFloat(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE)}`\n  }\n  if (n >= 1 && n < 1000) {\n    return `${Number(Math.round(n).toLocaleString(DEFAULT_LOCALE))}`\n  }\n  if (n >= 1000) {\n    return numbro(n)\n      .format({\n        average: true,\n        mantissa: 1,\n        optionalMantissa: true,\n        abbreviations: {\n          thousand: 'K',\n          million: 'M',\n          billion: 'B',\n          trillion: 'T',\n        },\n      })\n      .toUpperCase()\n  }\n  return `${Number(n.toFixed(1)).toLocaleString(DEFAULT_LOCALE, { minimumFractionDigits: 1 })}`\n}\n\nexport const quantityFormatter = (n: number): string => {\n  if (n === 0) return '0.00'\n  if (!n) return ''\n  if (n >= 1 && n < 1000) {\n    return `${Number(Math.round(n).toLocaleString(DEFAULT_LOCALE))}`\n  }\n  if (n >= 1000) {\n    return numbro(n)\n      .format({\n        average: true,\n        mantissa: 1,\n        thousandSeparated: true,\n        optionalMantissa: true,\n        abbreviations: {\n          thousand: 'K',\n          million: 'M',\n          billion: 'B',\n          trillion: 'T',\n        },\n      })\n      .toUpperCase()\n  }\n  return `${Number(n.toFixed(2)).toLocaleString(DEFAULT_LOCALE, { minimumFractionDigits: 2 })}`\n}\n\nexport const roundWholePercentage = (n: number): string => {\n  if (n === 0) return '0'\n  if (!n) return ''\n  if (n < 1) {\n    return '<1'\n  }\n  return Math.round(n).toString()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}