{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { addConnectedWallet } from './reducer';\nexport function useConnectedWallets() {\n  _s();\n  const dispatch = useAppDispatch();\n  const connectedWallets = useAppSelector(state => state.wallets.connectedWallets);\n  const addWallet = useCallback(wallet => {\n    dispatch(addConnectedWallet(wallet));\n  }, [dispatch]);\n  return [connectedWallets, addWallet];\n}\n_s(useConnectedWallets, \"Zj4q/GSKx9emBJvDAIgtyxULDbU=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});","map":{"version":3,"names":["useCallback","useAppDispatch","useAppSelector","addConnectedWallet","useConnectedWallets","dispatch","connectedWallets","state","wallets","addWallet","wallet"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/wallets/hooks.tsx"],"sourcesContent":["import { useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { addConnectedWallet } from './reducer'\nimport { Wallet } from './types'\n\nexport function useConnectedWallets(): [Wallet[], (wallet: Wallet) => void] {\n  const dispatch = useAppDispatch()\n  const connectedWallets = useAppSelector((state) => state.wallets.connectedWallets)\n  const addWallet = useCallback(\n    (wallet: Wallet) => {\n      dispatch(addConnectedWallet(wallet))\n    },\n    [dispatch]\n  )\n  return [connectedWallets, addWallet]\n}\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,OAAO;AACnC,SAASC,cAAc,EAAEC,cAAc,QAAQ,aAAa;AAE5D,SAASC,kBAAkB,QAAQ,WAAW;AAG9C,OAAO,SAASC,mBAAmB,GAAyC;EAAA;EAC1E,MAAMC,QAAQ,GAAGJ,cAAc,EAAE;EACjC,MAAMK,gBAAgB,GAAGJ,cAAc,CAAEK,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,gBAAgB,CAAC;EAClF,MAAMG,SAAS,GAAGT,WAAW,CAC1BU,MAAc,IAAK;IAClBL,QAAQ,CAACF,kBAAkB,CAACO,MAAM,CAAC,CAAC;EACtC,CAAC,EACD,CAACL,QAAQ,CAAC,CACX;EACD,OAAO,CAACC,gBAAgB,EAAEG,SAAS,CAAC;AACtC;AAAC,GAVeL,mBAAmB;EAAA,QAChBH,cAAc,EACNC,cAAc;AAAA"},"metadata":{},"sourceType":"module"}