{"ast":null,"code":"var _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _inherits = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _createSuper = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\nvar pify = require('pify');\nvar BaseBlockTracker = require('./base');\nvar sec = 1000;\nvar PollingBlockTracker = /*#__PURE__*/function (_BaseBlockTracker) {\n  \"use strict\";\n\n  _inherits(PollingBlockTracker, _BaseBlockTracker);\n  var _super = _createSuper(PollingBlockTracker);\n  function PollingBlockTracker() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, PollingBlockTracker);\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.');\n    var pollingInterval = opts.pollingInterval || 20 * sec;\n    var retryTimeout = opts.retryTimeout || pollingInterval / 10;\n    var keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true;\n    var setSkipCacheFlag = opts.setSkipCacheFlag || false;\n    // BaseBlockTracker constructor\n    _this = _super.call(this, Object.assign({\n      blockResetDuration: pollingInterval\n    }, opts));\n    // config\n    _this._provider = opts.provider;\n    _this._pollingInterval = pollingInterval;\n    _this._retryTimeout = retryTimeout;\n    _this._keepEventLoopActive = keepEventLoopActive;\n    _this._setSkipCacheFlag = setSkipCacheFlag;\n    return _this;\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  _createClass(PollingBlockTracker, [{\n    key: \"checkForLatestBlock\",\n    value: function () {\n      var _checkForLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._updateLatestBlock();\n              case 2:\n                _context.next = 4;\n                return this.getLatestBlock();\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function checkForLatestBlock() {\n        return _checkForLatestBlock.apply(this, arguments);\n      }\n      return checkForLatestBlock;\n    }() //\n    // private\n    //\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      var _this2 = this;\n      this._performSync().catch(function (err) {\n        return _this2.emit('error', err);\n      });\n    }\n  }, {\n    key: \"_performSync\",\n    value: function () {\n      var _performSync2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var newErr;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!this._isRunning) {\n                  _context2.next = 16;\n                  break;\n                }\n                _context2.prev = 1;\n                _context2.next = 4;\n                return this._updateLatestBlock();\n              case 4:\n                _context2.next = 6;\n                return timeout(this._pollingInterval, !this._keepEventLoopActive);\n              case 6:\n                _context2.next = 14;\n                break;\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n                newErr = new Error(\"PollingBlockTracker - encountered an error while attempting to update latest block:\\n\".concat(_context2.t0.stack));\n                try {\n                  this.emit('error', newErr);\n                } catch (emitErr) {\n                  console.error(newErr);\n                }\n                _context2.next = 14;\n                return timeout(this._retryTimeout, !this._keepEventLoopActive);\n              case 14:\n                _context2.next = 0;\n                break;\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 8]]);\n      }));\n      function _performSync() {\n        return _performSync2.apply(this, arguments);\n      }\n      return _performSync;\n    }()\n  }, {\n    key: \"_updateLatestBlock\",\n    value: function () {\n      var _updateLatestBlock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var latestBlock;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this._fetchLatestBlock();\n              case 2:\n                latestBlock = _context3.sent;\n                this._newPotentialLatest(latestBlock);\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function _updateLatestBlock() {\n        return _updateLatestBlock2.apply(this, arguments);\n      }\n      return _updateLatestBlock;\n    }()\n  }, {\n    key: \"_fetchLatestBlock\",\n    value: function () {\n      var _fetchLatestBlock2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this3 = this;\n        var req, res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                req = {\n                  jsonrpc: \"2.0\",\n                  id: 1,\n                  method: 'eth_blockNumber',\n                  params: []\n                };\n                if (this._setSkipCacheFlag) req.skipCache = true;\n                _context4.next = 4;\n                return pify(function (cb) {\n                  return _this3._provider.sendAsync(req, cb);\n                })();\n              case 4:\n                res = _context4.sent;\n                if (!res.error) {\n                  _context4.next = 7;\n                  break;\n                }\n                throw new Error(\"PollingBlockTracker - encountered error fetching block:\\n\".concat(res.error));\n              case 7:\n                return _context4.abrupt(\"return\", res.result);\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function _fetchLatestBlock() {\n        return _fetchLatestBlock2.apply(this, arguments);\n      }\n      return _fetchLatestBlock;\n    }()\n  }]);\n  return PollingBlockTracker;\n}(BaseBlockTracker);\nmodule.exports = PollingBlockTracker;\nfunction timeout(duration, unref) {\n  return new Promise(function (resolve) {\n    var timoutRef = setTimeout(resolve, duration);\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref();\n    }\n  });\n}","map":{"version":3,"names":["pify","require","BaseBlockTracker","sec","PollingBlockTracker","opts","provider","Error","pollingInterval","retryTimeout","keepEventLoopActive","undefined","setSkipCacheFlag","Object","assign","blockResetDuration","_provider","_pollingInterval","_retryTimeout","_keepEventLoopActive","_setSkipCacheFlag","_updateLatestBlock","getLatestBlock","_performSync","catch","err","emit","_isRunning","timeout","newErr","stack","emitErr","console","error","_fetchLatestBlock","latestBlock","_newPotentialLatest","req","jsonrpc","id","method","params","skipCache","cb","sendAsync","res","result","module","exports","duration","unref","Promise","resolve","timoutRef","setTimeout"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/eth-block-tracker/src/polling.js"],"sourcesContent":["const pify = require('pify')\nconst BaseBlockTracker = require('./base')\n\nconst sec = 1000\n\nclass PollingBlockTracker extends BaseBlockTracker {\n\n  constructor (opts = {}) {\n    // parse + validate args\n    if (!opts.provider) throw new Error('PollingBlockTracker - no provider specified.')\n    const pollingInterval = opts.pollingInterval || 20 * sec\n    const retryTimeout = opts.retryTimeout || pollingInterval / 10\n    const keepEventLoopActive = opts.keepEventLoopActive !== undefined ? opts.keepEventLoopActive : true\n    const setSkipCacheFlag = opts.setSkipCacheFlag || false\n    // BaseBlockTracker constructor\n    super(Object.assign({\n      blockResetDuration: pollingInterval,\n    }, opts))\n    // config\n    this._provider = opts.provider\n    this._pollingInterval = pollingInterval\n    this._retryTimeout = retryTimeout\n    this._keepEventLoopActive = keepEventLoopActive\n    this._setSkipCacheFlag = setSkipCacheFlag\n  }\n\n  //\n  // public\n  //\n\n  // trigger block polling\n  async checkForLatestBlock () {\n    await this._updateLatestBlock()\n    return await this.getLatestBlock()\n  }\n\n  //\n  // private\n  //\n\n  _start () {\n    this._performSync().catch(err => this.emit('error', err))\n  }\n\n  async _performSync () {\n    while (this._isRunning) {\n      try {\n        await this._updateLatestBlock()\n        await timeout(this._pollingInterval, !this._keepEventLoopActive)\n      } catch (err) {\n        const newErr = new Error(`PollingBlockTracker - encountered an error while attempting to update latest block:\\n${err.stack}`)\n        try {\n          this.emit('error', newErr)\n        } catch (emitErr) {\n          console.error(newErr)\n        }\n        await timeout(this._retryTimeout, !this._keepEventLoopActive)\n      }\n    }\n  }\n\n  async _updateLatestBlock () {\n    // fetch + set latest block\n    const latestBlock = await this._fetchLatestBlock()\n    this._newPotentialLatest(latestBlock)\n  }\n\n  async _fetchLatestBlock () {\n    const req = { jsonrpc: \"2.0\", id: 1, method: 'eth_blockNumber', params: [] }\n    if (this._setSkipCacheFlag) req.skipCache = true\n    const res = await pify((cb) => this._provider.sendAsync(req, cb))()\n    if (res.error) throw new Error(`PollingBlockTracker - encountered error fetching block:\\n${res.error}`)\n    return res.result\n  }\n\n}\n\nmodule.exports = PollingBlockTracker\n\nfunction timeout (duration, unref) {\n  return new Promise(resolve => {\n    const timoutRef = setTimeout(resolve, duration)\n    // don't keep process open\n    if (timoutRef.unref && unref) {\n      timoutRef.unref()\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}