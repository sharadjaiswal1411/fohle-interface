{"ast":null,"code":"import _createClass from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{DEFAULT_ERC20_DECIMALS}from'constants/tokens';import gql from'graphql-tag';import{WrappedTokenInfo}from'state/lists/wrappedTokenInfo';import{CHAIN_NAME_TO_CHAIN_ID}from'./util';/*\nThe difference between Token and TokenProject:\n  Token: an on-chain entity referring to a contract (e.g. uni token on ethereum 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984)\n  TokenProject: an off-chain, aggregated entity that consists of a token and its bridged tokens (e.g. uni token on all chains)\n  TokenMarket and TokenProjectMarket then are market data entities for the above.\n    TokenMarket is per-chain market data for contracts pulled from the graph.\n    TokenProjectMarket is aggregated market data (aggregated over multiple dexes and centralized exchanges) that we get from coingecko.\n*/gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query Token($contract: ContractInput!) {\\n    tokens(contracts: [$contract]) {\\n      id\\n      decimals\\n      name\\n      chain\\n      address\\n      symbol\\n      market(currency: USD) {\\n        totalValueLocked {\\n          value\\n          currency\\n        }\\n        price {\\n          value\\n          currency\\n        }\\n        volume24H: volume(duration: DAY) {\\n          value\\n          currency\\n        }\\n        priceHigh52W: priceHighLow(duration: YEAR, highLow: HIGH) {\\n          value\\n        }\\n        priceLow52W: priceHighLow(duration: YEAR, highLow: LOW) {\\n          value\\n        }\\n      }\\n      project {\\n        description\\n        homepageUrl\\n        twitterName\\n        logoUrl\\n        tokens {\\n          chain\\n          address\\n        }\\n      }\\n    }\\n  }\\n\"])));// TODO: Return a QueryToken from useTokenQuery instead of TokenQueryData to make it more usable in Currency-centric interfaces.\nexport var QueryToken=/*#__PURE__*/function(_WrappedTokenInfo){_inherits(QueryToken,_WrappedTokenInfo);var _super=_createSuper(QueryToken);function QueryToken(address,data,logoSrc){var _data$decimals,_data$symbol,_data$name,_ref,_data$project;_classCallCheck(this,QueryToken);return _super.call(this,{chainId:CHAIN_NAME_TO_CHAIN_ID[data.chain],address:address,decimals:(_data$decimals=data.decimals)!==null&&_data$decimals!==void 0?_data$decimals:DEFAULT_ERC20_DECIMALS,symbol:(_data$symbol=data.symbol)!==null&&_data$symbol!==void 0?_data$symbol:'',name:(_data$name=data.name)!==null&&_data$name!==void 0?_data$name:'',logoURI:(_ref=logoSrc!==null&&logoSrc!==void 0?logoSrc:(_data$project=data.project)===null||_data$project===void 0?void 0:_data$project.logoUrl)!==null&&_ref!==void 0?_ref:undefined});}return _createClass(QueryToken);}(WrappedTokenInfo);","map":{"version":3,"names":["DEFAULT_ERC20_DECIMALS","gql","WrappedTokenInfo","CHAIN_NAME_TO_CHAIN_ID","QueryToken","address","data","logoSrc","chainId","chain","decimals","symbol","name","logoURI","project","logoUrl","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/data/Token.ts"],"sourcesContent":["import { DEFAULT_ERC20_DECIMALS } from 'constants/tokens'\nimport gql from 'graphql-tag'\nimport { WrappedTokenInfo } from 'state/lists/wrappedTokenInfo'\n\nimport { TokenQuery } from './__generated__/types-and-hooks'\nimport { CHAIN_NAME_TO_CHAIN_ID } from './util'\n\n/*\nThe difference between Token and TokenProject:\n  Token: an on-chain entity referring to a contract (e.g. uni token on ethereum 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984)\n  TokenProject: an off-chain, aggregated entity that consists of a token and its bridged tokens (e.g. uni token on all chains)\n  TokenMarket and TokenProjectMarket then are market data entities for the above.\n    TokenMarket is per-chain market data for contracts pulled from the graph.\n    TokenProjectMarket is aggregated market data (aggregated over multiple dexes and centralized exchanges) that we get from coingecko.\n*/\ngql`\n  query Token($contract: ContractInput!) {\n    tokens(contracts: [$contract]) {\n      id\n      decimals\n      name\n      chain\n      address\n      symbol\n      market(currency: USD) {\n        totalValueLocked {\n          value\n          currency\n        }\n        price {\n          value\n          currency\n        }\n        volume24H: volume(duration: DAY) {\n          value\n          currency\n        }\n        priceHigh52W: priceHighLow(duration: YEAR, highLow: HIGH) {\n          value\n        }\n        priceLow52W: priceHighLow(duration: YEAR, highLow: LOW) {\n          value\n        }\n      }\n      project {\n        description\n        homepageUrl\n        twitterName\n        logoUrl\n        tokens {\n          chain\n          address\n        }\n      }\n    }\n  }\n`\n\nexport type { Chain, TokenQuery } from './__generated__/types-and-hooks'\n\nexport type TokenQueryData = NonNullable<TokenQuery['tokens']>[number]\n\n// TODO: Return a QueryToken from useTokenQuery instead of TokenQueryData to make it more usable in Currency-centric interfaces.\nexport class QueryToken extends WrappedTokenInfo {\n  constructor(address: string, data: NonNullable<TokenQueryData>, logoSrc?: string) {\n    super({\n      chainId: CHAIN_NAME_TO_CHAIN_ID[data.chain],\n      address,\n      decimals: data.decimals ?? DEFAULT_ERC20_DECIMALS,\n      symbol: data.symbol ?? '',\n      name: data.name ?? '',\n      logoURI: logoSrc ?? data.project?.logoUrl ?? undefined,\n    })\n  }\n}\n"],"mappings":"g3BAAA,OAASA,sBAAsB,KAAQ,kBAAkB,CACzD,MAAOC,IAAG,KAAM,aAAa,CAC7B,OAASC,gBAAgB,KAAQ,8BAA8B,CAG/D,OAASC,sBAAsB,KAAQ,QAAQ,CAE/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EACAF,GAAG,82BA+CH;AACA,UAAaG,WAAU,sHACrB,oBAAYC,OAAe,CAAEC,IAAiC,CAAEC,OAAgB,CAAE,wHAC1E,CACJC,OAAO,CAAEL,sBAAsB,CAACG,IAAI,CAACG,KAAK,CAAC,CAC3CJ,OAAO,CAAPA,OAAO,CACPK,QAAQ,iBAAEJ,IAAI,CAACI,QAAQ,iDAAIV,sBAAsB,CACjDW,MAAM,eAAEL,IAAI,CAACK,MAAM,6CAAI,EAAE,CACzBC,IAAI,aAAEN,IAAI,CAACM,IAAI,yCAAI,EAAE,CACrBC,OAAO,OAAEN,OAAO,SAAPA,OAAO,UAAPA,OAAO,gBAAID,IAAI,CAACQ,OAAO,wCAAZ,cAAcC,OAAO,6BAAIC,SAC/C,CAAC,EACH,CAAC,kCAV6Bd,gBAAgB"},"metadata":{},"sourceType":"module"}