{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { L2_CHAIN_IDS } from 'constants/chains';\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc';\nimport { useMemo } from 'react';\nimport { useAppSelector } from 'state/hooks';\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp';\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline() {\n  _s();\n  const {\n    chainId\n  } = useWeb3React();\n  const ttl = useAppSelector(state => state.user.userDeadline);\n  const blockTimestamp = useCurrentBlockTimestamp();\n  return useMemo(() => {\n    if (blockTimestamp && chainId && L2_CHAIN_IDS.includes(chainId)) return blockTimestamp.add(L2_DEADLINE_FROM_NOW);\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl);\n    return undefined;\n  }, [blockTimestamp, chainId, ttl]);\n}\n_s(useTransactionDeadline, \"N3a3Uz/GOeLntgmEn+tUdSwkCKs=\", false, function () {\n  return [useWeb3React, useAppSelector, useCurrentBlockTimestamp];\n});","map":{"version":3,"names":["useWeb3React","L2_CHAIN_IDS","L2_DEADLINE_FROM_NOW","useMemo","useAppSelector","useCurrentBlockTimestamp","useTransactionDeadline","chainId","ttl","state","user","userDeadline","blockTimestamp","includes","add","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useTransactionDeadline.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { L2_CHAIN_IDS } from 'constants/chains'\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport { useMemo } from 'react'\nimport { useAppSelector } from 'state/hooks'\n\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const { chainId } = useWeb3React()\n  const ttl = useAppSelector((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && chainId && L2_CHAIN_IDS.includes(chainId)) return blockTimestamp.add(L2_DEADLINE_FROM_NOW)\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, chainId, ttl])\n}\n"],"mappings":";AACA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,oBAAoB,QAAQ,gBAAgB;AACrD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,cAAc,QAAQ,aAAa;AAE5C,OAAOC,wBAAwB,MAAM,4BAA4B;;AAEjE;AACA,eAAe,SAASC,sBAAsB,GAA0B;EAAA;EACtE,MAAM;IAAEC;EAAQ,CAAC,GAAGP,YAAY,EAAE;EAClC,MAAMQ,GAAG,GAAGJ,cAAc,CAAEK,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC;EAC9D,MAAMC,cAAc,GAAGP,wBAAwB,EAAE;EACjD,OAAOF,OAAO,CAAC,MAAM;IACnB,IAAIS,cAAc,IAAIL,OAAO,IAAIN,YAAY,CAACY,QAAQ,CAACN,OAAO,CAAC,EAAE,OAAOK,cAAc,CAACE,GAAG,CAACZ,oBAAoB,CAAC;IAChH,IAAIU,cAAc,IAAIJ,GAAG,EAAE,OAAOI,cAAc,CAACE,GAAG,CAACN,GAAG,CAAC;IACzD,OAAOO,SAAS;EAClB,CAAC,EAAE,CAACH,cAAc,EAAEL,OAAO,EAAEC,GAAG,CAAC,CAAC;AACpC;AAAC,GATuBF,sBAAsB;EAAA,QACxBN,YAAY,EACpBI,cAAc,EACHC,wBAAwB;AAAA"},"metadata":{},"sourceType":"module"}