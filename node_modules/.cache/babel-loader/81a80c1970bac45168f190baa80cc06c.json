{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _BASES_TO_CHECK_TRADE;\nimport { FeeAmount, Pool } from '@uniswap/v3-sdk';\nimport JSBI from 'jsbi';\nimport _ from 'lodash';\nimport { unparseFeeAmount } from '../../util/amounts';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS } from '../token-provider';\nvar BASES_TO_CHECK_TRADES_AGAINST = (_BASES_TO_CHECK_TRADE = {}, _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.MAINNET, [WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET], DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ROPSTEN, [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN], DAI_ROPSTEN, USDT_ROPSTEN, USDC_ROPSTEN]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.RINKEBY, [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY], DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_RINKEBY, USDT_RINKEBY]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.GÖRLI, [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI], USDT_GÖRLI, USDC_GÖRLI, WBTC_GÖRLI, DAI_GÖRLI]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.KOVAN, [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN], USDC_KOVAN, USDT_KOVAN, WBTC_KOVAN, DAI_KOVAN]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISM, [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM], USDC_OPTIMISM, DAI_OPTIMISM, USDT_OPTIMISM, WBTC_OPTIMISM]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_ONE, [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE], WBTC_ARBITRUM, DAI_ARBITRUM, USDC_ARBITRUM, USDT_ARBITRUM]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_RINKEBY, [WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY], DAI_ARBITRUM_RINKEBY, UNI_ARBITRUM_RINKEBY, USDT_ARBITRUM_RINKEBY]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISTIC_KOVAN, [WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN], DAI_OPTIMISTIC_KOVAN, WBTC_OPTIMISTIC_KOVAN, USDT_OPTIMISTIC_KOVAN, USDC_OPTIMISTIC_KOVAN]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON, [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON_MUMBAI, [DAI_POLYGON_MUMBAI, WRAPPED_NATIVE_CURRENCY[ChainId.POLYGON_MUMBAI], WMATIC_POLYGON_MUMBAI]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.CELO, [CELO, CUSD_CELO, CEUR_CELO, DAI_CELO]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.CELO_ALFAJORES, [CELO_ALFAJORES, CUSD_CELO_ALFAJORES, CEUR_CELO_ALFAJORES, DAI_CELO_ALFAJORES]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.GNOSIS, [WRAPPED_NATIVE_CURRENCY[ChainId.GNOSIS], WBTC_GNOSIS, WXDAI_GNOSIS, USDC_ETHEREUM_GNOSIS]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.MOONBEAM, [WRAPPED_NATIVE_CURRENCY[ChainId.MOONBEAM], DAI_MOONBEAM, USDC_MOONBEAM, WBTC_MOONBEAM]), _BASES_TO_CHECK_TRADE);\n/**\n * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.\n *\n * Since the pools are hardcoded and the data does not come from the Subgraph, the TVL values\n * are dummys and should not be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. Subgraph not available.\n *\n * @export\n * @class StaticV3SubgraphProvider\n */\nexport var StaticV3SubgraphProvider = /*#__PURE__*/function () {\n  function StaticV3SubgraphProvider(chainId, poolProvider) {\n    _classCallCheck(this, StaticV3SubgraphProvider);\n    this.chainId = chainId;\n    this.poolProvider = poolProvider;\n  }\n  _createClass(StaticV3SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIn, tokenOut) {\n        var bases, basePairs, pairs, poolAccessor, pools, poolAddressSet, subgraphPools;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                log.info('In static subgraph provider for V3');\n                bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n                basePairs = _.flatMap(bases, function (base) {\n                  return bases.map(function (otherBase) {\n                    return [base, otherBase];\n                  });\n                });\n                if (tokenIn && tokenOut) {\n                  basePairs.push.apply(basePairs, [[tokenIn, tokenOut]].concat(_toConsumableArray(bases.map(function (base) {\n                    return [tokenIn, base];\n                  })), _toConsumableArray(bases.map(function (base) {\n                    return [tokenOut, base];\n                  }))));\n                }\n                pairs = _(basePairs).filter(function (tokens) {\n                  return Boolean(tokens[0] && tokens[1]);\n                }).filter(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    tokenA = _ref2[0],\n                    tokenB = _ref2[1];\n                  return tokenA.address !== tokenB.address && !tokenA.equals(tokenB);\n                }).flatMap(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 2),\n                    tokenA = _ref4[0],\n                    tokenB = _ref4[1];\n                  return [[tokenA, tokenB, FeeAmount.LOWEST], [tokenA, tokenB, FeeAmount.LOW], [tokenA, tokenB, FeeAmount.MEDIUM], [tokenA, tokenB, FeeAmount.HIGH]];\n                }).value();\n                log.info(\"V3 Static subgraph provider about to get \".concat(pairs.length, \" pools on-chain\"));\n                _context.next = 8;\n                return this.poolProvider.getPools(pairs);\n              case 8:\n                poolAccessor = _context.sent;\n                pools = poolAccessor.getAllPools();\n                poolAddressSet = new Set();\n                subgraphPools = _(pools).map(function (pool) {\n                  var token0 = pool.token0,\n                    token1 = pool.token1,\n                    fee = pool.fee,\n                    liquidity = pool.liquidity;\n                  var poolAddress = Pool.getAddress(pool.token0, pool.token1, pool.fee);\n                  if (poolAddressSet.has(poolAddress)) {\n                    return undefined;\n                  }\n                  poolAddressSet.add(poolAddress);\n                  var liquidityNumber = JSBI.toNumber(liquidity);\n                  return {\n                    id: poolAddress,\n                    feeTier: unparseFeeAmount(fee),\n                    liquidity: liquidity.toString(),\n                    token0: {\n                      id: token0.address\n                    },\n                    token1: {\n                      id: token1.address\n                    },\n                    // As a very rough proxy we just use liquidity for TVL.\n                    tvlETH: liquidityNumber,\n                    tvlUSD: liquidityNumber\n                  };\n                }).compact().value();\n                return _context.abrupt(\"return\", subgraphPools);\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getPools(_x, _x2) {\n        return _getPools.apply(this, arguments);\n      }\n      return getPools;\n    }()\n  }]);\n  return StaticV3SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../src/providers/v3/static-subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { FeeAmount, Pool } from '@uniswap/v3-sdk';\nimport JSBI from 'jsbi';\nimport _ from 'lodash';\nimport { unparseFeeAmount } from '../../util/amounts';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { CELO, CELO_ALFAJORES, CEUR_CELO, CEUR_CELO_ALFAJORES, CUSD_CELO, CUSD_CELO_ALFAJORES, DAI_ARBITRUM, DAI_ARBITRUM_RINKEBY, DAI_CELO, DAI_CELO_ALFAJORES, DAI_GÖRLI, DAI_KOVAN, DAI_MAINNET, DAI_MOONBEAM, DAI_OPTIMISM, DAI_OPTIMISTIC_KOVAN, DAI_POLYGON_MUMBAI, DAI_RINKEBY_1, DAI_RINKEBY_2, DAI_ROPSTEN, UNI_ARBITRUM_RINKEBY, USDC_ARBITRUM, USDC_ETHEREUM_GNOSIS, USDC_GÖRLI, USDC_KOVAN, USDC_MAINNET, USDC_MOONBEAM, USDC_OPTIMISM, USDC_OPTIMISTIC_KOVAN, USDC_POLYGON, USDC_RINKEBY, USDC_ROPSTEN, USDT_ARBITRUM, USDT_ARBITRUM_RINKEBY, USDT_GÖRLI, USDT_KOVAN, USDT_MAINNET, USDT_OPTIMISM, USDT_OPTIMISTIC_KOVAN, USDT_RINKEBY, USDT_ROPSTEN, WBTC_ARBITRUM, WBTC_GNOSIS, WBTC_GÖRLI, WBTC_KOVAN, WBTC_MAINNET, WBTC_MOONBEAM, WBTC_OPTIMISM, WBTC_OPTIMISTIC_KOVAN, WETH_POLYGON, WMATIC_POLYGON, WMATIC_POLYGON_MUMBAI, WXDAI_GNOSIS, } from '../token-provider';\nconst BASES_TO_CHECK_TRADES_AGAINST = {\n    [ChainId.MAINNET]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],\n        DAI_MAINNET,\n        USDC_MAINNET,\n        USDT_MAINNET,\n        WBTC_MAINNET,\n    ],\n    [ChainId.ROPSTEN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN],\n        DAI_ROPSTEN,\n        USDT_ROPSTEN,\n        USDC_ROPSTEN,\n    ],\n    [ChainId.RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY],\n        DAI_RINKEBY_1,\n        DAI_RINKEBY_2,\n        USDC_RINKEBY,\n        USDT_RINKEBY,\n    ],\n    [ChainId.GÖRLI]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI],\n        USDT_GÖRLI,\n        USDC_GÖRLI,\n        WBTC_GÖRLI,\n        DAI_GÖRLI,\n    ],\n    [ChainId.KOVAN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN],\n        USDC_KOVAN,\n        USDT_KOVAN,\n        WBTC_KOVAN,\n        DAI_KOVAN,\n    ],\n    [ChainId.OPTIMISM]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISM],\n        USDC_OPTIMISM,\n        DAI_OPTIMISM,\n        USDT_OPTIMISM,\n        WBTC_OPTIMISM,\n    ],\n    [ChainId.ARBITRUM_ONE]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_ONE],\n        WBTC_ARBITRUM,\n        DAI_ARBITRUM,\n        USDC_ARBITRUM,\n        USDT_ARBITRUM,\n    ],\n    [ChainId.ARBITRUM_RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.ARBITRUM_RINKEBY],\n        DAI_ARBITRUM_RINKEBY,\n        UNI_ARBITRUM_RINKEBY,\n        USDT_ARBITRUM_RINKEBY,\n    ],\n    [ChainId.OPTIMISTIC_KOVAN]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.OPTIMISTIC_KOVAN],\n        DAI_OPTIMISTIC_KOVAN,\n        WBTC_OPTIMISTIC_KOVAN,\n        USDT_OPTIMISTIC_KOVAN,\n        USDC_OPTIMISTIC_KOVAN,\n    ],\n    [ChainId.POLYGON]: [USDC_POLYGON, WETH_POLYGON, WMATIC_POLYGON],\n    [ChainId.POLYGON_MUMBAI]: [\n        DAI_POLYGON_MUMBAI,\n        WRAPPED_NATIVE_CURRENCY[ChainId.POLYGON_MUMBAI],\n        WMATIC_POLYGON_MUMBAI,\n    ],\n    [ChainId.CELO]: [CELO, CUSD_CELO, CEUR_CELO, DAI_CELO],\n    [ChainId.CELO_ALFAJORES]: [\n        CELO_ALFAJORES,\n        CUSD_CELO_ALFAJORES,\n        CEUR_CELO_ALFAJORES,\n        DAI_CELO_ALFAJORES,\n    ],\n    [ChainId.GNOSIS]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.GNOSIS],\n        WBTC_GNOSIS,\n        WXDAI_GNOSIS,\n        USDC_ETHEREUM_GNOSIS,\n    ],\n    [ChainId.MOONBEAM]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.MOONBEAM],\n        DAI_MOONBEAM,\n        USDC_MOONBEAM,\n        WBTC_MOONBEAM,\n    ],\n};\n/**\n * Provider that uses a hardcoded list of V3 pools to generate a list of subgraph pools.\n *\n * Since the pools are hardcoded and the data does not come from the Subgraph, the TVL values\n * are dummys and should not be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. Subgraph not available.\n *\n * @export\n * @class StaticV3SubgraphProvider\n */\nexport class StaticV3SubgraphProvider {\n    constructor(chainId, poolProvider) {\n        this.chainId = chainId;\n        this.poolProvider = poolProvider;\n    }\n    async getPools(tokenIn, tokenOut) {\n        log.info('In static subgraph provider for V3');\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        if (tokenIn && tokenOut) {\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\n        }\n        const pairs = _(basePairs)\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .flatMap(([tokenA, tokenB]) => {\n            return [\n                [tokenA, tokenB, FeeAmount.LOWEST],\n                [tokenA, tokenB, FeeAmount.LOW],\n                [tokenA, tokenB, FeeAmount.MEDIUM],\n                [tokenA, tokenB, FeeAmount.HIGH],\n            ];\n        })\n            .value();\n        log.info(`V3 Static subgraph provider about to get ${pairs.length} pools on-chain`);\n        const poolAccessor = await this.poolProvider.getPools(pairs);\n        const pools = poolAccessor.getAllPools();\n        const poolAddressSet = new Set();\n        const subgraphPools = _(pools)\n            .map((pool) => {\n            const { token0, token1, fee, liquidity } = pool;\n            const poolAddress = Pool.getAddress(pool.token0, pool.token1, pool.fee);\n            if (poolAddressSet.has(poolAddress)) {\n                return undefined;\n            }\n            poolAddressSet.add(poolAddress);\n            const liquidityNumber = JSBI.toNumber(liquidity);\n            return {\n                id: poolAddress,\n                feeTier: unparseFeeAmount(fee),\n                liquidity: liquidity.toString(),\n                token0: {\n                    id: token0.address,\n                },\n                token1: {\n                    id: token1.address,\n                },\n                // As a very rough proxy we just use liquidity for TVL.\n                tvlETH: liquidityNumber,\n                tvlUSD: liquidityNumber,\n            };\n        })\n            .compact()\n            .value();\n        return subgraphPools;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92My9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLElBQUksTUFBTSxNQUFNLENBQUM7QUFDeEIsT0FBTyxDQUFDLE1BQU0sUUFBUSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUNMLElBQUksRUFDSixjQUFjLEVBQ2QsU0FBUyxFQUNULG1CQUFtQixFQUNuQixTQUFTLEVBQ1QsbUJBQW1CLEVBQ25CLFlBQVksRUFDWixvQkFBb0IsRUFDcEIsUUFBUSxFQUNSLGtCQUFrQixFQUNsQixTQUFTLEVBQ1QsU0FBUyxFQUNULFdBQVcsRUFDWCxZQUFZLEVBQ1osWUFBWSxFQUNaLG9CQUFvQixFQUNwQixrQkFBa0IsRUFDbEIsYUFBYSxFQUNiLGFBQWEsRUFDYixXQUFXLEVBQ1gsb0JBQW9CLEVBQ3BCLGFBQWEsRUFDYixvQkFBb0IsRUFDcEIsVUFBVSxFQUNWLFVBQVUsRUFDVixZQUFZLEVBQ1osYUFBYSxFQUNiLGFBQWEsRUFDYixxQkFBcUIsRUFDckIsWUFBWSxFQUNaLFlBQVksRUFDWixZQUFZLEVBQ1osYUFBYSxFQUNiLHFCQUFxQixFQUNyQixVQUFVLEVBQ1YsVUFBVSxFQUNWLFlBQVksRUFDWixhQUFhLEVBQ2IscUJBQXFCLEVBQ3JCLFlBQVksRUFDWixZQUFZLEVBQ1osYUFBYSxFQUNiLFdBQVcsRUFDWCxVQUFV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"]},"metadata":{},"sourceType":"module"}