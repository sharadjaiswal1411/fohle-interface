{"ast":null,"code":"'use strict';\n\nvar trim = require('trim');\nvar word = require('is-word-character');\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/emphasis');\nmodule.exports = emphasis;\nemphasis.locator = locate;\nvar C_ASTERISK = '*';\nvar C_UNDERSCORE = '_';\nfunction emphasis(eat, value, silent) {\n  var self = this;\n  var index = 0;\n  var character = value.charAt(index);\n  var now;\n  var pedantic;\n  var marker;\n  var queue;\n  var subvalue;\n  var length;\n  var prev;\n  if (character !== C_ASTERISK && character !== C_UNDERSCORE) {\n    return;\n  }\n  pedantic = self.options.pedantic;\n  subvalue = character;\n  marker = character;\n  length = value.length;\n  index++;\n  queue = '';\n  character = '';\n  if (pedantic && whitespace(value.charAt(index))) {\n    return;\n  }\n  while (index < length) {\n    prev = character;\n    character = value.charAt(index);\n    if (character === marker && (!pedantic || !whitespace(prev))) {\n      character = value.charAt(++index);\n      if (character !== marker) {\n        if (!trim(queue) || prev === marker) {\n          return;\n        }\n        if (!pedantic && marker === C_UNDERSCORE && word(character)) {\n          queue += marker;\n          continue;\n        }\n\n        /* istanbul ignore if - never used (yet) */\n        if (silent) {\n          return true;\n        }\n        now = eat.now();\n        now.column++;\n        now.offset++;\n        return eat(subvalue + queue + marker)({\n          type: 'emphasis',\n          children: self.tokenizeInline(queue, now)\n        });\n      }\n      queue += marker;\n    }\n    if (!pedantic && character === '\\\\') {\n      queue += character;\n      character = value.charAt(++index);\n    }\n    queue += character;\n    index++;\n  }\n}","map":{"version":3,"names":["trim","require","word","whitespace","locate","module","exports","emphasis","locator","C_ASTERISK","C_UNDERSCORE","eat","value","silent","self","index","character","charAt","now","pedantic","marker","queue","subvalue","length","prev","options","column","offset","type","children","tokenizeInline"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/emphasis.js"],"sourcesContent":["'use strict';\n\nvar trim = require('trim');\nvar word = require('is-word-character');\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/emphasis');\n\nmodule.exports = emphasis;\nemphasis.locator = locate;\n\nvar C_ASTERISK = '*';\nvar C_UNDERSCORE = '_';\n\nfunction emphasis(eat, value, silent) {\n  var self = this;\n  var index = 0;\n  var character = value.charAt(index);\n  var now;\n  var pedantic;\n  var marker;\n  var queue;\n  var subvalue;\n  var length;\n  var prev;\n\n  if (character !== C_ASTERISK && character !== C_UNDERSCORE) {\n    return;\n  }\n\n  pedantic = self.options.pedantic;\n  subvalue = character;\n  marker = character;\n  length = value.length;\n  index++;\n  queue = '';\n  character = '';\n\n  if (pedantic && whitespace(value.charAt(index))) {\n    return;\n  }\n\n  while (index < length) {\n    prev = character;\n    character = value.charAt(index);\n\n    if (character === marker && (!pedantic || !whitespace(prev))) {\n      character = value.charAt(++index);\n\n      if (character !== marker) {\n        if (!trim(queue) || prev === marker) {\n          return;\n        }\n\n        if (!pedantic && marker === C_UNDERSCORE && word(character)) {\n          queue += marker;\n          continue;\n        }\n\n        /* istanbul ignore if - never used (yet) */\n        if (silent) {\n          return true;\n        }\n\n        now = eat.now();\n        now.column++;\n        now.offset++;\n\n        return eat(subvalue + queue + marker)({\n          type: 'emphasis',\n          children: self.tokenizeInline(queue, now)\n        });\n      }\n\n      queue += marker;\n    }\n\n    if (!pedantic && character === '\\\\') {\n      queue += character;\n      character = value.charAt(++index);\n    }\n\n    queue += character;\n    index++;\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC1B,IAAIC,IAAI,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACvC,IAAIE,UAAU,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AACnD,IAAIG,MAAM,GAAGH,OAAO,CAAC,oBAAoB,CAAC;AAE1CI,MAAM,CAACC,OAAO,GAAGC,QAAQ;AACzBA,QAAQ,CAACC,OAAO,GAAGJ,MAAM;AAEzB,IAAIK,UAAU,GAAG,GAAG;AACpB,IAAIC,YAAY,GAAG,GAAG;AAEtB,SAASH,QAAQ,CAACI,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACpC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAG,CAAC;EACb,IAAIC,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC;EACnC,IAAIG,GAAG;EACP,IAAIC,QAAQ;EACZ,IAAIC,MAAM;EACV,IAAIC,KAAK;EACT,IAAIC,QAAQ;EACZ,IAAIC,MAAM;EACV,IAAIC,IAAI;EAER,IAAIR,SAAS,KAAKP,UAAU,IAAIO,SAAS,KAAKN,YAAY,EAAE;IAC1D;EACF;EAEAS,QAAQ,GAAGL,IAAI,CAACW,OAAO,CAACN,QAAQ;EAChCG,QAAQ,GAAGN,SAAS;EACpBI,MAAM,GAAGJ,SAAS;EAClBO,MAAM,GAAGX,KAAK,CAACW,MAAM;EACrBR,KAAK,EAAE;EACPM,KAAK,GAAG,EAAE;EACVL,SAAS,GAAG,EAAE;EAEd,IAAIG,QAAQ,IAAIhB,UAAU,CAACS,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC,CAAC,EAAE;IAC/C;EACF;EAEA,OAAOA,KAAK,GAAGQ,MAAM,EAAE;IACrBC,IAAI,GAAGR,SAAS;IAChBA,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAACF,KAAK,CAAC;IAE/B,IAAIC,SAAS,KAAKI,MAAM,KAAK,CAACD,QAAQ,IAAI,CAAChB,UAAU,CAACqB,IAAI,CAAC,CAAC,EAAE;MAC5DR,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC,EAAEF,KAAK,CAAC;MAEjC,IAAIC,SAAS,KAAKI,MAAM,EAAE;QACxB,IAAI,CAACpB,IAAI,CAACqB,KAAK,CAAC,IAAIG,IAAI,KAAKJ,MAAM,EAAE;UACnC;QACF;QAEA,IAAI,CAACD,QAAQ,IAAIC,MAAM,KAAKV,YAAY,IAAIR,IAAI,CAACc,SAAS,CAAC,EAAE;UAC3DK,KAAK,IAAID,MAAM;UACf;QACF;;QAEA;QACA,IAAIP,MAAM,EAAE;UACV,OAAO,IAAI;QACb;QAEAK,GAAG,GAAGP,GAAG,CAACO,GAAG,EAAE;QACfA,GAAG,CAACQ,MAAM,EAAE;QACZR,GAAG,CAACS,MAAM,EAAE;QAEZ,OAAOhB,GAAG,CAACW,QAAQ,GAAGD,KAAK,GAAGD,MAAM,CAAC,CAAC;UACpCQ,IAAI,EAAE,UAAU;UAChBC,QAAQ,EAAEf,IAAI,CAACgB,cAAc,CAACT,KAAK,EAAEH,GAAG;QAC1C,CAAC,CAAC;MACJ;MAEAG,KAAK,IAAID,MAAM;IACjB;IAEA,IAAI,CAACD,QAAQ,IAAIH,SAAS,KAAK,IAAI,EAAE;MACnCK,KAAK,IAAIL,SAAS;MAClBA,SAAS,GAAGJ,KAAK,CAACK,MAAM,CAAC,EAAEF,KAAK,CAAC;IACnC;IAEAM,KAAK,IAAIL,SAAS;IAClBD,KAAK,EAAE;EACT;AACF"},"metadata":{},"sourceType":"script"}