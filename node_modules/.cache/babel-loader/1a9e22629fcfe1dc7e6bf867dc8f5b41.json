{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\nmodule.exports = definition;\ndefinition.notInList = true;\ndefinition.notInBlock = true;\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_COLON = ':';\nvar C_LT = '<';\nvar C_GT = '>';\nfunction definition(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var index = 0;\n  var length = value.length;\n  var subvalue = '';\n  var beforeURL;\n  var beforeTitle;\n  var queue;\n  var character;\n  var test;\n  var identifier;\n  var url;\n  var title;\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_SPACE && character !== C_TAB) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n  index++;\n  subvalue += character;\n  queue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n    queue += character;\n    index++;\n  }\n  if (!queue || value.charAt(index) !== C_BRACKET_CLOSE || value.charAt(index + 1) !== C_COLON) {\n    return;\n  }\n  identifier = queue;\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n  queue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_TAB && character !== C_SPACE && character !== C_NEWLINE) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  queue = '';\n  beforeURL = subvalue;\n  if (character === C_LT) {\n    index++;\n    while (index < length) {\n      character = value.charAt(index);\n      if (!isEnclosedURLCharacter(character)) {\n        break;\n      }\n      queue += character;\n      index++;\n    }\n    character = value.charAt(index);\n    if (character === isEnclosedURLCharacter.delimiter) {\n      subvalue += C_LT + queue + character;\n      index++;\n    } else {\n      if (commonmark) {\n        return;\n      }\n      index -= queue.length + 1;\n      queue = '';\n    }\n  }\n  if (!queue) {\n    while (index < length) {\n      character = value.charAt(index);\n      if (!isUnclosedURLCharacter(character)) {\n        break;\n      }\n      queue += character;\n      index++;\n    }\n    subvalue += queue;\n  }\n  if (!queue) {\n    return;\n  }\n  url = queue;\n  queue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_TAB && character !== C_SPACE && character !== C_NEWLINE) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  test = null;\n  if (character === C_DOUBLE_QUOTE) {\n    test = C_DOUBLE_QUOTE;\n  } else if (character === C_SINGLE_QUOTE) {\n    test = C_SINGLE_QUOTE;\n  } else if (character === C_PAREN_OPEN) {\n    test = C_PAREN_CLOSE;\n  }\n  if (!test) {\n    queue = '';\n    index = subvalue.length;\n  } else if (queue) {\n    subvalue += queue + character;\n    index = subvalue.length;\n    queue = '';\n    while (index < length) {\n      character = value.charAt(index);\n      if (character === test) {\n        break;\n      }\n      if (character === C_NEWLINE) {\n        index++;\n        character = value.charAt(index);\n        if (character === C_NEWLINE || character === test) {\n          return;\n        }\n        queue += C_NEWLINE;\n      }\n      queue += character;\n      index++;\n    }\n    character = value.charAt(index);\n    if (character !== test) {\n      return;\n    }\n    beforeTitle = subvalue;\n    subvalue += queue + character;\n    index++;\n    title = queue;\n    queue = '';\n  } else {\n    return;\n  }\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  if (!character || character === C_NEWLINE) {\n    if (silent) {\n      return true;\n    }\n    beforeURL = eat(beforeURL).test().end;\n    url = self.decode.raw(self.unescape(url), beforeURL, {\n      nonTerminated: false\n    });\n    if (title) {\n      beforeTitle = eat(beforeTitle).test().end;\n      title = self.decode.raw(self.unescape(title), beforeTitle);\n    }\n    return eat(subvalue)({\n      type: 'definition',\n      identifier: normalize(identifier),\n      title: title || null,\n      url: url\n    });\n  }\n}\n\n/* Check if `character` can be inside an enclosed URI. */\nfunction isEnclosedURLCharacter(character) {\n  return character !== C_GT && character !== C_BRACKET_OPEN && character !== C_BRACKET_CLOSE;\n}\nisEnclosedURLCharacter.delimiter = C_GT;\n\n/* Check if `character` can be inside an unclosed URI. */\nfunction isUnclosedURLCharacter(character) {\n  return character !== C_BRACKET_OPEN && character !== C_BRACKET_CLOSE && !whitespace(character);\n}","map":{"version":3,"names":["whitespace","require","normalize","module","exports","definition","notInList","notInBlock","C_DOUBLE_QUOTE","C_SINGLE_QUOTE","C_BACKSLASH","C_NEWLINE","C_TAB","C_SPACE","C_BRACKET_OPEN","C_BRACKET_CLOSE","C_PAREN_OPEN","C_PAREN_CLOSE","C_COLON","C_LT","C_GT","eat","value","silent","self","commonmark","options","index","length","subvalue","beforeURL","beforeTitle","queue","character","test","identifier","url","title","charAt","isEnclosedURLCharacter","delimiter","isUnclosedURLCharacter","end","decode","raw","unescape","nonTerminated","type"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/definition.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\n\nmodule.exports = definition;\ndefinition.notInList = true;\ndefinition.notInBlock = true;\n\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_COLON = ':';\nvar C_LT = '<';\nvar C_GT = '>';\n\nfunction definition(eat, value, silent) {\n  var self = this;\n  var commonmark = self.options.commonmark;\n  var index = 0;\n  var length = value.length;\n  var subvalue = '';\n  var beforeURL;\n  var beforeTitle;\n  var queue;\n  var character;\n  var test;\n  var identifier;\n  var url;\n  var title;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_SPACE && character !== C_TAB) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  index++;\n  subvalue += character;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (\n    !queue ||\n    value.charAt(index) !== C_BRACKET_CLOSE ||\n    value.charAt(index + 1) !== C_COLON\n  ) {\n    return;\n  }\n\n  identifier = queue;\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      character !== C_TAB &&\n      character !== C_SPACE &&\n      character !== C_NEWLINE\n    ) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isEnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character === isEnclosedURLCharacter.delimiter) {\n      subvalue += C_LT + queue + character;\n      index++;\n    } else {\n      if (commonmark) {\n        return;\n      }\n\n      index -= queue.length + 1;\n      queue = '';\n    }\n  }\n\n  if (!queue) {\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (!isUnclosedURLCharacter(character)) {\n        break;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    subvalue += queue;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  url = queue;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      character !== C_TAB &&\n      character !== C_SPACE &&\n      character !== C_NEWLINE\n    ) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  test = null;\n\n  if (character === C_DOUBLE_QUOTE) {\n    test = C_DOUBLE_QUOTE;\n  } else if (character === C_SINGLE_QUOTE) {\n    test = C_SINGLE_QUOTE;\n  } else if (character === C_PAREN_OPEN) {\n    test = C_PAREN_CLOSE;\n  }\n\n  if (!test) {\n    queue = '';\n    index = subvalue.length;\n  } else if (queue) {\n    subvalue += queue + character;\n    index = subvalue.length;\n    queue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === test) {\n        break;\n      }\n\n      if (character === C_NEWLINE) {\n        index++;\n        character = value.charAt(index);\n\n        if (character === C_NEWLINE || character === test) {\n          return;\n        }\n\n        queue += C_NEWLINE;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    character = value.charAt(index);\n\n    if (character !== test) {\n      return;\n    }\n\n    beforeTitle = subvalue;\n    subvalue += queue + character;\n    index++;\n    title = queue;\n    queue = '';\n  } else {\n    return;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!character || character === C_NEWLINE) {\n    if (silent) {\n      return true;\n    }\n\n    beforeURL = eat(beforeURL).test().end;\n    url = self.decode.raw(self.unescape(url), beforeURL, {nonTerminated: false});\n\n    if (title) {\n      beforeTitle = eat(beforeTitle).test().end;\n      title = self.decode.raw(self.unescape(title), beforeTitle);\n    }\n\n    return eat(subvalue)({\n      type: 'definition',\n      identifier: normalize(identifier),\n      title: title || null,\n      url: url\n    });\n  }\n}\n\n/* Check if `character` can be inside an enclosed URI. */\nfunction isEnclosedURLCharacter(character) {\n  return character !== C_GT &&\n    character !== C_BRACKET_OPEN &&\n    character !== C_BRACKET_CLOSE;\n}\n\nisEnclosedURLCharacter.delimiter = C_GT;\n\n/* Check if `character` can be inside an unclosed URI. */\nfunction isUnclosedURLCharacter(character) {\n  return character !== C_BRACKET_OPEN &&\n    character !== C_BRACKET_CLOSE &&\n    !whitespace(character);\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AACnD,IAAIC,SAAS,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAE5CE,MAAM,CAACC,OAAO,GAAGC,UAAU;AAC3BA,UAAU,CAACC,SAAS,GAAG,IAAI;AAC3BD,UAAU,CAACE,UAAU,GAAG,IAAI;AAE5B,IAAIC,cAAc,GAAG,GAAG;AACxB,IAAIC,cAAc,GAAG,IAAI;AACzB,IAAIC,WAAW,GAAG,IAAI;AACtB,IAAIC,SAAS,GAAG,IAAI;AACpB,IAAIC,KAAK,GAAG,IAAI;AAChB,IAAIC,OAAO,GAAG,GAAG;AACjB,IAAIC,cAAc,GAAG,GAAG;AACxB,IAAIC,eAAe,GAAG,GAAG;AACzB,IAAIC,YAAY,GAAG,GAAG;AACtB,IAAIC,aAAa,GAAG,GAAG;AACvB,IAAIC,OAAO,GAAG,GAAG;AACjB,IAAIC,IAAI,GAAG,GAAG;AACd,IAAIC,IAAI,GAAG,GAAG;AAEd,SAASf,UAAU,CAACgB,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACtC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,UAAU,GAAGD,IAAI,CAACE,OAAO,CAACD,UAAU;EACxC,IAAIE,KAAK,GAAG,CAAC;EACb,IAAIC,MAAM,GAAGN,KAAK,CAACM,MAAM;EACzB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,SAAS;EACb,IAAIC,WAAW;EACf,IAAIC,KAAK;EACT,IAAIC,SAAS;EACb,IAAIC,IAAI;EACR,IAAIC,UAAU;EACd,IAAIC,GAAG;EACP,IAAIC,KAAK;EAET,OAAOV,KAAK,GAAGC,MAAM,EAAE;IACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IAAIM,SAAS,KAAKpB,OAAO,IAAIoB,SAAS,KAAKrB,KAAK,EAAE;MAChD;IACF;IAEAiB,QAAQ,IAAII,SAAS;IACrBN,KAAK,EAAE;EACT;EAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;EAE/B,IAAIM,SAAS,KAAKnB,cAAc,EAAE;IAChC;EACF;EAEAa,KAAK,EAAE;EACPE,QAAQ,IAAII,SAAS;EACrBD,KAAK,GAAG,EAAE;EAEV,OAAOL,KAAK,GAAGC,MAAM,EAAE;IACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IAAIM,SAAS,KAAKlB,eAAe,EAAE;MACjC;IACF,CAAC,MAAM,IAAIkB,SAAS,KAAKvB,WAAW,EAAE;MACpCsB,KAAK,IAAIC,SAAS;MAClBN,KAAK,EAAE;MACPM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IACjC;IAEAK,KAAK,IAAIC,SAAS;IAClBN,KAAK,EAAE;EACT;EAEA,IACE,CAACK,KAAK,IACNV,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC,KAAKZ,eAAe,IACvCO,KAAK,CAACgB,MAAM,CAACX,KAAK,GAAG,CAAC,CAAC,KAAKT,OAAO,EACnC;IACA;EACF;EAEAiB,UAAU,GAAGH,KAAK;EAClBH,QAAQ,IAAIG,KAAK,GAAGjB,eAAe,GAAGG,OAAO;EAC7CS,KAAK,GAAGE,QAAQ,CAACD,MAAM;EACvBI,KAAK,GAAG,EAAE;EAEV,OAAOL,KAAK,GAAGC,MAAM,EAAE;IACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IACEM,SAAS,KAAKrB,KAAK,IACnBqB,SAAS,KAAKpB,OAAO,IACrBoB,SAAS,KAAKtB,SAAS,EACvB;MACA;IACF;IAEAkB,QAAQ,IAAII,SAAS;IACrBN,KAAK,EAAE;EACT;EAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;EAC/BK,KAAK,GAAG,EAAE;EACVF,SAAS,GAAGD,QAAQ;EAEpB,IAAII,SAAS,KAAKd,IAAI,EAAE;IACtBQ,KAAK,EAAE;IAEP,OAAOA,KAAK,GAAGC,MAAM,EAAE;MACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;MAE/B,IAAI,CAACY,sBAAsB,CAACN,SAAS,CAAC,EAAE;QACtC;MACF;MAEAD,KAAK,IAAIC,SAAS;MAClBN,KAAK,EAAE;IACT;IAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IAAIM,SAAS,KAAKM,sBAAsB,CAACC,SAAS,EAAE;MAClDX,QAAQ,IAAIV,IAAI,GAAGa,KAAK,GAAGC,SAAS;MACpCN,KAAK,EAAE;IACT,CAAC,MAAM;MACL,IAAIF,UAAU,EAAE;QACd;MACF;MAEAE,KAAK,IAAIK,KAAK,CAACJ,MAAM,GAAG,CAAC;MACzBI,KAAK,GAAG,EAAE;IACZ;EACF;EAEA,IAAI,CAACA,KAAK,EAAE;IACV,OAAOL,KAAK,GAAGC,MAAM,EAAE;MACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;MAE/B,IAAI,CAACc,sBAAsB,CAACR,SAAS,CAAC,EAAE;QACtC;MACF;MAEAD,KAAK,IAAIC,SAAS;MAClBN,KAAK,EAAE;IACT;IAEAE,QAAQ,IAAIG,KAAK;EACnB;EAEA,IAAI,CAACA,KAAK,EAAE;IACV;EACF;EAEAI,GAAG,GAAGJ,KAAK;EACXA,KAAK,GAAG,EAAE;EAEV,OAAOL,KAAK,GAAGC,MAAM,EAAE;IACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IACEM,SAAS,KAAKrB,KAAK,IACnBqB,SAAS,KAAKpB,OAAO,IACrBoB,SAAS,KAAKtB,SAAS,EACvB;MACA;IACF;IAEAqB,KAAK,IAAIC,SAAS;IAClBN,KAAK,EAAE;EACT;EAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;EAC/BO,IAAI,GAAG,IAAI;EAEX,IAAID,SAAS,KAAKzB,cAAc,EAAE;IAChC0B,IAAI,GAAG1B,cAAc;EACvB,CAAC,MAAM,IAAIyB,SAAS,KAAKxB,cAAc,EAAE;IACvCyB,IAAI,GAAGzB,cAAc;EACvB,CAAC,MAAM,IAAIwB,SAAS,KAAKjB,YAAY,EAAE;IACrCkB,IAAI,GAAGjB,aAAa;EACtB;EAEA,IAAI,CAACiB,IAAI,EAAE;IACTF,KAAK,GAAG,EAAE;IACVL,KAAK,GAAGE,QAAQ,CAACD,MAAM;EACzB,CAAC,MAAM,IAAII,KAAK,EAAE;IAChBH,QAAQ,IAAIG,KAAK,GAAGC,SAAS;IAC7BN,KAAK,GAAGE,QAAQ,CAACD,MAAM;IACvBI,KAAK,GAAG,EAAE;IAEV,OAAOL,KAAK,GAAGC,MAAM,EAAE;MACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;MAE/B,IAAIM,SAAS,KAAKC,IAAI,EAAE;QACtB;MACF;MAEA,IAAID,SAAS,KAAKtB,SAAS,EAAE;QAC3BgB,KAAK,EAAE;QACPM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;QAE/B,IAAIM,SAAS,KAAKtB,SAAS,IAAIsB,SAAS,KAAKC,IAAI,EAAE;UACjD;QACF;QAEAF,KAAK,IAAIrB,SAAS;MACpB;MAEAqB,KAAK,IAAIC,SAAS;MAClBN,KAAK,EAAE;IACT;IAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IAAIM,SAAS,KAAKC,IAAI,EAAE;MACtB;IACF;IAEAH,WAAW,GAAGF,QAAQ;IACtBA,QAAQ,IAAIG,KAAK,GAAGC,SAAS;IAC7BN,KAAK,EAAE;IACPU,KAAK,GAAGL,KAAK;IACbA,KAAK,GAAG,EAAE;EACZ,CAAC,MAAM;IACL;EACF;EAEA,OAAOL,KAAK,GAAGC,MAAM,EAAE;IACrBK,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;IAE/B,IAAIM,SAAS,KAAKrB,KAAK,IAAIqB,SAAS,KAAKpB,OAAO,EAAE;MAChD;IACF;IAEAgB,QAAQ,IAAII,SAAS;IACrBN,KAAK,EAAE;EACT;EAEAM,SAAS,GAAGX,KAAK,CAACgB,MAAM,CAACX,KAAK,CAAC;EAE/B,IAAI,CAACM,SAAS,IAAIA,SAAS,KAAKtB,SAAS,EAAE;IACzC,IAAIY,MAAM,EAAE;MACV,OAAO,IAAI;IACb;IAEAO,SAAS,GAAGT,GAAG,CAACS,SAAS,CAAC,CAACI,IAAI,EAAE,CAACQ,GAAG;IACrCN,GAAG,GAAGZ,IAAI,CAACmB,MAAM,CAACC,GAAG,CAACpB,IAAI,CAACqB,QAAQ,CAACT,GAAG,CAAC,EAAEN,SAAS,EAAE;MAACgB,aAAa,EAAE;IAAK,CAAC,CAAC;IAE5E,IAAIT,KAAK,EAAE;MACTN,WAAW,GAAGV,GAAG,CAACU,WAAW,CAAC,CAACG,IAAI,EAAE,CAACQ,GAAG;MACzCL,KAAK,GAAGb,IAAI,CAACmB,MAAM,CAACC,GAAG,CAACpB,IAAI,CAACqB,QAAQ,CAACR,KAAK,CAAC,EAAEN,WAAW,CAAC;IAC5D;IAEA,OAAOV,GAAG,CAACQ,QAAQ,CAAC,CAAC;MACnBkB,IAAI,EAAE,YAAY;MAClBZ,UAAU,EAAEjC,SAAS,CAACiC,UAAU,CAAC;MACjCE,KAAK,EAAEA,KAAK,IAAI,IAAI;MACpBD,GAAG,EAAEA;IACP,CAAC,CAAC;EACJ;AACF;;AAEA;AACA,SAASG,sBAAsB,CAACN,SAAS,EAAE;EACzC,OAAOA,SAAS,KAAKb,IAAI,IACvBa,SAAS,KAAKnB,cAAc,IAC5BmB,SAAS,KAAKlB,eAAe;AACjC;AAEAwB,sBAAsB,CAACC,SAAS,GAAGpB,IAAI;;AAEvC;AACA,SAASqB,sBAAsB,CAACR,SAAS,EAAE;EACzC,OAAOA,SAAS,KAAKnB,cAAc,IACjCmB,SAAS,KAAKlB,eAAe,IAC7B,CAACf,UAAU,CAACiC,SAAS,CAAC;AAC1B"},"metadata":{},"sourceType":"script"}