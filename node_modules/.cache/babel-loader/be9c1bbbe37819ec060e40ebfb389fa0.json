{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { CurrencyAmount, Percent } from '@uniswap/sdk-core';\nimport { useWeb3React } from '@web3-react/core';\nimport JSBI from 'jsbi';\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount';\nimport { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { useTotalSupply } from '../../hooks/useTotalSupply';\nimport { useV2Pair } from '../../hooks/useV2Pairs';\nimport { useTokenBalances } from '../connection/hooks';\nimport { Field, typeInput } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useBurnState() {\n  _s();\n  return useAppSelector(state => state.burn);\n}\n_s(useBurnState, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useDerivedBurnInfo(currencyA, currencyB) {\n  _s2();\n  var _pair$liquidityToken$, _pair$liquidityToken;\n  const {\n    account\n  } = useWeb3React();\n  const {\n    independentField,\n    typedValue\n  } = useBurnState();\n\n  // pair + totalsupply\n  const [, pair] = useV2Pair(currencyA, currencyB);\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account !== null && account !== void 0 ? account : undefined, [pair === null || pair === void 0 ? void 0 : pair.liquidityToken]);\n  const userLiquidity = relevantTokenBalances === null || relevantTokenBalances === void 0 ? void 0 : relevantTokenBalances[(_pair$liquidityToken$ = pair === null || pair === void 0 ? void 0 : (_pair$liquidityToken = pair.liquidityToken) === null || _pair$liquidityToken === void 0 ? void 0 : _pair$liquidityToken.address) !== null && _pair$liquidityToken$ !== void 0 ? _pair$liquidityToken$ : ''];\n  const [tokenA, tokenB] = [currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped, currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped];\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair === null || pair === void 0 ? void 0 : pair.liquidityToken\n  };\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair === null || pair === void 0 ? void 0 : pair.liquidityToken);\n  const liquidityValueA = pair && totalSupply && userLiquidity && tokenA &&\n  // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient) ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient) : undefined;\n  const liquidityValueB = pair && totalSupply && userLiquidity && tokenB &&\n  // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n  JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient) ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient) : undefined;\n  const liquidityValues = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB\n  };\n  let percentToRemove = new Percent('0', '100');\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100');\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair === null || pair === void 0 ? void 0 : pair.liquidityToken) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken);\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient);\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField]);\n      const liquidityValue = liquidityValues[independentField];\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient);\n      }\n    }\n  }\n  const parsedAmounts = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]: userLiquidity && percentToRemove && percentToRemove.greaterThan('0') ? CurrencyAmount.fromRawAmount(userLiquidity.currency, percentToRemove.multiply(userLiquidity.quotient).quotient) : undefined,\n    [Field.CURRENCY_A]: tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient) : undefined,\n    [Field.CURRENCY_B]: tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient) : undefined\n  };\n  let error;\n  if (!account) {\n    error = /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Connect Wallet\"\n    }, void 0, false, void 0, this);\n  }\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    var _error;\n    error = (_error = error) !== null && _error !== void 0 ? _error : /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Enter an amount\"\n    }, void 0, false, void 0, this);\n  }\n  return {\n    pair,\n    parsedAmounts,\n    error\n  };\n}\n_s2(useDerivedBurnInfo, \"BbnMiD3A7R6fhHT2N2roLPBOPbk=\", false, function () {\n  return [useWeb3React, useBurnState, useV2Pair, useTokenBalances, useTotalSupply];\n});\nexport function useBurnActionHandlers() {\n  _s3();\n  const dispatch = useAppDispatch();\n  const onUserInput = useCallback((field, typedValue) => {\n    dispatch(typeInput({\n      field,\n      typedValue\n    }));\n  }, [dispatch]);\n  return {\n    onUserInput\n  };\n}\n_s3(useBurnActionHandlers, \"r/x3H4MiKpsB+LnefuuwydAEap8=\", false, function () {\n  return [useAppDispatch];\n});","map":{"version":3,"names":["CurrencyAmount","Percent","useWeb3React","JSBI","tryParseCurrencyAmount","useCallback","useAppDispatch","useAppSelector","useTotalSupply","useV2Pair","useTokenBalances","Field","typeInput","useBurnState","state","burn","useDerivedBurnInfo","currencyA","currencyB","account","independentField","typedValue","pair","relevantTokenBalances","undefined","liquidityToken","userLiquidity","address","tokenA","tokenB","wrapped","tokens","CURRENCY_A","CURRENCY_B","LIQUIDITY","totalSupply","liquidityValueA","greaterThanOrEqual","quotient","fromRawAmount","getLiquidityValue","liquidityValueB","liquidityValues","percentToRemove","LIQUIDITY_PERCENT","independentAmount","greaterThan","liquidityValue","parsedAmounts","currency","multiply","error","useBurnActionHandlers","dispatch","onUserInput","field"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/burn/hooks.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { useV2Pair } from '../../hooks/useV2Pairs'\nimport { useTokenBalances } from '../connection/hooks'\nimport { AppState } from '../index'\nimport { Field, typeInput } from './actions'\n\nexport function useBurnState(): AppState['burn'] {\n  return useAppSelector((state) => state.burn)\n}\n\nexport function useDerivedBurnInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  pair?: Pair | null\n  parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  }\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue } = useBurnState()\n\n  // pair + totalsupply\n  const [, pair] = useV2Pair(currencyA, currencyB)\n\n  // balances\n  const relevantTokenBalances = useTokenBalances(account ?? undefined, [pair?.liquidityToken])\n  const userLiquidity: undefined | CurrencyAmount<Token> = relevantTokenBalances?.[pair?.liquidityToken?.address ?? '']\n\n  const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n  const tokens = {\n    [Field.CURRENCY_A]: tokenA,\n    [Field.CURRENCY_B]: tokenB,\n    [Field.LIQUIDITY]: pair?.liquidityToken,\n  }\n\n  // liquidity values\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n  const liquidityValueA =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenA &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenA, pair.getLiquidityValue(tokenA, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValueB =\n    pair &&\n    totalSupply &&\n    userLiquidity &&\n    tokenB &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalSupply.quotient, userLiquidity.quotient)\n      ? CurrencyAmount.fromRawAmount(tokenB, pair.getLiquidityValue(tokenB, totalSupply, userLiquidity, false).quotient)\n      : undefined\n  const liquidityValues: { [Field.CURRENCY_A]?: CurrencyAmount<Token>; [Field.CURRENCY_B]?: CurrencyAmount<Token> } = {\n    [Field.CURRENCY_A]: liquidityValueA,\n    [Field.CURRENCY_B]: liquidityValueB,\n  }\n\n  let percentToRemove: Percent = new Percent('0', '100')\n  // user specified a %\n  if (independentField === Field.LIQUIDITY_PERCENT) {\n    percentToRemove = new Percent(typedValue, '100')\n  }\n  // user specified a specific amount of liquidity tokens\n  else if (independentField === Field.LIQUIDITY) {\n    if (pair?.liquidityToken) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, pair.liquidityToken)\n      if (independentAmount && userLiquidity && !independentAmount.greaterThan(userLiquidity)) {\n        percentToRemove = new Percent(independentAmount.quotient, userLiquidity.quotient)\n      }\n    }\n  }\n  // user specified a specific amount of token a or b\n  else {\n    if (tokens[independentField]) {\n      const independentAmount = tryParseCurrencyAmount(typedValue, tokens[independentField])\n      const liquidityValue = liquidityValues[independentField]\n      if (independentAmount && liquidityValue && !independentAmount.greaterThan(liquidityValue)) {\n        percentToRemove = new Percent(independentAmount.quotient, liquidityValue.quotient)\n      }\n    }\n  }\n\n  const parsedAmounts: {\n    [Field.LIQUIDITY_PERCENT]: Percent\n    [Field.LIQUIDITY]?: CurrencyAmount<Token>\n    [Field.CURRENCY_A]?: CurrencyAmount<Currency>\n    [Field.CURRENCY_B]?: CurrencyAmount<Currency>\n  } = {\n    [Field.LIQUIDITY_PERCENT]: percentToRemove,\n    [Field.LIQUIDITY]:\n      userLiquidity && percentToRemove && percentToRemove.greaterThan('0')\n        ? CurrencyAmount.fromRawAmount(\n            userLiquidity.currency,\n            percentToRemove.multiply(userLiquidity.quotient).quotient\n          )\n        : undefined,\n    [Field.CURRENCY_A]:\n      tokenA && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueA\n        ? CurrencyAmount.fromRawAmount(tokenA, percentToRemove.multiply(liquidityValueA.quotient).quotient)\n        : undefined,\n    [Field.CURRENCY_B]:\n      tokenB && percentToRemove && percentToRemove.greaterThan('0') && liquidityValueB\n        ? CurrencyAmount.fromRawAmount(tokenB, percentToRemove.multiply(liquidityValueB.quotient).quotient)\n        : undefined,\n  }\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect Wallet</Trans>\n  }\n\n  if (!parsedAmounts[Field.LIQUIDITY] || !parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  return { pair, parsedAmounts, error }\n}\n\nexport function useBurnActionHandlers(): {\n  onUserInput: (field: Field, typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onUserInput,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}