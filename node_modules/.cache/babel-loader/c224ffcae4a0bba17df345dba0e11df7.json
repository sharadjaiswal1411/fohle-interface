{"ast":null,"code":"/**\n * Be careful adding to this enum, always assign a unique value (typescript will not prevent duplicate values).\n * These values is persisted in state and if you change the value it will cause errors\n */export var TransactionType;(function(TransactionType){TransactionType[TransactionType[\"APPROVAL\"]=0]=\"APPROVAL\";TransactionType[TransactionType[\"SWAP\"]=1]=\"SWAP\";TransactionType[TransactionType[\"DEPOSIT_LIQUIDITY_STAKING\"]=2]=\"DEPOSIT_LIQUIDITY_STAKING\";TransactionType[TransactionType[\"WITHDRAW_LIQUIDITY_STAKING\"]=3]=\"WITHDRAW_LIQUIDITY_STAKING\";TransactionType[TransactionType[\"CLAIM\"]=4]=\"CLAIM\";TransactionType[TransactionType[\"VOTE\"]=5]=\"VOTE\";TransactionType[TransactionType[\"DELEGATE\"]=6]=\"DELEGATE\";TransactionType[TransactionType[\"WRAP\"]=7]=\"WRAP\";TransactionType[TransactionType[\"CREATE_V3_POOL\"]=8]=\"CREATE_V3_POOL\";TransactionType[TransactionType[\"ADD_LIQUIDITY_V3_POOL\"]=9]=\"ADD_LIQUIDITY_V3_POOL\";TransactionType[TransactionType[\"ADD_LIQUIDITY_V2_POOL\"]=10]=\"ADD_LIQUIDITY_V2_POOL\";TransactionType[TransactionType[\"MIGRATE_LIQUIDITY_V3\"]=11]=\"MIGRATE_LIQUIDITY_V3\";TransactionType[TransactionType[\"COLLECT_FEES\"]=12]=\"COLLECT_FEES\";TransactionType[TransactionType[\"REMOVE_LIQUIDITY_V3\"]=13]=\"REMOVE_LIQUIDITY_V3\";TransactionType[TransactionType[\"SUBMIT_PROPOSAL\"]=14]=\"SUBMIT_PROPOSAL\";TransactionType[TransactionType[\"QUEUE\"]=15]=\"QUEUE\";TransactionType[TransactionType[\"EXECUTE\"]=16]=\"EXECUTE\";})(TransactionType||(TransactionType={}));","map":{"version":3,"names":["TransactionType"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/transactions/types.ts"],"sourcesContent":["import { TradeType } from '@uniswap/sdk-core'\n\nimport { VoteOption } from '../governance/types'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\n/**\n * Be careful adding to this enum, always assign a unique value (typescript will not prevent duplicate values).\n * These values is persisted in state and if you change the value it will cause errors\n */\nexport enum TransactionType {\n  APPROVAL = 0,\n  SWAP,\n  DEPOSIT_LIQUIDITY_STAKING,\n  WITHDRAW_LIQUIDITY_STAKING,\n  CLAIM,\n  VOTE,\n  DELEGATE,\n  WRAP,\n  CREATE_V3_POOL,\n  ADD_LIQUIDITY_V3_POOL,\n  ADD_LIQUIDITY_V2_POOL,\n  MIGRATE_LIQUIDITY_V3,\n  COLLECT_FEES,\n  REMOVE_LIQUIDITY_V3,\n  SUBMIT_PROPOSAL,\n  QUEUE,\n  EXECUTE,\n}\n\ninterface BaseTransactionInfo {\n  type: TransactionType\n}\n\nexport interface VoteTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.VOTE\n  governorAddress: string\n  proposalId: number\n  decision: VoteOption\n  reason: string\n}\n\nexport interface QueueTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.QUEUE\n  governorAddress: string\n  proposalId: number\n}\n\nexport interface ExecuteTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.EXECUTE\n  governorAddress: string\n  proposalId: number\n}\n\nexport interface DelegateTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.DELEGATE\n  delegatee: string\n}\n\nexport interface ApproveTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.APPROVAL\n  tokenAddress: string\n  spender: string\n}\n\ninterface BaseSwapTransactionInfo extends BaseTransactionInfo {\n  type: TransactionType.SWAP\n  tradeType: TradeType\n  inputCurrencyId: string\n  outputCurrencyId: string\n}\n\nexport interface ExactInputSwapTransactionInfo extends BaseSwapTransactionInfo {\n  tradeType: TradeType.EXACT_INPUT\n  inputCurrencyAmountRaw: string\n  expectedOutputCurrencyAmountRaw: string\n  minimumOutputCurrencyAmountRaw: string\n}\nexport interface ExactOutputSwapTransactionInfo extends BaseSwapTransactionInfo {\n  tradeType: TradeType.EXACT_OUTPUT\n  outputCurrencyAmountRaw: string\n  expectedInputCurrencyAmountRaw: string\n  maximumInputCurrencyAmountRaw: string\n}\n\ninterface DepositLiquidityStakingTransactionInfo {\n  type: TransactionType.DEPOSIT_LIQUIDITY_STAKING\n  token0Address: string\n  token1Address: string\n}\n\ninterface WithdrawLiquidityStakingTransactionInfo {\n  type: TransactionType.WITHDRAW_LIQUIDITY_STAKING\n  token0Address: string\n  token1Address: string\n}\n\nexport interface WrapTransactionInfo {\n  type: TransactionType.WRAP\n  unwrapped: boolean\n  currencyAmountRaw: string\n  chainId?: number\n}\n\nexport interface ClaimTransactionInfo {\n  type: TransactionType.CLAIM\n  recipient: string\n  uniAmountRaw?: string\n}\n\nexport interface CreateV3PoolTransactionInfo {\n  type: TransactionType.CREATE_V3_POOL\n  baseCurrencyId: string\n  quoteCurrencyId: string\n}\n\nexport interface AddLiquidityV3PoolTransactionInfo {\n  type: TransactionType.ADD_LIQUIDITY_V3_POOL\n  createPool: boolean\n  baseCurrencyId: string\n  quoteCurrencyId: string\n  feeAmount: number\n  expectedAmountBaseRaw: string\n  expectedAmountQuoteRaw: string\n}\n\nexport interface AddLiquidityV2PoolTransactionInfo {\n  type: TransactionType.ADD_LIQUIDITY_V2_POOL\n  baseCurrencyId: string\n  quoteCurrencyId: string\n  expectedAmountBaseRaw: string\n  expectedAmountQuoteRaw: string\n}\n\nexport interface MigrateV2LiquidityToV3TransactionInfo {\n  type: TransactionType.MIGRATE_LIQUIDITY_V3\n  baseCurrencyId: string\n  quoteCurrencyId: string\n  isFork: boolean\n}\n\nexport interface CollectFeesTransactionInfo {\n  type: TransactionType.COLLECT_FEES\n  currencyId0: string\n  currencyId1: string\n  expectedCurrencyOwed0: string\n  expectedCurrencyOwed1: string\n}\n\nexport interface RemoveLiquidityV3TransactionInfo {\n  type: TransactionType.REMOVE_LIQUIDITY_V3\n  baseCurrencyId: string\n  quoteCurrencyId: string\n  expectedAmountBaseRaw: string\n  expectedAmountQuoteRaw: string\n}\n\ninterface SubmitProposalTransactionInfo {\n  type: TransactionType.SUBMIT_PROPOSAL\n}\n\nexport type TransactionInfo =\n  | ApproveTransactionInfo\n  | ExactOutputSwapTransactionInfo\n  | ExactInputSwapTransactionInfo\n  | ClaimTransactionInfo\n  | VoteTransactionInfo\n  | QueueTransactionInfo\n  | ExecuteTransactionInfo\n  | DelegateTransactionInfo\n  | DepositLiquidityStakingTransactionInfo\n  | WithdrawLiquidityStakingTransactionInfo\n  | WrapTransactionInfo\n  | CreateV3PoolTransactionInfo\n  | AddLiquidityV3PoolTransactionInfo\n  | AddLiquidityV2PoolTransactionInfo\n  | MigrateV2LiquidityToV3TransactionInfo\n  | CollectFeesTransactionInfo\n  | RemoveLiquidityV3TransactionInfo\n  | SubmitProposalTransactionInfo\n\nexport interface TransactionDetails {\n  hash: string\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n  info: TransactionInfo\n}\n"],"mappings":"AAeA;AACA;AACA;AACA,GACA,UAAYA,gBAAe,CAkB1B,UAlBWA,eAAe,EAAfA,eAAe,CAAfA,eAAe,2BAAfA,eAAe,CAAfA,eAAe,mBAAfA,eAAe,CAAfA,eAAe,6DAAfA,eAAe,CAAfA,eAAe,+DAAfA,eAAe,CAAfA,eAAe,qBAAfA,eAAe,CAAfA,eAAe,mBAAfA,eAAe,CAAfA,eAAe,2BAAfA,eAAe,CAAfA,eAAe,mBAAfA,eAAe,CAAfA,eAAe,uCAAfA,eAAe,CAAfA,eAAe,qDAAfA,eAAe,CAAfA,eAAe,sDAAfA,eAAe,CAAfA,eAAe,oDAAfA,eAAe,CAAfA,eAAe,oCAAfA,eAAe,CAAfA,eAAe,kDAAfA,eAAe,CAAfA,eAAe,0CAAfA,eAAe,CAAfA,eAAe,sBAAfA,eAAe,CAAfA,eAAe,6BAAfA,eAAe,GAAfA,eAAe"},"metadata":{},"sourceType":"module"}