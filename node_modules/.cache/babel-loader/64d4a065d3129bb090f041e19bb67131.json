{"ast":null,"code":"import { __awaiter, __generator, __read } from \"tslib\";\nimport { getOldCookieName, CookieStorage } from '@amplitude/analytics-client-common';\nimport { LocalStorage } from '../storage/local-storage';\nexport var parseOldCookies = function (apiKey, options) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var storage, oldCookieName, cookies, _a, deviceId, userId, optOut, sessionId, lastEventTime;\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          storage = new CookieStorage();\n          return [4 /*yield*/, storage.isEnabled()];\n        case 1:\n          if (!_b.sent() || (options === null || options === void 0 ? void 0 : options.disableCookies)) {\n            storage = new LocalStorage();\n          }\n          return [4 /*yield*/, storage.isEnabled()];\n        case 2:\n          if (!_b.sent()) {\n            return [2 /*return*/, {\n              optOut: false\n            }];\n          }\n          oldCookieName = getOldCookieName(apiKey);\n          return [4 /*yield*/, storage.getRaw(oldCookieName)];\n        case 3:\n          cookies = _b.sent();\n          if (!cookies) {\n            return [2 /*return*/, {\n              optOut: false\n            }];\n          }\n          return [4 /*yield*/, storage.remove(oldCookieName)];\n        case 4:\n          _b.sent();\n          _a = __read(cookies.split('.'), 5), deviceId = _a[0], userId = _a[1], optOut = _a[2], sessionId = _a[3], lastEventTime = _a[4];\n          return [2 /*return*/, {\n            deviceId: deviceId,\n            userId: decode(userId),\n            sessionId: parseTime(sessionId),\n            lastEventTime: parseTime(lastEventTime),\n            optOut: Boolean(optOut)\n          }];\n      }\n    });\n  });\n};\nexport var parseTime = function (num) {\n  var integer = parseInt(num, 32);\n  if (isNaN(integer)) {\n    return undefined;\n  }\n  return integer;\n};\nexport var decode = function (value) {\n  if (!atob || !escape || !value) {\n    return undefined;\n  }\n  try {\n    return decodeURIComponent(escape(atob(value)));\n  } catch (_a) {\n    return undefined;\n  }\n};","map":{"version":3,"sources":["../../../src/cookie-migration/index.ts"],"names":[],"mappings":";AACA,SAAS,gBAAgB,EAAE,aAAa,QAAQ,oCAAoC;AACpF,SAAS,YAAY,QAAQ,0BAA0B;AAEvD,OAAO,IAAM,eAAe,GAAG,UAAO,MAAc,EAAE,OAAwB,EAAA;EAAA,OAAA,SAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;;;;UACxE,OAAO,GAAoB,IAAI,aAAa,EAAU;UACpD,OAAA,CAAA,CAAA,CAAA,WAAM,OAAO,CAAC,SAAS,EAAE,CAAA;;UAA/B,IAAI,CAAE,EAAA,CAAA,IAAA,EAA0B,KAAI,OAAO,KAAA,IAAA,IAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,cAAc,CAAA,EAAE;YAC3D,OAAO,GAAG,IAAI,YAAY,EAAU;UACrC;UACK,OAAA,CAAA,CAAA,CAAA,WAAM,OAAO,CAAC,SAAS,EAAE,CAAA;;UAA/B,IAAI,CAAE,EAAA,CAAA,IAAA,EAA0B,EAAE;YAChC,OAAA,CAAA,CAAA,CAAA,YAAO;cACL,MAAM,EAAE;aACT,CAAA;UACF;UAEK,aAAa,GAAG,gBAAgB,CAAC,MAAM,CAAC;UAC9B,OAAA,CAAA,CAAA,CAAA,WAAM,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;;UAA7C,OAAO,GAAG,EAAA,CAAA,IAAA,EAAmC;UAEnD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAA,CAAA,CAAA,CAAA,YAAO;cACL,MAAM,EAAE;aACT,CAAA;UACF;UAED,OAAA,CAAA,CAAA,CAAA,WAAM,OAAO,CAAC,MAAM,CAAC,aAAa,CAAC,CAAA;;UAAnC,EAAA,CAAA,IAAA,EAAmC;UAC7B,EAAA,GAAA,MAAA,CAAuD,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAA,CAAA,CAAA,EAAxE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,SAAS,GAAA,EAAA,CAAA,CAAA,CAAA,EAAE,aAAa,GAAA,EAAA,CAAA,CAAA,CAAA;UACzD,OAAA,CAAA,CAAA,CAAA,YAAO;YACL,QAAQ,EAAA,QAAA;YACR,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC;YACtB,SAAS,EAAE,SAAS,CAAC,SAAS,CAAC;YAC/B,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC;YACvC,MAAM,EAAE,OAAO,CAAC,MAAM;WACvB,CAAA;MAAC;;;CACH;AAED,OAAO,IAAM,SAAS,GAAG,UAAC,GAAW,EAAA;EACnC,IAAM,OAAO,GAAG,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC;EACjC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;IAClB,OAAO,SAAS;EACjB;EACD,OAAO,OAAO;AAChB,CAAC;AAED,OAAO,IAAM,MAAM,GAAG,UAAC,KAAc,EAAA;EACnC,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE;IAC9B,OAAO,SAAS;EACjB;EACD,IAAI;IACF,OAAO,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;GAC/C,CAAC,OAAA,EAAA,EAAM;IACN,OAAO,SAAS;EACjB;AACH,CAAC","sourcesContent":["import { BrowserOptions, Storage, UserSession } from '@amplitude/analytics-types';\nimport { getOldCookieName, CookieStorage } from '@amplitude/analytics-client-common';\nimport { LocalStorage } from '../storage/local-storage';\n\nexport const parseOldCookies = async (apiKey: string, options?: BrowserOptions): Promise<UserSession> => {\n  let storage: Storage<string> = new CookieStorage<string>();\n  if (!(await storage.isEnabled()) || options?.disableCookies) {\n    storage = new LocalStorage<string>();\n  }\n  if (!(await storage.isEnabled())) {\n    return {\n      optOut: false,\n    };\n  }\n\n  const oldCookieName = getOldCookieName(apiKey);\n  const cookies = await storage.getRaw(oldCookieName);\n\n  if (!cookies) {\n    return {\n      optOut: false,\n    };\n  }\n\n  await storage.remove(oldCookieName);\n  const [deviceId, userId, optOut, sessionId, lastEventTime] = cookies.split('.');\n  return {\n    deviceId,\n    userId: decode(userId),\n    sessionId: parseTime(sessionId),\n    lastEventTime: parseTime(lastEventTime),\n    optOut: Boolean(optOut),\n  };\n};\n\nexport const parseTime = (num: string) => {\n  const integer = parseInt(num, 32);\n  if (isNaN(integer)) {\n    return undefined;\n  }\n  return integer;\n};\n\nexport const decode = (value?: string): string | undefined => {\n  if (!atob || !escape || !value) {\n    return undefined;\n  }\n  try {\n    return decodeURIComponent(escape(atob(value)));\n  } catch {\n    return undefined;\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}