{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Interface } from '@ethersproject/abi';\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json';\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk';\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall';\nimport { useMemo } from 'react';\nimport { V2_FACTORY_ADDRESSES } from '../constants/addresses';\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI);\nexport let PairState;\n(function (PairState) {\n  PairState[PairState[\"LOADING\"] = 0] = \"LOADING\";\n  PairState[PairState[\"NOT_EXISTS\"] = 1] = \"NOT_EXISTS\";\n  PairState[PairState[\"EXISTS\"] = 2] = \"EXISTS\";\n  PairState[PairState[\"INVALID\"] = 3] = \"INVALID\";\n})(PairState || (PairState = {}));\nexport function useV2Pairs(currencies) {\n  _s();\n  const tokens = useMemo(() => currencies.map(_ref => {\n    let [currencyA, currencyB] = _ref;\n    return [currencyA === null || currencyA === void 0 ? void 0 : currencyA.wrapped, currencyB === null || currencyB === void 0 ? void 0 : currencyB.wrapped];\n  }), [currencies]);\n  const pairAddresses = useMemo(() => tokens.map(_ref2 => {\n    let [tokenA, tokenB] = _ref2;\n    return tokenA && tokenB && tokenA.chainId === tokenB.chainId && !tokenA.equals(tokenB) && V2_FACTORY_ADDRESSES[tokenA.chainId] ? computePairAddress({\n      factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId],\n      tokenA,\n      tokenB\n    }) : undefined;\n  }), [tokens]);\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves');\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const {\n        result: reserves,\n        loading\n      } = result;\n      const tokenA = tokens[i][0];\n      const tokenB = tokens[i][1];\n      if (loading) return [PairState.LOADING, null];\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null];\n      if (!reserves) return [PairState.NOT_EXISTS, null];\n      const {\n        reserve0,\n        reserve1\n      } = reserves;\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA];\n      return [PairState.EXISTS, new Pair(CurrencyAmount.fromRawAmount(token0, reserve0.toString()), CurrencyAmount.fromRawAmount(token1, reserve1.toString()))];\n    });\n  }, [results, tokens]);\n}\n_s(useV2Pairs, \"ZDQnCWgzg6DySe1FP83w6Y8Rdqg=\", false, function () {\n  return [useMultipleContractSingleData];\n});\nexport function useV2Pair(tokenA, tokenB) {\n  _s2();\n  const inputs = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB]);\n  return useV2Pairs(inputs)[0];\n}\n_s2(useV2Pair, \"a7HN08wySA9amXbycgcvsMx0d1I=\", false, function () {\n  return [useV2Pairs];\n});","map":{"version":3,"names":["Interface","CurrencyAmount","abi","IUniswapV2PairABI","computePairAddress","Pair","useMultipleContractSingleData","useMemo","V2_FACTORY_ADDRESSES","PAIR_INTERFACE","PairState","useV2Pairs","currencies","tokens","map","currencyA","currencyB","wrapped","pairAddresses","tokenA","tokenB","chainId","equals","factoryAddress","undefined","results","result","i","reserves","loading","LOADING","INVALID","NOT_EXISTS","reserve0","reserve1","token0","token1","sortsBefore","EXISTS","fromRawAmount","toString","useV2Pair","inputs"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useV2Pairs.ts"],"sourcesContent":["import { Interface } from '@ethersproject/abi'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useMultipleContractSingleData } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { V2_FACTORY_ADDRESSES } from '../constants/addresses'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function useV2Pairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const tokens = useMemo(\n    () => currencies.map(([currencyA, currencyB]) => [currencyA?.wrapped, currencyB?.wrapped]),\n    [currencies]\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA &&\n          tokenB &&\n          tokenA.chainId === tokenB.chainId &&\n          !tokenA.equals(tokenB) &&\n          V2_FACTORY_ADDRESSES[tokenA.chainId]\n          ? computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB })\n          : undefined\n      }),\n    [tokens]\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(\n          CurrencyAmount.fromRawAmount(token0, reserve0.toString()),\n          CurrencyAmount.fromRawAmount(token1, reserve1.toString())\n        ),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function useV2Pair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  const inputs: [[Currency | undefined, Currency | undefined]] = useMemo(() => [[tokenA, tokenB]], [tokenA, tokenB])\n  return useV2Pairs(inputs)[0]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}