{"ast":null,"code":"import { createSlice, nanoid } from '@reduxjs/toolkit';\nimport { DEFAULT_TXN_DISMISS_MS } from 'constants/misc';\nimport { EthereumNetworkInfo } from '../../constants/networks';\nexport let ApplicationModal;\n(function (ApplicationModal) {\n  ApplicationModal[ApplicationModal[\"ADDRESS_CLAIM\"] = 0] = \"ADDRESS_CLAIM\";\n  ApplicationModal[ApplicationModal[\"BLOCKED_ACCOUNT\"] = 1] = \"BLOCKED_ACCOUNT\";\n  ApplicationModal[ApplicationModal[\"CLAIM_POPUP\"] = 2] = \"CLAIM_POPUP\";\n  ApplicationModal[ApplicationModal[\"DELEGATE\"] = 3] = \"DELEGATE\";\n  ApplicationModal[ApplicationModal[\"EXECUTE\"] = 4] = \"EXECUTE\";\n  ApplicationModal[ApplicationModal[\"FEATURE_FLAGS\"] = 5] = \"FEATURE_FLAGS\";\n  ApplicationModal[ApplicationModal[\"FIAT_ONRAMP\"] = 6] = \"FIAT_ONRAMP\";\n  ApplicationModal[ApplicationModal[\"MENU\"] = 7] = \"MENU\";\n  ApplicationModal[ApplicationModal[\"METAMASK_CONNECTION_ERROR\"] = 8] = \"METAMASK_CONNECTION_ERROR\";\n  ApplicationModal[ApplicationModal[\"NETWORK_FILTER\"] = 9] = \"NETWORK_FILTER\";\n  ApplicationModal[ApplicationModal[\"NETWORK_SELECTOR\"] = 10] = \"NETWORK_SELECTOR\";\n  ApplicationModal[ApplicationModal[\"POOL_OVERVIEW_OPTIONS\"] = 11] = \"POOL_OVERVIEW_OPTIONS\";\n  ApplicationModal[ApplicationModal[\"PRIVACY_POLICY\"] = 12] = \"PRIVACY_POLICY\";\n  ApplicationModal[ApplicationModal[\"QUEUE\"] = 13] = \"QUEUE\";\n  ApplicationModal[ApplicationModal[\"SELF_CLAIM\"] = 14] = \"SELF_CLAIM\";\n  ApplicationModal[ApplicationModal[\"SETTINGS\"] = 15] = \"SETTINGS\";\n  ApplicationModal[ApplicationModal[\"SHARE\"] = 16] = \"SHARE\";\n  ApplicationModal[ApplicationModal[\"TIME_SELECTOR\"] = 17] = \"TIME_SELECTOR\";\n  ApplicationModal[ApplicationModal[\"VOTE\"] = 18] = \"VOTE\";\n  ApplicationModal[ApplicationModal[\"WALLET\"] = 19] = \"WALLET\";\n  ApplicationModal[ApplicationModal[\"WALLET_DROPDOWN\"] = 20] = \"WALLET_DROPDOWN\";\n  ApplicationModal[ApplicationModal[\"UNISWAP_NFT_AIRDROP_CLAIM\"] = 21] = \"UNISWAP_NFT_AIRDROP_CLAIM\";\n})(ApplicationModal || (ApplicationModal = {}));\nconst initialState = {\n  fiatOnramp: {\n    available: false,\n    availabilityChecked: false\n  },\n  chainId: null,\n  openModal: null,\n  popupList: [],\n  activeNetworkVersion: EthereumNetworkInfo\n};\nconst applicationSlice = createSlice({\n  name: 'application',\n  initialState,\n  reducers: {\n    setFiatOnrampAvailability(state, _ref) {\n      let {\n        payload: available\n      } = _ref;\n      state.fiatOnramp = {\n        available,\n        availabilityChecked: true\n      };\n    },\n    updateChainId(state, action) {\n      const {\n        chainId\n      } = action.payload;\n      state.chainId = chainId;\n    },\n    setOpenModal(state, action) {\n      state.openModal = action.payload;\n    },\n    addPopup(state, _ref2) {\n      let {\n        payload: {\n          content,\n          key,\n          removeAfterMs = DEFAULT_TXN_DISMISS_MS\n        }\n      } = _ref2;\n      state.popupList = (key ? state.popupList.filter(popup => popup.key !== key) : state.popupList).concat([{\n        key: key || nanoid(),\n        show: true,\n        content,\n        removeAfterMs\n      }]);\n    },\n    removePopup(state, _ref3) {\n      let {\n        payload: {\n          key\n        }\n      } = _ref3;\n      state.popupList.forEach(p => {\n        if (p.key === key) {\n          p.show = false;\n        }\n      });\n    }\n  }\n});\nexport const {\n  updateChainId,\n  setFiatOnrampAvailability,\n  setOpenModal,\n  addPopup,\n  removePopup\n} = applicationSlice.actions;\nexport default applicationSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","DEFAULT_TXN_DISMISS_MS","EthereumNetworkInfo","ApplicationModal","initialState","fiatOnramp","available","availabilityChecked","chainId","openModal","popupList","activeNetworkVersion","applicationSlice","name","reducers","setFiatOnrampAvailability","state","payload","updateChainId","action","setOpenModal","addPopup","content","key","removeAfterMs","filter","popup","concat","show","removePopup","forEach","p","actions","reducer"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/application/reducer.ts"],"sourcesContent":["import { createSlice, nanoid } from '@reduxjs/toolkit'\nimport { DEFAULT_TXN_DISMISS_MS } from 'constants/misc'\nimport { NetworkInfo } from 'constants/networks'\nimport { SupportedChainId } from '../../constants/chains'\nimport { EthereumNetworkInfo } from '../../constants/networks'\n\nexport type PopupContent =\n  | {\n      txn: {\n        hash: string\n      }\n    }\n  | {\n      failedSwitchNetwork: SupportedChainId\n    }\n\nexport enum ApplicationModal {\n  ADDRESS_CLAIM,\n  BLOCKED_ACCOUNT,\n  CLAIM_POPUP,\n  DELEGATE,\n  EXECUTE,\n  FEATURE_FLAGS,\n  FIAT_ONRAMP,\n  MENU,\n  METAMASK_CONNECTION_ERROR,\n  NETWORK_FILTER,\n  NETWORK_SELECTOR,\n  POOL_OVERVIEW_OPTIONS,\n  PRIVACY_POLICY,\n  QUEUE,\n  SELF_CLAIM,\n  SETTINGS,\n  SHARE,\n  TIME_SELECTOR,\n  VOTE,\n  WALLET,\n  WALLET_DROPDOWN,\n  UNISWAP_NFT_AIRDROP_CLAIM,\n}\n\ntype PopupList = Array<{ key: string; show: boolean; content: PopupContent; removeAfterMs: number | null }>\n\nexport interface ApplicationState {\n  readonly chainId: number | null\n  readonly fiatOnramp: { available: boolean; availabilityChecked: boolean }\n  readonly openModal: ApplicationModal | null\n  readonly popupList: PopupList\n  readonly activeNetworkVersion: NetworkInfo\n}\n\nconst initialState: ApplicationState = {\n  fiatOnramp: { available: false, availabilityChecked: false },\n  chainId: null,\n  openModal: null,\n  popupList: [],\n  activeNetworkVersion: EthereumNetworkInfo,\n}\n\nconst applicationSlice = createSlice({\n  name: 'application',\n  initialState,\n  reducers: {\n    setFiatOnrampAvailability(state, { payload: available }) {\n      state.fiatOnramp = { available, availabilityChecked: true }\n    },\n    updateChainId(state, action) {\n      const { chainId } = action.payload\n      state.chainId = chainId\n    },\n    setOpenModal(state, action) {\n      state.openModal = action.payload\n    },\n    addPopup(state, { payload: { content, key, removeAfterMs = DEFAULT_TXN_DISMISS_MS } }) {\n      state.popupList = (key ? state.popupList.filter((popup) => popup.key !== key) : state.popupList).concat([\n        {\n          key: key || nanoid(),\n          show: true,\n          content,\n          removeAfterMs,\n        },\n      ])\n    },\n    removePopup(state, { payload: { key } }) {\n      state.popupList.forEach((p) => {\n        if (p.key === key) {\n          p.show = false\n        }\n      })\n    },\n  },\n})\n\nexport const { updateChainId, setFiatOnrampAvailability, setOpenModal, addPopup, removePopup } =\n  applicationSlice.actions\nexport default applicationSlice.reducer\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}