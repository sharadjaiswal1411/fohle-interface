{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import useBlockNumber from'lib/hooks/useBlockNumber';import multicall from'lib/state/multicall';// re-export for convenience\nexport{NEVER_RELOAD}from'@uniswap/redux-multicall';// re-export for convenience\n// Create wrappers for hooks so consumers don't need to get latest block themselves\nexport function useMultipleContractSingleData(){var _multicall$hooks;var _useCallContext=useCallContext(),chainId=_useCallContext.chainId,latestBlock=_useCallContext.latestBlock;for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}return(_multicall$hooks=multicall.hooks).useMultipleContractSingleData.apply(_multicall$hooks,[chainId,latestBlock].concat(args));}export function useSingleCallResult(){var _multicall$hooks2;var _useCallContext2=useCallContext(),chainId=_useCallContext2.chainId,latestBlock=_useCallContext2.latestBlock;for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}return(_multicall$hooks2=multicall.hooks).useSingleCallResult.apply(_multicall$hooks2,[chainId,latestBlock].concat(args));}export function useSingleContractMultipleData(){var _multicall$hooks3;var _useCallContext3=useCallContext(),chainId=_useCallContext3.chainId,latestBlock=_useCallContext3.latestBlock;for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}return(_multicall$hooks3=multicall.hooks).useSingleContractMultipleData.apply(_multicall$hooks3,[chainId,latestBlock].concat(args));}export function useSingleContractWithCallData(){var _multicall$hooks4;var _useCallContext4=useCallContext(),chainId=_useCallContext4.chainId,latestBlock=_useCallContext4.latestBlock;for(var _len4=arguments.length,args=new Array(_len4),_key4=0;_key4<_len4;_key4++){args[_key4]=arguments[_key4];}return(_multicall$hooks4=multicall.hooks).useSingleContractWithCallData.apply(_multicall$hooks4,[chainId,latestBlock].concat(args));}function useCallContext(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var latestBlock=useBlockNumber();return{chainId:chainId,latestBlock:latestBlock};}","map":{"version":3,"names":["useWeb3React","useBlockNumber","multicall","NEVER_RELOAD","useMultipleContractSingleData","useCallContext","chainId","latestBlock","args","hooks","useSingleCallResult","useSingleContractMultipleData","useSingleContractWithCallData"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/multicall.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport multicall from 'lib/state/multicall'\nimport { SkipFirst } from 'types/tuple'\n\nexport type { CallStateResult } from '@uniswap/redux-multicall' // re-export for convenience\nexport { NEVER_RELOAD } from '@uniswap/redux-multicall' // re-export for convenience\n\n// Create wrappers for hooks so consumers don't need to get latest block themselves\n\ntype SkipFirstTwoParams<T extends (...args: any) => any> = SkipFirst<Parameters<T>, 2>\n\nexport function useMultipleContractSingleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useMultipleContractSingleData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useMultipleContractSingleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleCallResult(...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleCallResult>) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleCallResult(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractMultipleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractMultipleData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleContractMultipleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractWithCallData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractWithCallData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleContractWithCallData(chainId, latestBlock, ...args)\n}\n\nfunction useCallContext() {\n  const { chainId } = useWeb3React()\n  const latestBlock = useBlockNumber()\n  return { chainId, latestBlock }\n}\n"],"mappings":"AAAA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,MAAOC,eAAc,KAAM,0BAA0B,CACrD,MAAOC,UAAS,KAAM,qBAAqB,CAGqB;AAChE,OAASC,YAAY,KAAQ,0BAA0B,CAAC;AAExD;AAIA,MAAO,SAASC,8BAA6B,EAE3C,sBACA,oBAAiCC,cAAc,EAAE,CAAzCC,OAAO,iBAAPA,OAAO,CAAEC,WAAW,iBAAXA,WAAW,CAAqB,8BAF9CC,IAAI,0CAAJA,IAAI,wBAGP,MAAO,kBAAAN,SAAS,CAACO,KAAK,EAACL,6BAA6B,yBAACE,OAAO,CAAEC,WAAW,SAAKC,IAAI,EAAC,CACrF,CAEA,MAAO,SAASE,oBAAmB,EAA0E,uBAC3G,qBAAiCL,cAAc,EAAE,CAAzCC,OAAO,kBAAPA,OAAO,CAAEC,WAAW,kBAAXA,WAAW,CAAqB,+BADZC,IAAI,+CAAJA,IAAI,0BAEzC,MAAO,mBAAAN,SAAS,CAACO,KAAK,EAACC,mBAAmB,0BAACJ,OAAO,CAAEC,WAAW,SAAKC,IAAI,EAAC,CAC3E,CAEA,MAAO,SAASG,8BAA6B,EAE3C,uBACA,qBAAiCN,cAAc,EAAE,CAAzCC,OAAO,kBAAPA,OAAO,CAAEC,WAAW,kBAAXA,WAAW,CAAqB,+BAF9CC,IAAI,+CAAJA,IAAI,0BAGP,MAAO,mBAAAN,SAAS,CAACO,KAAK,EAACE,6BAA6B,0BAACL,OAAO,CAAEC,WAAW,SAAKC,IAAI,EAAC,CACrF,CAEA,MAAO,SAASI,8BAA6B,EAE3C,uBACA,qBAAiCP,cAAc,EAAE,CAAzCC,OAAO,kBAAPA,OAAO,CAAEC,WAAW,kBAAXA,WAAW,CAAqB,+BAF9CC,IAAI,+CAAJA,IAAI,0BAGP,MAAO,mBAAAN,SAAS,CAACO,KAAK,EAACG,6BAA6B,0BAACN,OAAO,CAAEC,WAAW,SAAKC,IAAI,EAAC,CACrF,CAEA,QAASH,eAAc,EAAG,CACxB,kBAAoBL,YAAY,EAAE,CAA1BM,OAAO,eAAPA,OAAO,CACf,GAAMC,YAAW,CAAGN,cAAc,EAAE,CACpC,MAAO,CAAEK,OAAO,CAAPA,OAAO,CAAEC,WAAW,CAAXA,WAAY,CAAC,CACjC"},"metadata":{},"sourceType":"module"}