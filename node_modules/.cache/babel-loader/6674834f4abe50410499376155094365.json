{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function promisify(originalFn, thisArg) {\n  var promisifiedFunction = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _len,\n        callArgs,\n        _key,\n        _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              for (_len = _args.length, callArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n                callArgs[_key] = _args[_key];\n              }\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                var callback = function callback(err, data) {\n                  if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                  }\n                  resolve(data);\n                };\n                originalFn.apply(thisArg, [].concat(callArgs, [callback]));\n              }));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function promisifiedFunction() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n  var message = error.message || \"Failed or Rejected Request\";\n  var code = -32000;\n  if (error && !error.code) {\n    switch (message) {\n      case \"Parse error\":\n        code = -32700;\n        break;\n      case \"Invalid request\":\n        code = -32600;\n        break;\n      case \"Method not found\":\n        code = -32601;\n        break;\n      case \"Invalid params\":\n        code = -32602;\n        break;\n      case \"Internal error\":\n        code = -32603;\n        break;\n      default:\n        code = -32000;\n        break;\n    }\n  }\n  var result = {\n    code: code,\n    message: message\n  };\n  if (error.data) {\n    result.data = error.data;\n  }\n  return result;\n}","map":{"version":3,"sources":["../../src/payload.ts"],"names":[],"mappings":";;AAMA,OAAM,SAAU,SAAS,CACvB,UAAoC,EACpC,OAAa,EAAA;EAEb,IAAM,mBAAmB;IAAA,oEAAG;MAAA;QAAA;QAAA;QAAA;MAAA;QAAA;UAAA;YAAA;cAAA,0BACvB,QAAe;gBAAf,QAAe;cAAA;cAAA,iCAEX,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAI;gBACrC,IAAM,QAAQ,GAAG,SAAX,QAAQ,CACZ,GAAiB,EACjB,IAAqD,EACnD;kBACF,IAAI,GAAG,KAAK,IAAI,IAAI,OAAO,GAAG,KAAK,WAAW,EAAE;oBAC9C,MAAM,CAAC,GAAG,CAAC;kBACZ;kBACD,OAAO,CAAC,IAAI,CAAC;gBACf,CAAC;gBACD,UAAU,CAAC,KAAK,CAAC,OAAO,YAAM,QAAQ,GAAE,QAAQ,GAAE;cACpD,CAAC,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACH;IAAA,gBAfK,mBAAmB;MAAA;IAAA;EAAA,GAexB;EACD,OAAO,mBAAmB;AAC5B;AAEA,OAAM,SAAU,cAAc,CAC5B,KAAoC,EAAA;EAEpC,IAAM,OAAO,GAAG,KAAK,CAAC,OAAO,IAAI,4BAA4B;EAC7D,IAAI,IAAI,GAAG,CAAC,KAAK;EACjB,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;IACxB,QAAQ,OAAO;MACb,KAAK,aAAa;QAChB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,iBAAiB;QACpB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,kBAAkB;QACrB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,gBAAgB;QACnB,IAAI,GAAG,CAAC,KAAK;QACb;MACF,KAAK,gBAAgB;QACnB,IAAI,GAAG,CAAC,KAAK;QACb;MACF;QACE,IAAI,GAAG,CAAC,KAAK;QACb;IAAM;EAEX;EACD,IAAM,MAAM,GAAqD;IAC/D,IAAI,EAAJ,IAAI;IACJ,OAAO,EAAP;GACD;EACD,IAAI,KAAK,CAAC,IAAI,EAAE;IACd,MAAM,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI;EACzB;EACD,OAAO,MAAM;AACf","sourceRoot":"","sourcesContent":["export function promisify(originalFn, thisArg) {\n    const promisifiedFunction = async (...callArgs) => {\n        return new Promise((resolve, reject) => {\n            const callback = (err, data) => {\n                if (err === null || typeof err === \"undefined\") {\n                    reject(err);\n                }\n                resolve(data);\n            };\n            originalFn.apply(thisArg, [...callArgs, callback]);\n        });\n    };\n    return promisifiedFunction;\n}\nexport function formatRpcError(error) {\n    const message = error.message || \"Failed or Rejected Request\";\n    let code = -32000;\n    if (error && !error.code) {\n        switch (message) {\n            case \"Parse error\":\n                code = -32700;\n                break;\n            case \"Invalid request\":\n                code = -32600;\n                break;\n            case \"Method not found\":\n                code = -32601;\n                break;\n            case \"Invalid params\":\n                code = -32602;\n                break;\n            case \"Internal error\":\n                code = -32603;\n                break;\n            default:\n                code = -32000;\n                break;\n        }\n    }\n    const result = {\n        code,\n        message,\n    };\n    if (error.data) {\n        result.data = error.data;\n    }\n    return result;\n}\n//# sourceMappingURL=payload.js.map"]},"metadata":{},"sourceType":"module"}