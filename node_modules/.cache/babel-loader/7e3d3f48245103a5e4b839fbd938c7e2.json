{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport const useSelectAsset = create()(devtools(set => ({\n  selectedAssets: [],\n  selectAsset: asset => set(_ref => {\n    let {\n      selectedAssets\n    } = _ref;\n    const assetWithId = {\n      id: uuidv4(),\n      ...asset\n    };\n    if (selectedAssets.length === 0) return {\n      selectedAssets: [assetWithId]\n    };else return {\n      selectedAssets: [...selectedAssets, assetWithId]\n    };\n  }),\n  removeAsset: asset => {\n    set(_ref2 => {\n      let {\n        selectedAssets\n      } = _ref2;\n      if (selectedAssets.length === 0) return {\n        selectedAssets: []\n      };else selectedAssets.find(x => x.tokenId === asset.tokenId && x.address === asset.address);\n      const assetsCopy = [...selectedAssets];\n      assetsCopy.splice(selectedAssets.findIndex(n => n.tokenId === asset.tokenId && n.address === asset.address), 1);\n      return {\n        selectedAssets: assetsCopy\n      };\n    });\n  },\n  reset: () => set(() => ({\n    selectedAssets: []\n  }))\n})));","map":{"version":3,"names":["v4","uuidv4","create","devtools","useSelectAsset","set","selectedAssets","selectAsset","asset","assetWithId","id","length","removeAsset","find","x","tokenId","address","assetsCopy","splice","findIndex","n","reset"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useSelectAsset.ts"],"sourcesContent":["import { v4 as uuidv4 } from 'uuid'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\nimport { GenieAsset } from '../types'\n\ninterface SelectAssetState {\n  selectedAssets: GenieAsset[]\n  selectAsset: (asset: GenieAsset) => void\n  removeAsset: (asset: GenieAsset) => void\n  reset: () => void\n}\n\nexport const useSelectAsset = create<SelectAssetState>()(\n  devtools((set) => ({\n    selectedAssets: [],\n    selectAsset: (asset) =>\n      set(({ selectedAssets }) => {\n        const assetWithId = { id: uuidv4(), ...asset }\n        if (selectedAssets.length === 0) return { selectedAssets: [assetWithId] }\n        else return { selectedAssets: [...selectedAssets, assetWithId] }\n      }),\n    removeAsset: (asset) => {\n      set(({ selectedAssets }) => {\n        if (selectedAssets.length === 0) return { selectedAssets: [] }\n        else selectedAssets.find((x) => x.tokenId === asset.tokenId && x.address === asset.address)\n        const assetsCopy = [...selectedAssets]\n        assetsCopy.splice(\n          selectedAssets.findIndex((n) => n.tokenId === asset.tokenId && n.address === asset.address),\n          1\n        )\n        return { selectedAssets: assetsCopy }\n      })\n    },\n    reset: () => set(() => ({ selectedAssets: [] })),\n  }))\n)\n"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,oBAAoB;AAW7C,OAAO,MAAMC,cAAc,GAAGF,MAAM,EAAoB,CACtDC,QAAQ,CAAEE,GAAG,KAAM;EACjBC,cAAc,EAAE,EAAE;EAClBC,WAAW,EAAGC,KAAK,IACjBH,GAAG,CAAC,QAAwB;IAAA,IAAvB;MAAEC;IAAe,CAAC;IACrB,MAAMG,WAAW,GAAG;MAAEC,EAAE,EAAET,MAAM,EAAE;MAAE,GAAGO;IAAM,CAAC;IAC9C,IAAIF,cAAc,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO;MAAEL,cAAc,EAAE,CAACG,WAAW;IAAE,CAAC,MACpE,OAAO;MAAEH,cAAc,EAAE,CAAC,GAAGA,cAAc,EAAEG,WAAW;IAAE,CAAC;EAClE,CAAC,CAAC;EACJG,WAAW,EAAGJ,KAAK,IAAK;IACtBH,GAAG,CAAC,SAAwB;MAAA,IAAvB;QAAEC;MAAe,CAAC;MACrB,IAAIA,cAAc,CAACK,MAAM,KAAK,CAAC,EAAE,OAAO;QAAEL,cAAc,EAAE;MAAG,CAAC,MACzDA,cAAc,CAACO,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKP,KAAK,CAACO,OAAO,IAAID,CAAC,CAACE,OAAO,KAAKR,KAAK,CAACQ,OAAO,CAAC;MAC3F,MAAMC,UAAU,GAAG,CAAC,GAAGX,cAAc,CAAC;MACtCW,UAAU,CAACC,MAAM,CACfZ,cAAc,CAACa,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACL,OAAO,KAAKP,KAAK,CAACO,OAAO,IAAIK,CAAC,CAACJ,OAAO,KAAKR,KAAK,CAACQ,OAAO,CAAC,EAC3F,CAAC,CACF;MACD,OAAO;QAAEV,cAAc,EAAEW;MAAW,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC;EACDI,KAAK,EAAE,MAAMhB,GAAG,CAAC,OAAO;IAAEC,cAAc,EAAE;EAAG,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module"}