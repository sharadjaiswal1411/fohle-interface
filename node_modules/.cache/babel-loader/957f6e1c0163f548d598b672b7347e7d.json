{"ast":null,"code":"export const isValidDate = date => {\n  const d = Date.parse(date.toString());\n  return isNaN(d) ? false : true;\n};\nexport const getTimeDifference = eventTimestamp => {\n  const date = new Date(eventTimestamp).getTime();\n  const diff = new Date().getTime() - date;\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n  const hours = Math.floor(diff % (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n  const minutes = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60));\n  if (days > 0) return `${days} day${days > 1 ? 's' : ''} ago`;\n  if (hours > 0) return `${hours} hour${hours > 1 ? 's' : ''} ago`;\n  if (minutes > 1) return `${minutes} minutes ago`;\n  return 'Just now';\n};","map":{"version":3,"names":["isValidDate","date","d","Date","parse","toString","isNaN","getTimeDifference","eventTimestamp","getTime","diff","days","Math","floor","hours","minutes"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/date.ts"],"sourcesContent":["export const isValidDate = (date: number): boolean => {\n  const d = Date.parse(date.toString())\n  return isNaN(d) ? false : true\n}\n\nexport const getTimeDifference = (eventTimestamp: string) => {\n  const date = new Date(eventTimestamp).getTime()\n  const diff = new Date().getTime() - date\n\n  const days = Math.floor(diff / (1000 * 60 * 60 * 24))\n  const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60))\n\n  if (days > 0) return `${days} day${days > 1 ? 's' : ''} ago`\n  if (hours > 0) return `${hours} hour${hours > 1 ? 's' : ''} ago`\n  if (minutes > 1) return `${minutes} minutes ago`\n  return 'Just now'\n}\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,IAAY,IAAc;EACpD,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAACI,QAAQ,EAAE,CAAC;EACrC,OAAOC,KAAK,CAACJ,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI;AAChC,CAAC;AAED,OAAO,MAAMK,iBAAiB,GAAIC,cAAsB,IAAK;EAC3D,MAAMP,IAAI,GAAG,IAAIE,IAAI,CAACK,cAAc,CAAC,CAACC,OAAO,EAAE;EAC/C,MAAMC,IAAI,GAAG,IAAIP,IAAI,EAAE,CAACM,OAAO,EAAE,GAAGR,IAAI;EAExC,MAAMU,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EACrD,MAAMI,KAAK,GAAGF,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;EAC3E,MAAMK,OAAO,GAAGH,IAAI,CAACC,KAAK,CAAEH,IAAI,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC,IAAK,IAAI,GAAG,EAAE,CAAC,CAAC;EAEnE,IAAIC,IAAI,GAAG,CAAC,EAAE,OAAQ,GAAEA,IAAK,OAAMA,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,MAAK;EAC5D,IAAIG,KAAK,GAAG,CAAC,EAAE,OAAQ,GAAEA,KAAM,QAAOA,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG,MAAK;EAChE,IAAIC,OAAO,GAAG,CAAC,EAAE,OAAQ,GAAEA,OAAQ,cAAa;EAChD,OAAO,UAAU;AACnB,CAAC"},"metadata":{},"sourceType":"module"}