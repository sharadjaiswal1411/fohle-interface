{"ast":null,"code":"import { ListingStatus } from 'nft/types';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport const useNFTList = create()(devtools((set, get) => ({\n  looksRareNonce: 0,\n  listingStatus: ListingStatus.DEFINED,\n  listings: [],\n  collectionsRequiringApproval: [],\n  setLooksRareNonce: nonce => set(() => {\n    return {\n      looksRareNonce: nonce\n    };\n  }),\n  getLooksRareNonce: () => {\n    return get().looksRareNonce;\n  },\n  setListingStatus: status => set(() => {\n    return {\n      listingStatus: status\n    };\n  }),\n  setListings: listings => set(() => {\n    const updatedListings = listings.map(listing => {\n      var _get$listings$find;\n      const oldStatus = (_get$listings$find = get().listings.find(oldListing => oldListing.asset.asset_contract.address === listing.asset.asset_contract.address && oldListing.asset.tokenId === listing.asset.tokenId && oldListing.marketplace.name === listing.marketplace.name && oldListing.price === listing.price)) === null || _get$listings$find === void 0 ? void 0 : _get$listings$find.status;\n      const status = () => {\n        switch (oldStatus) {\n          case ListingStatus.APPROVED:\n            return ListingStatus.APPROVED;\n          case ListingStatus.FAILED:\n            return listing.status === ListingStatus.SIGNING ? ListingStatus.SIGNING : ListingStatus.FAILED;\n          default:\n            return listing.status;\n        }\n      };\n      return {\n        ...listing,\n        status: status()\n      };\n    });\n    return {\n      listings: updatedListings\n    };\n  }),\n  setCollectionsRequiringApproval: collections => set(() => {\n    return {\n      collectionsRequiringApproval: collections\n    };\n  })\n})));","map":{"version":3,"names":["ListingStatus","create","devtools","useNFTList","set","get","looksRareNonce","listingStatus","DEFINED","listings","collectionsRequiringApproval","setLooksRareNonce","nonce","getLooksRareNonce","setListingStatus","status","setListings","updatedListings","map","listing","oldStatus","find","oldListing","asset","asset_contract","address","tokenId","marketplace","name","price","APPROVED","FAILED","SIGNING","setCollectionsRequiringApproval","collections"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useNFTList.ts"],"sourcesContent":["import { CollectionRow, ListingRow, ListingStatus } from 'nft/types'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface NFTListState {\n  looksRareNonce: number\n  listingStatus: ListingStatus\n  listings: ListingRow[]\n  collectionsRequiringApproval: CollectionRow[]\n  setLooksRareNonce: (nonce: number) => void\n  getLooksRareNonce: () => number\n  setListingStatus: (status: ListingStatus) => void\n  setListings: (listings: ListingRow[]) => void\n  setCollectionsRequiringApproval: (collections: CollectionRow[]) => void\n}\n\nexport const useNFTList = create<NFTListState>()(\n  devtools((set, get) => ({\n    looksRareNonce: 0,\n    listingStatus: ListingStatus.DEFINED,\n    listings: [],\n    collectionsRequiringApproval: [],\n    setLooksRareNonce: (nonce) =>\n      set(() => {\n        return { looksRareNonce: nonce }\n      }),\n    getLooksRareNonce: () => {\n      return get().looksRareNonce\n    },\n    setListingStatus: (status) =>\n      set(() => {\n        return { listingStatus: status }\n      }),\n    setListings: (listings) =>\n      set(() => {\n        const updatedListings = listings.map((listing) => {\n          const oldStatus = get().listings.find(\n            (oldListing) =>\n              oldListing.asset.asset_contract.address === listing.asset.asset_contract.address &&\n              oldListing.asset.tokenId === listing.asset.tokenId &&\n              oldListing.marketplace.name === listing.marketplace.name &&\n              oldListing.price === listing.price\n          )?.status\n          const status = () => {\n            switch (oldStatus) {\n              case ListingStatus.APPROVED:\n                return ListingStatus.APPROVED\n              case ListingStatus.FAILED:\n                return listing.status === ListingStatus.SIGNING ? ListingStatus.SIGNING : ListingStatus.FAILED\n              default:\n                return listing.status\n            }\n          }\n          return {\n            ...listing,\n            status: status(),\n          }\n        })\n        return {\n          listings: updatedListings,\n        }\n      }),\n    setCollectionsRequiringApproval: (collections) =>\n      set(() => {\n        return { collectionsRequiringApproval: collections }\n      }),\n  }))\n)\n"],"mappings":"AAAA,SAAoCA,aAAa,QAAQ,WAAW;AACpE,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,oBAAoB;AAc7C,OAAO,MAAMC,UAAU,GAAGF,MAAM,EAAgB,CAC9CC,QAAQ,CAAC,CAACE,GAAG,EAAEC,GAAG,MAAM;EACtBC,cAAc,EAAE,CAAC;EACjBC,aAAa,EAAEP,aAAa,CAACQ,OAAO;EACpCC,QAAQ,EAAE,EAAE;EACZC,4BAA4B,EAAE,EAAE;EAChCC,iBAAiB,EAAGC,KAAK,IACvBR,GAAG,CAAC,MAAM;IACR,OAAO;MAAEE,cAAc,EAAEM;IAAM,CAAC;EAClC,CAAC,CAAC;EACJC,iBAAiB,EAAE,MAAM;IACvB,OAAOR,GAAG,EAAE,CAACC,cAAc;EAC7B,CAAC;EACDQ,gBAAgB,EAAGC,MAAM,IACvBX,GAAG,CAAC,MAAM;IACR,OAAO;MAAEG,aAAa,EAAEQ;IAAO,CAAC;EAClC,CAAC,CAAC;EACJC,WAAW,EAAGP,QAAQ,IACpBL,GAAG,CAAC,MAAM;IACR,MAAMa,eAAe,GAAGR,QAAQ,CAACS,GAAG,CAAEC,OAAO,IAAK;MAAA;MAChD,MAAMC,SAAS,yBAAGf,GAAG,EAAE,CAACI,QAAQ,CAACY,IAAI,CAClCC,UAAU,IACTA,UAAU,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,KAAKN,OAAO,CAACI,KAAK,CAACC,cAAc,CAACC,OAAO,IAChFH,UAAU,CAACC,KAAK,CAACG,OAAO,KAAKP,OAAO,CAACI,KAAK,CAACG,OAAO,IAClDJ,UAAU,CAACK,WAAW,CAACC,IAAI,KAAKT,OAAO,CAACQ,WAAW,CAACC,IAAI,IACxDN,UAAU,CAACO,KAAK,KAAKV,OAAO,CAACU,KAAK,CACrC,uDANiB,mBAMfd,MAAM;MACT,MAAMA,MAAM,GAAG,MAAM;QACnB,QAAQK,SAAS;UACf,KAAKpB,aAAa,CAAC8B,QAAQ;YACzB,OAAO9B,aAAa,CAAC8B,QAAQ;UAC/B,KAAK9B,aAAa,CAAC+B,MAAM;YACvB,OAAOZ,OAAO,CAACJ,MAAM,KAAKf,aAAa,CAACgC,OAAO,GAAGhC,aAAa,CAACgC,OAAO,GAAGhC,aAAa,CAAC+B,MAAM;UAChG;YACE,OAAOZ,OAAO,CAACJ,MAAM;QAAA;MAE3B,CAAC;MACD,OAAO;QACL,GAAGI,OAAO;QACVJ,MAAM,EAAEA,MAAM;MAChB,CAAC;IACH,CAAC,CAAC;IACF,OAAO;MACLN,QAAQ,EAAEQ;IACZ,CAAC;EACH,CAAC,CAAC;EACJgB,+BAA+B,EAAGC,WAAW,IAC3C9B,GAAG,CAAC,MAAM;IACR,OAAO;MAAEM,4BAA4B,EAAEwB;IAAY,CAAC;EACtD,CAAC;AACL,CAAC,CAAC,CAAC,CACJ"},"metadata":{},"sourceType":"module"}