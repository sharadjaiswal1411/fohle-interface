{"ast":null,"code":"import{Percent}from'@uniswap/sdk-core';import{NATIVE_CHAIN_ID}from'constants/tokens';import{computeRealizedPriceImpact}from'utils/prices';export var getDurationUntilTimestampSeconds=function getDurationUntilTimestampSeconds(futureTimestampInSecondsSinceEpoch){if(!futureTimestampInSecondsSinceEpoch)return undefined;return futureTimestampInSecondsSinceEpoch-new Date().getTime()/1000;};export var getDurationFromDateMilliseconds=function getDurationFromDateMilliseconds(start){if(!start)return undefined;return new Date().getTime()-start.getTime();};export var formatToDecimal=function formatToDecimal(intialNumberObject,decimalPlace){return parseFloat(intialNumberObject.toFixed(decimalPlace));};export var getTokenAddress=function getTokenAddress(currency){return currency.isNative?NATIVE_CHAIN_ID:currency.address;};export var formatPercentInBasisPointsNumber=function formatPercentInBasisPointsNumber(percent){return parseFloat(percent.toFixed(2))*100;};export var formatPercentNumber=function formatPercentNumber(percent){return parseFloat(percent.toFixed(2));};export var getPriceUpdateBasisPoints=function getPriceUpdateBasisPoints(prevPrice,newPrice){var changeFraction=newPrice.subtract(prevPrice).divide(prevPrice);var changePercentage=new Percent(changeFraction.numerator,changeFraction.denominator);return formatPercentInBasisPointsNumber(changePercentage);};export var formatSwapSignedAnalyticsEventProperties=function formatSwapSignedAnalyticsEventProperties(_ref){var trade=_ref.trade,txHash=_ref.txHash;return{transaction_hash:txHash,token_in_address:getTokenAddress(trade.inputAmount.currency),token_out_address:getTokenAddress(trade.outputAmount.currency),token_in_symbol:trade.inputAmount.currency.symbol,token_out_symbol:trade.outputAmount.currency.symbol,token_in_amount:formatToDecimal(trade.inputAmount,trade.inputAmount.currency.decimals),token_out_amount:formatToDecimal(trade.outputAmount,trade.outputAmount.currency.decimals),price_impact_basis_points:formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),chain_id:trade.inputAmount.currency.chainId===trade.outputAmount.currency.chainId?trade.inputAmount.currency.chainId:undefined};};export var formatSwapQuoteReceivedEventProperties=function formatSwapQuoteReceivedEventProperties(trade,gasUseEstimateUSD,fetchingSwapQuoteStartTime){return{token_in_symbol:trade.inputAmount.currency.symbol,token_out_symbol:trade.outputAmount.currency.symbol,token_in_address:getTokenAddress(trade.inputAmount.currency),token_out_address:getTokenAddress(trade.outputAmount.currency),price_impact_basis_points:trade?formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)):undefined,estimated_network_fee_usd:gasUseEstimateUSD?formatToDecimal(gasUseEstimateUSD,2):undefined,chain_id:trade.inputAmount.currency.chainId===trade.outputAmount.currency.chainId?trade.inputAmount.currency.chainId:undefined,token_in_amount:formatToDecimal(trade.inputAmount,trade.inputAmount.currency.decimals),token_out_amount:formatToDecimal(trade.outputAmount,trade.outputAmount.currency.decimals),quote_latency_milliseconds:fetchingSwapQuoteStartTime?getDurationFromDateMilliseconds(fetchingSwapQuoteStartTime):undefined};};","map":{"version":3,"names":["Percent","NATIVE_CHAIN_ID","computeRealizedPriceImpact","getDurationUntilTimestampSeconds","futureTimestampInSecondsSinceEpoch","undefined","Date","getTime","getDurationFromDateMilliseconds","start","formatToDecimal","intialNumberObject","decimalPlace","parseFloat","toFixed","getTokenAddress","currency","isNative","address","formatPercentInBasisPointsNumber","percent","formatPercentNumber","getPriceUpdateBasisPoints","prevPrice","newPrice","changeFraction","subtract","divide","changePercentage","numerator","denominator","formatSwapSignedAnalyticsEventProperties","trade","txHash","transaction_hash","token_in_address","inputAmount","token_out_address","outputAmount","token_in_symbol","symbol","token_out_symbol","token_in_amount","decimals","token_out_amount","price_impact_basis_points","chain_id","chainId","formatSwapQuoteReceivedEventProperties","gasUseEstimateUSD","fetchingSwapQuoteStartTime","estimated_network_fee_usd","quote_latency_milliseconds"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/utils/analytics.ts"],"sourcesContent":["import { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Percent, Price, Token, TradeType } from '@uniswap/sdk-core'\nimport { NATIVE_CHAIN_ID } from 'constants/tokens'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { computeRealizedPriceImpact } from 'utils/prices'\n\nexport const getDurationUntilTimestampSeconds = (futureTimestampInSecondsSinceEpoch?: number): number | undefined => {\n  if (!futureTimestampInSecondsSinceEpoch) return undefined\n  return futureTimestampInSecondsSinceEpoch - new Date().getTime() / 1000\n}\n\nexport const getDurationFromDateMilliseconds = (start?: Date): number | undefined => {\n  if (!start) return undefined\n  return new Date().getTime() - start.getTime()\n}\n\nexport const formatToDecimal = (\n  intialNumberObject: Percent | CurrencyAmount<Token | Currency>,\n  decimalPlace: number\n): number => parseFloat(intialNumberObject.toFixed(decimalPlace))\n\nexport const getTokenAddress = (currency: Currency) => (currency.isNative ? NATIVE_CHAIN_ID : currency.address)\n\nexport const formatPercentInBasisPointsNumber = (percent: Percent): number => parseFloat(percent.toFixed(2)) * 100\n\nexport const formatPercentNumber = (percent: Percent): number => parseFloat(percent.toFixed(2))\n\nexport const getPriceUpdateBasisPoints = (\n  prevPrice: Price<Currency, Currency>,\n  newPrice: Price<Currency, Currency>\n): number => {\n  const changeFraction = newPrice.subtract(prevPrice).divide(prevPrice)\n  const changePercentage = new Percent(changeFraction.numerator, changeFraction.denominator)\n  return formatPercentInBasisPointsNumber(changePercentage)\n}\n\nexport const formatSwapSignedAnalyticsEventProperties = ({\n  trade,\n  txHash,\n}: {\n  trade: InterfaceTrade<Currency, Currency, TradeType> | Trade<Currency, Currency, TradeType>\n  txHash: string\n}) => ({\n  transaction_hash: txHash,\n  token_in_address: getTokenAddress(trade.inputAmount.currency),\n  token_out_address: getTokenAddress(trade.outputAmount.currency),\n  token_in_symbol: trade.inputAmount.currency.symbol,\n  token_out_symbol: trade.outputAmount.currency.symbol,\n  token_in_amount: formatToDecimal(trade.inputAmount, trade.inputAmount.currency.decimals),\n  token_out_amount: formatToDecimal(trade.outputAmount, trade.outputAmount.currency.decimals),\n  price_impact_basis_points: formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)),\n  chain_id:\n    trade.inputAmount.currency.chainId === trade.outputAmount.currency.chainId\n      ? trade.inputAmount.currency.chainId\n      : undefined,\n})\n\nexport const formatSwapQuoteReceivedEventProperties = (\n  trade: Trade<Currency, Currency, TradeType>,\n  gasUseEstimateUSD?: CurrencyAmount<Token>,\n  fetchingSwapQuoteStartTime?: Date\n) => {\n  return {\n    token_in_symbol: trade.inputAmount.currency.symbol,\n    token_out_symbol: trade.outputAmount.currency.symbol,\n    token_in_address: getTokenAddress(trade.inputAmount.currency),\n    token_out_address: getTokenAddress(trade.outputAmount.currency),\n    price_impact_basis_points: trade ? formatPercentInBasisPointsNumber(computeRealizedPriceImpact(trade)) : undefined,\n    estimated_network_fee_usd: gasUseEstimateUSD ? formatToDecimal(gasUseEstimateUSD, 2) : undefined,\n    chain_id:\n      trade.inputAmount.currency.chainId === trade.outputAmount.currency.chainId\n        ? trade.inputAmount.currency.chainId\n        : undefined,\n    token_in_amount: formatToDecimal(trade.inputAmount, trade.inputAmount.currency.decimals),\n    token_out_amount: formatToDecimal(trade.outputAmount, trade.outputAmount.currency.decimals),\n    quote_latency_milliseconds: fetchingSwapQuoteStartTime\n      ? getDurationFromDateMilliseconds(fetchingSwapQuoteStartTime)\n      : undefined,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}