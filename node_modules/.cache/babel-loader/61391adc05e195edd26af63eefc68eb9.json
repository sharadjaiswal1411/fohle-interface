{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Pools/PoolDetails/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { Trace } from '@uniswap/analytics';\nimport { PageName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { usePoolTransactions } from 'state/pools/hooks';\nimport { LocalLoader } from 'components/Loader';\nimport TransactionTable from 'components/TransactionsTable';\nimport { PoolDetailsLayout } from 'components/Pools/PoolDetails/Skeleton';\nimport { getChainInfo } from 'constants/chainInfo';\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens';\nimport { checkWarning } from 'constants/tokenSafety';\nimport { QueryToken } from 'graphql/data/Token';\nimport { CHAIN_NAME_TO_CHAIN_ID, getTokenDetailsURL } from 'graphql/data/util';\nimport { useIsUserAddedTokenOnChain } from 'hooks/Tokens';\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch';\nimport { UNKNOWN_TOKEN_SYMBOL, useTokenFromActiveNetwork } from 'lib/hooks/useCurrency';\nimport { useCallback, useMemo, useState, useTransition } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { isAddress } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TokenSymbol = _styled.span.withConfig({\n  displayName: \"PoolDetails__TokenSymbol\",\n  componentId: \"sc-10isrmk-0\"\n})([\"text-transform:uppercase;color:\", \";\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textSecondary;\n});\nconst TokenActions = _styled.div.withConfig({\n  displayName: \"PoolDetails__TokenActions\",\n  componentId: \"sc-10isrmk-1\"\n})([\"display:flex;gap:16px;color:\", \";\"], _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.textSecondary;\n});\nfunction useOnChainToken(address, skip) {\n  _s();\n  const token = useTokenFromActiveNetwork(skip || !address ? undefined : address);\n  if (skip || !address || token && (token === null || token === void 0 ? void 0 : token.symbol) === UNKNOWN_TOKEN_SYMBOL) {\n    return undefined;\n  } else {\n    return token;\n  }\n}\n\n// Selects most relevant token based on data available, preferring native > query > on-chain\n// Token will be null if still loading from on-chain, and undefined if unavailable\n_s(useOnChainToken, \"OGCnVbBUjNsPTDB+jQg5v2KJ7M4=\", false, function () {\n  return [useTokenFromActiveNetwork];\n});\nfunction useRelevantToken(address, pageChainId, tokenQueryData) {\n  _s2();\n  const {\n    chainId: activeChainId\n  } = useWeb3React();\n  const queryToken = useMemo(() => {\n    if (!address) return undefined;\n    if (address === NATIVE_CHAIN_ID) return nativeOnChain(pageChainId);\n    if (tokenQueryData) return new QueryToken(address, tokenQueryData);\n    return undefined;\n  }, [pageChainId, address, tokenQueryData]);\n  // fetches on-chain token if query data is missing and page chain matches global chain (else fetch won't work)\n  const skipOnChainFetch = Boolean(queryToken) || pageChainId !== activeChainId;\n  const onChainToken = useOnChainToken(address, skipOnChainFetch);\n  return useMemo(() => ({\n    token: queryToken !== null && queryToken !== void 0 ? queryToken : onChainToken,\n    didFetchFromChain: !queryToken\n  }), [onChainToken, queryToken]);\n}\n_s2(useRelevantToken, \"IIGzhmv2mfJUdlo0tz5NbIoV3II=\", false, function () {\n  return [useWeb3React, useOnChainToken];\n});\nexport default function PoolDetails(_ref3) {\n  _s3();\n  var _tokenQuery$tokens, _getChainInfo;\n  let {\n    urlAddress,\n    chain,\n    tokenQuery,\n    tokenPriceQuery,\n    onChangeTimePeriod\n  } = _ref3;\n  if (!urlAddress) {\n    throw new Error('Invalid token details route: tokenAddress param is undefined');\n  }\n  const transactions = usePoolTransactions(urlAddress);\n  console.log(\"transactions\", {\n    urlAddress,\n    transactions\n  });\n  const address = useMemo(() => urlAddress === NATIVE_CHAIN_ID ? urlAddress : isAddress(urlAddress) || undefined, [urlAddress]);\n  const pageChainId = CHAIN_NAME_TO_CHAIN_ID[chain];\n  const tokenQueryData = (_tokenQuery$tokens = tokenQuery.tokens) === null || _tokenQuery$tokens === void 0 ? void 0 : _tokenQuery$tokens[0];\n  const crossChainMap = useMemo(() => {\n    var _tokenQueryData$proje, _tokenQueryData$proje2;\n    return (_tokenQueryData$proje = tokenQueryData === null || tokenQueryData === void 0 ? void 0 : (_tokenQueryData$proje2 = tokenQueryData.project) === null || _tokenQueryData$proje2 === void 0 ? void 0 : _tokenQueryData$proje2.tokens.reduce((map, current) => {\n      if (current) map[current.chain] = current.address;\n      return map;\n    }, {})) !== null && _tokenQueryData$proje !== void 0 ? _tokenQueryData$proje : {};\n  }, [tokenQueryData]);\n  const {\n    token,\n    didFetchFromChain\n  } = useRelevantToken(address, pageChainId, tokenQueryData);\n  const tokenWarning = address ? checkWarning(address) : null;\n  const isBlockedToken = (tokenWarning === null || tokenWarning === void 0 ? void 0 : tokenWarning.canProceed) === false;\n  const navigate = useNavigate();\n\n  // Wrapping navigate in a transition prevents Suspense from unnecessarily showing fallbacks again.\n  const [isPending, startTokenTransition] = useTransition();\n  const navigateToTokenForChain = useCallback(update => {\n    if (!address) return;\n    const bridgedAddress = crossChainMap[update];\n    if (bridgedAddress) {\n      startTokenTransition(() => navigate(getTokenDetailsURL(bridgedAddress, update)));\n    } else if (didFetchFromChain || (token === null || token === void 0 ? void 0 : token.isNative)) {\n      startTokenTransition(() => navigate(getTokenDetailsURL(address, update)));\n    }\n  }, [address, crossChainMap, didFetchFromChain, navigate, token === null || token === void 0 ? void 0 : token.isNative]);\n  useOnGlobalChainSwitch(navigateToTokenForChain);\n  const navigateToWidgetSelectedToken = useCallback(token => {\n    const address = token.isNative ? NATIVE_CHAIN_ID : token.address;\n    startTokenTransition(() => navigate(getTokenDetailsURL(address, chain)));\n  }, [chain, navigate]);\n  const [continueSwap, setContinueSwap] = useState();\n\n  // Show token safety modal if Swap-reviewing a warning token, at all times if the current token is blocked\n  const shouldShowSpeedbump = !useIsUserAddedTokenOnChain(address, pageChainId) && tokenWarning !== null;\n  const onReviewSwapClick = useCallback(() => new Promise(resolve => shouldShowSpeedbump ? setContinueSwap({\n    resolve\n  }) : resolve(true)), [shouldShowSpeedbump]);\n  const onResolveSwap = useCallback(value => {\n    continueSwap === null || continueSwap === void 0 ? void 0 : continueSwap.resolve(value);\n    setContinueSwap(undefined);\n  }, [continueSwap, setContinueSwap]);\n  const L2Icon = (_getChainInfo = getChainInfo(pageChainId)) === null || _getChainInfo === void 0 ? void 0 : _getChainInfo.circleLogoUrl;\n\n  // address will never be undefined if token is defined; address is checked here to appease typechecker\n  // if (token === undefined || !address) {\n  //   return <InvalidTokenDetails chainName={address && getChainInfo(pageChainId)?.label} />\n  // }\n  return /*#__PURE__*/_jsxDEV(Trace, {\n    page: PageName.TOKEN_DETAILS_PAGE,\n    properties: {\n      tokenAddress: address,\n      tokenName: token === null || token === void 0 ? void 0 : token.name\n    },\n    shouldLogImpression: true,\n    children: /*#__PURE__*/_jsxDEV(PoolDetailsLayout, {\n      children: transactions ? /*#__PURE__*/_jsxDEV(TransactionTable, {\n        transactions: transactions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(LocalLoader, {\n        fill: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 74\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n_s3(PoolDetails, \"ZA/2C5SyY3SNJu7u9FaPWKpvCrc=\", false, function () {\n  return [usePoolTransactions, useRelevantToken, useNavigate, useTransition, useOnGlobalChainSwitch, useIsUserAddedTokenOnChain];\n});\n_c = PoolDetails;\nvar _c;\n$RefreshReg$(_c, \"PoolDetails\");","map":{"version":3,"names":["Trace","PageName","useWeb3React","usePoolTransactions","LocalLoader","TransactionTable","PoolDetailsLayout","getChainInfo","NATIVE_CHAIN_ID","nativeOnChain","checkWarning","QueryToken","CHAIN_NAME_TO_CHAIN_ID","getTokenDetailsURL","useIsUserAddedTokenOnChain","useOnGlobalChainSwitch","UNKNOWN_TOKEN_SYMBOL","useTokenFromActiveNetwork","useCallback","useMemo","useState","useTransition","useNavigate","isAddress","TokenSymbol","styled","span","theme","textSecondary","TokenActions","div","useOnChainToken","address","skip","token","undefined","symbol","useRelevantToken","pageChainId","tokenQueryData","chainId","activeChainId","queryToken","skipOnChainFetch","Boolean","onChainToken","didFetchFromChain","PoolDetails","urlAddress","chain","tokenQuery","tokenPriceQuery","onChangeTimePeriod","Error","transactions","console","log","tokens","crossChainMap","project","reduce","map","current","tokenWarning","isBlockedToken","canProceed","navigate","isPending","startTokenTransition","navigateToTokenForChain","update","bridgedAddress","isNative","navigateToWidgetSelectedToken","continueSwap","setContinueSwap","shouldShowSpeedbump","onReviewSwapClick","Promise","resolve","onResolveSwap","value","L2Icon","circleLogoUrl","TOKEN_DETAILS_PAGE","tokenAddress","tokenName","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Pools/PoolDetails/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Trace } from '@uniswap/analytics'\nimport { PageName } from '@uniswap/analytics-events'\nimport { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePoolDatas, usePoolChartData, usePoolTransactions } from 'state/pools/hooks'\nimport Loader, { LocalLoader } from 'components/Loader'\nimport TransactionTable from 'components/TransactionsTable'\n\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { AboutSection } from 'components/Pools/PoolDetails/About'\nimport AddressSection from 'components/Pools/PoolDetails/AddressSection'\nimport BalanceSummary from 'components/Pools/PoolDetails/BalanceSummary'\nimport { BreadcrumbNavLink } from 'components/Pools/PoolDetails/BreadcrumbNavLink'\nimport ChartSection from 'components/Pools/PoolDetails/ChartSection'\nimport MobileBalanceSummaryFooter from 'components/Pools/PoolDetails/MobileBalanceSummaryFooter'\nimport ShareButton from 'components/Pools/PoolDetails/ShareButton'\nimport PoolDetailsSkeleton, {\n  Hr,\n  LeftPanel,\n  RightPanel,\n  PoolDetailsLayout,\n  TokenInfoContainer,\n  TokenNameCell,\n} from 'components/Pools/PoolDetails/Skeleton'\nimport StatsSection from 'components/Pools/PoolDetails/StatsSection'\nimport { L2NetworkLogo, LogoContainer } from 'components/Pools/PoolTable/TokenRow'\nimport TokenSafetyMessage from 'components/TokenSafety/TokenSafetyMessage'\nimport TokenSafetyModal from 'components/TokenSafety/TokenSafetyModal'\nimport Widget from 'components/Widget'\nimport { getChainInfo } from 'constants/chainInfo'\nimport { NATIVE_CHAIN_ID, nativeOnChain } from 'constants/tokens'\nimport { checkWarning } from 'constants/tokenSafety'\nimport { TokenPriceQuery } from 'graphql/data/__generated__/types-and-hooks'\nimport { Chain, TokenQuery, TokenQueryData } from 'graphql/data/Token'\nimport { QueryToken } from 'graphql/data/Token'\nimport { CHAIN_NAME_TO_CHAIN_ID, getTokenDetailsURL } from 'graphql/data/util'\nimport { useIsUserAddedTokenOnChain } from 'hooks/Tokens'\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch'\nimport { UNKNOWN_TOKEN_SYMBOL, useTokenFromActiveNetwork } from 'lib/hooks/useCurrency'\nimport { useCallback, useMemo, useState, useTransition } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { isAddress } from 'utils'\n\nimport { OnChangeTimePeriod } from './ChartSection'\nimport InvalidTokenDetails from './InvalidTokenDetails'\n\nconst TokenSymbol = styled.span`\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.textSecondary};\n`\nconst TokenActions = styled.div`\n  display: flex;\n  gap: 16px;\n  color: ${({ theme }) => theme.textSecondary};\n`\n\nfunction useOnChainToken(address: string | undefined, skip: boolean) {\n  const token = useTokenFromActiveNetwork(skip || !address ? undefined : address)\n\n  if (skip || !address || (token && token?.symbol === UNKNOWN_TOKEN_SYMBOL)) {\n    return undefined\n  } else {\n    return token\n  }\n}\n\n// Selects most relevant token based on data available, preferring native > query > on-chain\n// Token will be null if still loading from on-chain, and undefined if unavailable\nfunction useRelevantToken(\n  address: string | undefined,\n  pageChainId: number,\n  tokenQueryData: TokenQueryData | undefined\n) {\n  const { chainId: activeChainId } = useWeb3React()\n  const queryToken = useMemo(() => {\n    if (!address) return undefined\n    if (address === NATIVE_CHAIN_ID) return nativeOnChain(pageChainId)\n    if (tokenQueryData) return new QueryToken(address, tokenQueryData)\n    return undefined\n  }, [pageChainId, address, tokenQueryData])\n  // fetches on-chain token if query data is missing and page chain matches global chain (else fetch won't work)\n  const skipOnChainFetch = Boolean(queryToken) || pageChainId !== activeChainId\n  const onChainToken = useOnChainToken(address, skipOnChainFetch)\n\n  return useMemo(\n    () => ({ token: queryToken ?? onChainToken, didFetchFromChain: !queryToken }),\n    [onChainToken, queryToken]\n  )\n}\n\ntype TokenDetailsProps = {\n  urlAddress: string | undefined\n  chain: Chain\n  tokenQuery: TokenQuery\n  tokenPriceQuery: TokenPriceQuery | undefined\n  onChangeTimePeriod: OnChangeTimePeriod\n}\nexport default function PoolDetails({ urlAddress, chain, tokenQuery, tokenPriceQuery, onChangeTimePeriod }: TokenDetailsProps) {\n  if (!urlAddress) {\n    throw new Error('Invalid token details route: tokenAddress param is undefined')\n  }\n  \n\n\n   const transactions = usePoolTransactions(urlAddress)\n\n   console.log(\"transactions\",{urlAddress,transactions})\n\n\n  const address = useMemo(\n    () => (urlAddress === NATIVE_CHAIN_ID ? urlAddress : isAddress(urlAddress) || undefined),\n    [urlAddress]\n  )\n\n  const pageChainId = CHAIN_NAME_TO_CHAIN_ID[chain]\n\n  const tokenQueryData = tokenQuery.tokens?.[0]\n  const crossChainMap = useMemo(\n    () =>\n      tokenQueryData?.project?.tokens.reduce((map, current) => {\n        if (current) map[current.chain] = current.address\n        return map\n      }, {} as { [key: string]: string | undefined }) ?? {},\n    [tokenQueryData]\n  )\n\n  const { token, didFetchFromChain } = useRelevantToken(address, pageChainId, tokenQueryData)\n\n  const tokenWarning = address ? checkWarning(address) : null\n  const isBlockedToken = tokenWarning?.canProceed === false\n  const navigate = useNavigate()\n\n  // Wrapping navigate in a transition prevents Suspense from unnecessarily showing fallbacks again.\n  const [isPending, startTokenTransition] = useTransition()\n  const navigateToTokenForChain = useCallback(\n    (update: Chain) => {\n      if (!address) return\n      const bridgedAddress = crossChainMap[update]\n      if (bridgedAddress) {\n        startTokenTransition(() => navigate(getTokenDetailsURL(bridgedAddress, update)))\n      } else if (didFetchFromChain || token?.isNative) {\n        startTokenTransition(() => navigate(getTokenDetailsURL(address, update)))\n      }\n    },\n    [address, crossChainMap, didFetchFromChain, navigate, token?.isNative]\n  )\n  useOnGlobalChainSwitch(navigateToTokenForChain)\n\n  const navigateToWidgetSelectedToken = useCallback(\n    (token: Currency) => {\n      const address = token.isNative ? NATIVE_CHAIN_ID : token.address\n      startTokenTransition(() => navigate(getTokenDetailsURL(address, chain)))\n    },\n    [chain, navigate]\n  )\n\n  const [continueSwap, setContinueSwap] = useState<{ resolve: (value: boolean | PromiseLike<boolean>) => void }>()\n\n  // Show token safety modal if Swap-reviewing a warning token, at all times if the current token is blocked\n  const shouldShowSpeedbump = !useIsUserAddedTokenOnChain(address, pageChainId) && tokenWarning !== null\n  const onReviewSwapClick = useCallback(\n    () => new Promise<boolean>((resolve) => (shouldShowSpeedbump ? setContinueSwap({ resolve }) : resolve(true))),\n    [shouldShowSpeedbump]\n  )\n\n  const onResolveSwap = useCallback(\n    (value: boolean) => {\n      continueSwap?.resolve(value)\n      setContinueSwap(undefined)\n    },\n    [continueSwap, setContinueSwap]\n  )\n\n  const L2Icon = getChainInfo(pageChainId)?.circleLogoUrl\n\n  // address will never be undefined if token is defined; address is checked here to appease typechecker\n  // if (token === undefined || !address) {\n  //   return <InvalidTokenDetails chainName={address && getChainInfo(pageChainId)?.label} />\n  // }\n  return (\n    <Trace\n      page={PageName.TOKEN_DETAILS_PAGE}\n      properties={{ tokenAddress: address, tokenName: token?.name }}\n      shouldLogImpression\n    >\n      <PoolDetailsLayout>\n\n      {transactions ? <TransactionTable transactions={transactions} /> : <LocalLoader fill={false} />}\n      </PoolDetailsLayout>\n    </Trace>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}