{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{defaultAbiCoder}from'@ethersproject/abi';import{BigNumber}from'@ethersproject/bignumber';import{hexZeroPad}from'@ethersproject/bytes';import{AddressZero}from'@ethersproject/constants';import{keccak256}from'@ethersproject/keccak256';import{randomBytes}from'@ethersproject/random';var dataParamType=\"tuple(address token, uint256 tokenId)[]\";var orderItemParamType=\"tuple(uint256 price, bytes data)\";var orderParamTypes=[\"uint256\",\"address\",\"uint256\",\"uint256\",\"uint256\",\"uint256\",\"address\",\"bytes\",\"uint256\",\"\".concat(orderItemParamType,\"[]\")];var orderParamType=\"tuple(uint256 salt, address user, uint256 network, uint256 intent, uint256 delegateType, uint256 deadline, address currency, bytes dataMask, \".concat(orderItemParamType,\"[] items, bytes32 r, bytes32 s, uint8 v, uint8 signVersion)\");var randomSalt=function randomSalt(){var randomHex=BigNumber.from(randomBytes(16)).toHexString();return hexZeroPad(randomHex,64);};var encodeItemData=function encodeItemData(data){return defaultAbiCoder.encode([dataParamType],[data]);};export var signOrderData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(web3Provider,order){var orderData,orderHash,orderSig;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:orderData=defaultAbiCoder.encode(orderParamTypes,[order.salt,order.user,order.network,order.intent,order.delegateType,order.deadline,order.currency,order.dataMask,order.items.length,order.items]);orderHash=keccak256(orderData);_context.next=4;return web3Provider.send('personal_sign',[orderHash,order.user]);case 4:orderSig=_context.sent;order.r=\"0x\".concat(orderSig.slice(2,66));order.s=\"0x\".concat(orderSig.slice(66,130));order.v=parseInt(orderSig.slice(130,132),16);fixSignature(order);case 9:case\"end\":return _context.stop();}}},_callee);}));return function signOrderData(_x,_x2){return _ref.apply(this,arguments);};}();var fixSignature=function fixSignature(data){// in geth its always 27/28, in ganache its 0/1. Change to 27/28 to prevent\n// signature malleability if version is 0/1\n// see https://github.com/ethereum/go-ethereum/blob/v1.8.23/internal/ethapi/api.go#L465\nif(data.v<27){data.v=data.v+27;}};export var encodeOrder=function encodeOrder(order){return defaultAbiCoder.encode([orderParamType],[order]);};export var createSellOrder=function createSellOrder(user,deadline,items){var salt=randomSalt();var network=1;// mainnet\nvar intent=1;// INTENT_SELL\nvar delegateType=1;// DELEGATION_TYPE_ERC721\nvar currency=AddressZero;// ETH\nreturn{salt:salt,user:user,network:network,intent:intent,delegateType:delegateType,deadline:deadline,currency:currency,dataMask:'0x',items:items.map(function(item){return{price:item.price,data:encodeItemData(item.tokens)};}),r:'',s:'',v:0,signVersion:1};};","map":{"version":3,"names":["defaultAbiCoder","BigNumber","hexZeroPad","AddressZero","keccak256","randomBytes","dataParamType","orderItemParamType","orderParamTypes","orderParamType","randomSalt","randomHex","from","toHexString","encodeItemData","data","encode","signOrderData","web3Provider","order","orderData","salt","user","network","intent","delegateType","deadline","currency","dataMask","items","length","orderHash","send","orderSig","r","slice","s","v","parseInt","fixSignature","encodeOrder","createSellOrder","map","item","price","tokens","signVersion"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/x2y2.ts"],"sourcesContent":["import { defaultAbiCoder } from '@ethersproject/abi'\nimport { BigNumber, BigNumberish } from '@ethersproject/bignumber'\nimport { hexZeroPad } from '@ethersproject/bytes'\nimport { AddressZero } from '@ethersproject/constants'\nimport { keccak256 } from '@ethersproject/keccak256'\nimport type { Web3Provider } from '@ethersproject/providers'\nimport { randomBytes } from '@ethersproject/random'\n\nconst dataParamType = `tuple(address token, uint256 tokenId)[]`\nconst orderItemParamType = `tuple(uint256 price, bytes data)`\nconst orderParamTypes = [\n  `uint256`,\n  `address`,\n  `uint256`,\n  `uint256`,\n  `uint256`,\n  `uint256`,\n  `address`,\n  `bytes`,\n  `uint256`,\n  `${orderItemParamType}[]`,\n]\nconst orderParamType = `tuple(uint256 salt, address user, uint256 network, uint256 intent, uint256 delegateType, uint256 deadline, address currency, bytes dataMask, ${orderItemParamType}[] items, bytes32 r, bytes32 s, uint8 v, uint8 signVersion)`\n\nexport type OfferItem = {\n  price: BigNumber\n  tokens: {\n    token: string\n    tokenId: BigNumberish\n  }[]\n}\n\ntype OrderItem = {\n  price: BigNumberish\n  data: string\n}\n\ntype Order = {\n  salt: BigNumberish\n  user: string\n  network: BigNumberish\n  intent: BigNumberish\n  delegateType: BigNumberish\n  deadline: BigNumberish\n  currency: string\n  dataMask: string\n  items: OrderItem[]\n  // signature\n  r: string\n  s: string\n  v: number\n  signVersion: number\n}\n\nexport type OrderPayload = {\n  order: string\n  isBundle: boolean\n  bundleName: string\n  bundleDesc: string\n  orderIds: number[]\n  changePrice: boolean\n  isCollection: boolean\n}\n\nconst randomSalt = () => {\n  const randomHex = BigNumber.from(randomBytes(16)).toHexString()\n  return hexZeroPad(randomHex, 64)\n}\n\nconst encodeItemData = (data: { token: string; tokenId: BigNumberish }[]) => {\n  return defaultAbiCoder.encode([dataParamType], [data])\n}\n\nexport const signOrderData = async (web3Provider: Web3Provider, order: Order) => {\n  const orderData = defaultAbiCoder.encode(orderParamTypes, [\n    order.salt,\n    order.user,\n    order.network,\n    order.intent,\n    order.delegateType,\n    order.deadline,\n    order.currency,\n    order.dataMask,\n    order.items.length,\n    order.items,\n  ])\n  const orderHash = keccak256(orderData)\n  const orderSig = (await web3Provider.send('personal_sign', [orderHash, order.user])) as string\n  order.r = `0x${orderSig.slice(2, 66)}`\n  order.s = `0x${orderSig.slice(66, 130)}`\n  order.v = parseInt(orderSig.slice(130, 132), 16)\n  fixSignature(order)\n}\n\nconst fixSignature = (data: Order) => {\n  // in geth its always 27/28, in ganache its 0/1. Change to 27/28 to prevent\n  // signature malleability if version is 0/1\n  // see https://github.com/ethereum/go-ethereum/blob/v1.8.23/internal/ethapi/api.go#L465\n  if (data.v < 27) {\n    data.v = data.v + 27\n  }\n}\n\nexport const encodeOrder = (order: Order): string => {\n  return defaultAbiCoder.encode([orderParamType], [order])\n}\n\nexport const createSellOrder = (user: string, deadline: number, items: OfferItem[]): Order => {\n  const salt = randomSalt()\n  const network = 1 // mainnet\n  const intent = 1 // INTENT_SELL\n  const delegateType = 1 // DELEGATION_TYPE_ERC721\n  const currency = AddressZero // ETH\n  return {\n    salt,\n    user,\n    network,\n    intent,\n    delegateType,\n    deadline,\n    currency,\n    dataMask: '0x',\n    items: items.map((item) => ({\n      price: item.price,\n      data: encodeItemData(item.tokens),\n    })),\n    r: '',\n    s: '',\n    v: 0,\n    signVersion: 1,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}