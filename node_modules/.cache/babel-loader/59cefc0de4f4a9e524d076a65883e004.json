{"ast":null,"code":"export let ListingStatus;\n(function (ListingStatus) {\n  ListingStatus[\"APPROVED\"] = \"Approved\";\n  ListingStatus[\"CONTINUE\"] = \"Continue\";\n  ListingStatus[\"DEFINED\"] = \"Defined\";\n  ListingStatus[\"FAILED\"] = \"Failed\";\n  ListingStatus[\"PAUSED\"] = \"Paused\";\n  ListingStatus[\"PENDING\"] = \"Pending\";\n  ListingStatus[\"REJECTED\"] = \"Rejected\";\n  ListingStatus[\"SIGNING\"] = \"Signing\";\n})(ListingStatus || (ListingStatus = {}));\n// Creating this as an enum and not boolean as we will likely have a success screen state to show\nexport let ProfilePageStateType;\n(function (ProfilePageStateType) {\n  ProfilePageStateType[ProfilePageStateType[\"VIEWING\"] = 0] = \"VIEWING\";\n  ProfilePageStateType[ProfilePageStateType[\"LISTING\"] = 1] = \"LISTING\";\n})(ProfilePageStateType || (ProfilePageStateType = {}));\nexport let ListingResponse;\n(function (ListingResponse) {\n  ListingResponse[ListingResponse[\"TRY_AGAIN\"] = 0] = \"TRY_AGAIN\";\n  ListingResponse[ListingResponse[\"SUCCESS\"] = 1] = \"SUCCESS\";\n})(ListingResponse || (ListingResponse = {}));","map":{"version":3,"names":["ListingStatus","ProfilePageStateType","ListingResponse"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/types/sell/sell.ts"],"sourcesContent":["import { NftMarketplace, NftStandard, OrderStatus, OrderType } from 'graphql/data/__generated__/types-and-hooks'\n\nimport { GenieCollection, PriceInfo } from '../common'\n\nexport interface ListingMarket {\n  name: string\n  fee: number\n  icon: string\n}\nexport interface ListingWarning {\n  marketplace: ListingMarket\n  message: string\n}\n\nexport interface SellOrder {\n  address: string\n  createdAt: number\n  endAt?: number\n  id: string\n  maker: string\n  marketplace: NftMarketplace\n  marketplaceUrl: string\n  orderHash?: string\n  price: {\n    currency?: string\n    value: number\n  }\n  quantity: number\n  startAt: number\n  status: OrderStatus\n  tokenId?: string\n  type: OrderType\n  protocolParameters: Record<string, unknown>\n}\n\nexport interface Listing {\n  price?: number\n  marketplace: ListingMarket\n  overrideFloorPrice?: boolean\n}\n\nexport interface WalletAsset {\n  id?: string\n  imageUrl?: string\n  smallImageUrl?: string\n  notForSale: boolean\n  animationUrl?: string\n  susFlag?: boolean\n  priceInfo?: PriceInfo\n  name?: string\n  tokenId?: string\n  asset_contract: {\n    address?: string\n    name?: string\n    description?: string\n    image_url?: string\n    payout_address?: string\n    tokenType?: NftStandard\n  }\n  collection?: GenieCollection\n  collectionIsVerified?: boolean\n  lastPrice?: number\n  floorPrice?: number\n  basisPoints?: number\n  listing_date?: string\n  date_acquired?: string\n  sellOrders?: SellOrder[]\n  floor_sell_order_price?: number\n  // Used for creating new listings\n  expirationTime?: number\n  marketAgnosticPrice?: number\n  newListings?: Listing[]\n  marketplaces?: ListingMarket[]\n  listingWarnings?: ListingWarning[]\n}\n\nexport interface WalletCollection {\n  address: string\n  name: string\n  image: string\n  floorPrice: number\n  count: number\n}\n\nexport enum ListingStatus {\n  APPROVED = 'Approved',\n  CONTINUE = 'Continue',\n  DEFINED = 'Defined',\n  FAILED = 'Failed',\n  PAUSED = 'Paused',\n  PENDING = 'Pending',\n  REJECTED = 'Rejected',\n  SIGNING = 'Signing',\n}\n\nexport interface AssetRow {\n  images: (string | undefined)[]\n  name?: string\n  status: ListingStatus\n  callback?: () => Promise<void>\n}\n\nexport interface ListingRow extends AssetRow {\n  asset: WalletAsset\n  marketplace: ListingMarket\n  price?: number\n}\n\nexport interface CollectionRow extends AssetRow {\n  collectionAddress?: string\n  marketplace: ListingMarket\n}\n\n// Creating this as an enum and not boolean as we will likely have a success screen state to show\nexport enum ProfilePageStateType {\n  VIEWING,\n  LISTING,\n}\n\nexport enum ListingResponse {\n  TRY_AGAIN,\n  SUCCESS,\n}\n"],"mappings":"AAoFA,WAAYA,aAAa;AASxB,WATWA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;EAAbA,aAAa;AAAA,GAAbA,aAAa,KAAbA,aAAa;AA6BzB;AACA,WAAYC,oBAAoB;AAG/B,WAHWA,oBAAoB;EAApBA,oBAAoB,CAApBA,oBAAoB;EAApBA,oBAAoB,CAApBA,oBAAoB;AAAA,GAApBA,oBAAoB,KAApBA,oBAAoB;AAKhC,WAAYC,eAAe;AAG1B,WAHWA,eAAe;EAAfA,eAAe,CAAfA,eAAe;EAAfA,eAAe,CAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe"},"metadata":{},"sourceType":"module"}