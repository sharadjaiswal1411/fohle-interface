{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { SupportedChainId as ChainId } from 'constants/chains';\nimport { DAI, USDC, USDT } from 'constants/index';\nimport { CHAIN_INFO as NETWORKS_INFO } from 'constants/chainInfo';\nimport { STABLE_COINS_ADDRESS, WRAPPED_NATIVE_CURRENCY as WETH } from 'constants/tokens';\nimport { useWeb3React } from '@web3-react/core';\nconst configurationData = {\n  supported_resolutions: ['1', '3', '5', '15', '30', '1H', '2H', '4H', '1D', '1W', '1M']\n};\nconst getNetworkString = chainId => {\n  switch (chainId) {\n    case ChainId.MAINNET:\n      return 'chain-ethereum';\n    case ChainId.POLYGON:\n      return 'chain-polygon';\n    case ChainId.ARBITRUM_ONE:\n      return 'chain-arbitrum';\n    case ChainId.OPTIMISM:\n      return 'chain-optimism';\n    default:\n      return '';\n  }\n};\nconst DEXTOOLS_API = 'https://pancake-subgraph-proxy.kyberswap.com/dextools';\nconst monthTs = 2592000000;\nconst weekTs = 604800000;\nconst dayTs = 86400000;\n// Hard code token address to specific pair address to use in dextool api.\nconst TOKEN_PAIRS_ADDRESS_MAPPING = {\n  '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9': '0xd75ea151a61d06868e31f8988d28dfe5e9df57b4',\n  '0x6b175474e89094c44da98b954eedeac495271d0f': '0x74c99f3f5331676f6aec2756e1f39b4fc029a83e',\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48': '0x74c99f3f5331676f6aec2756e1f39b4fc029a83e',\n  '0x1c954e8fe737f99f68fa1ccda3e51ebdb291948c': 'nodata',\n  '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063': '0xa374094527e1673a86de625aa59517c5de346d32',\n  '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3': '0xd99c7f6c65857ac913a8f880a4cb84032ab2fc5b',\n  '0xd586e7f844cea2f87f50152665bcbc2c279d8d70': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0xc7198437980c041c805a1edcba50c1ce5db95118': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0x19860ccb0a68fd4213ab9d8266f7bbf05a8dde98': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0x049d68029688eabf473097a2fc38ef61633a3c7a': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0x41e3df7f716ab5af28c1497b354d79342923196a': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0xf2001b145b43032aaf5ee2884e456ccd805f677d': '0xa68466208f1a3eb21650320d2520ee8eba5ba623',\n  '0x66e428c3f67a68878562e79a0234c1f83c208770': '0xa68466208f1a3eb21650320d2520ee8eba5ba623',\n  '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1': '0xc31e54c7a869b9fcbecc14363cf510d1c41fa443',\n  '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9': '0xc31e54c7a869b9fcbecc14363cf510d1c41fa443',\n  '0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab': '0x0f0fc5a5029e3d155708356b422d22cc29f8b3d4',\n  '0xd501281565bf7789224523144fe5d98e8b28f267': '0x64ed9711667c9e8923bee32260a55a9b8dbc99d3',\n  '0x63a72806098Bd3D9520cC43356dD78afe5D386D9': '0x5944f135e4f1e3fa2e5550d4b5170783868cc4fe',\n  '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d': '0xd99c7f6c65857ac913a8f880a4cb84032ab2fc5b',\n  '0xdac17f958d2ee523a2206206994597c13d831ec7': '0x4e68ccd3e89f51c3074ca5072bbac773960dfa36',\n  // BNB_USD\n  '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619': '0xce1923d2242bba540f1d56c8e23b1fbeae2596dc',\n  // ETH_USD on polygon\n  '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8': '0x905dfcd5649217c42684f23958568e533c711aa3',\n  // ETH_USD Arbitrum\n  '0x7f5c764cbc14f9669b88837ca1490cca17c31607': '0x1a981daa7967c66c3356ad044979bc82e4a478b9',\n  // ETH_USD Optimism\n  '0xe9e7cea3dedca5984780bafc599bd69add087d56': '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16',\n  // BNB_BUSD\n  '0x853ea32391aaa14c112c645fd20ba389ab25c5e0': '0x5d79a43e6b9d8e3ecca26f91afe34634248773c8',\n  // USX on AVAX\n  '0x261c94f2d3cccae76f86f6c8f2c93785dd6ce022': 'nodata',\n  // ATH on BSC\n  '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58': '0xc858a329bf053be78d6239c4a4343b8fbd21472b' // USDT on Optimism\n};\n\nconst LOCALSTORAGE_CHECKED_PAIRS = 'proChartCheckedPairs';\nconst fetcherDextools = url => {\n  return fetch(`${DEXTOOLS_API}/${url}`).then(res => res.json()).catch(error => console.log(error));\n};\nexport const searchTokenPair = (address, chainId) => {\n  if (TOKEN_PAIRS_ADDRESS_MAPPING[address.toLowerCase()]) {\n    return new Promise((resolve, reject) => {\n      resolve([{\n        id: TOKEN_PAIRS_ADDRESS_MAPPING[address.toLowerCase()]\n      }]);\n    });\n  }\n  return fetcherDextools(`${getNetworkString(chainId)}/api/pair/search?s=${address}`);\n};\nexport const getHistoryCandleStatus = (pairAddress, chainId) => {\n  return fetcherDextools(`${getNetworkString(chainId)}/api/Uniswap/1/history-candle-status?pair=${pairAddress}`);\n};\nexport const getCandlesApi = function (chainId, pairAddress, apiVersion, ts) {\n  let span = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 'month';\n  let res = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : '15m';\n  let sym = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 'eth';\n  return fetcherDextools(`${getNetworkString(chainId)}/api/Pancakeswap/history/candles?sym=${sym}&span=${span}&pair=${pairAddress}&ts=${ts}&v=${apiVersion}${res && '&res=' + res}`);\n};\nconst isNativeToken = (chainId, currency) => {\n  var _WETH$chainId, _WETH$chainId$address;\n  if (!currency || !chainId) {\n    return false;\n  }\n  return currency.isNative || ((_WETH$chainId = WETH[chainId]) === null || _WETH$chainId === void 0 ? void 0 : (_WETH$chainId$address = _WETH$chainId.address) === null || _WETH$chainId$address === void 0 ? void 0 : _WETH$chainId$address.toLowerCase()) === currency.address.toLowerCase();\n};\nconst isUSDToken = (chainId, currency) => {\n  if (isNativeToken(chainId, currency) || !chainId || (currency === null || currency === void 0 ? void 0 : currency.isNative)) {\n    return false;\n  }\n  const usdTokenAddresses = [USDT[chainId].address.toLowerCase(), USDC[chainId].address.toLowerCase(), DAI[chainId].address.toLowerCase(), '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n  //BUSD\n  '0xcd7509b76281223f5b7d3ad5d47f8d7aa5c2b9bf',\n  //USDV Velas\n  '0xdb28719f7f938507dbfe4f0eae55668903d34a15',\n  //USDT_t BTTC\n  '0xe887512ab8bc60bcc9224e1c3b5be68e26048b8b',\n  //USDT_e BTTC\n  '0x19860ccb0a68fd4213ab9d8266f7bbf05a8dde98',\n  //BUSD.e\n  '0x4fbf0429599460d327bd5f55625e30e4fc066095',\n  //TDS on AVAX\n  ...STABLE_COINS_ADDRESS[chainId].map(a => a.toLowerCase())];\n  if ((currency === null || currency === void 0 ? void 0 : currency.address) && usdTokenAddresses.includes(currency.address.toLowerCase())) {\n    return true;\n  }\n  return false;\n};\nconst updateLocalstorageCheckedPair = (key, res) => {\n  const cPstr = localStorage.getItem(LOCALSTORAGE_CHECKED_PAIRS);\n  const checkedPairs = cPstr ? JSON.parse(cPstr) : {};\n  checkedPairs[key] = {\n    ...res,\n    time: new Date().getTime()\n  };\n  localStorage.setItem(LOCALSTORAGE_CHECKED_PAIRS, JSON.stringify(checkedPairs));\n};\nexport const checkPairHasDextoolsData = async (currencies, chainId) => {\n  const [currencyA, currencyB] = Object.values(currencies);\n  const res = {\n    ver: 0,\n    pairAddress: ''\n  };\n  if (!currencyA || !currencyB) return Promise.resolve(res);\n  if (isNativeToken(chainId, currencyA) && isNativeToken(chainId, currencyB) || isUSDToken(chainId, currencyA) && isUSDToken(chainId, currencyB)) {\n    return Promise.resolve(res);\n  }\n  const cPstr = localStorage.getItem(LOCALSTORAGE_CHECKED_PAIRS);\n  const checkedPairs = cPstr ? JSON.parse(cPstr) : {};\n  const symbolA = currencyA.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : currencyA.symbol;\n  const symbolB = currencyB.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : currencyB.symbol;\n  const key = [symbolA, symbolB, chainId].sort().join('');\n  const checkedPair = checkedPairs[key];\n  if (checkedPair && checkedPair.ver && checkedPair.pairAddress && checkedPair.time > new Date().getTime() - dayTs // Cache expire after 1 day\n  ) {\n    return Promise.resolve({\n      ver: checkedPair.ver,\n      pairAddress: checkedPair.pairAddress\n    });\n  }\n  /// ETH pair\n  if (isNativeToken(chainId, currencyA) || isNativeToken(chainId, currencyB)) {\n    const token = isNativeToken(chainId, currencyA) ? currencyB : currencyA;\n    if (token === null || token === void 0 ? void 0 : token.address) {\n      const data1 = await searchTokenPair(token.address, chainId);\n      if (data1.length > 0 && data1[0].id) {\n        var _data$candles;\n        const ver = (await getHistoryCandleStatus(data1[0].id, chainId)) || 0;\n        const ts = Math.floor(new Date().getTime() / monthTs) * monthTs;\n        const {\n          data\n        } = await getCandlesApi(chainId, data1[0].id, ver, ts, 'month');\n        if (data === null || data === void 0 ? void 0 : (_data$candles = data.candles) === null || _data$candles === void 0 ? void 0 : _data$candles.length) {\n          res.ver = ver;\n          res.pairAddress = data1[0].id;\n          updateLocalstorageCheckedPair(key, res);\n          return Promise.resolve(res);\n        }\n      }\n    }\n  } else {\n    /// USD pair\n    if (isUSDToken(chainId, currencyA) || isUSDToken(chainId, currencyB)) {\n      const token = isUSDToken(chainId, currencyA) ? currencyB : currencyA;\n      if (token === null || token === void 0 ? void 0 : token.address) {\n        const data1 = await searchTokenPair(token.address, chainId);\n        if (data1.length > 0 && data1[0].id) {\n          const ver = await getHistoryCandleStatus(data1[0].id, chainId);\n          if (ver) {\n            var _data$candles2;\n            const ts = Math.floor(new Date().getTime() / monthTs) * monthTs;\n            const {\n              data\n            } = await getCandlesApi(chainId, data1[0].id, ver, ts, 'month', '15m', 'usd');\n            if (data === null || data === void 0 ? void 0 : (_data$candles2 = data.candles) === null || _data$candles2 === void 0 ? void 0 : _data$candles2.length) {\n              res.ver = ver;\n              res.pairAddress = data1[0].id;\n              updateLocalstorageCheckedPair(key, res);\n              return Promise.resolve(res);\n            }\n          }\n        }\n      }\n    }\n  }\n  updateLocalstorageCheckedPair(key, res);\n  return Promise.resolve(res);\n};\nexport const useDatafeed = (currencies, pairAddress, apiVersion) => {\n  _s();\n  var _currencies$, _currencies$2;\n  const {\n    chainId\n  } = useWeb3React();\n  const isATokenEther = isNativeToken(chainId, currencies[0]);\n  const isBTokenEther = isNativeToken(chainId, currencies[1]);\n  const isTokenUSD = isUSDToken(chainId, currencies[0]) && ((_currencies$ = currencies[1]) === null || _currencies$ === void 0 ? void 0 : _currencies$.isToken) || isUSDToken(chainId, currencies[1]) && ((_currencies$2 = currencies[0]) === null || _currencies$2 === void 0 ? void 0 : _currencies$2.isToken);\n  const isEtherUSD = isUSDToken(chainId, currencies[0]) && isBTokenEther || isUSDToken(chainId, currencies[1]) && isATokenEther;\n  const sym = isTokenUSD || isEtherUSD ? 'usd' : 'eth';\n  const [data, setData] = useState([]);\n  const [oldestTs, setOldestTs] = useState(0);\n  const stateRef = useRef({\n    data,\n    oldestTs\n  });\n  const fetchingRef = useRef(false);\n  const intervalRef = useRef();\n  const isReverse = !isEtherUSD && (isATokenEther || isUSDToken(chainId, currencies[0])) || isEtherUSD && isBTokenEther;\n  useEffect(() => {\n    stateRef.current = {\n      data,\n      oldestTs\n    };\n  }, [data, oldestTs]);\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    setData([]);\n  }, [currencies]);\n  const getCandles = useCallback(async function (ts) {\n    let span = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'month';\n    let res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '15m';\n    const response = await getCandlesApi(chainId, pairAddress, apiVersion, ts, span, res, sym);\n    return response === null || response === void 0 ? void 0 : response.data;\n  }, [chainId, pairAddress, apiVersion, sym]);\n  return useMemo(() => {\n    return {\n      onReady: callback => {\n        setTimeout(() => callback(configurationData));\n      },\n      resolveSymbol: async (symbolName, onSymbolResolvedCallback, onResolveErrorCallback) => {\n        try {\n          var _currencies$3, _currencies$4, _currencies$5, _currencies$6;\n          const label1 = ((_currencies$3 = currencies[0]) === null || _currencies$3 === void 0 ? void 0 : _currencies$3.isNative) ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : (_currencies$4 = currencies[0]) === null || _currencies$4 === void 0 ? void 0 : _currencies$4.symbol;\n          const label2 = ((_currencies$5 = currencies[1]) === null || _currencies$5 === void 0 ? void 0 : _currencies$5.isNative) ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : (_currencies$6 = currencies[1]) === null || _currencies$6 === void 0 ? void 0 : _currencies$6.symbol;\n          const label = `${label1}/${label2}`;\n          const ts = Math.floor(new Date().getTime() / monthTs) * monthTs;\n          const {\n            candles\n          } = await getCandles(ts, 'month');\n          const symbolInfo = {\n            ticker: label,\n            name: label,\n            full_name: label,\n            listed_exchange: '',\n            format: 'price',\n            description: label,\n            type: 'crypto',\n            session: '24x7',\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,\n            exchange: '',\n            minmov: 1,\n            pricescale: candles.length > 0 ? Math.pow(10, Math.ceil(Math.log10(isReverse ? candles[0].open : 1 / candles[0].open)) + 5) : 10000,\n            has_intraday: true,\n            has_empty_bars: true,\n            has_weekly_and_monthly: true,\n            has_daily: true,\n            supported_resolutions: configurationData.supported_resolutions,\n            data_status: 'streaming'\n          };\n          onSymbolResolvedCallback(symbolInfo);\n        } catch (error) {\n          console.log(error);\n        }\n      },\n      getBars: async (symbolInfo, resolution, periodParams, onHistoryCallback, onErrorCallback) => {\n        if (fetchingRef.current) return;\n        try {\n          var _candlesTemp$;\n          const from = periodParams.from * 1000;\n          const to = periodParams.to * 1000;\n          let candlesTemp = stateRef.current.data;\n          let noData = false;\n          const minTime = ((_candlesTemp$ = candlesTemp[0]) === null || _candlesTemp$ === void 0 ? void 0 : _candlesTemp$.time) || new Date().getTime();\n          if (minTime > from) {\n            var _datas$;\n            const lastTimePoint = Math.floor(minTime / monthTs) + (periodParams.firstDataRequest ? 1 : 0);\n            const fromTimePoint = Math.floor(from / monthTs);\n            fetchingRef.current = true;\n            const promisesArray = [];\n            for (let i = lastTimePoint - 1; i >= fromTimePoint; i--) {\n              const ts = i * monthTs;\n              promisesArray.push(getCandles(ts));\n              if (ts < stateRef.current.oldestTs) {\n                noData = true;\n                break;\n              }\n            }\n            const datas = await Promise.all(promisesArray);\n            setOldestTs(parseFloat((_datas$ = datas[0]) === null || _datas$ === void 0 ? void 0 : _datas$.oldestTs));\n            const candles = datas.map(data => {\n              return data.candles;\n            });\n            candlesTemp = [...(candles.length ? candles.reduce((p, c) => p.concat(c)) : []), ...candlesTemp].sort((a, b) => a.time - b.time);\n            setData(candlesTemp);\n            fetchingRef.current = false;\n          }\n          let formatedCandles = candlesTemp.filter(c => c.time > from && c.time < to).map((c, i, arr) => {\n            if (arr[i + 1] && c.close !== arr[i + 1].open) {\n              c.close = arr[i + 1].open;\n              if (c.close > c.high) {\n                c.high = c.close;\n              }\n              if (c.close < c.low) {\n                c.low = c.close;\n              }\n            }\n            return c;\n          });\n          if (isReverse) {\n            formatedCandles = formatedCandles.map(c => {\n              return {\n                ...c,\n                open: 1 / c.open,\n                close: 1 / c.close,\n                high: 1 / c.low,\n                low: 1 / c.high\n              };\n            });\n          }\n          if (resolution === '1D' || resolution === '1W' || resolution === '1M') {\n            const dayCandles = {};\n            let timeTs = 0;\n            switch (resolution) {\n              case '1D':\n                timeTs = dayTs;\n                break;\n              case '1W':\n                timeTs = weekTs;\n                break;\n              case '1M':\n                timeTs = monthTs;\n                break;\n              default:\n                timeTs = dayTs;\n            }\n            formatedCandles.forEach(c => {\n              const ts = Math.floor(c.time / timeTs);\n              if (!dayCandles[ts]) {\n                dayCandles[ts] = {\n                  ...c,\n                  time: ts * timeTs\n                };\n              } else {\n                dayCandles[ts].volume = (c.volume || 0) + (dayCandles[ts].volume || 0);\n                dayCandles[ts].close = c.close;\n                if (dayCandles[ts].high < c.high) {\n                  dayCandles[ts].high = c.high;\n                }\n                if (dayCandles[ts].low > c.low) {\n                  dayCandles[ts].low = c.low;\n                }\n              }\n            });\n            onHistoryCallback(Object.values(dayCandles), {\n              noData: noData\n            });\n          } else {\n            onHistoryCallback(formatedCandles, {\n              noData: noData\n            });\n          }\n        } catch (error) {\n          console.log('[getBars]: Get error', error);\n          onErrorCallback(error);\n        }\n      },\n      searchSymbols: () => {\n        // TODO(viet-nv): check no empty function rule\n      },\n      subscribeBars: (symbolInfo, resolution, onTick, listenerGuid, onResetCacheNeededCallback) => {\n        if (intervalRef.current) clearInterval(intervalRef.current);\n        const getLivePrice = async () => {\n          const ts = resolution === '1M' ? Math.floor(new Date().getTime() / monthTs) * monthTs : Math.floor(new Date().getTime() / weekTs) * weekTs;\n          const data = await getCandles(ts, resolution === '1M' ? 'month' : 'week', '15m');\n          if (!data || !data.candles) return;\n          const {\n            candles\n          } = data;\n          let lastCandle = {};\n          let timeTs = 0;\n          if (resolution === '1D' || resolution === '1W' || resolution === '1M') {\n            switch (resolution) {\n              case '1D':\n                timeTs = Math.floor(new Date().getTime() / dayTs) * dayTs;\n                break;\n              case '1W':\n                timeTs = Math.floor(new Date().getTime() / weekTs) * weekTs;\n                break;\n              case '1M':\n                timeTs = timeTs = Math.floor(new Date().getTime() / monthTs) * monthTs;\n                break;\n              default:\n                timeTs = Math.floor(new Date().getTime() / dayTs) * dayTs;\n            }\n            const closestTs = candles.map(c => c.time).reduce((prev, curr) => {\n              return Math.abs(curr - timeTs) < Math.abs(prev - timeTs) ? curr : prev;\n            });\n            const inRangeCandles = candles.filter(c => c.time >= closestTs);\n            if (inRangeCandles.length > 0) {\n              lastCandle.time = timeTs;\n              lastCandle.open = inRangeCandles[0].open;\n              lastCandle.close = inRangeCandles[inRangeCandles.length - 1].close;\n              lastCandle.high = Math.max(...inRangeCandles.map(c => c.high));\n              lastCandle.low = Math.min(...inRangeCandles.map(c => c.low));\n              lastCandle.volume = inRangeCandles.map(c => c.volume).reduce((prev, c) => {\n                return prev + c;\n              });\n            }\n          } else {\n            lastCandle = candles[candles.length - 1];\n          }\n          if (!lastCandle) return;\n          if (isReverse) {\n            lastCandle = {\n              ...lastCandle,\n              open: 1 / lastCandle.open,\n              close: 1 / lastCandle.close,\n              high: 1 / lastCandle.low,\n              low: 1 / lastCandle.high\n            };\n          }\n          onTick(lastCandle);\n        };\n        intervalRef.current = setInterval(getLivePrice, 30000);\n        getLivePrice();\n      },\n      unsubscribeBars: () => {\n        // TODO(viet-nv): check no empty function rule\n      }\n    };\n  }, [chainId, getCandles, isReverse, currencies]);\n};\n_s(useDatafeed, \"1se20FXmFoBmQ1ALNf8fT7xuhCQ=\", false, function () {\n  return [useWeb3React];\n});","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useState","SupportedChainId","ChainId","DAI","USDC","USDT","CHAIN_INFO","NETWORKS_INFO","STABLE_COINS_ADDRESS","WRAPPED_NATIVE_CURRENCY","WETH","useWeb3React","configurationData","supported_resolutions","getNetworkString","chainId","MAINNET","POLYGON","ARBITRUM_ONE","OPTIMISM","DEXTOOLS_API","monthTs","weekTs","dayTs","TOKEN_PAIRS_ADDRESS_MAPPING","LOCALSTORAGE_CHECKED_PAIRS","fetcherDextools","url","fetch","then","res","json","catch","error","console","log","searchTokenPair","address","toLowerCase","Promise","resolve","reject","id","getHistoryCandleStatus","pairAddress","getCandlesApi","apiVersion","ts","span","sym","isNativeToken","currency","isNative","isUSDToken","usdTokenAddresses","map","a","includes","updateLocalstorageCheckedPair","key","cPstr","localStorage","getItem","checkedPairs","JSON","parse","time","Date","getTime","setItem","stringify","checkPairHasDextoolsData","currencies","currencyA","currencyB","Object","values","ver","symbolA","nativeCurrency","name","symbol","symbolB","sort","join","checkedPair","token","data1","length","Math","floor","data","candles","useDatafeed","isATokenEther","isBTokenEther","isTokenUSD","isToken","isEtherUSD","setData","oldestTs","setOldestTs","stateRef","fetchingRef","intervalRef","isReverse","current","clearInterval","getCandles","response","onReady","callback","setTimeout","resolveSymbol","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","label1","label2","label","symbolInfo","ticker","full_name","listed_exchange","format","description","type","session","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","exchange","minmov","pricescale","pow","ceil","log10","open","has_intraday","has_empty_bars","has_weekly_and_monthly","has_daily","data_status","getBars","resolution","periodParams","onHistoryCallback","onErrorCallback","from","to","candlesTemp","noData","minTime","lastTimePoint","firstDataRequest","fromTimePoint","promisesArray","i","push","datas","all","parseFloat","reduce","p","c","concat","b","formatedCandles","filter","arr","close","high","low","dayCandles","timeTs","forEach","volume","searchSymbols","subscribeBars","onTick","listenerGuid","onResetCacheNeededCallback","getLivePrice","lastCandle","closestTs","prev","curr","abs","inRangeCandles","max","min","setInterval","unsubscribeBars"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/TradingViewChart/datafeed.tsx"],"sourcesContent":["import {Currency,Token } from '@uniswap/sdk-core'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport { SupportedChainId as  ChainId } from 'constants/chains'\nimport { DAI, USDC, USDT } from 'constants/index'\nimport { CHAIN_INFO as NETWORKS_INFO } from 'constants/chainInfo'\nimport { STABLE_COINS_ADDRESS, WRAPPED_NATIVE_CURRENCY as WETH } from 'constants/tokens'\nimport { useWeb3React } from '@web3-react/core'\nimport { Field } from 'state/swap/actions'\n\n\n\n\nimport {\n  Bar,\n  ErrorCallback,\n  HistoryCallback,\n  LibrarySymbolInfo,\n  PeriodParams,\n  ResolutionString,\n  ResolveCallback,\n  SubscribeBarsCallback,\n  Timezone,\n} from './charting_library'\n\nconst configurationData = {\n  supported_resolutions: ['1', '3', '5', '15', '30', '1H', '2H', '4H', '1D', '1W', '1M'],\n}\n\nconst getNetworkString = (chainId: ChainId | undefined) => {\n  switch (chainId) {\n    case ChainId.MAINNET:\n      return 'chain-ethereum'\n    case ChainId.POLYGON:\n      return 'chain-polygon'\n    case ChainId.ARBITRUM_ONE:\n      return 'chain-arbitrum'\n    case ChainId.OPTIMISM:\n      return 'chain-optimism'\n    default:\n      return ''\n  }\n}\n\nconst DEXTOOLS_API = 'https://pancake-subgraph-proxy.kyberswap.com/dextools'\nconst monthTs = 2592000000\nconst weekTs = 604800000\nconst dayTs = 86400000\n// Hard code token address to specific pair address to use in dextool api.\nconst TOKEN_PAIRS_ADDRESS_MAPPING: {\n  [key: string]: string\n} = {\n  '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9': '0xd75ea151a61d06868e31f8988d28dfe5e9df57b4',\n  '0x6b175474e89094c44da98b954eedeac495271d0f': '0x74c99f3f5331676f6aec2756e1f39b4fc029a83e',\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48': '0x74c99f3f5331676f6aec2756e1f39b4fc029a83e',\n  '0x1c954e8fe737f99f68fa1ccda3e51ebdb291948c': 'nodata',\n  '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063': '0xa374094527e1673a86de625aa59517c5de346d32',\n  '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3': '0xd99c7f6c65857ac913a8f880a4cb84032ab2fc5b',\n  '0xd586e7f844cea2f87f50152665bcbc2c279d8d70': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0xc7198437980c041c805a1edcba50c1ce5db95118': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0x19860ccb0a68fd4213ab9d8266f7bbf05a8dde98': '0xa389f9430876455c36478deea9769b7ca4e3ddb1',\n  '0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0x049d68029688eabf473097a2fc38ef61633a3c7a': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0x41e3df7f716ab5af28c1497b354d79342923196a': '0xadc8ad9d3d62b1af72e5ce0ec767465f313513dd',\n  '0xf2001b145b43032aaf5ee2884e456ccd805f677d': '0xa68466208f1a3eb21650320d2520ee8eba5ba623',\n  '0x66e428c3f67a68878562e79a0234c1f83c208770': '0xa68466208f1a3eb21650320d2520ee8eba5ba623',\n  '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1': '0xc31e54c7a869b9fcbecc14363cf510d1c41fa443',\n  '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9': '0xc31e54c7a869b9fcbecc14363cf510d1c41fa443',\n  '0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab': '0x0f0fc5a5029e3d155708356b422d22cc29f8b3d4',\n  '0xd501281565bf7789224523144fe5d98e8b28f267': '0x64ed9711667c9e8923bee32260a55a9b8dbc99d3',\n  '0x63a72806098Bd3D9520cC43356dD78afe5D386D9': '0x5944f135e4f1e3fa2e5550d4b5170783868cc4fe',\n  '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d': '0xd99c7f6c65857ac913a8f880a4cb84032ab2fc5b',\n  '0xdac17f958d2ee523a2206206994597c13d831ec7': '0x4e68ccd3e89f51c3074ca5072bbac773960dfa36', // BNB_USD\n  '0x7ceb23fd6bc0add59e62ac25578270cff1b9f619': '0xce1923d2242bba540f1d56c8e23b1fbeae2596dc', // ETH_USD on polygon\n  '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8': '0x905dfcd5649217c42684f23958568e533c711aa3', // ETH_USD Arbitrum\n  '0x7f5c764cbc14f9669b88837ca1490cca17c31607': '0x1a981daa7967c66c3356ad044979bc82e4a478b9', // ETH_USD Optimism\n  '0xe9e7cea3dedca5984780bafc599bd69add087d56': '0x58f876857a02d6762e0101bb5c46a8c1ed44dc16', // BNB_BUSD\n  '0x853ea32391aaa14c112c645fd20ba389ab25c5e0': '0x5d79a43e6b9d8e3ecca26f91afe34634248773c8', // USX on AVAX\n  '0x261c94f2d3cccae76f86f6c8f2c93785dd6ce022': 'nodata', // ATH on BSC\n  '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58': '0xc858a329bf053be78d6239c4a4343b8fbd21472b', // USDT on Optimism\n}\nconst LOCALSTORAGE_CHECKED_PAIRS = 'proChartCheckedPairs'\n\nconst fetcherDextools = (url: string) => {\n  return fetch(`${DEXTOOLS_API}/${url}`)\n    .then(res => res.json())\n    .catch(error => console.log(error))\n}\n\nexport const searchTokenPair = (address: string, chainId: ChainId | undefined) => {\n  if (TOKEN_PAIRS_ADDRESS_MAPPING[address.toLowerCase()]) {\n    return new Promise((resolve, reject) => {\n      resolve([{ id: TOKEN_PAIRS_ADDRESS_MAPPING[address.toLowerCase()] }])\n    })\n  }\n  return fetcherDextools(`${getNetworkString(chainId)}/api/pair/search?s=${address}`)\n}\nexport const getHistoryCandleStatus = (pairAddress: string, chainId: ChainId | undefined) => {\n  return fetcherDextools(`${getNetworkString(chainId)}/api/Uniswap/1/history-candle-status?pair=${pairAddress}`)\n}\nexport const getCandlesApi = (\n  chainId: ChainId | undefined,\n  pairAddress: string,\n  apiVersion: string,\n  ts: number,\n  span = 'month',\n  res = '15m',\n  sym = 'eth',\n) => {\n  return fetcherDextools(\n    `${getNetworkString(\n      chainId,\n    )}/api/Pancakeswap/history/candles?sym=${sym}&span=${span}&pair=${pairAddress}&ts=${ts}&v=${apiVersion}${\n      res && '&res=' + res\n    }`,\n  )\n}\n\nconst isNativeToken = (chainId: ChainId | undefined, currency: Currency | undefined) => {\n  if (!currency || !chainId) {\n    return false\n  }\n  return currency.isNative || WETH[chainId]?.address?.toLowerCase() === currency.address.toLowerCase()\n}\n\nconst isUSDToken = (chainId: ChainId | undefined, currency: Currency | undefined) => {\n  if (isNativeToken(chainId, currency) || !chainId || currency?.isNative) {\n    return false\n  }\n  const usdTokenAddresses = [\n    USDT[chainId].address.toLowerCase(),\n    USDC[chainId].address.toLowerCase(),\n    DAI[chainId].address.toLowerCase(),\n    '0xe9e7cea3dedca5984780bafc599bd69add087d56', //BUSD\n    '0xcd7509b76281223f5b7d3ad5d47f8d7aa5c2b9bf', //USDV Velas\n    '0xdb28719f7f938507dbfe4f0eae55668903d34a15', //USDT_t BTTC\n    '0xe887512ab8bc60bcc9224e1c3b5be68e26048b8b', //USDT_e BTTC\n    '0x19860ccb0a68fd4213ab9d8266f7bbf05a8dde98', //BUSD.e\n    '0x4fbf0429599460d327bd5f55625e30e4fc066095', //TDS on AVAX\n    ...STABLE_COINS_ADDRESS[chainId].map(a => a.toLowerCase()),\n  ]\n\n  if (currency?.address && usdTokenAddresses.includes(currency.address.toLowerCase())) {\n    return true\n  }\n  return false\n}\n\nconst updateLocalstorageCheckedPair = (key: string, res: { ver: number; pairAddress: string }) => {\n  const cPstr = localStorage.getItem(LOCALSTORAGE_CHECKED_PAIRS)\n  const checkedPairs: { [key: string]: { ver: number; pairAddress: string; time: number } } = cPstr\n    ? JSON.parse(cPstr)\n    : {}\n  checkedPairs[key] = { ...res, time: new Date().getTime() }\n  localStorage.setItem(LOCALSTORAGE_CHECKED_PAIRS, JSON.stringify(checkedPairs))\n}\n\nexport const checkPairHasDextoolsData = async (\n  currencies: { [field in Field]?: Currency },\n  chainId: ChainId | undefined,\n): Promise<{ ver: number; pairAddress: string }> => {\n  const [currencyA, currencyB] = Object.values(currencies)\n  const res = { ver: 0, pairAddress: '' }\n  if (!currencyA || !currencyB) return Promise.resolve(res)\n  if (\n    (isNativeToken(chainId, currencyA) && isNativeToken(chainId, currencyB)) ||\n    (isUSDToken(chainId, currencyA) && isUSDToken(chainId, currencyB))\n  ) {\n    return Promise.resolve(res)\n  }\n  const cPstr = localStorage.getItem(LOCALSTORAGE_CHECKED_PAIRS)\n  const checkedPairs: { [key: string]: { ver: number; pairAddress: string; time: number } } = cPstr\n    ? JSON.parse(cPstr)\n    : {}\n  const symbolA = currencyA.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : currencyA.symbol\n  const symbolB = currencyB.isNative ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name : currencyB.symbol\n  const key: string = [symbolA, symbolB, chainId].sort().join('')\n  const checkedPair = checkedPairs[key]\n  if (\n    checkedPair &&\n    checkedPair.ver &&\n    checkedPair.pairAddress &&\n    checkedPair.time > new Date().getTime() - dayTs // Cache expire after 1 day\n  ) {\n    return Promise.resolve({ ver: checkedPair.ver, pairAddress: checkedPair.pairAddress })\n  }\n  /// ETH pair\n  if (isNativeToken(chainId, currencyA) || isNativeToken(chainId, currencyB)) {\n    const token = (isNativeToken(chainId, currencyA) ? currencyB : currencyA) as Token\n    if (token?.address) {\n      const data1: { id: string }[] = await searchTokenPair(token.address, chainId)\n      if (data1.length > 0 && data1[0].id) {\n        const ver = (await getHistoryCandleStatus(data1[0].id, chainId)) || 0\n\n        const ts = Math.floor(new Date().getTime() / monthTs) * monthTs\n        const { data } = await getCandlesApi(chainId, data1[0].id, ver, ts, 'month')\n        if (data?.candles?.length) {\n          res.ver = ver\n          res.pairAddress = data1[0].id\n          updateLocalstorageCheckedPair(key, res)\n          return Promise.resolve(res)\n        }\n      }\n    }\n  } else {\n    /// USD pair\n    if (isUSDToken(chainId, currencyA) || isUSDToken(chainId, currencyB)) {\n      const token = (isUSDToken(chainId, currencyA) ? currencyB : currencyA) as Token\n      if (token?.address) {\n        const data1 = await searchTokenPair(token.address, chainId)\n        if (data1.length > 0 && data1[0].id) {\n          const ver = await getHistoryCandleStatus(data1[0].id, chainId)\n          if (ver) {\n            const ts = Math.floor(new Date().getTime() / monthTs) * monthTs\n            const { data } = await getCandlesApi(chainId, data1[0].id, ver, ts, 'month', '15m', 'usd')\n            if (data?.candles?.length) {\n              res.ver = ver\n              res.pairAddress = data1[0].id\n              updateLocalstorageCheckedPair(key, res)\n              return Promise.resolve(res)\n            }\n          }\n        }\n      }\n    }\n  }\n  updateLocalstorageCheckedPair(key, res)\n  return Promise.resolve(res)\n}\n\nexport const useDatafeed = (currencies: Array<Currency | undefined>, pairAddress: string, apiVersion: string) => {\n  const { chainId } = useWeb3React()\n  const isATokenEther = isNativeToken(chainId, currencies[0])\n  const isBTokenEther = isNativeToken(chainId, currencies[1])\n  const isTokenUSD =\n    (isUSDToken(chainId, currencies[0]) && currencies[1]?.isToken) ||\n    (isUSDToken(chainId, currencies[1]) && currencies[0]?.isToken)\n  const isEtherUSD =\n    (isUSDToken(chainId, currencies[0]) && isBTokenEther) || (isUSDToken(chainId, currencies[1]) && isATokenEther)\n  const sym = isTokenUSD || isEtherUSD ? 'usd' : 'eth'\n  const [data, setData] = useState<Bar[]>([])\n  const [oldestTs, setOldestTs] = useState(0)\n\n  const stateRef = useRef<{ data: Bar[]; oldestTs: number }>({ data, oldestTs })\n  const fetchingRef = useRef<boolean>(false)\n  const intervalRef = useRef<any>()\n\n  const isReverse =\n    (!isEtherUSD && (isATokenEther || isUSDToken(chainId, currencies[0]))) || (isEtherUSD && isBTokenEther)\n\n  useEffect(() => {\n    stateRef.current = { data, oldestTs }\n  }, [data, oldestTs])\n\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    setData([])\n  }, [currencies])\n\n  const getCandles = useCallback(\n    async (ts: number, span = 'month', res = '15m') => {\n      const response = await getCandlesApi(chainId, pairAddress, apiVersion, ts, span, res, sym)\n      return response?.data\n    },\n    [chainId, pairAddress, apiVersion, sym],\n  )\n\n  return useMemo(() => {\n    return {\n      onReady: (callback: any) => {\n        setTimeout(() => callback(configurationData))\n      },\n      resolveSymbol: async (\n        symbolName: string,\n        onSymbolResolvedCallback: ResolveCallback,\n        onResolveErrorCallback: ErrorCallback,\n      ) => {\n        try {\n          const label1 = currencies[0]?.isNative\n            ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name\n            : currencies[0]?.symbol\n          const label2 = currencies[1]?.isNative\n            ? NETWORKS_INFO[chainId || ChainId.MAINNET].nativeCurrency.name\n            : currencies[1]?.symbol\n\n          const label = `${label1}/${label2}`\n\n          const ts = Math.floor(new Date().getTime() / monthTs) * monthTs\n          const { candles } = await getCandles(ts, 'month')\n\n          const symbolInfo: LibrarySymbolInfo = {\n            ticker: label,\n            name: label,\n            full_name: label,\n            listed_exchange: '',\n            format: 'price',\n            description: label,\n            type: 'crypto',\n            session: '24x7',\n            timezone: Intl.DateTimeFormat().resolvedOptions().timeZone as Timezone,\n            exchange: '',\n            minmov: 1,\n            pricescale:\n              candles.length > 0\n                ? Math.pow(10, Math.ceil(Math.log10(isReverse ? candles[0].open : 1 / candles[0].open)) + 5)\n                : 10000,\n            has_intraday: true,\n            has_empty_bars: true,\n            has_weekly_and_monthly: true,\n            has_daily: true,\n            supported_resolutions: configurationData.supported_resolutions as ResolutionString[],\n            data_status: 'streaming',\n          }\n          onSymbolResolvedCallback(symbolInfo)\n        } catch (error) {\n          console.log(error)\n        }\n      },\n      getBars: async (\n        symbolInfo: LibrarySymbolInfo,\n        resolution: ResolutionString,\n        periodParams: PeriodParams,\n        onHistoryCallback: HistoryCallback,\n        onErrorCallback: ErrorCallback,\n      ) => {\n        if (fetchingRef.current) return\n        try {\n          const from = periodParams.from * 1000\n          const to = periodParams.to * 1000\n          let candlesTemp = stateRef.current.data\n          let noData = false\n          const minTime = candlesTemp[0]?.time || new Date().getTime()\n          if (minTime > from) {\n            const lastTimePoint = Math.floor(minTime / monthTs) + (periodParams.firstDataRequest ? 1 : 0)\n            const fromTimePoint = Math.floor(from / monthTs)\n\n            fetchingRef.current = true\n            const promisesArray = []\n            for (let i = lastTimePoint - 1; i >= fromTimePoint; i--) {\n              const ts = i * monthTs\n              promisesArray.push(getCandles(ts))\n              if (ts < stateRef.current.oldestTs) {\n                noData = true\n                break\n              }\n            }\n            const datas = await Promise.all(promisesArray)\n            setOldestTs(parseFloat(datas[0]?.oldestTs))\n            const candles = datas.map(data => {\n              return data.candles\n            })\n            candlesTemp = [...(candles.length ? candles.reduce((p, c) => p.concat(c)) : []), ...candlesTemp].sort(\n              (a, b) => a.time - b.time,\n            )\n            setData(candlesTemp)\n\n            fetchingRef.current = false\n          }\n          let formatedCandles = candlesTemp\n            .filter((c: Bar) => c.time > from && c.time < to)\n            .map((c: Bar, i: number, arr: Bar[]) => {\n              if (arr[i + 1] && c.close !== arr[i + 1].open) {\n                c.close = arr[i + 1].open\n                if (c.close > c.high) {\n                  c.high = c.close\n                }\n                if (c.close < c.low) {\n                  c.low = c.close\n                }\n              }\n              return c\n            })\n\n          if (isReverse) {\n            formatedCandles = formatedCandles.map((c: Bar) => {\n              return { ...c, open: 1 / c.open, close: 1 / c.close, high: 1 / c.low, low: 1 / c.high }\n            })\n          }\n          if (resolution === '1D' || resolution === '1W' || resolution === '1M') {\n            const dayCandles: { [key: number]: Bar } = {}\n            let timeTs = 0\n            switch (resolution) {\n              case '1D':\n                timeTs = dayTs\n                break\n              case '1W':\n                timeTs = weekTs\n                break\n              case '1M':\n                timeTs = monthTs\n                break\n              default:\n                timeTs = dayTs\n            }\n            formatedCandles.forEach((c: Bar) => {\n              const ts = Math.floor(c.time / timeTs)\n              if (!dayCandles[ts]) {\n                dayCandles[ts] = {\n                  ...c,\n                  time: ts * timeTs,\n                }\n              } else {\n                dayCandles[ts].volume = (c.volume || 0) + (dayCandles[ts].volume || 0)\n                dayCandles[ts].close = c.close\n                if (dayCandles[ts].high < c.high) {\n                  dayCandles[ts].high = c.high\n                }\n                if (dayCandles[ts].low > c.low) {\n                  dayCandles[ts].low = c.low\n                }\n              }\n            })\n            onHistoryCallback(Object.values(dayCandles), { noData: noData })\n          } else {\n            onHistoryCallback(formatedCandles, { noData: noData })\n          }\n        } catch (error) {\n          console.log('[getBars]: Get error', error)\n          onErrorCallback(error as string)\n        }\n      },\n      searchSymbols: () => {\n        // TODO(viet-nv): check no empty function rule\n      },\n      subscribeBars: (\n        symbolInfo: LibrarySymbolInfo,\n        resolution: ResolutionString,\n        onTick: SubscribeBarsCallback,\n        listenerGuid: string,\n        onResetCacheNeededCallback: () => void,\n      ) => {\n        if (intervalRef.current) clearInterval(intervalRef.current)\n        const getLivePrice = async () => {\n          const ts =\n            resolution === '1M'\n              ? Math.floor(new Date().getTime() / monthTs) * monthTs\n              : Math.floor(new Date().getTime() / weekTs) * weekTs\n          const data = await getCandles(ts, resolution === '1M' ? 'month' : 'week', '15m')\n          if (!data || !data.candles) return\n          const { candles } = data\n          let lastCandle: any = {}\n          let timeTs = 0\n\n          if (resolution === '1D' || resolution === '1W' || resolution === '1M') {\n            switch (resolution) {\n              case '1D':\n                timeTs = Math.floor(new Date().getTime() / dayTs) * dayTs\n                break\n              case '1W':\n                timeTs = Math.floor(new Date().getTime() / weekTs) * weekTs\n                break\n              case '1M':\n                timeTs = timeTs = Math.floor(new Date().getTime() / monthTs) * monthTs\n                break\n              default:\n                timeTs = Math.floor(new Date().getTime() / dayTs) * dayTs\n            }\n            const closestTs = candles\n              .map((c: any) => c.time)\n              .reduce((prev: any, curr: any) => {\n                return Math.abs(curr - timeTs) < Math.abs(prev - timeTs) ? curr : prev\n              })\n            const inRangeCandles = candles.filter((c: any) => c.time >= closestTs)\n\n            if (inRangeCandles.length > 0) {\n              lastCandle.time = timeTs\n              lastCandle.open = inRangeCandles[0].open\n              lastCandle.close = inRangeCandles[inRangeCandles.length - 1].close\n              lastCandle.high = Math.max(...inRangeCandles.map((c: any) => c.high))\n              lastCandle.low = Math.min(...inRangeCandles.map((c: any) => c.low))\n              lastCandle.volume = inRangeCandles\n                .map((c: any) => c.volume)\n                .reduce((prev: any, c: any) => {\n                  return prev + c\n                })\n            }\n          } else {\n            lastCandle = candles[candles.length - 1]\n          }\n          if (!lastCandle) return\n          if (isReverse) {\n            lastCandle = {\n              ...lastCandle,\n              open: 1 / lastCandle.open,\n              close: 1 / lastCandle.close,\n              high: 1 / lastCandle.low,\n              low: 1 / lastCandle.high,\n            }\n          }\n          onTick(lastCandle)\n        }\n        intervalRef.current = setInterval(getLivePrice, 30000)\n        getLivePrice()\n      },\n      unsubscribeBars: () => {\n        // TODO(viet-nv): check no empty function rule\n      },\n    }\n  }, [chainId, getCandles, isReverse, currencies])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}