{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/SwapRoute.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, ElementName, EventName } from '@uniswap/analytics-events';\nimport { Percent, TradeType } from '@uniswap/sdk-core';\nimport { Pair } from '@uniswap/v2-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport AnimatedDropdown from 'components/AnimatedDropdown';\nimport { AutoColumn } from 'components/Column';\nimport { LoadingRows } from 'components/Loader/styled';\nimport RoutingDiagram from 'components/RoutingDiagram/RoutingDiagram';\nimport { AutoRow, RowBetween } from 'components/Row';\nimport { SUPPORTED_GAS_ESTIMATE_CHAIN_IDS } from 'constants/chains';\nimport useAutoRouterSupported from 'hooks/useAutoRouterSupported';\nimport { memo, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { useDarkModeManager } from 'state/user/hooks';\nimport { Separator, ThemedText } from 'theme';\nimport { AutoRouterLabel, AutoRouterLogo } from './RouterLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = _styled(AutoColumn).withConfig({\n  displayName: \"SwapRoute__Wrapper\",\n  componentId: \"sc-176vpyh-0\"\n})([\"padding:\", \";border-radius:16px;border:1px solid \", \";cursor:pointer;\"], _ref => {\n  let {\n    fixedOpen\n  } = _ref;\n  return fixedOpen ? '12px' : '12px 8px 12px 12px';\n}, _ref2 => {\n  let {\n    theme,\n    fixedOpen\n  } = _ref2;\n  return fixedOpen ? 'transparent' : theme.backgroundOutline;\n});\nconst OpenCloseIcon = _styled(Plus).withConfig({\n  displayName: \"SwapRoute__OpenCloseIcon\",\n  componentId: \"sc-176vpyh-1\"\n})([\"margin-left:8px;height:20px;stroke-width:2px;transition:transform 0.1s;transform:\", \";stroke:\", \";cursor:pointer;:hover{opacity:0.8;}\"], _ref3 => {\n  let {\n    open\n  } = _ref3;\n  return open ? 'rotate(45deg)' : 'none';\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.textTertiary;\n});\nexport default _c2 = /*#__PURE__*/memo(_c = _s(function SwapRoute(_ref5) {\n  _s();\n  let {\n    trade,\n    syncing,\n    fixedOpen = false,\n    ...rest\n  } = _ref5;\n  const autoRouterSupported = useAutoRouterSupported();\n  const routes = getTokenPath(trade);\n  const [open, setOpen] = useState(false);\n  const {\n    chainId\n  } = useWeb3React();\n  const [darkMode] = useDarkModeManager();\n  const formattedGasPriceString = (trade === null || trade === void 0 ? void 0 : trade.gasUseEstimateUSD) ? trade.gasUseEstimateUSD.toFixed(2) === '0.00' ? '<$0.01' : '$' + trade.gasUseEstimateUSD.toFixed(2) : undefined;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    ...rest,\n    darkMode: darkMode,\n    fixedOpen: fixedOpen,\n    children: [/*#__PURE__*/_jsxDEV(TraceEvent, {\n      events: [BrowserEvent.onClick],\n      name: EventName.SWAP_AUTOROUTER_VISUALIZATION_EXPANDED,\n      element: ElementName.AUTOROUTER_VISUALIZATION_ROW,\n      shouldLogImpression: !open,\n      children: /*#__PURE__*/_jsxDEV(RowBetween, {\n        onClick: () => setOpen(!open),\n        children: [/*#__PURE__*/_jsxDEV(AutoRow, {\n          gap: \"4px\",\n          width: \"auto\",\n          children: [/*#__PURE__*/_jsxDEV(AutoRouterLogo, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AutoRouterLabel, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), fixedOpen ? null : /*#__PURE__*/_jsxDEV(OpenCloseIcon, {\n          open: open\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatedDropdown, {\n      open: open || fixedOpen,\n      children: /*#__PURE__*/_jsxDEV(AutoRow, {\n        gap: \"4px\",\n        width: \"auto\",\n        style: {\n          paddingTop: '12px',\n          margin: 0\n        },\n        children: [syncing ? /*#__PURE__*/_jsxDEV(LoadingRows, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '400px',\n              height: '30px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(RoutingDiagram, {\n          currencyIn: trade.inputAmount.currency,\n          currencyOut: trade.outputAmount.currency,\n          routes: routes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), autoRouterSupported && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Separator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), syncing ? /*#__PURE__*/_jsxDEV(LoadingRows, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '250px',\n                height: '15px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n            fontSize: 12,\n            width: 400,\n            margin: 0,\n            children: [(trade === null || trade === void 0 ? void 0 : trade.gasUseEstimateUSD) && chainId && SUPPORTED_GAS_ESTIMATE_CHAIN_IDS.includes(chainId) ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"Best price route costs ~{formattedGasPriceString} in gas.\",\n              values: {\n                formattedGasPriceString: formattedGasPriceString\n              }\n            }, void 0, false, void 0, this) : null, ' ', /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"This route optimizes your total output by considering split routes, multiple hops, and the gas cost of each step.\"\n            }, void 0, false, void 0, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}, \"jSreOLbvvqD1+TAkCBdCTl/sZmk=\", false, function () {\n  return [useAutoRouterSupported, useWeb3React, useDarkModeManager];\n}));\nconst V2_DEFAULT_FEE_TIER = 3000;\n\n/**\n * Loops through all routes on a trade and returns an array of diagram entries.\n */\nexport function getTokenPath(trade) {\n  return trade.swaps.map(_ref6 => {\n    let {\n      route: {\n        path: tokenPath,\n        pools,\n        protocol\n      },\n      inputAmount,\n      outputAmount\n    } = _ref6;\n    const portion = trade.tradeType === TradeType.EXACT_INPUT ? inputAmount.divide(trade.inputAmount) : outputAmount.divide(trade.outputAmount);\n    const percent = new Percent(portion.numerator, portion.denominator);\n    const path = [];\n    for (let i = 0; i < pools.length; i++) {\n      const nextPool = pools[i];\n      const tokenIn = tokenPath[i];\n      const tokenOut = tokenPath[i + 1];\n      const entry = [tokenIn, tokenOut, nextPool instanceof Pair ? V2_DEFAULT_FEE_TIER : nextPool.fee];\n      path.push(entry);\n    }\n    return {\n      percent,\n      path,\n      protocol\n    };\n  });\n}\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$memo\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["TraceEvent","BrowserEvent","ElementName","EventName","Percent","TradeType","Pair","useWeb3React","AnimatedDropdown","AutoColumn","LoadingRows","RoutingDiagram","AutoRow","RowBetween","SUPPORTED_GAS_ESTIMATE_CHAIN_IDS","useAutoRouterSupported","memo","useState","Plus","useDarkModeManager","Separator","ThemedText","AutoRouterLabel","AutoRouterLogo","Wrapper","styled","fixedOpen","theme","backgroundOutline","OpenCloseIcon","open","textTertiary","SwapRoute","trade","syncing","rest","autoRouterSupported","routes","getTokenPath","setOpen","chainId","darkMode","formattedGasPriceString","gasUseEstimateUSD","toFixed","undefined","onClick","SWAP_AUTOROUTER_VISUALIZATION_EXPANDED","AUTOROUTER_VISUALIZATION_ROW","paddingTop","margin","width","height","inputAmount","currency","outputAmount","includes","V2_DEFAULT_FEE_TIER","swaps","map","route","path","tokenPath","pools","protocol","portion","tradeType","EXACT_INPUT","divide","percent","numerator","denominator","i","length","nextPool","tokenIn","tokenOut","entry","fee","push"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/SwapRoute.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, ElementName, EventName } from '@uniswap/analytics-events'\nimport { Protocol } from '@uniswap/router-sdk'\nimport { Currency, Percent, TradeType } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport AnimatedDropdown from 'components/AnimatedDropdown'\nimport { AutoColumn } from 'components/Column'\nimport { LoadingRows } from 'components/Loader/styled'\nimport RoutingDiagram from 'components/RoutingDiagram/RoutingDiagram'\nimport { AutoRow, RowBetween } from 'components/Row'\nimport { SUPPORTED_GAS_ESTIMATE_CHAIN_IDS } from 'constants/chains'\nimport useAutoRouterSupported from 'hooks/useAutoRouterSupported'\nimport { memo, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { useDarkModeManager } from 'state/user/hooks'\nimport styled from 'styled-components/macro'\nimport { Separator, ThemedText } from 'theme'\n\nimport { AutoRouterLabel, AutoRouterLogo } from './RouterLabel'\n\nconst Wrapper = styled(AutoColumn)<{ darkMode?: boolean; fixedOpen?: boolean }>`\n  padding: ${({ fixedOpen }) => (fixedOpen ? '12px' : '12px 8px 12px 12px')};\n  border-radius: 16px;\n  border: 1px solid ${({ theme, fixedOpen }) => (fixedOpen ? 'transparent' : theme.backgroundOutline)};\n  cursor: pointer;\n`\n\nconst OpenCloseIcon = styled(Plus)<{ open?: boolean }>`\n  margin-left: 8px;\n  height: 20px;\n  stroke-width: 2px;\n  transition: transform 0.1s;\n  transform: ${({ open }) => (open ? 'rotate(45deg)' : 'none')};\n  stroke: ${({ theme }) => theme.textTertiary};\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`\n\ninterface SwapRouteProps extends React.HTMLAttributes<HTMLDivElement> {\n  trade: InterfaceTrade<Currency, Currency, TradeType>\n  syncing: boolean\n  fixedOpen?: boolean // fixed in open state, hide open/close icon\n}\n\nexport default memo(function SwapRoute({ trade, syncing, fixedOpen = false, ...rest }: SwapRouteProps) {\n  const autoRouterSupported = useAutoRouterSupported()\n  const routes = getTokenPath(trade)\n  const [open, setOpen] = useState(false)\n  const { chainId } = useWeb3React()\n\n  const [darkMode] = useDarkModeManager()\n\n  const formattedGasPriceString = trade?.gasUseEstimateUSD\n    ? trade.gasUseEstimateUSD.toFixed(2) === '0.00'\n      ? '<$0.01'\n      : '$' + trade.gasUseEstimateUSD.toFixed(2)\n    : undefined\n\n  return (\n    <Wrapper {...rest} darkMode={darkMode} fixedOpen={fixedOpen}>\n      <TraceEvent\n        events={[BrowserEvent.onClick]}\n        name={EventName.SWAP_AUTOROUTER_VISUALIZATION_EXPANDED}\n        element={ElementName.AUTOROUTER_VISUALIZATION_ROW}\n        shouldLogImpression={!open}\n      >\n        <RowBetween onClick={() => setOpen(!open)}>\n          <AutoRow gap=\"4px\" width=\"auto\">\n            <AutoRouterLogo />\n            <AutoRouterLabel />\n          </AutoRow>\n          {fixedOpen ? null : <OpenCloseIcon open={open} />}\n        </RowBetween>\n      </TraceEvent>\n      <AnimatedDropdown open={open || fixedOpen}>\n        <AutoRow gap=\"4px\" width=\"auto\" style={{ paddingTop: '12px', margin: 0 }}>\n          {syncing ? (\n            <LoadingRows>\n              <div style={{ width: '400px', height: '30px' }} />\n            </LoadingRows>\n          ) : (\n            <RoutingDiagram\n              currencyIn={trade.inputAmount.currency}\n              currencyOut={trade.outputAmount.currency}\n              routes={routes}\n            />\n          )}\n\n          {autoRouterSupported && (\n            <>\n              <Separator />\n              {syncing ? (\n                <LoadingRows>\n                  <div style={{ width: '250px', height: '15px' }} />\n                </LoadingRows>\n              ) : (\n                <ThemedText.DeprecatedMain fontSize={12} width={400} margin={0}>\n                  {trade?.gasUseEstimateUSD && chainId && SUPPORTED_GAS_ESTIMATE_CHAIN_IDS.includes(chainId) ? (\n                    <Trans>Best price route costs ~{formattedGasPriceString} in gas. </Trans>\n                  ) : null}{' '}\n                  <Trans>\n                    This route optimizes your total output by considering split routes, multiple hops, and the gas cost\n                    of each step.\n                  </Trans>\n                </ThemedText.DeprecatedMain>\n              )}\n            </>\n          )}\n        </AutoRow>\n      </AnimatedDropdown>\n    </Wrapper>\n  )\n})\n\nexport interface RoutingDiagramEntry {\n  percent: Percent\n  path: [Currency, Currency, FeeAmount][]\n  protocol: Protocol\n}\n\nconst V2_DEFAULT_FEE_TIER = 3000\n\n/**\n * Loops through all routes on a trade and returns an array of diagram entries.\n */\nexport function getTokenPath(trade: InterfaceTrade<Currency, Currency, TradeType>): RoutingDiagramEntry[] {\n  return trade.swaps.map(({ route: { path: tokenPath, pools, protocol }, inputAmount, outputAmount }) => {\n    const portion =\n      trade.tradeType === TradeType.EXACT_INPUT\n        ? inputAmount.divide(trade.inputAmount)\n        : outputAmount.divide(trade.outputAmount)\n    const percent = new Percent(portion.numerator, portion.denominator)\n    const path: RoutingDiagramEntry['path'] = []\n    for (let i = 0; i < pools.length; i++) {\n      const nextPool = pools[i]\n      const tokenIn = tokenPath[i]\n      const tokenOut = tokenPath[i + 1]\n      const entry: RoutingDiagramEntry['path'][0] = [\n        tokenIn,\n        tokenOut,\n        nextPool instanceof Pair ? V2_DEFAULT_FEE_TIER : nextPool.fee,\n      ]\n      path.push(entry)\n    }\n    return {\n      percent,\n      path,\n      protocol,\n    }\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}