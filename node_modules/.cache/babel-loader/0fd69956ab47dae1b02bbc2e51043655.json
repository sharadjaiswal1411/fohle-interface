{"ast":null,"code":"import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{createReducer}from'@reduxjs/toolkit';import{getVersionUpgrade,VersionUpgrade}from'@uniswap/token-lists';import{DEFAULT_LIST_OF_LISTS}from'../../constants/lists';import{updateVersion}from'../global/actions';import{acceptListUpdate,addList,fetchTokenList,removeList}from'./actions';var NEW_LIST_STATE={error:null,current:null,loadingRequestId:null,pendingUpdate:null};var initialState={lastInitializedDefaultListOfLists:DEFAULT_LIST_OF_LISTS,byUrl:_objectSpread({},DEFAULT_LIST_OF_LISTS.reduce(function(memo,listUrl){memo[listUrl]=NEW_LIST_STATE;return memo;},{}))};export default createReducer(initialState,function(builder){return builder.addCase(fetchTokenList.pending,function(state,_ref){var _state$byUrl$url$curr,_state$byUrl$url,_state$byUrl$url$pend,_state$byUrl$url2;var _ref$payload=_ref.payload,requestId=_ref$payload.requestId,url=_ref$payload.url;var current=(_state$byUrl$url$curr=(_state$byUrl$url=state.byUrl[url])===null||_state$byUrl$url===void 0?void 0:_state$byUrl$url.current)!==null&&_state$byUrl$url$curr!==void 0?_state$byUrl$url$curr:null;var pendingUpdate=(_state$byUrl$url$pend=(_state$byUrl$url2=state.byUrl[url])===null||_state$byUrl$url2===void 0?void 0:_state$byUrl$url2.pendingUpdate)!==null&&_state$byUrl$url$pend!==void 0?_state$byUrl$url$pend:null;state.byUrl[url]={current:current,pendingUpdate:pendingUpdate,loadingRequestId:requestId,error:null};}).addCase(fetchTokenList.fulfilled,function(state,_ref2){var _state$byUrl$url3,_state$byUrl$url4;var _ref2$payload=_ref2.payload,requestId=_ref2$payload.requestId,tokenList=_ref2$payload.tokenList,url=_ref2$payload.url;var current=(_state$byUrl$url3=state.byUrl[url])===null||_state$byUrl$url3===void 0?void 0:_state$byUrl$url3.current;var loadingRequestId=(_state$byUrl$url4=state.byUrl[url])===null||_state$byUrl$url4===void 0?void 0:_state$byUrl$url4.loadingRequestId;// no-op if update does nothing\nif(current){var upgradeType=getVersionUpgrade(current.version,tokenList.version);if(upgradeType===VersionUpgrade.NONE)return;if(loadingRequestId===null||loadingRequestId===requestId){state.byUrl[url]={current:current,pendingUpdate:tokenList,loadingRequestId:null,error:null};}}else{state.byUrl[url]={current:tokenList,pendingUpdate:null,loadingRequestId:null,error:null};}}).addCase(fetchTokenList.rejected,function(state,_ref3){var _state$byUrl$url5;var _ref3$payload=_ref3.payload,url=_ref3$payload.url,requestId=_ref3$payload.requestId,errorMessage=_ref3$payload.errorMessage;if(((_state$byUrl$url5=state.byUrl[url])===null||_state$byUrl$url5===void 0?void 0:_state$byUrl$url5.loadingRequestId)!==requestId){// no-op since it's not the latest request\nreturn;}state.byUrl[url]={current:state.byUrl[url].current?state.byUrl[url].current:null,pendingUpdate:null,loadingRequestId:null,error:errorMessage};}).addCase(addList,function(state,_ref4){var url=_ref4.payload;if(!state.byUrl[url]){state.byUrl[url]=NEW_LIST_STATE;}}).addCase(removeList,function(state,_ref5){var url=_ref5.payload;if(state.byUrl[url]){delete state.byUrl[url];}}).addCase(acceptListUpdate,function(state,_ref6){var _state$byUrl$url6;var url=_ref6.payload;if(!((_state$byUrl$url6=state.byUrl[url])===null||_state$byUrl$url6===void 0?void 0:_state$byUrl$url6.pendingUpdate)){throw new Error('accept list update called without pending update');}state.byUrl[url]=_objectSpread(_objectSpread({},state.byUrl[url]),{},{current:state.byUrl[url].pendingUpdate,pendingUpdate:null});}).addCase(updateVersion,function(state){// state loaded from localStorage, but new lists have never been initialized\nif(!state.lastInitializedDefaultListOfLists){state.byUrl=initialState.byUrl;}else if(state.lastInitializedDefaultListOfLists){var lastInitializedSet=state.lastInitializedDefaultListOfLists.reduce(function(s,l){return s.add(l);},new Set());var newListOfListsSet=DEFAULT_LIST_OF_LISTS.reduce(function(s,l){return s.add(l);},new Set());DEFAULT_LIST_OF_LISTS.forEach(function(listUrl){if(!lastInitializedSet.has(listUrl)){state.byUrl[listUrl]=NEW_LIST_STATE;}});state.lastInitializedDefaultListOfLists.forEach(function(listUrl){if(!newListOfListsSet.has(listUrl)){delete state.byUrl[listUrl];}});}state.lastInitializedDefaultListOfLists=DEFAULT_LIST_OF_LISTS;});});","map":{"version":3,"names":["createReducer","getVersionUpgrade","VersionUpgrade","DEFAULT_LIST_OF_LISTS","updateVersion","acceptListUpdate","addList","fetchTokenList","removeList","NEW_LIST_STATE","error","current","loadingRequestId","pendingUpdate","initialState","lastInitializedDefaultListOfLists","byUrl","reduce","memo","listUrl","builder","addCase","pending","state","payload","requestId","url","fulfilled","tokenList","upgradeType","version","NONE","rejected","errorMessage","Error","lastInitializedSet","s","l","add","Set","newListOfListsSet","forEach","has"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/lists/reducer.ts"],"sourcesContent":["import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, TokenList, VersionUpgrade } from '@uniswap/token-lists'\n\nimport { DEFAULT_LIST_OF_LISTS } from '../../constants/lists'\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      const current = state.byUrl[url]?.current ?? null\n      const pendingUpdate = state.byUrl[url]?.pendingUpdate ?? null\n\n      state.byUrl[url] = {\n        current,\n        pendingUpdate,\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            current,\n            pendingUpdate: tokenList,\n            loadingRequestId: null,\n            error: null,\n          }\n        }\n      } else {\n        state.byUrl[url] = {\n          current: tokenList,\n          pendingUpdate: null,\n          loadingRequestId: null,\n          error: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        current: state.byUrl[url].current ? state.byUrl[url].current : null,\n        pendingUpdate: null,\n        loadingRequestId: null,\n        error: errorMessage,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        current: state.byUrl[url].pendingUpdate,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set()\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n    })\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}