{"ast":null,"code":"export const isInSameSudoSwapPool = (assetA, assetB) => {\n  if (!assetA.sellorders || !assetB.sellorders) return false;\n  const assetASudoSwapPoolParameters = assetA.sellorders[0].protocolParameters;\n  const assetBSudoSwapPoolParameters = assetB.sellorders[0].protocolParameters;\n  const assetAPoolAddress = (assetASudoSwapPoolParameters === null || assetASudoSwapPoolParameters === void 0 ? void 0 : assetASudoSwapPoolParameters.poolAddress) ? assetASudoSwapPoolParameters.poolAddress : undefined;\n  const assetBPoolAddress = (assetBSudoSwapPoolParameters === null || assetBSudoSwapPoolParameters === void 0 ? void 0 : assetBSudoSwapPoolParameters.poolAddress) ? assetBSudoSwapPoolParameters.poolAddress : undefined;\n  if (!assetAPoolAddress || !assetBPoolAddress) return false;\n  if (assetAPoolAddress !== assetBPoolAddress) return false;\n  return true;\n};\nexport const isInSameMarketplaceCollection = (assetA, assetB) => {\n  return assetA.address === assetB.address && assetA.marketplace === assetB.marketplace;\n};","map":{"version":3,"names":["isInSameSudoSwapPool","assetA","assetB","sellorders","assetASudoSwapPoolParameters","protocolParameters","assetBSudoSwapPoolParameters","assetAPoolAddress","poolAddress","undefined","assetBPoolAddress","isInSameMarketplaceCollection","address","marketplace"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/collection.ts"],"sourcesContent":["import { GenieAsset } from 'nft/types'\n\nexport const isInSameSudoSwapPool = (assetA: GenieAsset, assetB: GenieAsset): boolean => {\n  if (!assetA.sellorders || !assetB.sellorders) return false\n\n  const assetASudoSwapPoolParameters = assetA.sellorders[0].protocolParameters\n  const assetBSudoSwapPoolParameters = assetB.sellorders[0].protocolParameters\n\n  const assetAPoolAddress = assetASudoSwapPoolParameters?.poolAddress\n    ? (assetASudoSwapPoolParameters.poolAddress as string)\n    : undefined\n  const assetBPoolAddress = assetBSudoSwapPoolParameters?.poolAddress\n    ? (assetBSudoSwapPoolParameters.poolAddress as string)\n    : undefined\n\n  if (!assetAPoolAddress || !assetBPoolAddress) return false\n  if (assetAPoolAddress !== assetBPoolAddress) return false\n\n  return true\n}\n\nexport const isInSameMarketplaceCollection = (assetA: GenieAsset, assetB: GenieAsset): boolean => {\n  return assetA.address === assetB.address && assetA.marketplace === assetB.marketplace\n}\n"],"mappings":"AAEA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,MAAkB,EAAEC,MAAkB,KAAc;EACvF,IAAI,CAACD,MAAM,CAACE,UAAU,IAAI,CAACD,MAAM,CAACC,UAAU,EAAE,OAAO,KAAK;EAE1D,MAAMC,4BAA4B,GAAGH,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,kBAAkB;EAC5E,MAAMC,4BAA4B,GAAGJ,MAAM,CAACC,UAAU,CAAC,CAAC,CAAC,CAACE,kBAAkB;EAE5E,MAAME,iBAAiB,GAAG,CAAAH,4BAA4B,aAA5BA,4BAA4B,uBAA5BA,4BAA4B,CAAEI,WAAW,IAC9DJ,4BAA4B,CAACI,WAAW,GACzCC,SAAS;EACb,MAAMC,iBAAiB,GAAG,CAAAJ,4BAA4B,aAA5BA,4BAA4B,uBAA5BA,4BAA4B,CAAEE,WAAW,IAC9DF,4BAA4B,CAACE,WAAW,GACzCC,SAAS;EAEb,IAAI,CAACF,iBAAiB,IAAI,CAACG,iBAAiB,EAAE,OAAO,KAAK;EAC1D,IAAIH,iBAAiB,KAAKG,iBAAiB,EAAE,OAAO,KAAK;EAEzD,OAAO,IAAI;AACb,CAAC;AAED,OAAO,MAAMC,6BAA6B,GAAG,CAACV,MAAkB,EAAEC,MAAkB,KAAc;EAChG,OAAOD,MAAM,CAACW,OAAO,KAAKV,MAAM,CAACU,OAAO,IAAIX,MAAM,CAACY,WAAW,KAAKX,MAAM,CAACW,WAAW;AACvF,CAAC"},"metadata":{},"sourceType":"module"}