{"ast":null,"code":"import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _byAddress;import{currentTimestamp}from'./../../utils/index';import{updatePoolData,addPoolKeys,updatePoolChartData,updatePoolTransactions,updateTickData}from'./actions';import{createReducer}from'@reduxjs/toolkit';import{SupportedNetwork}from'constants/networks';export var initialState={byAddress:(_byAddress={},_defineProperty(_byAddress,SupportedNetwork.ETHEREUM,{}),_defineProperty(_byAddress,SupportedNetwork.ARBITRUM,{}),_defineProperty(_byAddress,SupportedNetwork.OPTIMISM,{}),_defineProperty(_byAddress,SupportedNetwork.POLYGON,{}),_defineProperty(_byAddress,SupportedNetwork.CELO,{}),_byAddress)};export default createReducer(initialState,function(builder){return builder.addCase(updatePoolData,function(state,_ref){var _ref$payload=_ref.payload,pools=_ref$payload.pools,networkId=_ref$payload.networkId;pools.map(function(poolData){return state.byAddress[networkId][poolData.address]=_objectSpread(_objectSpread({},state.byAddress[networkId][poolData.address]),{},{data:poolData,lastUpdated:currentTimestamp()});});})// add address to byAddress keys if not included yet\n.addCase(addPoolKeys,function(state,_ref2){var _ref2$payload=_ref2.payload,poolAddresses=_ref2$payload.poolAddresses,networkId=_ref2$payload.networkId;poolAddresses.map(function(address){if(!state.byAddress[networkId][address]){state.byAddress[networkId][address]={data:undefined,chartData:undefined,transactions:undefined,lastUpdated:undefined,tickData:undefined};}});}).addCase(updatePoolChartData,function(state,_ref3){var _ref3$payload=_ref3.payload,poolAddress=_ref3$payload.poolAddress,chartData=_ref3$payload.chartData,networkId=_ref3$payload.networkId;state.byAddress[networkId][poolAddress]=_objectSpread(_objectSpread({},state.byAddress[networkId][poolAddress]),{},{chartData:chartData});}).addCase(updatePoolTransactions,function(state,_ref4){var _ref4$payload=_ref4.payload,poolAddress=_ref4$payload.poolAddress,transactions=_ref4$payload.transactions,networkId=_ref4$payload.networkId;state.byAddress[networkId][poolAddress]=_objectSpread(_objectSpread({},state.byAddress[networkId][poolAddress]),{},{transactions:transactions});}).addCase(updateTickData,function(state,_ref5){var _ref5$payload=_ref5.payload,poolAddress=_ref5$payload.poolAddress,tickData=_ref5$payload.tickData,networkId=_ref5$payload.networkId;state.byAddress[networkId][poolAddress]=_objectSpread(_objectSpread({},state.byAddress[networkId][poolAddress]),{},{tickData:tickData});});});","map":{"version":3,"names":["currentTimestamp","updatePoolData","addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTickData","createReducer","SupportedNetwork","initialState","byAddress","ETHEREUM","ARBITRUM","OPTIMISM","POLYGON","CELO","builder","addCase","state","payload","pools","networkId","map","poolData","address","data","lastUpdated","poolAddresses","undefined","chartData","transactions","tickData","poolAddress"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/pools/reducer.ts"],"sourcesContent":["import { currentTimestamp } from './../../utils/index'\nimport { updatePoolData, addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from './actions'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'state/user/actions'\nimport { Transaction } from 'types'\nimport { PoolTickData } from 'data/pools/tickData'\nimport { SupportedNetwork } from 'constants/networks'\n\nexport interface Pool {\n  address: string\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport interface PoolData {\n  // basic token info\n  address: string\n  feeTier: number\n\n  token0: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  token1: {\n    name: string\n    symbol: string\n    address: string\n    decimals: number\n    derivedETH: number\n  }\n\n  // for tick math\n  liquidity: number\n  sqrtPrice: number\n  tick: number\n\n  // volume\n  volumeUSD: number\n  volumeUSDChange: number\n  volumeUSDWeek: number\n\n  // liquidity\n  tvlUSD: number\n  tvlUSDChange: number\n\n  // prices\n  token0Price: number\n  token1Price: number\n\n  // token amounts\n  tvlToken0: number\n  tvlToken1: number\n}\n\nexport type PoolChartEntry = {\n  date: number\n  volumeUSD: number\n  totalValueLockedUSD: number\n  feesUSD: number\n}\n\nexport interface PoolsState {\n  // analytics data from\n  byAddress: {\n    [networkId: string]: {\n      [address: string]: {\n        data: PoolData | undefined\n        chartData: PoolChartEntry[] | undefined\n        transactions: Transaction[] | undefined\n        lastUpdated: number | undefined\n        tickData: PoolTickData | undefined\n      }\n    }\n  }\n}\n\nexport const initialState: PoolsState = {\n  byAddress: {\n    [SupportedNetwork.ETHEREUM]: {},\n    [SupportedNetwork.ARBITRUM]: {},\n    [SupportedNetwork.OPTIMISM]: {},\n    [SupportedNetwork.POLYGON]: {},\n    [SupportedNetwork.CELO]: {},\n  },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updatePoolData, (state, { payload: { pools, networkId } }) => {\n      pools.map(\n        (poolData) =>\n          (state.byAddress[networkId][poolData.address] = {\n            ...state.byAddress[networkId][poolData.address],\n            data: poolData,\n            lastUpdated: currentTimestamp(),\n          })\n      )\n    })\n    // add address to byAddress keys if not included yet\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses, networkId } }) => {\n\n      poolAddresses.map((address) => {\n        if (!state.byAddress[networkId][address]) {\n          state.byAddress[networkId][address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n            lastUpdated: undefined,\n            tickData: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData, networkId } }) => {\n      state.byAddress[networkId][poolAddress] = { ...state.byAddress[networkId][poolAddress], chartData: chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions, networkId } }) => {\n      state.byAddress[networkId][poolAddress] = { ...state.byAddress[networkId][poolAddress], transactions }\n    })\n    .addCase(updateTickData, (state, { payload: { poolAddress, tickData, networkId } }) => {\n      state.byAddress[networkId][poolAddress] = { ...state.byAddress[networkId][poolAddress], tickData }\n    })\n)"],"mappings":"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"},"metadata":{},"sourceType":"module"}