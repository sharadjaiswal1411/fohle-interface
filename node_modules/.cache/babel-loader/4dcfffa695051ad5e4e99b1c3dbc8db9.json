{"ast":null,"code":"import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import{Route}from'@uniswap/v3-sdk';import{useWeb3React}from'@web3-react/core';import{useMemo}from'react';import{useV3SwapPools}from'./useV3SwapPools';/**\n * Returns true if poolA is equivalent to poolB\n * @param poolA one of the two pools\n * @param poolB the other pool\n */function poolEquals(poolA,poolB){return poolA===poolB||poolA.token0.equals(poolB.token0)&&poolA.token1.equals(poolB.token1)&&poolA.fee===poolB.fee;}function computeAllRoutes(currencyIn,currencyOut,pools,chainId){var currentPath=arguments.length>4&&arguments[4]!==undefined?arguments[4]:[];var allPaths=arguments.length>5&&arguments[5]!==undefined?arguments[5]:[];var startCurrencyIn=arguments.length>6&&arguments[6]!==undefined?arguments[6]:currencyIn;var maxHops=arguments.length>7&&arguments[7]!==undefined?arguments[7]:2;var tokenIn=currencyIn===null||currencyIn===void 0?void 0:currencyIn.wrapped;var tokenOut=currencyOut===null||currencyOut===void 0?void 0:currencyOut.wrapped;if(!tokenIn||!tokenOut)throw new Error('Missing tokenIn/tokenOut');var _iterator=_createForOfIteratorHelper(pools),_step;try{var _loop=function _loop(){var pool=_step.value;if(!pool.involvesToken(tokenIn)||currentPath.find(function(pathPool){return poolEquals(pool,pathPool);}))return\"continue\";var outputToken=pool.token0.equals(tokenIn)?pool.token1:pool.token0;if(outputToken.equals(tokenOut)){allPaths.push(new Route([].concat(_toConsumableArray(currentPath),[pool]),startCurrencyIn,currencyOut));}else if(maxHops>1){computeAllRoutes(outputToken,currencyOut,pools,chainId,[].concat(_toConsumableArray(currentPath),[pool]),allPaths,startCurrencyIn,maxHops-1);}};for(_iterator.s();!(_step=_iterator.n()).done;){var _ret=_loop();if(_ret===\"continue\")continue;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return allPaths;}/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */export function useAllV3Routes(currencyIn,currencyOut){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var _useV3SwapPools=useV3SwapPools(currencyIn,currencyOut),pools=_useV3SwapPools.pools,poolsLoading=_useV3SwapPools.loading;return useMemo(function(){if(poolsLoading||!chainId||!pools||!currencyIn||!currencyOut)return{loading:true,routes:[]};var routes=computeAllRoutes(currencyIn,currencyOut,pools,chainId,[],[],currencyIn,2);return{loading:false,routes:routes};},[chainId,currencyIn,currencyOut,pools,poolsLoading]);}","map":{"version":3,"names":["Route","useWeb3React","useMemo","useV3SwapPools","poolEquals","poolA","poolB","token0","equals","token1","fee","computeAllRoutes","currencyIn","currencyOut","pools","chainId","currentPath","allPaths","startCurrencyIn","maxHops","tokenIn","wrapped","tokenOut","Error","pool","involvesToken","find","pathPool","outputToken","push","useAllV3Routes","poolsLoading","loading","routes"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useAllV3Routes.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { Pool, Route } from '@uniswap/v3-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\n\nimport { useV3SwapPools } from './useV3SwapPools'\n\n/**\n * Returns true if poolA is equivalent to poolB\n * @param poolA one of the two pools\n * @param poolB the other pool\n */\nfunction poolEquals(poolA: Pool, poolB: Pool): boolean {\n  return (\n    poolA === poolB ||\n    (poolA.token0.equals(poolB.token0) && poolA.token1.equals(poolB.token1) && poolA.fee === poolB.fee)\n  )\n}\n\nfunction computeAllRoutes(\n  currencyIn: Currency,\n  currencyOut: Currency,\n  pools: Pool[],\n  chainId: number,\n  currentPath: Pool[] = [],\n  allPaths: Route<Currency, Currency>[] = [],\n  startCurrencyIn: Currency = currencyIn,\n  maxHops = 2\n): Route<Currency, Currency>[] {\n  const tokenIn = currencyIn?.wrapped\n  const tokenOut = currencyOut?.wrapped\n  if (!tokenIn || !tokenOut) throw new Error('Missing tokenIn/tokenOut')\n\n  for (const pool of pools) {\n    if (!pool.involvesToken(tokenIn) || currentPath.find((pathPool) => poolEquals(pool, pathPool))) continue\n\n    const outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0\n    if (outputToken.equals(tokenOut)) {\n      allPaths.push(new Route([...currentPath, pool], startCurrencyIn, currencyOut))\n    } else if (maxHops > 1) {\n      computeAllRoutes(\n        outputToken,\n        currencyOut,\n        pools,\n        chainId,\n        [...currentPath, pool],\n        allPaths,\n        startCurrencyIn,\n        maxHops - 1\n      )\n    }\n  }\n\n  return allPaths\n}\n\n/**\n * Returns all the routes from an input currency to an output currency\n * @param currencyIn the input currency\n * @param currencyOut the output currency\n */\nexport function useAllV3Routes(\n  currencyIn?: Currency,\n  currencyOut?: Currency\n): { loading: boolean; routes: Route<Currency, Currency>[] } {\n  const { chainId } = useWeb3React()\n  const { pools, loading: poolsLoading } = useV3SwapPools(currencyIn, currencyOut)\n\n  return useMemo(() => {\n    if (poolsLoading || !chainId || !pools || !currencyIn || !currencyOut) return { loading: true, routes: [] }\n\n    const routes = computeAllRoutes(currencyIn, currencyOut, pools, chainId, [], [], currencyIn, 2)\n    return { loading: false, routes }\n  }, [chainId, currencyIn, currencyOut, pools, poolsLoading])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}