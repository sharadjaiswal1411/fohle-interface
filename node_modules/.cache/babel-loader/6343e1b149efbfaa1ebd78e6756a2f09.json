{"ast":null,"code":"import { darkTheme } from 'nft/themes/darkTheme';\nimport { lightTheme } from 'nft/themes/lightTheme';\nimport { cssObjectFromTheme } from './cssObjectFromTheme';\nfunction cssStringFromTheme(theme) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.entries(cssObjectFromTheme(theme, options)).map(_ref => {\n    let [key, value] = _ref;\n    return `${key}:${value};`;\n  }).join('');\n}\nexport function rootCssString(isDarkMode) {\n  return isDarkMode ? cssStringFromTheme(darkTheme) : cssStringFromTheme(lightTheme);\n}","map":{"version":3,"names":["darkTheme","lightTheme","cssObjectFromTheme","cssStringFromTheme","theme","options","Object","entries","map","key","value","join","rootCssString","isDarkMode"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/css/cssStringFromTheme.ts"],"sourcesContent":["import { darkTheme } from 'nft/themes/darkTheme'\nimport { lightTheme } from 'nft/themes/lightTheme'\n\nimport { cssObjectFromTheme } from './cssObjectFromTheme'\nimport { Theme } from './sprinkles.css'\n\nfunction cssStringFromTheme(theme: Theme | (() => Theme), options: { extends?: Theme | (() => Theme) } = {}) {\n  return Object.entries(cssObjectFromTheme(theme, options))\n    .map(([key, value]) => `${key}:${value};`)\n    .join('')\n}\n\nexport function rootCssString(isDarkMode: boolean) {\n  return isDarkMode ? cssStringFromTheme(darkTheme) : cssStringFromTheme(lightTheme)\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAChD,SAASC,UAAU,QAAQ,uBAAuB;AAElD,SAASC,kBAAkB,QAAQ,sBAAsB;AAGzD,SAASC,kBAAkB,CAACC,KAA4B,EAAqD;EAAA,IAAnDC,OAA4C,uEAAG,CAAC,CAAC;EACzG,OAAOC,MAAM,CAACC,OAAO,CAACL,kBAAkB,CAACE,KAAK,EAAEC,OAAO,CAAC,CAAC,CACtDG,GAAG,CAAC;IAAA,IAAC,CAACC,GAAG,EAAEC,KAAK,CAAC;IAAA,OAAM,GAAED,GAAI,IAAGC,KAAM,GAAE;EAAA,EAAC,CACzCC,IAAI,CAAC,EAAE,CAAC;AACb;AAEA,OAAO,SAASC,aAAa,CAACC,UAAmB,EAAE;EACjD,OAAOA,UAAU,GAAGV,kBAAkB,CAACH,SAAS,CAAC,GAAGG,kBAAkB,CAACF,UAAU,CAAC;AACpF"},"metadata":{},"sourceType":"module"}