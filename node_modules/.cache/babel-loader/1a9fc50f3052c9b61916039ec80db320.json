{"ast":null,"code":"import { LogLevel } from '@amplitude/analytics-types';\nvar PREFIX = 'Amplitude Logger ';\nvar Logger = /** @class */function () {\n  function Logger() {\n    this.logLevel = LogLevel.None;\n  }\n  Logger.prototype.disable = function () {\n    this.logLevel = LogLevel.None;\n  };\n  Logger.prototype.enable = function (logLevel) {\n    if (logLevel === void 0) {\n      logLevel = LogLevel.Warn;\n    }\n    this.logLevel = logLevel;\n  };\n  Logger.prototype.log = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.logLevel < LogLevel.Verbose) {\n      return;\n    }\n    console.log(\"\".concat(PREFIX, \"[Log]: \").concat(args.join(' ')));\n  };\n  Logger.prototype.warn = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.logLevel < LogLevel.Warn) {\n      return;\n    }\n    console.warn(\"\".concat(PREFIX, \"[Warn]: \").concat(args.join(' ')));\n  };\n  Logger.prototype.error = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.logLevel < LogLevel.Error) {\n      return;\n    }\n    console.error(\"\".concat(PREFIX, \"[Error]: \").concat(args.join(' ')));\n  };\n  Logger.prototype.debug = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (this.logLevel < LogLevel.Debug) {\n      return;\n    }\n    // console.debug output is hidden by default in chrome\n    console.log(\"\".concat(PREFIX, \"[Debug]: \").concat(args.join(' ')));\n  };\n  return Logger;\n}();\nexport { Logger };","map":{"version":3,"sources":["../../src/logger.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAA2B,4BAA4B;AAExE,IAAM,MAAM,GAAG,mBAAmB;AAElC,IAAA,MAAA,GAAA,aAAA,YAAA;EAGE,SAAA,MAAA,GAAA;IACE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI;EAC/B;EAEA,MAAA,CAAA,SAAA,CAAA,OAAO,GAAP,YAAA;IACE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI;EAC/B,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,MAAM,GAAN,UAAO,QAAkC,EAAA;IAAlC,IAAA,QAAA,KAAA,KAAA,CAAA,EAAA;MAAA,QAAA,GAAqB,QAAQ,CAAC,IAAI;IAAA;IACvC,IAAI,CAAC,QAAQ,GAAG,QAAQ;EAC1B,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,GAAG,GAAH,YAAA;IAAI,IAAA,IAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;MAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACF,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,OAAO,EAAE;MACpC;IACD;IACD,OAAO,CAAC,GAAG,CAAC,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,SAAA,CAAA,CAAA,MAAA,CAAU,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;EAClD,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,YAAA;IAAK,IAAA,IAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;MAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACH,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE;MACjC;IACD;IACD,OAAO,CAAC,IAAI,CAAC,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,UAAA,CAAA,CAAA,MAAA,CAAW,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;EACpD,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IAAM,IAAA,IAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;MAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACJ,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE;MAClC;IACD;IACD,OAAO,CAAC,KAAK,CAAC,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,WAAA,CAAA,CAAA,MAAA,CAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;EACtD,CAAC;EAED,MAAA,CAAA,SAAA,CAAA,KAAK,GAAL,YAAA;IAAM,IAAA,IAAA,GAAA,EAAA;SAAA,IAAA,EAAA,GAAA,CAAc,EAAd,EAAA,GAAA,SAAA,CAAA,MAAc,EAAd,EAAA,EAAc,EAAA;MAAd,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;IACJ,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,EAAE;MAClC;IACD;IACD;IACA,OAAO,CAAC,GAAG,CAAC,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,WAAA,CAAA,CAAA,MAAA,CAAY,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;EACpD,CAAC;EACH,OAAA,MAAC;AAAD,CAAC,EAAA","sourcesContent":["import { LogLevel, Logger as ILogger } from '@amplitude/analytics-types';\n\nconst PREFIX = 'Amplitude Logger ';\n\nexport class Logger implements ILogger {\n  logLevel: LogLevel;\n\n  constructor() {\n    this.logLevel = LogLevel.None;\n  }\n\n  disable(): void {\n    this.logLevel = LogLevel.None;\n  }\n\n  enable(logLevel: LogLevel = LogLevel.Warn): void {\n    this.logLevel = logLevel;\n  }\n\n  log(...args: any[]): void {\n    if (this.logLevel < LogLevel.Verbose) {\n      return;\n    }\n    console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n  }\n\n  warn(...args: any[]): void {\n    if (this.logLevel < LogLevel.Warn) {\n      return;\n    }\n    console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n  }\n\n  error(...args: any[]): void {\n    if (this.logLevel < LogLevel.Error) {\n      return;\n    }\n    console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n  }\n\n  debug(...args: any[]): void {\n    if (this.logLevel < LogLevel.Debug) {\n      return;\n    }\n    // console.debug output is hidden by default in chrome\n    console.log(`${PREFIX}[Debug]: ${args.join(' ')}`);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}