{"ast":null,"code":"const looksRareApiAddress = 'https://api.looksrare.org/api/v1';\nexport const looksRareRewardsFetcher = async address => {\n  const res = await fetch(`${looksRareApiAddress}/rewards?address=${address}`);\n  if (res.status !== 200) throw new Error(`LooksRare rewards API errored with status ${res.statusText}`);\n  const json = await res.json();\n  return json.data;\n};","map":{"version":3,"names":["looksRareApiAddress","looksRareRewardsFetcher","address","res","fetch","status","Error","statusText","json","data"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/looksRare/looksRareRewardsFetcher.ts"],"sourcesContent":["import { LooksRareRewardsData } from '../../types'\n\nconst looksRareApiAddress = 'https://api.looksrare.org/api/v1'\n\nexport const looksRareRewardsFetcher = async (address: any): Promise<LooksRareRewardsData | string> => {\n  const res = await fetch(`${looksRareApiAddress}/rewards?address=${address}`)\n\n  if (res.status !== 200) throw new Error(`LooksRare rewards API errored with status ${res.statusText}`)\n\n  const json = await res.json()\n\n  return json.data\n}\n"],"mappings":"AAEA,MAAMA,mBAAmB,GAAG,kCAAkC;AAE9D,OAAO,MAAMC,uBAAuB,GAAG,MAAOC,OAAY,IAA6C;EACrG,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEJ,mBAAoB,oBAAmBE,OAAQ,EAAC,CAAC;EAE5E,IAAIC,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAE,6CAA4CH,GAAG,CAACI,UAAW,EAAC,CAAC;EAEtG,MAAMC,IAAI,GAAG,MAAML,GAAG,CAACK,IAAI,EAAE;EAE7B,OAAOA,IAAI,CAACC,IAAI;AAClB,CAAC"},"metadata":{},"sourceType":"module"}