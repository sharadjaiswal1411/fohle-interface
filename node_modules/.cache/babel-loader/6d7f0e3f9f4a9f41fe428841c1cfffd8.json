{"ast":null,"code":"/**\n * Mnemonist Queue\n * ================\n *\n * Queue implementation based on the ideas of Queue.js that seems to beat\n * a LinkedList one in performance.\n */\nvar Iterator = require('obliterator/iterator'),\n  forEach = require('obliterator/foreach');\n\n/**\n * Queue\n *\n * @constructor\n */\nfunction Queue() {\n  this.clear();\n}\n\n/**\n * Method used to clear the queue.\n *\n * @return {undefined}\n */\nQueue.prototype.clear = function () {\n  // Properties\n  this.items = [];\n  this.offset = 0;\n  this.size = 0;\n};\n\n/**\n * Method used to add an item to the queue.\n *\n * @param  {any}    item - Item to enqueue.\n * @return {number}\n */\nQueue.prototype.enqueue = function (item) {\n  this.items.push(item);\n  return ++this.size;\n};\n\n/**\n * Method used to retrieve & remove the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.dequeue = function () {\n  if (!this.size) return;\n  var item = this.items[this.offset];\n  if (++this.offset * 2 >= this.items.length) {\n    this.items = this.items.slice(this.offset);\n    this.offset = 0;\n  }\n  this.size--;\n  return item;\n};\n\n/**\n * Method used to retrieve the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.peek = function () {\n  if (!this.size) return;\n  return this.items[this.offset];\n};\n\n/**\n * Method used to iterate over the queue.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nQueue.prototype.forEach = function (callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n  for (var i = this.offset, j = 0, l = this.items.length; i < l; i++, j++) callback.call(scope, this.items[i], j, this);\n};\n\n/*\n * Method used to convert the queue to a JavaScript array.\n *\n * @return {array}\n */\nQueue.prototype.toArray = function () {\n  return this.items.slice(this.offset);\n};\n\n/**\n * Method used to create an iterator over a queue's values.\n *\n * @return {Iterator}\n */\nQueue.prototype.values = function () {\n  var items = this.items,\n    i = this.offset;\n  return new Iterator(function () {\n    if (i >= items.length) return {\n      done: true\n    };\n    var value = items[i];\n    i++;\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a queue's entries.\n *\n * @return {Iterator}\n */\nQueue.prototype.entries = function () {\n  var items = this.items,\n    i = this.offset,\n    j = 0;\n  return new Iterator(function () {\n    if (i >= items.length) return {\n      done: true\n    };\n    var value = items[i];\n    i++;\n    return {\n      value: [j++, value],\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined') Queue.prototype[Symbol.iterator] = Queue.prototype.values;\n\n/**\n * Convenience known methods.\n */\nQueue.prototype.toString = function () {\n  return this.toArray().join(',');\n};\nQueue.prototype.toJSON = function () {\n  return this.toArray();\n};\nQueue.prototype.inspect = function () {\n  var array = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(array, 'constructor', {\n    value: Queue,\n    enumerable: false\n  });\n  return array;\n};\nif (typeof Symbol !== 'undefined') Queue.prototype[Symbol.for('nodejs.util.inspect.custom')] = Queue.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a queue.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @return {Queue}\n */\nQueue.from = function (iterable) {\n  var queue = new Queue();\n  forEach(iterable, function (value) {\n    queue.enqueue(value);\n  });\n  return queue;\n};\n\n/**\n * Static @.of function taking an arbitrary number of arguments & converting it\n * into a queue.\n *\n * @param  {...any} args\n * @return {Queue}\n */\nQueue.of = function () {\n  return Queue.from(arguments);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Queue;","map":{"version":3,"names":["Iterator","require","forEach","Queue","clear","prototype","items","offset","size","enqueue","item","push","dequeue","length","slice","peek","callback","scope","arguments","i","j","l","call","toArray","values","done","value","entries","Symbol","iterator","toString","join","toJSON","inspect","array","Object","defineProperty","enumerable","for","from","iterable","queue","of","module","exports"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/mnemonist/queue.js"],"sourcesContent":["/**\n * Mnemonist Queue\n * ================\n *\n * Queue implementation based on the ideas of Queue.js that seems to beat\n * a LinkedList one in performance.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach');\n\n/**\n * Queue\n *\n * @constructor\n */\nfunction Queue() {\n  this.clear();\n}\n\n/**\n * Method used to clear the queue.\n *\n * @return {undefined}\n */\nQueue.prototype.clear = function() {\n\n  // Properties\n  this.items = [];\n  this.offset = 0;\n  this.size = 0;\n};\n\n/**\n * Method used to add an item to the queue.\n *\n * @param  {any}    item - Item to enqueue.\n * @return {number}\n */\nQueue.prototype.enqueue = function(item) {\n\n  this.items.push(item);\n  return ++this.size;\n};\n\n/**\n * Method used to retrieve & remove the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.dequeue = function() {\n  if (!this.size)\n    return;\n\n  var item = this.items[this.offset];\n\n  if (++this.offset * 2 >= this.items.length) {\n    this.items = this.items.slice(this.offset);\n    this.offset = 0;\n  }\n\n  this.size--;\n\n  return item;\n};\n\n/**\n * Method used to retrieve the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.peek = function() {\n  if (!this.size)\n    return;\n\n  return this.items[this.offset];\n};\n\n/**\n * Method used to iterate over the queue.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nQueue.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  for (var i = this.offset, j = 0, l = this.items.length; i < l; i++, j++)\n    callback.call(scope, this.items[i], j, this);\n};\n\n/*\n * Method used to convert the queue to a JavaScript array.\n *\n * @return {array}\n */\nQueue.prototype.toArray = function() {\n  return this.items.slice(this.offset);\n};\n\n/**\n * Method used to create an iterator over a queue's values.\n *\n * @return {Iterator}\n */\nQueue.prototype.values = function() {\n  var items = this.items,\n      i = this.offset;\n\n  return new Iterator(function() {\n    if (i >= items.length)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n    i++;\n\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a queue's entries.\n *\n * @return {Iterator}\n */\nQueue.prototype.entries = function() {\n  var items = this.items,\n      i = this.offset,\n      j = 0;\n\n  return new Iterator(function() {\n    if (i >= items.length)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n    i++;\n\n    return {\n      value: [j++, value],\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  Queue.prototype[Symbol.iterator] = Queue.prototype.values;\n\n/**\n * Convenience known methods.\n */\nQueue.prototype.toString = function() {\n  return this.toArray().join(',');\n};\n\nQueue.prototype.toJSON = function() {\n  return this.toArray();\n};\n\nQueue.prototype.inspect = function() {\n  var array = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(array, 'constructor', {\n    value: Queue,\n    enumerable: false\n  });\n\n  return array;\n};\n\nif (typeof Symbol !== 'undefined')\n  Queue.prototype[Symbol.for('nodejs.util.inspect.custom')] = Queue.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a queue.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @return {Queue}\n */\nQueue.from = function(iterable) {\n  var queue = new Queue();\n\n  forEach(iterable, function(value) {\n    queue.enqueue(value);\n  });\n\n  return queue;\n};\n\n/**\n * Static @.of function taking an arbitrary number of arguments & converting it\n * into a queue.\n *\n * @param  {...any} args\n * @return {Queue}\n */\nQueue.of = function() {\n  return Queue.from(arguments);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Queue;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}