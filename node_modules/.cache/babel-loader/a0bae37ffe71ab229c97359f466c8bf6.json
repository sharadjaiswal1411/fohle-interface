{"ast":null,"code":"/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [{\n  inputs: [{\n    internalType: \"bytes\",\n    name: \"path\",\n    type: \"bytes\"\n  }, {\n    internalType: \"uint256\",\n    name: \"amountIn\",\n    type: \"uint256\"\n  }],\n  name: \"quoteExactInput\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"amountOut\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint160[]\",\n    name: \"v3SqrtPriceX96AfterList\",\n    type: \"uint160[]\"\n  }, {\n    internalType: \"uint32[]\",\n    name: \"v3InitializedTicksCrossedList\",\n    type: \"uint32[]\"\n  }, {\n    internalType: \"uint256\",\n    name: \"v3SwapGasEstimate\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"tokenIn\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"tokenOut\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"amountIn\",\n      type: \"uint256\"\n    }],\n    internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params\",\n    name: \"params\",\n    type: \"tuple\"\n  }],\n  name: \"quoteExactInputSingleV2\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"amountOut\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    components: [{\n      internalType: \"address\",\n      name: \"tokenIn\",\n      type: \"address\"\n    }, {\n      internalType: \"address\",\n      name: \"tokenOut\",\n      type: \"address\"\n    }, {\n      internalType: \"uint256\",\n      name: \"amountIn\",\n      type: \"uint256\"\n    }, {\n      internalType: \"uint24\",\n      name: \"fee\",\n      type: \"uint24\"\n    }, {\n      internalType: \"uint160\",\n      name: \"sqrtPriceLimitX96\",\n      type: \"uint160\"\n    }],\n    internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params\",\n    name: \"params\",\n    type: \"tuple\"\n  }],\n  name: \"quoteExactInputSingleV3\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"amountOut\",\n    type: \"uint256\"\n  }, {\n    internalType: \"uint160\",\n    name: \"sqrtPriceX96After\",\n    type: \"uint160\"\n  }, {\n    internalType: \"uint32\",\n    name: \"initializedTicksCrossed\",\n    type: \"uint32\"\n  }, {\n    internalType: \"uint256\",\n    name: \"gasEstimate\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\nexport class IMixedRouteQuoterV1__factory {\n  static createInterface() {\n    return new utils.Interface(_abi);\n  }\n  static connect(address, signerOrProvider) {\n    return new Contract(address, _abi, signerOrProvider);\n  }\n}\nIMixedRouteQuoterV1__factory.abi = _abi;","map":{"version":3,"sources":["../../../../../src/types/other/factories/IMixedRouteQuoterV1__factory.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\nimport { Contract, utils } from \"ethers\";\nconst _abi = [\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"path\",\n                type: \"bytes\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"amountIn\",\n                type: \"uint256\",\n            },\n        ],\n        name: \"quoteExactInput\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"amountOut\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint160[]\",\n                name: \"v3SqrtPriceX96AfterList\",\n                type: \"uint160[]\",\n            },\n            {\n                internalType: \"uint32[]\",\n                name: \"v3InitializedTicksCrossedList\",\n                type: \"uint32[]\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"v3SwapGasEstimate\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"tokenIn\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"tokenOut\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                ],\n                internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params\",\n                name: \"params\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"quoteExactInputSingleV2\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"amountOut\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"address\",\n                        name: \"tokenIn\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"tokenOut\",\n                        type: \"address\",\n                    },\n                    {\n                        internalType: \"uint256\",\n                        name: \"amountIn\",\n                        type: \"uint256\",\n                    },\n                    {\n                        internalType: \"uint24\",\n                        name: \"fee\",\n                        type: \"uint24\",\n                    },\n                    {\n                        internalType: \"uint160\",\n                        name: \"sqrtPriceLimitX96\",\n                        type: \"uint160\",\n                    },\n                ],\n                internalType: \"struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params\",\n                name: \"params\",\n                type: \"tuple\",\n            },\n        ],\n        name: \"quoteExactInputSingleV3\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"amountOut\",\n                type: \"uint256\",\n            },\n            {\n                internalType: \"uint160\",\n                name: \"sqrtPriceX96After\",\n                type: \"uint160\",\n            },\n            {\n                internalType: \"uint32\",\n                name: \"initializedTicksCrossed\",\n                type: \"uint32\",\n            },\n            {\n                internalType: \"uint256\",\n                name: \"gasEstimate\",\n                type: \"uint256\",\n            },\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\",\n    },\n];\nexport class IMixedRouteQuoterV1__factory {\n    static createInterface() {\n        return new utils.Interface(_abi);\n    }\n    static connect(address, signerOrProvider) {\n        return new Contract(address, _abi, signerOrProvider);\n    }\n}\nIMixedRouteQuoterV1__factory.abi = _abi;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSU1peGVkUm91dGVRdW90ZXJWMV9fZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy90eXBlcy9vdGhlci9mYWN0b3JpZXMvSU1peGVkUm91dGVRdW90ZXJWMV9fZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjtBQUdwQixPQUFPLEVBQUUsUUFBUSxFQUFVLEtBQUssRUFBRSxNQUFNLFFBQVEsQ0FBQztBQU1qRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLE9BQU87Z0JBQ3JCLElBQUksRUFBRSxNQUFNO2dCQUNaLElBQUksRUFBRSxPQUFPO2FBQ2Q7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFVBQVU7Z0JBQ2hCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsaUJBQWlCO1FBQ3ZCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsV0FBVztnQkFDekIsSUFBSSxFQUFFLHlCQUF5QjtnQkFDL0IsSUFBSSxFQUFFLFdBQVc7YUFDbEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsVUFBVTtnQkFDeEIsSUFBSSxFQUFFLCtCQUErQjtnQkFDckMsSUFBSSxFQUFFLFVBQVU7YUFDakI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLG1CQUFtQjtnQkFDekIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELGVBQWUsRUFBRSxZQUFZO1FBQzdCLElBQUksRUFBRSxVQUFVO0tBQ2pCO0lBQ0Q7UUFDRSxNQUFNLEVBQUU7WUFDTjtnQkFDRSxVQUFV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"]},"metadata":{},"sourceType":"module"}