{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React}from'@web3-react/core';import useIsWindowVisible from'hooks/useIsWindowVisible';import{createContext,useCallback,useContext,useEffect,useMemo,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var MISSING_PROVIDER=Symbol();var BlockNumberContext=/*#__PURE__*/createContext(MISSING_PROVIDER);function useBlockNumberContext(){var blockNumber=useContext(BlockNumberContext);if(blockNumber===MISSING_PROVIDER){throw new Error('BlockNumber hooks must be wrapped in a <BlockNumberProvider>');}return blockNumber;}/** Requires that BlockUpdater be installed in the DOM tree. */export default function useBlockNumber(){return useBlockNumberContext().value;}export function BlockNumberProvider(_ref){var children=_ref.children;var _useWeb3React=useWeb3React(),activeChainId=_useWeb3React.chainId,provider=_useWeb3React.provider;var _useState=useState({chainId:activeChainId}),_useState2=_slicedToArray(_useState,2),_useState2$=_useState2[0],chainId=_useState2$.chainId,block=_useState2$.block,setChainBlock=_useState2[1];var onBlock=useCallback(function(block){setChainBlock(function(chainBlock){if(chainBlock.chainId===activeChainId){if(!chainBlock.block||chainBlock.block<block){return{chainId:activeChainId,block:block};}}return chainBlock;});},[activeChainId,setChainBlock]);var windowVisible=useIsWindowVisible();useEffect(function(){var stale=false;if(provider&&activeChainId&&windowVisible){// If chainId hasn't changed, don't clear the block. This prevents re-fetching still valid data.\nsetChainBlock(function(chainBlock){return chainBlock.chainId===activeChainId?chainBlock:{chainId:activeChainId};});provider.getBlockNumber().then(function(block){if(!stale)onBlock(block);}).catch(function(error){console.error(\"Failed to get block number for chainId \".concat(activeChainId),error);});provider.on('block',onBlock);return function(){stale=true;provider.removeListener('block',onBlock);};}return void 0;},[activeChainId,provider,onBlock,setChainBlock,windowVisible]);var blockValue=useMemo(function(){return chainId===activeChainId?block:undefined;},[activeChainId,block,chainId]);var value=useMemo(function(){return{value:blockValue};},[blockValue]);return/*#__PURE__*/_jsx(BlockNumberContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["useWeb3React","useIsWindowVisible","createContext","useCallback","useContext","useEffect","useMemo","useState","MISSING_PROVIDER","Symbol","BlockNumberContext","useBlockNumberContext","blockNumber","Error","useBlockNumber","value","BlockNumberProvider","children","activeChainId","chainId","provider","block","setChainBlock","onBlock","chainBlock","windowVisible","stale","getBlockNumber","then","catch","error","console","on","removeListener","blockValue","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useBlockNumber.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { createContext, ReactNode, useCallback, useContext, useEffect, useMemo, useState } from 'react'\n\nconst MISSING_PROVIDER = Symbol()\nconst BlockNumberContext = createContext<\n  | {\n      value?: number\n    }\n  | typeof MISSING_PROVIDER\n>(MISSING_PROVIDER)\n\nfunction useBlockNumberContext() {\n  const blockNumber = useContext(BlockNumberContext)\n  if (blockNumber === MISSING_PROVIDER) {\n    throw new Error('BlockNumber hooks must be wrapped in a <BlockNumberProvider>')\n  }\n  return blockNumber\n}\n\n/** Requires that BlockUpdater be installed in the DOM tree. */\nexport default function useBlockNumber(): number | undefined {\n  return useBlockNumberContext().value\n}\n\nexport function BlockNumberProvider({ children }: { children: ReactNode }) {\n  const { chainId: activeChainId, provider } = useWeb3React()\n  const [{ chainId, block }, setChainBlock] = useState<{ chainId?: number; block?: number }>({ chainId: activeChainId })\n\n  const onBlock = useCallback(\n    (block: number) => {\n      setChainBlock((chainBlock) => {\n        if (chainBlock.chainId === activeChainId) {\n          if (!chainBlock.block || chainBlock.block < block) {\n            return { chainId: activeChainId, block }\n          }\n        }\n        return chainBlock\n      })\n    },\n    [activeChainId, setChainBlock]\n  )\n\n  const windowVisible = useIsWindowVisible()\n  useEffect(() => {\n    let stale = false\n\n    if (provider && activeChainId && windowVisible) {\n      // If chainId hasn't changed, don't clear the block. This prevents re-fetching still valid data.\n      setChainBlock((chainBlock) => (chainBlock.chainId === activeChainId ? chainBlock : { chainId: activeChainId }))\n\n      provider\n        .getBlockNumber()\n        .then((block) => {\n          if (!stale) onBlock(block)\n        })\n        .catch((error) => {\n          console.error(`Failed to get block number for chainId ${activeChainId}`, error)\n        })\n\n      provider.on('block', onBlock)\n      return () => {\n        stale = true\n        provider.removeListener('block', onBlock)\n      }\n    }\n\n    return void 0\n  }, [activeChainId, provider, onBlock, setChainBlock, windowVisible])\n\n  const blockValue = useMemo(() => (chainId === activeChainId ? block : undefined), [activeChainId, block, chainId])\n  const value = useMemo(() => ({ value: blockValue }), [blockValue])\n  return <BlockNumberContext.Provider value={value}>{children}</BlockNumberContext.Provider>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}