{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$(),\n  _s18 = $RefreshSig$(),\n  _s19 = $RefreshSig$(),\n  _s20 = $RefreshSig$(),\n  _s21 = $RefreshSig$(),\n  _s22 = $RefreshSig$();\nimport { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { DEFAULT_TXN_DISMISS_MS } from 'constants/misc';\nimport { useCallback, useEffect, useMemo, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { addPopup, ApplicationModal, removePopup, setFiatOnrampAvailability, setOpenModal } from './reducer';\nexport function useModalIsOpen(modal) {\n  _s();\n  const openModal = useAppSelector(state => state.application.openModal);\n  return openModal === modal;\n}\n\n/** @ref https://dashboard.moonpay.com/api_reference/client_side_api#ip_addresses */\n_s(useModalIsOpen, \"chkV+w6fn9d0CsYJvHeh+MQEAAA=\", false, function () {\n  return [useAppSelector];\n});\nasync function getMoonpayAvailability() {\n  var _data$isBuyAllowed;\n  const moonpayPublishableKey = process.env.REACT_APP_MOONPAY_PUBLISHABLE_KEY;\n  if (!moonpayPublishableKey) {\n    throw new Error('Must provide a publishable key for moonpay.');\n  }\n  const moonpayApiURI = process.env.REACT_APP_MOONPAY_API;\n  if (!moonpayApiURI) {\n    throw new Error('Must provide an api endpoint for moonpay.');\n  }\n  const res = await fetch(`${moonpayApiURI}/v4/ip_address?apiKey=${moonpayPublishableKey}`);\n  const data = await res.json();\n  return (_data$isBuyAllowed = data.isBuyAllowed) !== null && _data$isBuyAllowed !== void 0 ? _data$isBuyAllowed : false;\n}\nexport function useFiatOnrampAvailability(shouldCheck, callback) {\n  _s2();\n  const dispatch = useAppDispatch();\n  const {\n    available,\n    availabilityChecked\n  } = useAppSelector(state => state.application.fiatOnramp);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function checkAvailability() {\n      setError(null);\n      setLoading(true);\n      try {\n        const result = await getMoonpayAvailability();\n        sendAnalyticsEvent('MoonPay Geochecker', {\n          success: result\n        });\n        if (stale) return;\n        dispatch(setFiatOnrampAvailability(result));\n        if (result && callback) {\n          callback();\n        }\n      } catch (e) {\n        console.error('Error checking onramp availability', e.toString());\n        if (stale) return;\n        setError('Error, try again later.');\n        dispatch(setFiatOnrampAvailability(false));\n      } finally {\n        if (!stale) setLoading(false);\n      }\n    }\n    if (!availabilityChecked && shouldCheck) {\n      checkAvailability();\n    }\n    let stale = false;\n    return () => {\n      stale = true;\n    };\n  }, [availabilityChecked, callback, dispatch, shouldCheck]);\n  return {\n    available,\n    availabilityChecked,\n    loading,\n    error\n  };\n}\n_s2(useFiatOnrampAvailability, \"XX6+g8RkkgL0uFWsGRr0HR0e9U8=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useToggleModal(modal) {\n  _s3();\n  const isOpen = useModalIsOpen(modal);\n  const dispatch = useAppDispatch();\n  return useCallback(() => dispatch(setOpenModal(isOpen ? null : modal)), [dispatch, modal, isOpen]);\n}\n_s3(useToggleModal, \"35q867kKTx4YXe5K4KTNw+Yituo=\", false, function () {\n  return [useModalIsOpen, useAppDispatch];\n});\nexport function useCloseModal() {\n  _s4();\n  const dispatch = useAppDispatch();\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch]);\n}\n_s4(useCloseModal, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useToggleMetamaskConnectionErrorModal() {\n  _s5();\n  return useToggleModal(ApplicationModal.METAMASK_CONNECTION_ERROR);\n}\n_s5(useToggleMetamaskConnectionErrorModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useOpenModal(modal) {\n  _s6();\n  const dispatch = useAppDispatch();\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal]);\n}\n_s6(useOpenModal, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useToggleWalletModal() {\n  _s7();\n  return useToggleModal(ApplicationModal.WALLET);\n}\n_s7(useToggleWalletModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleWalletDropdown() {\n  _s8();\n  return useToggleModal(ApplicationModal.WALLET_DROPDOWN);\n}\n_s8(useToggleWalletDropdown, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleSettingsMenu() {\n  _s9();\n  return useToggleModal(ApplicationModal.SETTINGS);\n}\n_s9(useToggleSettingsMenu, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useShowClaimPopup() {\n  _s10();\n  return useModalIsOpen(ApplicationModal.CLAIM_POPUP);\n}\n_s10(useShowClaimPopup, \"6riQieP+Qf8JUul/xK+7Z6+fOaY=\", false, function () {\n  return [useModalIsOpen];\n});\nexport function useToggleShowClaimPopup() {\n  _s11();\n  return useToggleModal(ApplicationModal.CLAIM_POPUP);\n}\n_s11(useToggleShowClaimPopup, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleSelfClaimModal() {\n  _s12();\n  return useToggleModal(ApplicationModal.SELF_CLAIM);\n}\n_s12(useToggleSelfClaimModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleDelegateModal() {\n  _s13();\n  return useToggleModal(ApplicationModal.DELEGATE);\n}\n_s13(useToggleDelegateModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleVoteModal() {\n  _s14();\n  return useToggleModal(ApplicationModal.VOTE);\n}\n_s14(useToggleVoteModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleQueueModal() {\n  _s15();\n  return useToggleModal(ApplicationModal.QUEUE);\n}\n_s15(useToggleQueueModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleExecuteModal() {\n  _s16();\n  return useToggleModal(ApplicationModal.EXECUTE);\n}\n_s16(useToggleExecuteModal, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useTogglePrivacyPolicy() {\n  _s17();\n  return useToggleModal(ApplicationModal.PRIVACY_POLICY);\n}\n_s17(useTogglePrivacyPolicy, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useToggleFeatureFlags() {\n  _s18();\n  return useToggleModal(ApplicationModal.FEATURE_FLAGS);\n}\n\n// returns a function that allows adding a popup\n_s18(useToggleFeatureFlags, \"CunHD59oM6Hqt7aS0Nk/xoBmjcw=\", false, function () {\n  return [useToggleModal];\n});\nexport function useAddPopup() {\n  _s19();\n  const dispatch = useAppDispatch();\n  return useCallback((content, key, removeAfterMs) => {\n    dispatch(addPopup({\n      content,\n      key,\n      removeAfterMs: removeAfterMs !== null && removeAfterMs !== void 0 ? removeAfterMs : DEFAULT_TXN_DISMISS_MS\n    }));\n  }, [dispatch]);\n}\n\n// returns a function that allows removing a popup via its key\n_s19(useAddPopup, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useRemovePopup() {\n  _s20();\n  const dispatch = useAppDispatch();\n  return useCallback(key => {\n    dispatch(removePopup({\n      key\n    }));\n  }, [dispatch]);\n}\n\n// get the list of active popups\n_s20(useRemovePopup, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useActivePopups() {\n  _s21();\n  const list = useAppSelector(state => state.application.popupList);\n  return useMemo(() => list.filter(item => item.show), [list]);\n}\n\n// Get all required subgraph clients\n_s21(useActivePopups, \"jgLh1sQ8qQnjk81NppE1+nZBBXw=\", false, function () {\n  return [useAppSelector];\n});\nexport function useClients() {\n  _s22();\n  const dataClient = useDataClient();\n  const blockClient = useBlockClient();\n  return {\n    dataClient,\n    blockClient\n  };\n}\n_s22(useClients, \"57qr6vnp85UTrW7rO0kVkdkJnRg=\", true);","map":{"version":3,"names":["sendAnalyticsEvent","DEFAULT_TXN_DISMISS_MS","useCallback","useEffect","useMemo","useState","useAppDispatch","useAppSelector","addPopup","ApplicationModal","removePopup","setFiatOnrampAvailability","setOpenModal","useModalIsOpen","modal","openModal","state","application","getMoonpayAvailability","moonpayPublishableKey","process","env","REACT_APP_MOONPAY_PUBLISHABLE_KEY","Error","moonpayApiURI","REACT_APP_MOONPAY_API","res","fetch","data","json","isBuyAllowed","useFiatOnrampAvailability","shouldCheck","callback","dispatch","available","availabilityChecked","fiatOnramp","error","setError","loading","setLoading","checkAvailability","result","success","stale","e","console","toString","useToggleModal","isOpen","useCloseModal","useToggleMetamaskConnectionErrorModal","METAMASK_CONNECTION_ERROR","useOpenModal","useToggleWalletModal","WALLET","useToggleWalletDropdown","WALLET_DROPDOWN","useToggleSettingsMenu","SETTINGS","useShowClaimPopup","CLAIM_POPUP","useToggleShowClaimPopup","useToggleSelfClaimModal","SELF_CLAIM","useToggleDelegateModal","DELEGATE","useToggleVoteModal","VOTE","useToggleQueueModal","QUEUE","useToggleExecuteModal","EXECUTE","useTogglePrivacyPolicy","PRIVACY_POLICY","useToggleFeatureFlags","FEATURE_FLAGS","useAddPopup","content","key","removeAfterMs","useRemovePopup","useActivePopups","list","popupList","filter","item","show","useClients","dataClient","useDataClient","blockClient","useBlockClient"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/application/hooks.ts"],"sourcesContent":["import { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { DEFAULT_TXN_DISMISS_MS } from 'constants/misc'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { AppState } from '../index'\nimport {\n  addPopup,\n  ApplicationModal,\n  PopupContent,\n  removePopup,\n  setFiatOnrampAvailability,\n  setOpenModal,\n} from './reducer'\n\nexport function useModalIsOpen(modal: ApplicationModal): boolean {\n  const openModal = useAppSelector((state: AppState) => state.application.openModal)\n  return openModal === modal\n}\n\n/** @ref https://dashboard.moonpay.com/api_reference/client_side_api#ip_addresses */\ninterface MoonpayIPAddressesResponse {\n  alpha3?: string\n  isAllowed?: boolean\n  isBuyAllowed?: boolean\n  isSellAllowed?: boolean\n}\n\nasync function getMoonpayAvailability(): Promise<boolean> {\n  const moonpayPublishableKey = process.env.REACT_APP_MOONPAY_PUBLISHABLE_KEY\n  if (!moonpayPublishableKey) {\n    throw new Error('Must provide a publishable key for moonpay.')\n  }\n  const moonpayApiURI = process.env.REACT_APP_MOONPAY_API\n  if (!moonpayApiURI) {\n    throw new Error('Must provide an api endpoint for moonpay.')\n  }\n  const res = await fetch(`${moonpayApiURI}/v4/ip_address?apiKey=${moonpayPublishableKey}`)\n  const data = await (res.json() as Promise<MoonpayIPAddressesResponse>)\n  return data.isBuyAllowed ?? false\n}\n\nexport function useFiatOnrampAvailability(shouldCheck: boolean, callback?: () => void) {\n  const dispatch = useAppDispatch()\n  const { available, availabilityChecked } = useAppSelector((state: AppState) => state.application.fiatOnramp)\n  const [error, setError] = useState<string | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    async function checkAvailability() {\n      setError(null)\n      setLoading(true)\n      try {\n        const result = await getMoonpayAvailability()\n        sendAnalyticsEvent('MoonPay Geochecker', { success: result })\n        if (stale) return\n        dispatch(setFiatOnrampAvailability(result))\n        if (result && callback) {\n          callback()\n        }\n      } catch (e) {\n        console.error('Error checking onramp availability', e.toString())\n        if (stale) return\n        setError('Error, try again later.')\n        dispatch(setFiatOnrampAvailability(false))\n      } finally {\n        if (!stale) setLoading(false)\n      }\n    }\n\n    if (!availabilityChecked && shouldCheck) {\n      checkAvailability()\n    }\n\n    let stale = false\n    return () => {\n      stale = true\n    }\n  }, [availabilityChecked, callback, dispatch, shouldCheck])\n\n  return { available, availabilityChecked, loading, error }\n}\n\nexport function useToggleModal(modal: ApplicationModal): () => void {\n  const isOpen = useModalIsOpen(modal)\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(isOpen ? null : modal)), [dispatch, modal, isOpen])\n}\n\nexport function useCloseModal(): () => void {\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(null)), [dispatch])\n}\n\nexport function useToggleMetamaskConnectionErrorModal(): () => void {\n  return useToggleModal(ApplicationModal.METAMASK_CONNECTION_ERROR)\n}\n\nexport function useOpenModal(modal: ApplicationModal): () => void {\n  const dispatch = useAppDispatch()\n  return useCallback(() => dispatch(setOpenModal(modal)), [dispatch, modal])\n}\n\nexport function useToggleWalletModal(): () => void {\n  return useToggleModal(ApplicationModal.WALLET)\n}\n\nexport function useToggleWalletDropdown(): () => void {\n  return useToggleModal(ApplicationModal.WALLET_DROPDOWN)\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  return useToggleModal(ApplicationModal.SETTINGS)\n}\n\nexport function useShowClaimPopup(): boolean {\n  return useModalIsOpen(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleShowClaimPopup(): () => void {\n  return useToggleModal(ApplicationModal.CLAIM_POPUP)\n}\n\nexport function useToggleSelfClaimModal(): () => void {\n  return useToggleModal(ApplicationModal.SELF_CLAIM)\n}\n\nexport function useToggleDelegateModal(): () => void {\n  return useToggleModal(ApplicationModal.DELEGATE)\n}\n\nexport function useToggleVoteModal(): () => void {\n  return useToggleModal(ApplicationModal.VOTE)\n}\n\nexport function useToggleQueueModal(): () => void {\n  return useToggleModal(ApplicationModal.QUEUE)\n}\n\nexport function useToggleExecuteModal(): () => void {\n  return useToggleModal(ApplicationModal.EXECUTE)\n}\n\nexport function useTogglePrivacyPolicy(): () => void {\n  return useToggleModal(ApplicationModal.PRIVACY_POLICY)\n}\n\nexport function useToggleFeatureFlags(): () => void {\n  return useToggleModal(ApplicationModal.FEATURE_FLAGS)\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string, removeAfterMs?: number) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (content: PopupContent, key?: string, removeAfterMs?: number) => {\n      dispatch(addPopup({ content, key, removeAfterMs: removeAfterMs ?? DEFAULT_TXN_DISMISS_MS }))\n    },\n    [dispatch]\n  )\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({ key }))\n    },\n    [dispatch]\n  )\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useAppSelector((state: AppState) => state.application.popupList)\n  return useMemo(() => list.filter((item) => item.show), [list])\n}\n\n// Get all required subgraph clients\nexport function useClients(): {\n  dataClient: ApolloClient<NormalizedCacheObject>\n  blockClient: ApolloClient<NormalizedCacheObject>\n} {\n  const dataClient = useDataClient()\n  const blockClient = useBlockClient()\n  return {\n    dataClient,\n    blockClient,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}