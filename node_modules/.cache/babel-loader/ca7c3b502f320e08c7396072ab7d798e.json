{"ast":null,"code":"import { __awaiter, __extends, __generator } from \"tslib\";\nimport { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BaseTransport } from '@amplitude/analytics-core';\nvar SendBeaconTransport = /** @class */function (_super) {\n  __extends(SendBeaconTransport, _super);\n  function SendBeaconTransport() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SendBeaconTransport.prototype.send = function (serverUrl, payload) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n      return __generator(this, function (_a) {\n        return [2 /*return*/, new Promise(function (resolve, reject) {\n          var globalScope = getGlobalScope();\n          /* istanbul ignore if */\n          if (!(globalScope === null || globalScope === void 0 ? void 0 : globalScope.navigator.sendBeacon)) {\n            throw new Error('SendBeaconTransport is not supported');\n          }\n          try {\n            var data = JSON.stringify(payload);\n            var success = globalScope.navigator.sendBeacon(serverUrl, JSON.stringify(payload));\n            if (success) {\n              return resolve(_this.buildResponse({\n                code: 200,\n                events_ingested: payload.events.length,\n                payload_size_bytes: data.length,\n                server_upload_time: Date.now()\n              }));\n            }\n            return resolve(_this.buildResponse({\n              code: 500\n            }));\n          } catch (e) {\n            reject(e);\n          }\n        })];\n      });\n    });\n  };\n  return SendBeaconTransport;\n}(BaseTransport);\nexport { SendBeaconTransport };","map":{"version":3,"sources":["../../../src/transports/send-beacon.ts"],"names":[],"mappings":";AAAA,SAAS,cAAc,QAAQ,oCAAoC;AACnE,SAAS,aAAa,QAAQ,2BAA2B;AAGzD,IAAA,mBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAyC,SAAA,CAAA,mBAAA,EAAA,MAAA,CAAA;EAAzC,SAAA,mBAAA,GAAA;;EA2BA;EA1BQ,mBAAA,CAAA,SAAA,CAAA,IAAI,GAAV,UAAW,SAAiB,EAAE,OAAgB,EAAA;;;;QAC5C,OAAA,CAAA,CAAA,CAAA,YAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAA;UACjC,IAAM,WAAW,GAAG,cAAc,EAAE;UACpC;UACA,IAAI,EAAC,WAAW,KAAA,IAAA,IAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CAAE,SAAS,CAAC,UAAU,CAAA,EAAE;YACtC,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC;UACxD;UACD,IAAI;YACF,IAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACpC,IAAM,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;YACpF,IAAI,OAAO,EAAE;cACX,OAAO,OAAO,CACZ,KAAI,CAAC,aAAa,CAAC;gBACjB,IAAI,EAAE,GAAG;gBACT,eAAe,EAAE,OAAO,CAAC,MAAM,CAAC,MAAM;gBACtC,kBAAkB,EAAE,IAAI,CAAC,MAAM;gBAC/B,kBAAkB,EAAE,IAAI,CAAC,GAAG;eAC7B,CAAC,CACH;YACF;YACD,OAAO,OAAO,CAAC,KAAI,CAAC,aAAa,CAAC;cAAE,IAAI,EAAE;YAAG,CAAE,CAAC,CAAC;WAClD,CAAC,OAAO,CAAC,EAAE;YACV,MAAM,CAAC,CAAC,CAAC;UACV;QACH,CAAC,CAAC,CAAA;;;GACH;EACH,OAAA,mBAAC;AAAD,CAAC,CA3BwC,aAAa,CAAA","sourcesContent":["import { getGlobalScope } from '@amplitude/analytics-client-common';\nimport { BaseTransport } from '@amplitude/analytics-core';\nimport { Payload, Response, Transport } from '@amplitude/analytics-types';\n\nexport class SendBeaconTransport extends BaseTransport implements Transport {\n  async send(serverUrl: string, payload: Payload): Promise<Response | null> {\n    return new Promise((resolve, reject) => {\n      const globalScope = getGlobalScope();\n      /* istanbul ignore if */\n      if (!globalScope?.navigator.sendBeacon) {\n        throw new Error('SendBeaconTransport is not supported');\n      }\n      try {\n        const data = JSON.stringify(payload);\n        const success = globalScope.navigator.sendBeacon(serverUrl, JSON.stringify(payload));\n        if (success) {\n          return resolve(\n            this.buildResponse({\n              code: 200,\n              events_ingested: payload.events.length,\n              payload_size_bytes: data.length,\n              server_upload_time: Date.now(),\n            }),\n          );\n        }\n        return resolve(this.buildResponse({ code: 500 }));\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}