{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/AccountDetailsV2/TransactionBody.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { Fraction, TradeType } from '@uniswap/sdk-core';\nimport JSBI from 'jsbi';\nimport { TransactionType } from 'state/transactions/types';\nimport { nativeOnChain } from '../../constants/tokens';\nimport { useCurrency, useToken } from '../../hooks/Tokens';\nimport useENSName from '../../hooks/useENSName';\nimport { shortenAddress } from '../../utils';\nimport { TransactionState } from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HighlightText = _styled.span.withConfig({\n  displayName: \"TransactionBody__HighlightText\",\n  componentId: \"sc-8d87lu-0\"\n})([\"color:\", \";font-weight:600;\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.textPrimary;\n});\nconst BodyWrap = _styled.div.withConfig({\n  displayName: \"TransactionBody__BodyWrap\",\n  componentId: \"sc-8d87lu-1\"\n})([\"line-height:20px;\"]);\nconst Action = _ref2 => {\n  let {\n    pending,\n    success,\n    failed,\n    transactionState\n  } = _ref2;\n  switch (transactionState) {\n    case TransactionState.Failed:\n      return failed;\n    case TransactionState.Success:\n      return success;\n    default:\n      return pending;\n  }\n};\n_c = Action;\nconst formatAmount = (amountRaw, decimals, sigFigs) => new Fraction(amountRaw, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals))).toSignificant(sigFigs);\nconst FailedText = _ref3 => {\n  let {\n    transactionState\n  } = _ref3;\n  return transactionState === TransactionState.Failed ? /*#__PURE__*/_jsxDEV(Trans, {\n    id: \"failed\"\n  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 74\n  }, this);\n};\n_c2 = FailedText;\nconst FormattedCurrencyAmount = _ref4 => {\n  _s();\n  let {\n    rawAmount,\n    currencyId\n  } = _ref4;\n  const currency = useCurrency(currencyId);\n  return currency ? /*#__PURE__*/_jsxDEV(HighlightText, {\n    children: [formatAmount(rawAmount, currency.decimals, /* sigFigs= */6), \" \", currency.symbol]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(FormattedCurrencyAmount, \"5O5/jvnaZBQu0avFxKvV0yjrlmo=\", false, function () {\n  return [useCurrency];\n});\n_c3 = FormattedCurrencyAmount;\nconst getRawAmounts = info => {\n  return info.tradeType === TradeType.EXACT_INPUT ? {\n    rawAmountFrom: info.inputCurrencyAmountRaw,\n    rawAmountTo: info.expectedOutputCurrencyAmountRaw\n  } : {\n    rawAmountFrom: info.expectedInputCurrencyAmountRaw,\n    rawAmountTo: info.outputCurrencyAmountRaw\n  };\n};\nconst SwapSummary = _ref5 => {\n  let {\n    info,\n    transactionState\n  } = _ref5;\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Swapping\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Swapped\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Swap\"\n    }, void 0, false, void 0, this)\n  };\n  const {\n    rawAmountFrom,\n    rawAmountTo\n  } = getRawAmounts(info);\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: rawAmountFrom,\n      currencyId: info.inputCurrencyId,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"for\"\n    }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: rawAmountTo,\n      currencyId: info.outputCurrencyId,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c4 = SwapSummary;\nconst AddLiquidityV3PoolSummary = _ref6 => {\n  let {\n    info,\n    transactionState\n  } = _ref6;\n  const {\n    createPool,\n    quoteCurrencyId,\n    baseCurrencyId\n  } = info;\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Adding\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Added\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Add\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [createPool ? /*#__PURE__*/_jsxDEV(CreateV3PoolSummary, {\n      info: info,\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Action, {\n        ...actionProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n        rawAmount: info.expectedAmountBaseRaw,\n        currencyId: baseCurrencyId,\n        sigFigs: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"and\"\n      }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n        rawAmount: info.expectedAmountQuoteRaw,\n        currencyId: quoteCurrencyId,\n        sigFigs: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n};\n_c5 = AddLiquidityV3PoolSummary;\nconst RemoveLiquidityV3Summary = _ref7 => {\n  let {\n    info: {\n      baseCurrencyId,\n      quoteCurrencyId,\n      expectedAmountBaseRaw,\n      expectedAmountQuoteRaw\n    },\n    transactionState\n  } = _ref7;\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Removing\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Removed\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Remove\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: expectedAmountBaseRaw,\n      currencyId: baseCurrencyId,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"and\"\n    }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: expectedAmountQuoteRaw,\n      currencyId: quoteCurrencyId,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_c6 = RemoveLiquidityV3Summary;\nconst CreateV3PoolSummary = _ref8 => {\n  _s2();\n  let {\n    info: {\n      baseCurrencyId,\n      quoteCurrencyId\n    },\n    transactionState\n  } = _ref8;\n  const baseCurrency = useCurrency(baseCurrencyId);\n  const quoteCurrency = useCurrency(quoteCurrencyId);\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Creating\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Created\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Create\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(HighlightText, {\n      children: [baseCurrency === null || baseCurrency === void 0 ? void 0 : baseCurrency.symbol, \"/\", quoteCurrency === null || quoteCurrency === void 0 ? void 0 : quoteCurrency.symbol, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Pool\"\n    }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s2(CreateV3PoolSummary, \"9i/+d2309waocLPS22g0M3xqd4M=\", false, function () {\n  return [useCurrency, useCurrency];\n});\n_c7 = CreateV3PoolSummary;\nconst CollectFeesSummary = _ref9 => {\n  let {\n    info,\n    transactionState\n  } = _ref9;\n  const {\n    currencyId0,\n    expectedCurrencyOwed0 = '0',\n    expectedCurrencyOwed1 = '0',\n    currencyId1\n  } = info;\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Collecting\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Collected\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Collect\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: expectedCurrencyOwed0,\n      currencyId: currencyId0,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"and\"\n    }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(FormattedCurrencyAmount, {\n      rawAmount: expectedCurrencyOwed1,\n      currencyId: currencyId1,\n      sigFigs: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"fees\"\n    }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_c8 = CollectFeesSummary;\nconst ApprovalSummary = _ref10 => {\n  _s3();\n  let {\n    info,\n    transactionState\n  } = _ref10;\n  const token = useToken(info.tokenAddress);\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Approving\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Approved\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Approve\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(HighlightText, {\n      children: token === null || token === void 0 ? void 0 : token.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 35\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s3(ApprovalSummary, \"YdEbLWY6/B/ql2/5vHiby7UXKcg=\", false, function () {\n  return [useToken];\n});\n_c9 = ApprovalSummary;\nconst ClaimSummary = _ref11 => {\n  _s4();\n  let {\n    info: {\n      recipient,\n      uniAmountRaw\n    },\n    transactionState\n  } = _ref11;\n  const {\n    ENSName\n  } = useENSName();\n  const actionProps = {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Claiming\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Claimed\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Claim\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [uniAmountRaw && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Action, {\n        ...actionProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(HighlightText, {\n        children: [formatAmount(uniAmountRaw, 18, 4), \"UNI\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"for\"\n      }, void 0, false, void 0, this), \" \", /*#__PURE__*/_jsxDEV(HighlightText, {\n        children: ENSName !== null && ENSName !== void 0 ? ENSName : shortenAddress(recipient)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s4(ClaimSummary, \"jMRvCZzl/uvVZoUkvPnaatTTpG0=\", false, function () {\n  return [useENSName];\n});\n_c10 = ClaimSummary;\nconst WrapSummary = _ref12 => {\n  var _native$wrapped$symbo, _native$symbol, _native$symbol2, _native$wrapped$symbo2;\n  let {\n    info: {\n      chainId,\n      currencyAmountRaw,\n      unwrapped\n    },\n    transactionState\n  } = _ref12;\n  const native = chainId ? nativeOnChain(chainId) : undefined;\n  const from = unwrapped ? (_native$wrapped$symbo = native === null || native === void 0 ? void 0 : native.wrapped.symbol) !== null && _native$wrapped$symbo !== void 0 ? _native$wrapped$symbo : 'WETH' : (_native$symbol = native === null || native === void 0 ? void 0 : native.symbol) !== null && _native$symbol !== void 0 ? _native$symbol : 'ETH';\n  const to = unwrapped ? (_native$symbol2 = native === null || native === void 0 ? void 0 : native.symbol) !== null && _native$symbol2 !== void 0 ? _native$symbol2 : 'ETH' : (_native$wrapped$symbo2 = native === null || native === void 0 ? void 0 : native.wrapped.symbol) !== null && _native$wrapped$symbo2 !== void 0 ? _native$wrapped$symbo2 : 'WETH';\n  const amount = formatAmount(currencyAmountRaw, 18, 6);\n  const actionProps = unwrapped ? {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Unwrapping\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Unwrapped\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Unwrap\"\n    }, void 0, false, void 0, this)\n  } : {\n    transactionState,\n    pending: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Wrapping\"\n    }, void 0, false, void 0, this),\n    success: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Wrapped\"\n    }, void 0, false, void 0, this),\n    failed: /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"Wrap\"\n    }, void 0, false, void 0, this)\n  };\n  return /*#__PURE__*/_jsxDEV(BodyWrap, {\n    children: [/*#__PURE__*/_jsxDEV(Action, {\n      ...actionProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(HighlightText, {\n      children: [amount, \" \", from]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(Trans, {\n      id: \"to\"\n    }, void 0, false, void 0, this), ' ', /*#__PURE__*/_jsxDEV(HighlightText, {\n      children: [amount, \" \", to]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), ' ', /*#__PURE__*/_jsxDEV(FailedText, {\n      transactionState: transactionState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n};\n_c11 = WrapSummary;\nconst TransactionBody = _ref13 => {\n  let {\n    info,\n    transactionState\n  } = _ref13;\n  switch (info.type) {\n    case TransactionType.SWAP:\n      return /*#__PURE__*/_jsxDEV(SwapSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 14\n      }, this);\n    case TransactionType.ADD_LIQUIDITY_V3_POOL:\n      return /*#__PURE__*/_jsxDEV(AddLiquidityV3PoolSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 14\n      }, this);\n    case TransactionType.REMOVE_LIQUIDITY_V3:\n      return /*#__PURE__*/_jsxDEV(RemoveLiquidityV3Summary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 14\n      }, this);\n    case TransactionType.WRAP:\n      return /*#__PURE__*/_jsxDEV(WrapSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 14\n      }, this);\n    case TransactionType.COLLECT_FEES:\n      return /*#__PURE__*/_jsxDEV(CollectFeesSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 14\n      }, this);\n    case TransactionType.APPROVAL:\n      return /*#__PURE__*/_jsxDEV(ApprovalSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 14\n      }, this);\n    case TransactionType.CLAIM:\n      return /*#__PURE__*/_jsxDEV(ClaimSummary, {\n        info: info,\n        transactionState: transactionState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 14\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 14\n      }, this);\n  }\n};\n_c12 = TransactionBody;\nexport default TransactionBody;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"Action\");\n$RefreshReg$(_c2, \"FailedText\");\n$RefreshReg$(_c3, \"FormattedCurrencyAmount\");\n$RefreshReg$(_c4, \"SwapSummary\");\n$RefreshReg$(_c5, \"AddLiquidityV3PoolSummary\");\n$RefreshReg$(_c6, \"RemoveLiquidityV3Summary\");\n$RefreshReg$(_c7, \"CreateV3PoolSummary\");\n$RefreshReg$(_c8, \"CollectFeesSummary\");\n$RefreshReg$(_c9, \"ApprovalSummary\");\n$RefreshReg$(_c10, \"ClaimSummary\");\n$RefreshReg$(_c11, \"WrapSummary\");\n$RefreshReg$(_c12, \"TransactionBody\");","map":{"version":3,"names":["Fraction","TradeType","JSBI","TransactionType","nativeOnChain","useCurrency","useToken","useENSName","shortenAddress","TransactionState","HighlightText","styled","span","theme","textPrimary","BodyWrap","div","Action","pending","success","failed","transactionState","Failed","Success","formatAmount","amountRaw","decimals","sigFigs","exponentiate","BigInt","toSignificant","FailedText","FormattedCurrencyAmount","rawAmount","currencyId","currency","symbol","getRawAmounts","info","tradeType","EXACT_INPUT","rawAmountFrom","inputCurrencyAmountRaw","rawAmountTo","expectedOutputCurrencyAmountRaw","expectedInputCurrencyAmountRaw","outputCurrencyAmountRaw","SwapSummary","actionProps","inputCurrencyId","outputCurrencyId","AddLiquidityV3PoolSummary","createPool","quoteCurrencyId","baseCurrencyId","expectedAmountBaseRaw","expectedAmountQuoteRaw","RemoveLiquidityV3Summary","CreateV3PoolSummary","baseCurrency","quoteCurrency","CollectFeesSummary","currencyId0","expectedCurrencyOwed0","expectedCurrencyOwed1","currencyId1","ApprovalSummary","token","tokenAddress","ClaimSummary","recipient","uniAmountRaw","ENSName","WrapSummary","chainId","currencyAmountRaw","unwrapped","native","undefined","from","wrapped","to","amount","TransactionBody","type","SWAP","ADD_LIQUIDITY_V3_POOL","REMOVE_LIQUIDITY_V3","WRAP","COLLECT_FEES","APPROVAL","CLAIM"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/AccountDetailsV2/TransactionBody.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Fraction, TradeType } from '@uniswap/sdk-core'\nimport JSBI from 'jsbi'\nimport {\n  AddLiquidityV3PoolTransactionInfo,\n  ApproveTransactionInfo,\n  ClaimTransactionInfo,\n  CollectFeesTransactionInfo,\n  ExactInputSwapTransactionInfo,\n  ExactOutputSwapTransactionInfo,\n  RemoveLiquidityV3TransactionInfo,\n  TransactionInfo,\n  TransactionType,\n  WrapTransactionInfo,\n} from 'state/transactions/types'\nimport styled from 'styled-components/macro'\n\nimport { nativeOnChain } from '../../constants/tokens'\nimport { useCurrency, useToken } from '../../hooks/Tokens'\nimport useENSName from '../../hooks/useENSName'\nimport { shortenAddress } from '../../utils'\nimport { TransactionState } from './index'\n\nconst HighlightText = styled.span`\n  color: ${({ theme }) => theme.textPrimary};\n  font-weight: 600;\n`\n\nconst BodyWrap = styled.div`\n  line-height: 20px;\n`\n\ninterface ActionProps {\n  pending: JSX.Element\n  success: JSX.Element\n  failed: JSX.Element\n  transactionState: TransactionState\n}\n\nconst Action = ({ pending, success, failed, transactionState }: ActionProps) => {\n  switch (transactionState) {\n    case TransactionState.Failed:\n      return failed\n    case TransactionState.Success:\n      return success\n    default:\n      return pending\n  }\n}\n\nconst formatAmount = (amountRaw: string, decimals: number, sigFigs: number): string =>\n  new Fraction(amountRaw, JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(decimals))).toSignificant(sigFigs)\n\nconst FailedText = ({ transactionState }: { transactionState: TransactionState }) =>\n  transactionState === TransactionState.Failed ? <Trans>failed</Trans> : <span />\n\nconst FormattedCurrencyAmount = ({\n  rawAmount,\n  currencyId,\n}: {\n  rawAmount: string\n  currencyId: string\n  sigFigs: number\n}) => {\n  const currency = useCurrency(currencyId)\n\n  return currency ? (\n    <HighlightText>\n      {formatAmount(rawAmount, currency.decimals, /* sigFigs= */ 6)} {currency.symbol}\n    </HighlightText>\n  ) : null\n}\n\nconst getRawAmounts = (\n  info: ExactInputSwapTransactionInfo | ExactOutputSwapTransactionInfo\n): { rawAmountFrom: string; rawAmountTo: string } => {\n  return info.tradeType === TradeType.EXACT_INPUT\n    ? { rawAmountFrom: info.inputCurrencyAmountRaw, rawAmountTo: info.expectedOutputCurrencyAmountRaw }\n    : { rawAmountFrom: info.expectedInputCurrencyAmountRaw, rawAmountTo: info.outputCurrencyAmountRaw }\n}\n\nconst SwapSummary = ({\n  info,\n  transactionState,\n}: {\n  info: ExactInputSwapTransactionInfo | ExactOutputSwapTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Swapping</Trans>,\n    success: <Trans>Swapped</Trans>,\n    failed: <Trans>Swap</Trans>,\n  }\n  const { rawAmountFrom, rawAmountTo } = getRawAmounts(info)\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} />{' '}\n      <FormattedCurrencyAmount rawAmount={rawAmountFrom} currencyId={info.inputCurrencyId} sigFigs={2} />{' '}\n      <Trans>for </Trans>{' '}\n      <FormattedCurrencyAmount rawAmount={rawAmountTo} currencyId={info.outputCurrencyId} sigFigs={2} />{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst AddLiquidityV3PoolSummary = ({\n  info,\n  transactionState,\n}: {\n  info: AddLiquidityV3PoolTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const { createPool, quoteCurrencyId, baseCurrencyId } = info\n\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Adding</Trans>,\n    success: <Trans>Added</Trans>,\n    failed: <Trans>Add</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      {createPool ? (\n        <CreateV3PoolSummary info={info} transactionState={transactionState} />\n      ) : (\n        <>\n          <Action {...actionProps} />{' '}\n          <FormattedCurrencyAmount rawAmount={info.expectedAmountBaseRaw} currencyId={baseCurrencyId} sigFigs={2} />{' '}\n          <Trans>and</Trans>{' '}\n          <FormattedCurrencyAmount rawAmount={info.expectedAmountQuoteRaw} currencyId={quoteCurrencyId} sigFigs={2} />\n        </>\n      )}{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst RemoveLiquidityV3Summary = ({\n  info: { baseCurrencyId, quoteCurrencyId, expectedAmountBaseRaw, expectedAmountQuoteRaw },\n  transactionState,\n}: {\n  info: RemoveLiquidityV3TransactionInfo\n  transactionState: TransactionState\n}) => {\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Removing</Trans>,\n    success: <Trans>Removed</Trans>,\n    failed: <Trans>Remove</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} />{' '}\n      <FormattedCurrencyAmount rawAmount={expectedAmountBaseRaw} currencyId={baseCurrencyId} sigFigs={2} />{' '}\n      <Trans>and</Trans>{' '}\n      <FormattedCurrencyAmount rawAmount={expectedAmountQuoteRaw} currencyId={quoteCurrencyId} sigFigs={2} />{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst CreateV3PoolSummary = ({\n  info: { baseCurrencyId, quoteCurrencyId },\n  transactionState,\n}: {\n  info: AddLiquidityV3PoolTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const baseCurrency = useCurrency(baseCurrencyId)\n  const quoteCurrency = useCurrency(quoteCurrencyId)\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Creating</Trans>,\n    success: <Trans>Created</Trans>,\n    failed: <Trans>Create</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} />{' '}\n      <HighlightText>\n        {baseCurrency?.symbol}/{quoteCurrency?.symbol}{' '}\n      </HighlightText>\n      <Trans>Pool</Trans> <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst CollectFeesSummary = ({\n  info,\n  transactionState,\n}: {\n  info: CollectFeesTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const { currencyId0, expectedCurrencyOwed0 = '0', expectedCurrencyOwed1 = '0', currencyId1 } = info\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Collecting</Trans>,\n    success: <Trans>Collected</Trans>,\n    failed: <Trans>Collect</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} />{' '}\n      <FormattedCurrencyAmount rawAmount={expectedCurrencyOwed0} currencyId={currencyId0} sigFigs={2} />{' '}\n      <Trans>and</Trans>{' '}\n      <FormattedCurrencyAmount rawAmount={expectedCurrencyOwed1} currencyId={currencyId1} sigFigs={2} />{' '}\n      <Trans>fees</Trans> <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst ApprovalSummary = ({\n  info,\n  transactionState,\n}: {\n  info: ApproveTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const token = useToken(info.tokenAddress)\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Approving</Trans>,\n    success: <Trans>Approved</Trans>,\n    failed: <Trans>Approve</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} /> <HighlightText>{token?.symbol}</HighlightText>{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst ClaimSummary = ({\n  info: { recipient, uniAmountRaw },\n  transactionState,\n}: {\n  info: ClaimTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const { ENSName } = useENSName()\n  const actionProps = {\n    transactionState,\n    pending: <Trans>Claiming</Trans>,\n    success: <Trans>Claimed</Trans>,\n    failed: <Trans>Claim</Trans>,\n  }\n\n  return (\n    <BodyWrap>\n      {uniAmountRaw && (\n        <>\n          <Action {...actionProps} />{' '}\n          <HighlightText>\n            {formatAmount(uniAmountRaw, 18, 4)}\n            UNI{' '}\n          </HighlightText>{' '}\n          <Trans>for</Trans> <HighlightText>{ENSName ?? shortenAddress(recipient)}</HighlightText>\n        </>\n      )}{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst WrapSummary = ({\n  info: { chainId, currencyAmountRaw, unwrapped },\n  transactionState,\n}: {\n  info: WrapTransactionInfo\n  transactionState: TransactionState\n}) => {\n  const native = chainId ? nativeOnChain(chainId) : undefined\n  const from = unwrapped ? native?.wrapped.symbol ?? 'WETH' : native?.symbol ?? 'ETH'\n  const to = unwrapped ? native?.symbol ?? 'ETH' : native?.wrapped.symbol ?? 'WETH'\n\n  const amount = formatAmount(currencyAmountRaw, 18, 6)\n  const actionProps = unwrapped\n    ? {\n        transactionState,\n        pending: <Trans>Unwrapping</Trans>,\n        success: <Trans>Unwrapped</Trans>,\n        failed: <Trans>Unwrap</Trans>,\n      }\n    : {\n        transactionState,\n        pending: <Trans>Wrapping</Trans>,\n        success: <Trans>Wrapped</Trans>,\n        failed: <Trans>Wrap</Trans>,\n      }\n\n  return (\n    <BodyWrap>\n      <Action {...actionProps} />{' '}\n      <HighlightText>\n        {amount} {from}\n      </HighlightText>{' '}\n      <Trans>to</Trans>{' '}\n      <HighlightText>\n        {amount} {to}\n      </HighlightText>{' '}\n      <FailedText transactionState={transactionState} />\n    </BodyWrap>\n  )\n}\n\nconst TransactionBody = ({ info, transactionState }: { info: TransactionInfo; transactionState: TransactionState }) => {\n  switch (info.type) {\n    case TransactionType.SWAP:\n      return <SwapSummary info={info} transactionState={transactionState} />\n    case TransactionType.ADD_LIQUIDITY_V3_POOL:\n      return <AddLiquidityV3PoolSummary info={info} transactionState={transactionState} />\n    case TransactionType.REMOVE_LIQUIDITY_V3:\n      return <RemoveLiquidityV3Summary info={info} transactionState={transactionState} />\n    case TransactionType.WRAP:\n      return <WrapSummary info={info} transactionState={transactionState} />\n    case TransactionType.COLLECT_FEES:\n      return <CollectFeesSummary info={info} transactionState={transactionState} />\n    case TransactionType.APPROVAL:\n      return <ApprovalSummary info={info} transactionState={transactionState} />\n    case TransactionType.CLAIM:\n      return <ClaimSummary info={info} transactionState={transactionState} />\n    default:\n      return <span />\n  }\n}\n\nexport default TransactionBody\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}