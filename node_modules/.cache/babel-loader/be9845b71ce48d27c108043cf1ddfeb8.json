{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{addPoolKeys,updatePoolChartData,updatePoolTransactions,updateTickData}from'state/pools/actions';import{useCallback,useEffect,useState}from'react';import{useDispatch,useSelector}from'react-redux';import{updatePoolData}from'./actions';import{notEmpty}from'utils';import{fetchPoolChartData}from'data/pools/chartData';import{fetchPoolTransactions}from'data/pools/transactions';import{useActiveNetworkVersion,useClients}from'state/application/hooks';export function useAllPoolData(){var _useActiveNetworkVers=useActiveNetworkVersion(),_useActiveNetworkVers2=_slicedToArray(_useActiveNetworkVers,1),network=_useActiveNetworkVers2[0];return useSelector(function(state){var _state$pools$byAddres;return(_state$pools$byAddres=state.pools.byAddress[network.id])!==null&&_state$pools$byAddres!==void 0?_state$pools$byAddres:{};});}export function useUpdatePoolData(){var dispatch=useDispatch();var _useActiveNetworkVers3=useActiveNetworkVersion(),_useActiveNetworkVers4=_slicedToArray(_useActiveNetworkVers3,1),network=_useActiveNetworkVers4[0];return useCallback(function(pools){return dispatch(updatePoolData({pools:pools,networkId:network.id}));},[dispatch,network.id]);}export function useAddPoolKeys(){var dispatch=useDispatch();var _useActiveNetworkVers5=useActiveNetworkVersion(),_useActiveNetworkVers6=_slicedToArray(_useActiveNetworkVers5,1),network=_useActiveNetworkVers6[0];return useCallback(function(poolAddresses){return dispatch(addPoolKeys({poolAddresses:poolAddresses,networkId:network.id}));},[dispatch,network.id]);}export function usePoolDatas(poolAddresses){var allPoolData=useAllPoolData();var addPoolKeys=useAddPoolKeys();var untrackedAddresses=poolAddresses.reduce(function(accum,address){if(!Object.keys(allPoolData).includes(address)){accum.push(address);}return accum;},[]);useEffect(function(){if(untrackedAddresses){addPoolKeys(untrackedAddresses);}return;},[addPoolKeys,untrackedAddresses]);// filter for pools with data\nvar poolsWithData=poolAddresses.map(function(address){var _allPoolData$address;var poolData=(_allPoolData$address=allPoolData[address])===null||_allPoolData$address===void 0?void 0:_allPoolData$address.data;return poolData!==null&&poolData!==void 0?poolData:undefined;}).filter(notEmpty);return poolsWithData;}/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */export function usePoolChartData(address){var dispatch=useDispatch();var _useActiveNetworkVers7=useActiveNetworkVersion(),_useActiveNetworkVers8=_slicedToArray(_useActiveNetworkVers7,1),activeNetwork=_useActiveNetworkVers8[0];var pool=useSelector(function(state){var _state$pools$byAddres2;return(_state$pools$byAddres2=state.pools.byAddress[activeNetwork.id])===null||_state$pools$byAddres2===void 0?void 0:_state$pools$byAddres2[address];});var chartData=pool===null||pool===void 0?void 0:pool.chartData;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),error=_useState2[0],setError=_useState2[1];var _useClients=useClients(),dataClient=_useClients.dataClient;useEffect(function(){function fetch(){return _fetch.apply(this,arguments);}function _fetch(){_fetch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$fetchPoolChart,error,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetchPoolChartData(address,dataClient);case 2:_yield$fetchPoolChart=_context.sent;error=_yield$fetchPoolChart.error;data=_yield$fetchPoolChart.data;if(!error&&data){dispatch(updatePoolChartData({poolAddress:address,chartData:data,networkId:activeNetwork.id}));}if(error){setError(error);}case 7:case\"end\":return _context.stop();}}},_callee);}));return _fetch.apply(this,arguments);}if(!chartData&&!error){fetch();}},[address,dispatch,error,chartData,dataClient,activeNetwork.id]);// return data\nreturn chartData;}/**\n * Get all transactions on pool\n * @param address\n */export function usePoolTransactions(address){var dispatch=useDispatch();var _useActiveNetworkVers9=useActiveNetworkVersion(),_useActiveNetworkVers10=_slicedToArray(_useActiveNetworkVers9,1),activeNetwork=_useActiveNetworkVers10[0];var pool=useSelector(function(state){var _state$pools$byAddres3;return(_state$pools$byAddres3=state.pools.byAddress[activeNetwork.id])===null||_state$pools$byAddres3===void 0?void 0:_state$pools$byAddres3[address];});var transactions=pool===null||pool===void 0?void 0:pool.transactions;var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useClients2=useClients(),dataClient=_useClients2.dataClient;useEffect(function(){function fetch(){return _fetch2.apply(this,arguments);}function _fetch2(){_fetch2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$fetchPoolTrans,error,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchPoolTransactions(address,dataClient);case 2:_yield$fetchPoolTrans=_context2.sent;error=_yield$fetchPoolTrans.error;data=_yield$fetchPoolTrans.data;if(error){setError(true);}else if(data){dispatch(updatePoolTransactions({poolAddress:address,transactions:data,networkId:activeNetwork.id}));}case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _fetch2.apply(this,arguments);}if(!transactions&&!error){fetch();}},[address,dispatch,error,transactions,dataClient,activeNetwork.id]);// return data\nreturn transactions;}export function usePoolTickData(address){var dispatch=useDispatch();var _useActiveNetworkVers11=useActiveNetworkVersion(),_useActiveNetworkVers12=_slicedToArray(_useActiveNetworkVers11,1),activeNetwork=_useActiveNetworkVers12[0];var pool=useSelector(function(state){var _state$pools$byAddres4;return(_state$pools$byAddres4=state.pools.byAddress[activeNetwork.id])===null||_state$pools$byAddres4===void 0?void 0:_state$pools$byAddres4[address];});var tickData=pool.tickData;var setPoolTickData=useCallback(function(address,tickData){return dispatch(updateTickData({poolAddress:address,tickData:tickData,networkId:activeNetwork.id}));},[activeNetwork.id,dispatch]);return[tickData,setPoolTickData];}","map":{"version":3,"names":["addPoolKeys","updatePoolChartData","updatePoolTransactions","updateTickData","useCallback","useEffect","useState","useDispatch","useSelector","updatePoolData","notEmpty","fetchPoolChartData","fetchPoolTransactions","useActiveNetworkVersion","useClients","useAllPoolData","network","state","pools","byAddress","id","useUpdatePoolData","dispatch","networkId","useAddPoolKeys","poolAddresses","usePoolDatas","allPoolData","untrackedAddresses","reduce","accum","address","Object","keys","includes","push","poolsWithData","map","poolData","data","undefined","filter","usePoolChartData","activeNetwork","pool","chartData","error","setError","dataClient","fetch","poolAddress","usePoolTransactions","transactions","usePoolTickData","tickData","setPoolTickData"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/pools/hooks.ts"],"sourcesContent":["import { addPoolKeys, updatePoolChartData, updatePoolTransactions, updateTickData } from 'state/pools/actions'\nimport { AppState, AppDispatch } from './../index'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PoolData, PoolChartEntry } from './reducer'\nimport { updatePoolData } from './actions'\nimport { notEmpty } from 'utils'\nimport { fetchPoolChartData } from 'data/pools/chartData'\nimport { Transaction } from 'types'\nimport { fetchPoolTransactions } from 'data/pools/transactions'\nimport { PoolTickData } from 'data/pools/tickData'\nimport { useActiveNetworkVersion, useClients } from 'state/application/hooks'\n\nexport function useAllPoolData(): {\n  [address: string]: { data: PoolData | undefined; lastUpdated: number | undefined }\n} {\n  const [network] = useActiveNetworkVersion()\n  return useSelector((state: AppState) => state.pools.byAddress[network.id] ?? {})\n}\n\nexport function useUpdatePoolData(): (pools: PoolData[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  const [network] = useActiveNetworkVersion()\n  return useCallback((pools: PoolData[]) => dispatch(updatePoolData({ pools, networkId: network.id })), [\n    dispatch,\n    network.id,\n  ])\n}\n\nexport function useAddPoolKeys(): (addresses: string[]) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  const [network] = useActiveNetworkVersion()\n  return useCallback((poolAddresses: string[]) => dispatch(addPoolKeys({ poolAddresses, networkId: network.id })), [\n    dispatch,\n    network.id,\n  ])\n}\n\nexport function usePoolDatas(poolAddresses: string[]): PoolData[] {\n  const allPoolData = useAllPoolData()\n  const addPoolKeys = useAddPoolKeys()\n\n  const untrackedAddresses = poolAddresses.reduce((accum: string[], address) => {\n    if (!Object.keys(allPoolData).includes(address)) {\n      accum.push(address)\n    }\n    return accum\n  }, [])\n\n  useEffect(() => {\n    if (untrackedAddresses) {\n      addPoolKeys(untrackedAddresses)\n    }\n    return\n  }, [addPoolKeys, untrackedAddresses])\n\n  // filter for pools with data\n  const poolsWithData = poolAddresses\n    .map((address) => {\n      const poolData = allPoolData[address]?.data\n      return poolData ?? undefined\n    })\n    .filter(notEmpty)\n\n  return poolsWithData\n}\n\n/**\n * Get top pools addresses that token is included in\n * If not loaded, fetch and store\n * @param address\n */\nexport function usePoolChartData(address: string): PoolChartEntry[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const [activeNetwork] = useActiveNetworkVersion()\n\n  const pool = useSelector((state: AppState) => state.pools.byAddress[activeNetwork.id]?.[address])\n  const chartData = pool?.chartData\n  const [error, setError] = useState(false)\n  const { dataClient } = useClients()\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolChartData(address, dataClient)\n      if (!error && data) {\n        dispatch(updatePoolChartData({ poolAddress: address, chartData: data, networkId: activeNetwork.id }))\n      }\n      if (error) {\n        setError(error)\n      }\n    }\n    if (!chartData && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, chartData, dataClient, activeNetwork.id])\n\n  // return data\n  return chartData\n}\n\n/**\n * Get all transactions on pool\n * @param address\n */\nexport function usePoolTransactions(address: string): Transaction[] | undefined {\n  const dispatch = useDispatch<AppDispatch>()\n  const [activeNetwork] = useActiveNetworkVersion()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[activeNetwork.id]?.[address])\n  const transactions = pool?.transactions\n  const [error, setError] = useState(false)\n  const { dataClient } = useClients()\n\n  useEffect(() => {\n    async function fetch() {\n      const { error, data } = await fetchPoolTransactions(address, dataClient)\n      if (error) {\n        setError(true)\n      } else if (data) {\n        dispatch(updatePoolTransactions({ poolAddress: address, transactions: data, networkId: activeNetwork.id }))\n      }\n    }\n    if (!transactions && !error) {\n      fetch()\n    }\n  }, [address, dispatch, error, transactions, dataClient, activeNetwork.id])\n\n  // return data\n  return transactions\n}\n\nexport function usePoolTickData(\n  address: string\n): [PoolTickData | undefined, (poolAddress: string, tickData: PoolTickData) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const [activeNetwork] = useActiveNetworkVersion()\n  const pool = useSelector((state: AppState) => state.pools.byAddress[activeNetwork.id]?.[address])\n  const tickData = pool.tickData\n\n  const setPoolTickData = useCallback(\n    (address: string, tickData: PoolTickData) =>\n      dispatch(updateTickData({ poolAddress: address, tickData, networkId: activeNetwork.id })),\n    [activeNetwork.id, dispatch]\n  )\n\n  return [tickData, setPoolTickData]\n}"],"mappings":"igBAAA,OAASA,WAAW,CAAEC,mBAAmB,CAAEC,sBAAsB,CAAEC,cAAc,KAAQ,qBAAqB,CAE9G,OAASC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CACxD,OAASC,WAAW,CAAEC,WAAW,KAAQ,aAAa,CAEtD,OAASC,cAAc,KAAQ,WAAW,CAC1C,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,kBAAkB,KAAQ,sBAAsB,CAEzD,OAASC,qBAAqB,KAAQ,yBAAyB,CAE/D,OAASC,uBAAuB,CAAEC,UAAU,KAAQ,yBAAyB,CAE7E,MAAO,SAASC,eAAc,EAE5B,CACA,0BAAkBF,uBAAuB,EAAE,gEAApCG,OAAO,2BACd,MAAOR,YAAW,CAAC,SAACS,KAAe,yDAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAACH,OAAO,CAACI,EAAE,CAAC,+DAAI,CAAC,CAAC,GAAC,CAClF,CAEA,MAAO,SAASC,kBAAiB,EAAgC,CAC/D,GAAMC,SAAQ,CAAGf,WAAW,EAAe,CAC3C,2BAAkBM,uBAAuB,EAAE,iEAApCG,OAAO,2BACd,MAAOZ,YAAW,CAAC,SAACc,KAAiB,QAAKI,SAAQ,CAACb,cAAc,CAAC,CAAES,KAAK,CAALA,KAAK,CAAEK,SAAS,CAAEP,OAAO,CAACI,EAAG,CAAC,CAAC,CAAC,GAAE,CACpGE,QAAQ,CACRN,OAAO,CAACI,EAAE,CACX,CAAC,CACJ,CAEA,MAAO,SAASI,eAAc,EAAkC,CAC9D,GAAMF,SAAQ,CAAGf,WAAW,EAAe,CAC3C,2BAAkBM,uBAAuB,EAAE,iEAApCG,OAAO,2BACd,MAAOZ,YAAW,CAAC,SAACqB,aAAuB,QAAKH,SAAQ,CAACtB,WAAW,CAAC,CAAEyB,aAAa,CAAbA,aAAa,CAAEF,SAAS,CAAEP,OAAO,CAACI,EAAG,CAAC,CAAC,CAAC,GAAE,CAC/GE,QAAQ,CACRN,OAAO,CAACI,EAAE,CACX,CAAC,CACJ,CAEA,MAAO,SAASM,aAAY,CAACD,aAAuB,CAAc,CAChE,GAAME,YAAW,CAAGZ,cAAc,EAAE,CACpC,GAAMf,YAAW,CAAGwB,cAAc,EAAE,CAEpC,GAAMI,mBAAkB,CAAGH,aAAa,CAACI,MAAM,CAAC,SAACC,KAAe,CAAEC,OAAO,CAAK,CAC5E,GAAI,CAACC,MAAM,CAACC,IAAI,CAACN,WAAW,CAAC,CAACO,QAAQ,CAACH,OAAO,CAAC,CAAE,CAC/CD,KAAK,CAACK,IAAI,CAACJ,OAAO,CAAC,CACrB,CACA,MAAOD,MAAK,CACd,CAAC,CAAE,EAAE,CAAC,CAENzB,SAAS,CAAC,UAAM,CACd,GAAIuB,kBAAkB,CAAE,CACtB5B,WAAW,CAAC4B,kBAAkB,CAAC,CACjC,CACA,OACF,CAAC,CAAE,CAAC5B,WAAW,CAAE4B,kBAAkB,CAAC,CAAC,CAErC;AACA,GAAMQ,cAAa,CAAGX,aAAa,CAChCY,GAAG,CAAC,SAACN,OAAO,CAAK,0BAChB,GAAMO,SAAQ,uBAAGX,WAAW,CAACI,OAAO,CAAC,+CAApB,qBAAsBQ,IAAI,CAC3C,MAAOD,SAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAIE,SAAS,CAC9B,CAAC,CAAC,CACDC,MAAM,CAAC/B,QAAQ,CAAC,CAEnB,MAAO0B,cAAa,CACtB,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASM,iBAAgB,CAACX,OAAe,CAAgC,CAC9E,GAAMT,SAAQ,CAAGf,WAAW,EAAe,CAC3C,2BAAwBM,uBAAuB,EAAE,iEAA1C8B,aAAa,2BAEpB,GAAMC,KAAI,CAAGpC,WAAW,CAAC,SAACS,KAAe,2DAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAACwB,aAAa,CAACvB,EAAE,CAAC,iDAAvC,uBAA0CW,OAAO,CAAC,GAAC,CACjG,GAAMc,UAAS,CAAGD,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEC,SAAS,CACjC,cAA0BvC,QAAQ,CAAC,KAAK,CAAC,wCAAlCwC,KAAK,eAAEC,QAAQ,eACtB,gBAAuBjC,UAAU,EAAE,CAA3BkC,UAAU,aAAVA,UAAU,CAElB3C,SAAS,CAAC,UAAM,SACC4C,MAAK,yHAApB,8LACgCtC,mBAAkB,CAACoB,OAAO,CAAEiB,UAAU,CAAC,4CAA7DF,KAAK,uBAALA,KAAK,CAAEP,IAAI,uBAAJA,IAAI,CACnB,GAAI,CAACO,KAAK,EAAIP,IAAI,CAAE,CAClBjB,QAAQ,CAACrB,mBAAmB,CAAC,CAAEiD,WAAW,CAAEnB,OAAO,CAAEc,SAAS,CAAEN,IAAI,CAAEhB,SAAS,CAAEoB,aAAa,CAACvB,EAAG,CAAC,CAAC,CAAC,CACvG,CACA,GAAI0B,KAAK,CAAE,CACTC,QAAQ,CAACD,KAAK,CAAC,CACjB,CAAC,sDACF,wCACD,GAAI,CAACD,SAAS,EAAI,CAACC,KAAK,CAAE,CACxBG,KAAK,EAAE,CACT,CACF,CAAC,CAAE,CAAClB,OAAO,CAAET,QAAQ,CAAEwB,KAAK,CAAED,SAAS,CAAEG,UAAU,CAAEL,aAAa,CAACvB,EAAE,CAAC,CAAC,CAEvE;AACA,MAAOyB,UAAS,CAClB,CAEA;AACA;AACA;AACA,GACA,MAAO,SAASM,oBAAmB,CAACpB,OAAe,CAA6B,CAC9E,GAAMT,SAAQ,CAAGf,WAAW,EAAe,CAC3C,2BAAwBM,uBAAuB,EAAE,kEAA1C8B,aAAa,4BACpB,GAAMC,KAAI,CAAGpC,WAAW,CAAC,SAACS,KAAe,2DAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAACwB,aAAa,CAACvB,EAAE,CAAC,iDAAvC,uBAA0CW,OAAO,CAAC,GAAC,CACjG,GAAMqB,aAAY,CAAGR,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEQ,YAAY,CACvC,eAA0B9C,QAAQ,CAAC,KAAK,CAAC,yCAAlCwC,KAAK,eAAEC,QAAQ,eACtB,iBAAuBjC,UAAU,EAAE,CAA3BkC,UAAU,cAAVA,UAAU,CAElB3C,SAAS,CAAC,UAAM,SACC4C,MAAK,4HAApB,oMACgCrC,sBAAqB,CAACmB,OAAO,CAAEiB,UAAU,CAAC,6CAAhEF,KAAK,uBAALA,KAAK,CAAEP,IAAI,uBAAJA,IAAI,CACnB,GAAIO,KAAK,CAAE,CACTC,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,IAAM,IAAIR,IAAI,CAAE,CACfjB,QAAQ,CAACpB,sBAAsB,CAAC,CAAEgD,WAAW,CAAEnB,OAAO,CAAEqB,YAAY,CAAEb,IAAI,CAAEhB,SAAS,CAAEoB,aAAa,CAACvB,EAAG,CAAC,CAAC,CAAC,CAC7G,CAAC,wDACF,yCACD,GAAI,CAACgC,YAAY,EAAI,CAACN,KAAK,CAAE,CAC3BG,KAAK,EAAE,CACT,CACF,CAAC,CAAE,CAAClB,OAAO,CAAET,QAAQ,CAAEwB,KAAK,CAAEM,YAAY,CAAEJ,UAAU,CAAEL,aAAa,CAACvB,EAAE,CAAC,CAAC,CAE1E;AACA,MAAOgC,aAAY,CACrB,CAEA,MAAO,SAASC,gBAAe,CAC7BtB,OAAe,CACoE,CACnF,GAAMT,SAAQ,CAAGf,WAAW,EAAe,CAC3C,4BAAwBM,uBAAuB,EAAE,mEAA1C8B,aAAa,4BACpB,GAAMC,KAAI,CAAGpC,WAAW,CAAC,SAACS,KAAe,2DAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAACwB,aAAa,CAACvB,EAAE,CAAC,iDAAvC,uBAA0CW,OAAO,CAAC,GAAC,CACjG,GAAMuB,SAAQ,CAAGV,IAAI,CAACU,QAAQ,CAE9B,GAAMC,gBAAe,CAAGnD,WAAW,CACjC,SAAC2B,OAAe,CAAEuB,QAAsB,QACtChC,SAAQ,CAACnB,cAAc,CAAC,CAAE+C,WAAW,CAAEnB,OAAO,CAAEuB,QAAQ,CAARA,QAAQ,CAAE/B,SAAS,CAAEoB,aAAa,CAACvB,EAAG,CAAC,CAAC,CAAC,GAC3F,CAACuB,aAAa,CAACvB,EAAE,CAAEE,QAAQ,CAAC,CAC7B,CAED,MAAO,CAACgC,QAAQ,CAAEC,eAAe,CAAC,CACpC"},"metadata":{},"sourceType":"module"}