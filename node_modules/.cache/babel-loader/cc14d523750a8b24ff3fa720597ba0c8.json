{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{CurrencyAmount,Token,TradeType}from'@uniswap/sdk-core';// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line no-restricted-imports\nimport{SupportedChainId}from'constants/chains';import JSBI from'jsbi';import{transformSwapRouteToGetQuoteResult}from'utils/transformSwapRouteToGetQuoteResult';export function toSupportedChainId(chainId){var numericChainId=chainId;if(SupportedChainId[numericChainId])return numericChainId;return undefined;}export function isSupportedChainId(chainId){if(chainId===undefined)return false;return toSupportedChainId(chainId)!==undefined;}function getQuote(_x,_x2,_x3){return _getQuote.apply(this,arguments);}function _getQuote(){_getQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref,router,config){var type,tokenIn,tokenOut,amountRaw,currencyIn,currencyOut,baseCurrency,quoteCurrency,amount,swapRoute;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:type=_ref.type,tokenIn=_ref.tokenIn,tokenOut=_ref.tokenOut,amountRaw=_ref.amount;currencyIn=new Token(tokenIn.chainId,tokenIn.address,tokenIn.decimals,tokenIn.symbol);currencyOut=new Token(tokenOut.chainId,tokenOut.address,tokenOut.decimals,tokenOut.symbol);baseCurrency=type==='exactIn'?currencyIn:currencyOut;quoteCurrency=type==='exactIn'?currencyOut:currencyIn;amount=CurrencyAmount.fromRawAmount(baseCurrency,JSBI.BigInt(amountRaw));_context.next=8;return router.route(amount,quoteCurrency,type==='exactIn'?TradeType.EXACT_INPUT:TradeType.EXACT_OUTPUT,/*swapConfig=*/undefined,config);case 8:swapRoute=_context.sent;if(swapRoute){_context.next=11;break;}throw new Error('Failed to generate client side quote');case 11:return _context.abrupt(\"return\",{data:transformSwapRouteToGetQuoteResult(type,amount,swapRoute)});case 12:case\"end\":return _context.stop();}}},_callee);}));return _getQuote.apply(this,arguments);}export function getClientSideQuote(_x4,_x5,_x6){return _getClientSideQuote.apply(this,arguments);}function _getClientSideQuote(){_getClientSideQuote=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2,router,config){var tokenInAddress,tokenInChainId,tokenInDecimals,tokenInSymbol,tokenOutAddress,tokenOutChainId,tokenOutDecimals,tokenOutSymbol,amount,type;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:tokenInAddress=_ref2.tokenInAddress,tokenInChainId=_ref2.tokenInChainId,tokenInDecimals=_ref2.tokenInDecimals,tokenInSymbol=_ref2.tokenInSymbol,tokenOutAddress=_ref2.tokenOutAddress,tokenOutChainId=_ref2.tokenOutChainId,tokenOutDecimals=_ref2.tokenOutDecimals,tokenOutSymbol=_ref2.tokenOutSymbol,amount=_ref2.amount,type=_ref2.type;return _context2.abrupt(\"return\",getQuote({type:type,tokenIn:{address:tokenInAddress,chainId:tokenInChainId,decimals:tokenInDecimals,symbol:tokenInSymbol},tokenOut:{address:tokenOutAddress,chainId:tokenOutChainId,decimals:tokenOutDecimals,symbol:tokenOutSymbol},amount:amount},router,config));case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _getClientSideQuote.apply(this,arguments);}","map":{"version":3,"names":["CurrencyAmount","Token","TradeType","SupportedChainId","JSBI","transformSwapRouteToGetQuoteResult","toSupportedChainId","chainId","numericChainId","undefined","isSupportedChainId","getQuote","router","config","type","tokenIn","tokenOut","amountRaw","amount","currencyIn","address","decimals","symbol","currencyOut","baseCurrency","quoteCurrency","fromRawAmount","BigInt","route","EXACT_INPUT","EXACT_OUTPUT","swapRoute","Error","data","getClientSideQuote","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/routing/clientSideSmartOrderRouter.ts"],"sourcesContent":["import { BigintIsh, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\n// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line no-restricted-imports\nimport { AlphaRouter, AlphaRouterConfig, ChainId } from '@uniswap/smart-order-router'\nimport { SupportedChainId } from 'constants/chains'\nimport JSBI from 'jsbi'\nimport { GetQuoteResult } from 'state/routing/types'\nimport { transformSwapRouteToGetQuoteResult } from 'utils/transformSwapRouteToGetQuoteResult'\n\nexport function toSupportedChainId(chainId: ChainId): SupportedChainId | undefined {\n  const numericChainId: number = chainId\n  if (SupportedChainId[numericChainId]) return numericChainId\n  return undefined\n}\nexport function isSupportedChainId(chainId: ChainId | undefined): boolean {\n  if (chainId === undefined) return false\n  return toSupportedChainId(chainId) !== undefined\n}\n\nasync function getQuote(\n  {\n    type,\n    tokenIn,\n    tokenOut,\n    amount: amountRaw,\n  }: {\n    type: 'exactIn' | 'exactOut'\n    tokenIn: { address: string; chainId: number; decimals: number; symbol?: string }\n    tokenOut: { address: string; chainId: number; decimals: number; symbol?: string }\n    amount: BigintIsh\n  },\n  router: AlphaRouter,\n  config: Partial<AlphaRouterConfig>\n): Promise<{ data: GetQuoteResult; error?: unknown }> {\n  const currencyIn = new Token(tokenIn.chainId, tokenIn.address, tokenIn.decimals, tokenIn.symbol)\n  const currencyOut = new Token(tokenOut.chainId, tokenOut.address, tokenOut.decimals, tokenOut.symbol)\n\n  const baseCurrency = type === 'exactIn' ? currencyIn : currencyOut\n  const quoteCurrency = type === 'exactIn' ? currencyOut : currencyIn\n  const amount = CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(amountRaw))\n\n  const swapRoute = await router.route(\n    amount,\n    quoteCurrency,\n    type === 'exactIn' ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT,\n    /*swapConfig=*/ undefined,\n    config\n  )\n\n  if (!swapRoute) throw new Error('Failed to generate client side quote')\n\n  return { data: transformSwapRouteToGetQuoteResult(type, amount, swapRoute) }\n}\n\ninterface QuoteArguments {\n  tokenInAddress: string\n  tokenInChainId: ChainId\n  tokenInDecimals: number\n  tokenInSymbol?: string\n  tokenOutAddress: string\n  tokenOutChainId: ChainId\n  tokenOutDecimals: number\n  tokenOutSymbol?: string\n  amount: string\n  type: 'exactIn' | 'exactOut'\n}\n\nexport async function getClientSideQuote(\n  {\n    tokenInAddress,\n    tokenInChainId,\n    tokenInDecimals,\n    tokenInSymbol,\n    tokenOutAddress,\n    tokenOutChainId,\n    tokenOutDecimals,\n    tokenOutSymbol,\n    amount,\n    type,\n  }: QuoteArguments,\n  router: AlphaRouter,\n  config: Partial<AlphaRouterConfig>\n) {\n  return getQuote(\n    {\n      type,\n      tokenIn: {\n        address: tokenInAddress,\n        chainId: tokenInChainId,\n        decimals: tokenInDecimals,\n        symbol: tokenInSymbol,\n      },\n      tokenOut: {\n        address: tokenOutAddress,\n        chainId: tokenOutChainId,\n        decimals: tokenOutDecimals,\n        symbol: tokenOutSymbol,\n      },\n      amount,\n    },\n    router,\n    config\n  )\n}\n"],"mappings":"qVAAA,OAAoBA,cAAc,CAAEC,KAAK,CAAEC,SAAS,KAAQ,mBAAmB,CAC/E;AACA;AAEA,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,MAAOC,KAAI,KAAM,MAAM,CAEvB,OAASC,kCAAkC,KAAQ,0CAA0C,CAE7F,MAAO,SAASC,mBAAkB,CAACC,OAAgB,CAAgC,CACjF,GAAMC,eAAsB,CAAGD,OAAO,CACtC,GAAIJ,gBAAgB,CAACK,cAAc,CAAC,CAAE,MAAOA,eAAc,CAC3D,MAAOC,UAAS,CAClB,CACA,MAAO,SAASC,mBAAkB,CAACH,OAA4B,CAAW,CACxE,GAAIA,OAAO,GAAKE,SAAS,CAAE,MAAO,MAAK,CACvC,MAAOH,mBAAkB,CAACC,OAAO,CAAC,GAAKE,SAAS,CAClD,CAAC,QAEcE,SAAQ,4IAAvB,sBAYEC,MAAmB,CACnBC,MAAkC,yNAXhCC,IAAI,MAAJA,IAAI,CACJC,OAAO,MAAPA,OAAO,CACPC,QAAQ,MAARA,QAAQ,CACAC,SAAS,MAAjBC,MAAM,CAUFC,UAAU,CAAG,GAAIlB,MAAK,CAACc,OAAO,CAACR,OAAO,CAAEQ,OAAO,CAACK,OAAO,CAAEL,OAAO,CAACM,QAAQ,CAAEN,OAAO,CAACO,MAAM,CAAC,CAC1FC,WAAW,CAAG,GAAItB,MAAK,CAACe,QAAQ,CAACT,OAAO,CAAES,QAAQ,CAACI,OAAO,CAAEJ,QAAQ,CAACK,QAAQ,CAAEL,QAAQ,CAACM,MAAM,CAAC,CAE/FE,YAAY,CAAGV,IAAI,GAAK,SAAS,CAAGK,UAAU,CAAGI,WAAW,CAC5DE,aAAa,CAAGX,IAAI,GAAK,SAAS,CAAGS,WAAW,CAAGJ,UAAU,CAC7DD,MAAM,CAAGlB,cAAc,CAAC0B,aAAa,CAACF,YAAY,CAAEpB,IAAI,CAACuB,MAAM,CAACV,SAAS,CAAC,CAAC,uBAEzDL,OAAM,CAACgB,KAAK,CAClCV,MAAM,CACNO,aAAa,CACbX,IAAI,GAAK,SAAS,CAAGZ,SAAS,CAAC2B,WAAW,CAAG3B,SAAS,CAAC4B,YAAY,CACnE,eAAgBrB,SAAS,CACzBI,MAAM,CACP,QANKkB,SAAS,kBAQVA,SAAS,+BAAQ,IAAIC,MAAK,CAAC,sCAAsC,CAAC,yCAEhE,CAAEC,IAAI,CAAE5B,kCAAkC,CAACS,IAAI,CAAEI,MAAM,CAAEa,SAAS,CAAE,CAAC,yDAC7E,2CAeD,eAAsBG,mBAAkB,gEAoCvC,2GApCM,wBAaLtB,MAAmB,CACnBC,MAAkC,kQAZhCsB,cAAc,OAAdA,cAAc,CACdC,cAAc,OAAdA,cAAc,CACdC,eAAe,OAAfA,eAAe,CACfC,aAAa,OAAbA,aAAa,CACbC,eAAe,OAAfA,eAAe,CACfC,eAAe,OAAfA,eAAe,CACfC,gBAAgB,OAAhBA,gBAAgB,CAChBC,cAAc,OAAdA,cAAc,CACdxB,MAAM,OAANA,MAAM,CACNJ,IAAI,OAAJA,IAAI,kCAKCH,QAAQ,CACb,CACEG,IAAI,CAAJA,IAAI,CACJC,OAAO,CAAE,CACPK,OAAO,CAAEe,cAAc,CACvB5B,OAAO,CAAE6B,cAAc,CACvBf,QAAQ,CAAEgB,eAAe,CACzBf,MAAM,CAAEgB,aACV,CAAC,CACDtB,QAAQ,CAAE,CACRI,OAAO,CAAEmB,eAAe,CACxBhC,OAAO,CAAEiC,eAAe,CACxBnB,QAAQ,CAAEoB,gBAAgB,CAC1BnB,MAAM,CAAEoB,cACV,CAAC,CACDxB,MAAM,CAANA,MACF,CAAC,CACDN,MAAM,CACNC,MAAM,CACP,0DACF"},"metadata":{},"sourceType":"module"}