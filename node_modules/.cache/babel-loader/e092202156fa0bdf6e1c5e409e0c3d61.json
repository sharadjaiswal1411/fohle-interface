{"ast":null,"code":"import { keyframes as _keyframes } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Toggle/index.tsx\",\n  _s = $RefreshSig$();\nimport { darken } from 'polished';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleWrapper = _styled.button.withConfig({\n  displayName: \"Toggle__ToggleWrapper\",\n  componentId: \"sc-1poje5t-0\"\n})([\"display:flex;align-items:center;width:\", \" padding:1px;background:\", \";border-radius:12px;border:\", \";cursor:pointer;outline:none;color:\", \";\"], _ref => {\n  let {\n    width\n  } = _ref;\n  return width !== null && width !== void 0 ? width : '100%';\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.bg2;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return '2px solid ' + theme.bg2;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.text2;\n});\nexport const ToggleElementFree = _styled.span.withConfig({\n  displayName: \"Toggle__ToggleElementFree\",\n  componentId: \"sc-1poje5t-1\"\n})([\"display:flex;align-items:center;width:100%;padding:2px 10px;border-radius:12px;justify-content:center;height:100%;background:\", \";color:\", \";font-size:\", \";font-weight:600;white-space:nowrap;:hover{user-select:initial;color:\", \";}margin-top:0.5px;\"], _ref5 => {\n  let {\n    theme,\n    isActive\n  } = _ref5;\n  return isActive ? theme.black : 'none';\n}, _ref6 => {\n  let {\n    theme,\n    isActive\n  } = _ref6;\n  return isActive ? theme.text1 : theme.text2;\n}, _ref7 => {\n  let {\n    fontSize\n  } = _ref7;\n  return fontSize !== null && fontSize !== void 0 ? fontSize : '1rem';\n}, _ref8 => {\n  let {\n    theme,\n    isActive\n  } = _ref8;\n  return isActive ? theme.text2 : theme.text3;\n});\nconst Wrapper = _styled.button.withConfig({\n  displayName: \"Toggle__Wrapper\",\n  componentId: \"sc-1poje5t-2\"\n})([\"align-items:center;background:\", \";border:\", \";border-radius:20px;cursor:pointer;display:flex;outline:none;padding:4px;width:fit-content;\"], _ref9 => {\n  let {\n    isActive,\n    theme\n  } = _ref9;\n  return isActive ? theme.accentActionSoft : 'transparent';\n}, _ref10 => {\n  let {\n    theme,\n    isActive\n  } = _ref10;\n  return isActive ? 'none' : `1px solid ${theme.backgroundOutline}`;\n});\nconst turnOnToggle = _keyframes`\n  from {\n    margin-left: 0em;\n    margin-right: 2.2em;\n  }\n  to {\n    margin-left: 2.2em;\n    margin-right: 0em;\n  }\n`;\nconst turnOffToggle = _keyframes`\n  from {\n    margin-left: 2.2em;\n    margin-right: 0em;\n  }\n  to {\n    margin-left: 0em;\n    margin-right: 2.2em;\n  }\n`;\nconst ToggleElementHoverStyle = (hasBgColor, theme, isActive) => hasBgColor ? {\n  opacity: '0.8'\n} : {\n  background: isActive ? darken(0.05, theme.accentAction) : darken(0.05, theme.deprecated_bg4),\n  color: isActive ? theme.white : theme.textTertiary\n};\n_c = ToggleElementHoverStyle;\nconst ToggleElement = _styled.span.withConfig({\n  displayName: \"Toggle__ToggleElement\",\n  componentId: \"sc-1poje5t-3\"\n})([\"animation:0.1s \", \" ease-in;background:\", \";border-radius:50%;height:24px;:hover{\", \"}margin-left:\", \";margin-right:\", \";width:24px;\"], _ref11 => {\n  let {\n    isActive,\n    isInitialToggleLoad\n  } = _ref11;\n  return isInitialToggleLoad ? 'none' : isActive ? turnOnToggle : turnOffToggle;\n}, _ref12 => {\n  let {\n    theme,\n    bgColor,\n    isActive\n  } = _ref12;\n  return isActive ? bgColor !== null && bgColor !== void 0 ? bgColor : theme.accentAction : bgColor ? theme.deprecated_bg4 : theme.textTertiary;\n}, _ref13 => {\n  let {\n    bgColor,\n    theme,\n    isActive\n  } = _ref13;\n  return ToggleElementHoverStyle(!!bgColor, theme, isActive);\n}, _ref14 => {\n  let {\n    isActive\n  } = _ref14;\n  return isActive && '2.2em';\n}, _ref15 => {\n  let {\n    isActive\n  } = _ref15;\n  return !isActive && '2.2em';\n});\nexport default function Toggle(_ref16) {\n  _s();\n  let {\n    id,\n    bgColor,\n    isActive,\n    toggle\n  } = _ref16;\n  const [isInitialToggleLoad, setIsInitialToggleLoad] = useState(true);\n  const switchToggle = () => {\n    toggle();\n    if (isInitialToggleLoad) setIsInitialToggleLoad(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    id: id,\n    isActive: isActive,\n    onClick: switchToggle,\n    children: /*#__PURE__*/_jsxDEV(ToggleElement, {\n      isActive: isActive,\n      bgColor: bgColor,\n      isInitialToggleLoad: isInitialToggleLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(Toggle, \"dcbs1eY7n8xyUkeidMQSdvH0OCQ=\");\n_c2 = Toggle;\nvar _c, _c2;\n$RefreshReg$(_c, \"ToggleElementHoverStyle\");\n$RefreshReg$(_c2, \"Toggle\");","map":{"version":3,"names":["darken","useState","ToggleWrapper","styled","button","width","theme","bg2","text2","ToggleElementFree","span","isActive","black","text1","fontSize","text3","Wrapper","accentActionSoft","backgroundOutline","turnOnToggle","keyframes","turnOffToggle","ToggleElementHoverStyle","hasBgColor","opacity","background","accentAction","deprecated_bg4","color","white","textTertiary","ToggleElement","isInitialToggleLoad","bgColor","Toggle","id","toggle","setIsInitialToggleLoad","switchToggle"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Toggle/index.tsx"],"sourcesContent":["import { darken } from 'polished'\nimport { useState } from 'react'\nimport styled, { keyframes } from 'styled-components/macro'\n\n\n\nexport const ToggleWrapper = styled.button<{ width?: string }>`\n  display: flex;\n  align-items: center;\n  width: ${({ width }) => width ?? '100%'}\n  padding: 1px;\n  background: ${({ theme }) => theme.bg2};\n  border-radius: 12px;\n  border: ${({ theme }) => '2px solid ' + theme.bg2};\n  cursor: pointer;\n  outline: none;\n  color: ${({ theme }) => theme.text2};\n`\n\nexport const ToggleElementFree = styled.span<{ isActive?: boolean; fontSize?: string }>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 2px 10px;\n  border-radius: 12px;\n  justify-content: center;\n  height: 100%;\n  background: ${({ theme, isActive }) => (isActive ? theme.black : 'none')};\n  color: ${({ theme, isActive }) => (isActive ? theme.text1 : theme.text2)};\n  font-size: ${({ fontSize }) => fontSize ?? '1rem'};\n  font-weight: 600;\n  white-space: nowrap;\n  :hover {\n    user-select: initial;\n    color: ${({ theme, isActive }) => (isActive ? theme.text2 : theme.text3)};\n  }\n  margin-top: 0.5px;\n`\n\nconst Wrapper = styled.button<{ isActive?: boolean; activeElement?: boolean }>`\n  align-items: center;\n  background: ${({ isActive, theme }) => (isActive ? theme.accentActionSoft : 'transparent')};\n  border: ${({ theme, isActive }) => (isActive ? 'none' : `1px solid ${theme.backgroundOutline}`)};\n  border-radius: 20px;\n  cursor: pointer;\n  display: flex;\n  outline: none;\n  padding: 4px;\n  width: fit-content;\n`\n\nconst turnOnToggle = keyframes`\n  from {\n    margin-left: 0em;\n    margin-right: 2.2em;\n  }\n  to {\n    margin-left: 2.2em;\n    margin-right: 0em;\n  }\n`\n\nconst turnOffToggle = keyframes`\n  from {\n    margin-left: 2.2em;\n    margin-right: 0em;\n  }\n  to {\n    margin-left: 0em;\n    margin-right: 2.2em;\n  }\n`\n\nconst ToggleElementHoverStyle = (hasBgColor: boolean, theme: any, isActive?: boolean) =>\n  hasBgColor\n    ? {\n        opacity: '0.8',\n      }\n    : {\n        background: isActive ? darken(0.05, theme.accentAction) : darken(0.05, theme.deprecated_bg4),\n        color: isActive ? theme.white : theme.textTertiary,\n      }\n\nconst ToggleElement = styled.span<{ isActive?: boolean; bgColor?: string; isInitialToggleLoad?: boolean }>`\n  animation: 0.1s\n    ${({ isActive, isInitialToggleLoad }) => (isInitialToggleLoad ? 'none' : isActive ? turnOnToggle : turnOffToggle)}\n    ease-in;\n  background: ${({ theme, bgColor, isActive }) =>\n    isActive ? bgColor ?? theme.accentAction : bgColor ? theme.deprecated_bg4 : theme.textTertiary};\n  border-radius: 50%;\n  height: 24px;\n  :hover {\n    ${({ bgColor, theme, isActive }) => ToggleElementHoverStyle(!!bgColor, theme, isActive)}\n  }\n  margin-left: ${({ isActive }) => isActive && '2.2em'};\n  margin-right: ${({ isActive }) => !isActive && '2.2em'};\n  width: 24px;\n`\n\ninterface ToggleProps {\n  id?: string\n  bgColor?: string\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ id, bgColor, isActive, toggle }: ToggleProps) {\n  const [isInitialToggleLoad, setIsInitialToggleLoad] = useState(true)\n\n  const switchToggle = () => {\n    toggle()\n    if (isInitialToggleLoad) setIsInitialToggleLoad(false)\n  }\n\n  return (\n    <Wrapper id={id} isActive={isActive} onClick={switchToggle}>\n      <ToggleElement isActive={isActive} bgColor={bgColor} isInitialToggleLoad={isInitialToggleLoad} />\n    </Wrapper>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}