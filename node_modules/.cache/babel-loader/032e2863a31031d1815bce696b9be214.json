{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _createClass from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _classCallCheck from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import{Trans}from\"@lingui/react\";import{i18n}from\"@lingui/core\";import{sendAnalyticsEvent}from'@uniswap/analytics';import{EventName}from'@uniswap/analytics-events';import{formatSwapSignedAnalyticsEventProperties}from'lib/utils/analytics';import{useMemo}from'react';import{calculateGasMargin}from'utils/calculateGasMargin';import isZero from'utils/isZero';import{swapErrorToUserReadableMessage}from'utils/swapErrorToUserReadableMessage';import{jsx as _jsx}from\"react/jsx-runtime\";var InvalidSwapError=/*#__PURE__*/function(_Error){_inherits(InvalidSwapError,_Error);var _super=_createSuper(InvalidSwapError);function InvalidSwapError(){_classCallCheck(this,InvalidSwapError);return _super.apply(this,arguments);}return _createClass(InvalidSwapError);}(/*#__PURE__*/_wrapNativeSuper(Error));// returns a function that will execute a swap, if the parameters are all valid\nexport default function useSendSwapTransaction(account,chainId,provider,trade,// trade to execute, required\nswapCalls){return useMemo(function(){if(!trade||!provider||!account||!chainId){return{callback:null};}console.log('swapCallsswapCalls',swapCalls);return{callback:function(){var _onSwap=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var estimatedCalls,bestCallOption,errorCalls,firstNoErrorCall,_bestCallOption,_bestCallOption$call,address,calldata,value;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Promise.all(swapCalls.map(function(call){var address=call.address,calldata=call.calldata,value=call.value;var tx=!value||isZero(value)?{from:account,to:address,data:calldata}:{from:account,to:address,data:calldata,value:value};return provider.estimateGas(tx).then(function(gasEstimate){return{call:call,gasEstimate:gasEstimate};}).catch(function(gasError){console.debug('Gas estimate failed, trying eth_call to extract error',call);return provider.call(tx).then(function(result){console.debug('Unexpected successful call after failed estimate gas',call,gasError,result);return{call:call,error:/*#__PURE__*/_jsx(Trans,{id:\"Unexpected issue with estimating the gas. Please try again.\"})};}).catch(function(callError){alert(5);console.debug('Call threw error',call,callError);return{call:call,error:swapErrorToUserReadableMessage(callError)};});});}));case 2:estimatedCalls=_context.sent;// a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\nbestCallOption=estimatedCalls.find(function(el,ix,list){return'gasEstimate'in el&&(ix===list.length-1||'gasEstimate'in list[ix+1]);});// check if any calls errored with a recognizable error\nif(bestCallOption){_context.next=12;break;}errorCalls=estimatedCalls.filter(function(call){return'error'in call;});if(!(errorCalls.length>0)){_context.next=8;break;}throw errorCalls[errorCalls.length-1].error;case 8:firstNoErrorCall=estimatedCalls.find(function(call){return!('error'in call);});if(firstNoErrorCall){_context.next=11;break;}throw new Error(/*i18n*/i18n._(\"Unexpected error. Could not estimate gas for the swap.\"));case 11:bestCallOption=firstNoErrorCall;case 12:_bestCallOption=bestCallOption,_bestCallOption$call=_bestCallOption.call,address=_bestCallOption$call.address,calldata=_bestCallOption$call.calldata,value=_bestCallOption$call.value;return _context.abrupt(\"return\",provider.getSigner().sendTransaction(_objectSpread(_objectSpread({from:account,to:address,data:calldata},'gasEstimate'in bestCallOption?{gasLimit:calculateGasMargin(bestCallOption.gasEstimate)}:{}),value&&!isZero(value)?{value:value}:{})).then(function(response){sendAnalyticsEvent(EventName.SWAP_SIGNED,formatSwapSignedAnalyticsEventProperties({trade:trade,txHash:response.hash}));if(calldata!==response.data){sendAnalyticsEvent(EventName.SWAP_MODIFIED_IN_WALLET,{txHash:response.hash});throw new InvalidSwapError(/*i18n*/i18n._(\"Your swap was modified through your wallet. If this was a mistake, please cancel immediately or risk losing your funds.\"));}return response;}).catch(function(error){// if the user rejected the tx, pass this along\nif((error===null||error===void 0?void 0:error.code)===4001){throw new Error(/*i18n*/i18n._(\"Transaction rejected\"));}else{// otherwise, the error was unexpected and we need to convey that\nconsole.error(\"Swap failed\",error,address,calldata,value);if(error instanceof InvalidSwapError){throw error;}else{throw new Error(/*i18n*/i18n._(\"Swap failed: {0}\",{0:swapErrorToUserReadableMessage(error)}));}}}));case 14:case\"end\":return _context.stop();}}},_callee);}));function onSwap(){return _onSwap.apply(this,arguments);}return onSwap;}()};},[account,chainId,provider,swapCalls,trade]);}","map":{"version":3,"names":["sendAnalyticsEvent","EventName","formatSwapSignedAnalyticsEventProperties","useMemo","calculateGasMargin","isZero","swapErrorToUserReadableMessage","InvalidSwapError","Error","useSendSwapTransaction","account","chainId","provider","trade","swapCalls","callback","console","log","Promise","all","map","call","address","calldata","value","tx","from","to","data","estimateGas","then","gasEstimate","catch","gasError","debug","result","error","callError","alert","estimatedCalls","bestCallOption","find","el","ix","list","length","errorCalls","filter","firstNoErrorCall","getSigner","sendTransaction","gasLimit","response","SWAP_SIGNED","txHash","hash","SWAP_MODIFIED_IN_WALLET","code","onSwap"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/swap/useSendSwapTransaction.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport type { JsonRpcProvider, TransactionResponse } from '@ethersproject/providers'\n// eslint-disable-next-line no-restricted-imports\nimport { t, Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { EventName } from '@uniswap/analytics-events'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, TradeType } from '@uniswap/sdk-core'\nimport { formatSwapSignedAnalyticsEventProperties } from 'lib/utils/analytics'\nimport { useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\nimport isZero from 'utils/isZero'\nimport { swapErrorToUserReadableMessage } from 'utils/swapErrorToUserReadableMessage'\n\ninterface SwapCall {\n  address: string\n  calldata: string\n  value: string\n}\n\ninterface SwapCallEstimate {\n  call: SwapCall\n}\n\ninterface SuccessfulCall extends SwapCallEstimate {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall extends SwapCallEstimate {\n  call: SwapCall\n  error: Error\n}\n\nclass InvalidSwapError extends Error {}\n\n// returns a function that will execute a swap, if the parameters are all valid\nexport default function useSendSwapTransaction(\n  account: string | null | undefined,\n  chainId: number | undefined,\n  provider: JsonRpcProvider | undefined,\n  trade: Trade<Currency, Currency, TradeType> | undefined, // trade to execute, required\n  swapCalls: SwapCall[]\n): { callback: null | (() => Promise<TransactionResponse>) } {\n  return useMemo(() => {\n    if (!trade || !provider || !account || !chainId) {\n      return { callback: null }\n    }\n\n    console.log('swapCallsswapCalls', swapCalls)\n\n    return {\n      callback: async function onSwap(): Promise<TransactionResponse> {\n        const estimatedCalls: SwapCallEstimate[] = await Promise.all(\n          swapCalls.map((call) => {\n            const { address, calldata, value } = call\n\n            const tx =\n              !value || isZero(value)\n                ? { from: account, to: address, data: calldata }\n                : {\n                    from: account,\n                    to: address,\n                    data: calldata,\n                    value,\n                  }\n\n            return provider\n              .estimateGas(tx)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.debug('Gas estimate failed, trying eth_call to extract error', call)\n\n                return provider\n                  .call(tx)\n                  .then((result) => {\n                    console.debug('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return {\n                      call,\n                      error: <Trans>Unexpected issue with estimating the gas. Please try again.</Trans>,\n                    }\n                  })\n                  .catch((callError) => {\n                    alert(5)\n                    console.debug('Call threw error', call, callError)\n                    return {\n                      call,\n                      error: swapErrorToUserReadableMessage(callError),\n                    }\n                  })\n              })\n          })\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        let bestCallOption: SuccessfulCall | SwapCallEstimate | undefined = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1])\n        )\n\n        // check if any calls errored with a recognizable error\n        if (!bestCallOption) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          const firstNoErrorCall = estimatedCalls.find<SwapCallEstimate>(\n            (call): call is SwapCallEstimate => !('error' in call)\n          )\n          if (!firstNoErrorCall) throw new Error(t`Unexpected error. Could not estimate gas for the swap.`)\n          bestCallOption = firstNoErrorCall\n        }\n\n        const {\n          call: { address, calldata, value },\n        } = bestCallOption\n\n        return provider\n          .getSigner()\n          .sendTransaction({\n            from: account,\n            to: address,\n            data: calldata,\n            // let the wallet try if we can't estimate the gas\n            ...('gasEstimate' in bestCallOption ? { gasLimit: calculateGasMargin(bestCallOption.gasEstimate) } : {}),\n            ...(value && !isZero(value) ? { value } : {}),\n          })\n          .then((response) => {\n            sendAnalyticsEvent(\n              EventName.SWAP_SIGNED,\n              formatSwapSignedAnalyticsEventProperties({\n                trade,\n                txHash: response.hash,\n              })\n            )\n            if (calldata !== response.data) {\n              sendAnalyticsEvent(EventName.SWAP_MODIFIED_IN_WALLET, {\n                txHash: response.hash,\n              })\n              throw new InvalidSwapError(\n                t`Your swap was modified through your wallet. If this was a mistake, please cancel immediately or risk losing your funds.`\n              )\n            }\n            return response\n          })\n          .catch((error) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error(t`Transaction rejected`)\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, address, calldata, value)\n\n              if (error instanceof InvalidSwapError) {\n                throw error\n              } else {\n                throw new Error(t`Swap failed: ${swapErrorToUserReadableMessage(error)}`)\n              }\n            }\n          })\n      },\n    }\n  }, [account, chainId, provider, swapCalls, trade])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}