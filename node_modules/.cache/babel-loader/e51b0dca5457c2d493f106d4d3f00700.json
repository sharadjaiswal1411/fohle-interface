{"ast":null,"code":"import _assertThisInitialized from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BigNumber, ethers } from 'ethers';\nimport { walletContracts } from '@0xsequence/abi';\nimport { getRandomInt, promisify } from '@0xsequence/utils';\nimport { sequenceContext, JsonRpcVersion } from '@0xsequence/network';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar JsonRpcMethod;\n(function (JsonRpcMethod) {\n  JsonRpcMethod[\"ethCall\"] = \"eth_call\";\n  JsonRpcMethod[\"ethGetBalance\"] = \"eth_getBalance\";\n  JsonRpcMethod[\"ethGetCode\"] = \"eth_getCode\";\n})(JsonRpcMethod || (JsonRpcMethod = {}));\nfunction safeSolve(_x, _x2) {\n  return _safeSolve.apply(this, arguments);\n}\nfunction _safeSolve() {\n  _safeSolve = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(promise, def) {\n    var d;\n    return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return promise;\n          case 3:\n            return _context10.abrupt(\"return\", _context10.sent);\n          case 6:\n            _context10.prev = 6;\n            _context10.t0 = _context10[\"catch\"](0);\n            d = def instanceof Function ? def(_context10.t0) : def;\n            return _context10.abrupt(\"return\", d);\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[0, 6]]);\n  }));\n  return _safeSolve.apply(this, arguments);\n}\nfunction partition(array, callback) {\n  return array.reduce(function (result, element, i) {\n    callback(element, i) ? result[0].push(element) : result[1].push(element);\n    return result;\n  }, [[], []]);\n}\nfunction parseBlockTag(cand) {\n  if (cand === undefined) return 'latest';\n  switch (cand) {\n    case 'earliest':\n    case 'latest':\n    case 'pending':\n      return cand;\n  }\n  return BigNumber.from(cand);\n}\nfunction eqBlockTag(a, b) {\n  if (a === b) return true;\n  if (BigNumber.isBigNumber(a)) {\n    if (BigNumber.isBigNumber(b)) return a.eq(b);\n    return false;\n  }\n  if (BigNumber.isBigNumber(b)) return false;\n  return a === b;\n}\nvar DefaultMulticallOptions = {\n  batchSize: 50,\n  timeWindow: 50,\n  contract: sequenceContext.sequenceUtils,\n  verbose: false\n};\nvar Multicall = /*#__PURE__*/function () {\n  function Multicall(options) {\n    var _this2 = this;\n    _classCallCheck(this, Multicall);\n    var _this = this;\n    this.batchableJsonRpcMethods = [JsonRpcMethod.ethCall, JsonRpcMethod.ethGetCode, JsonRpcMethod.ethGetBalance];\n    this.multicallInterface = new ethers.utils.Interface(walletContracts.sequenceUtils.abi);\n    this.options = void 0;\n    this.timeout = void 0;\n    this.queue = [];\n    this.scheduleExecution = function () {\n      if (_this2.queue.length > 0) {\n        if (_this2.timeout) clearTimeout(_this2.timeout);\n        _this2.timeout = setTimeout(_this2.run, _this2.options.timeWindow);\n      }\n    };\n    this.handle = function (next, request, callback) {\n      // Schedule for batching and return\n      if (_this2.batchableJsonRpcMethods.find(function (m) {\n        return m === request.method;\n      })) {\n        _this2.queue.push({\n          request: request,\n          callback: callback,\n          next: next\n        });\n        if (_this2.options.verbose) console.log('Scheduling call', request.method);\n        _this2.scheduleExecution();\n        return;\n      }\n      if (_this2.options.verbose) console.log('Forwarded call', request.method); // Move to next handler\n\n      return next(request, callback);\n    };\n    this.run = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var limit, items, next, blockTag, _partition, _partition2, discartItems, callParams, _partition3, _partition4, encodedCall, reqId, res, decoded;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              /* eslint-disable no-var */\n              if (_this.options.verbose) console.log('Processing multicall'); // Read items from queue\n              limit = Math.min(_this.options.batchSize, _this.queue.length);\n              if (!(limit === 0)) {\n                _context.next = 4;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 4:\n              if (!(limit === 1)) {\n                _context.next = 9;\n                break;\n              }\n              _this.forward(_this.queue[0]);\n              _this.queue = [];\n              if (_this.options.verbose) console.log('Skip multicall, single item');\n              return _context.abrupt(\"return\");\n            case 9:\n              if (_this.options.verbose) console.log('Resolving', limit); // Get batch from queue\n              items = _this.queue.slice(0, limit); // Update queue\n              _this.queue = limit === _this.queue.length ? [] : _this.queue.slice(limit);\n              if (_this.options.verbose) console.log('Updated queue', _this.queue.length);\n              if (_this.queue.length !== 0) {\n                _this.scheduleExecution();\n              } // Get next candidate\n              next = items[0].next;\n              // Partition incompatible calls\n              _partition = partition(items, function (item) {\n                try {\n                  // Mixed next callbacks\n                  if (item.next !== next) return false;\n                  switch (item.request.method) {\n                    case JsonRpcMethod.ethCall:\n                      // Unsupported eth_call parameters\n                      if (item.request.params[0].from || item.request.params[0].gasPrice || item.request.params[0].value) {\n                        return false;\n                      }\n                    case JsonRpcMethod.ethGetBalance:\n                    case JsonRpcMethod.ethGetCode:\n                      // Mixed blockTags\n                      var itemBlockTag = parseBlockTag(item.request.params[1]);\n                      if (blockTag === undefined) blockTag = itemBlockTag;\n                      if (!eqBlockTag(itemBlockTag, blockTag)) return false;\n                  }\n                  return true;\n                } catch (_unused) {\n                  return false;\n                }\n              }), _partition2 = _slicedToArray(_partition, 2), items = _partition2[0], discartItems = _partition2[1]; // Forward discarted items\n              // end execution if no items remain\n              if (!(discartItems.length !== 0)) {\n                _context.next = 21;\n                break;\n              }\n              if (_this.options.verbose) console.log('Forwarding incompatible calls', discartItems.length);\n              _this.forward(discartItems);\n              if (!(items.length === 0)) {\n                _context.next = 21;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 21:\n              // Aggregate all calls\n              callParams = items.map(function (v) {\n                try {\n                  switch (v.request.method) {\n                    case JsonRpcMethod.ethCall:\n                      return {\n                        delegateCall: false,\n                        revertOnError: false,\n                        target: v.request.params[0].to,\n                        data: v.request.params[0].data,\n                        gasLimit: v.request.params[0].gas ? v.request.params[0].gas : 0,\n                        value: 0\n                      };\n                    case JsonRpcMethod.ethGetCode:\n                      return {\n                        delegateCall: false,\n                        revertOnError: false,\n                        target: _this.options.contract,\n                        gasLimit: 0,\n                        value: 0,\n                        data: _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('callCode'), [v.request.params[0]])\n                      };\n                    case JsonRpcMethod.ethGetBalance:\n                      return {\n                        delegateCall: false,\n                        revertOnError: false,\n                        target: _this.options.contract,\n                        gasLimit: 0,\n                        value: 0,\n                        data: _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('callBalanceOf'), [v.request.params[0]])\n                      };\n                    default:\n                      return null;\n                  }\n                } catch (_unused2) {\n                  return null;\n                }\n              }); // Filter calls with enconding errors and forward items\n              _partition3 = partition(items, function (_, i) {\n                return callParams[i] !== undefined;\n              }), _partition4 = _slicedToArray(_partition3, 2), items = _partition4[0], discartItems = _partition4[1];\n              callParams = callParams.filter(function (c) {\n                return c;\n              });\n              if (!(discartItems.length !== 0)) {\n                _context.next = 29;\n                break;\n              }\n              if (_this.options.verbose) console.log('Forwarding calls on error', discartItems.length);\n              _this.forward(discartItems);\n              if (!(items.length === 0)) {\n                _context.next = 29;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 29:\n              _context.prev = 29;\n              encodedCall = _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('multiCall'), [callParams]);\n              _context.next = 37;\n              break;\n            case 33:\n              _context.prev = 33;\n              _context.t0 = _context[\"catch\"](29);\n              _this.forward(items);\n              return _context.abrupt(\"return\");\n            case 37:\n              // Forward single multicall rpc call\n              reqId = getRandomInt(); // TODO: fix types below..\n              _context.next = 40;\n              return safeSolve(\n              // @ts-ignore\n              promisify(next)({\n                id: reqId,\n                jsonrpc: JsonRpcVersion,\n                method: JsonRpcMethod.ethCall,\n                params: [{\n                  to: _this.options.contract,\n                  value: 0,\n                  data: encodedCall\n                }, BigNumber.isBigNumber(blockTag) ? blockTag.toNumber() : blockTag] // @ts-ignore\n              }), function (e) {\n                return {\n                  jsonrpc: JsonRpcVersion,\n                  id: reqId,\n                  result: undefined,\n                  error: e\n                };\n              });\n            case 40:\n              res = _context.sent;\n              if (!res.error) {\n                _context.next = 43;\n                break;\n              }\n              return _context.abrupt(\"return\", _this.forward(items));\n            case 43:\n              _context.prev = 43;\n              // @ts-ignore\n              decoded = _this.multicallInterface.decodeFunctionResult(_this.multicallInterface.getFunction('multiCall'), res.result);\n              _context.next = 51;\n              break;\n            case 47:\n              _context.prev = 47;\n              _context.t1 = _context[\"catch\"](43);\n              _this.forward(items);\n              return _context.abrupt(\"return\");\n            case 51:\n              // Send results for each request\n              // errors fallback through the middleware\n\n              if (_this.options.verbose) console.log('Got response for', items.length);\n              items.forEach(function (item, index) {\n                if (!decoded[0][index]) {\n                  _this.forward(item);\n                } else {\n                  switch (item.request.method) {\n                    case JsonRpcMethod.ethCall:\n                      item.callback(undefined, {\n                        jsonrpc: item.request.jsonrpc,\n                        id: item.request.id,\n                        result: decoded[1][index]\n                      });\n                      break;\n                    case JsonRpcMethod.ethGetCode:\n                      item.callback(undefined, {\n                        jsonrpc: item.request.jsonrpc,\n                        id: item.request.id,\n                        result: ethers.utils.defaultAbiCoder.decode(['bytes'], decoded[1][index])[0]\n                      });\n                      break;\n                    case JsonRpcMethod.ethGetBalance:\n                      item.callback(undefined, {\n                        jsonrpc: item.request.jsonrpc,\n                        id: item.request.id,\n                        result: ethers.utils.defaultAbiCoder.decode(['uint256'], decoded[1][index])[0]\n                      });\n                      break;\n                  }\n                }\n              });\n            case 53:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[29, 33], [43, 47]]);\n    }));\n    this.options = options ? _extends({}, Multicall.DefaultOptions, options) : Multicall.DefaultOptions;\n    if (this.options.batchSize <= 0) throw new Error(\"Invalid batch size of \".concat(this.options.batchSize));\n  }\n  _createClass(Multicall, [{\n    key: \"forward\",\n    value: function forward(entries) {\n      if (Array.isArray(entries)) {\n        entries.forEach(function (e) {\n          return e.next(e.request, e.callback);\n        });\n      } else {\n        entries.next(entries.request, entries.callback);\n      }\n    }\n  }], [{\n    key: \"isMulticall\",\n    value: function isMulticall(cand) {\n      return cand && cand.handle !== undefined && cand.conf !== undefined && Multicall.isMulticallOptions(cand.options);\n    }\n  }, {\n    key: \"isMulticallOptions\",\n    value: function isMulticallOptions(cand) {\n      return cand !== undefined && cand.batchSize !== undefined && cand.timeWindow !== undefined && cand.contract !== undefined;\n    }\n  }]);\n  return Multicall;\n}();\nMulticall.DefaultOptions = _extends({}, DefaultMulticallOptions);\nvar ProxyMethods = ['getNetwork', 'getBlockNumber', 'getGasPrice', 'getTransactionCount', 'getStorageAt', 'sendTransaction', 'estimateGas', 'getBlock', 'getTransaction', 'getTransactionReceipt', 'getLogs', 'emit', 'litenerCount', 'addListener', 'removeListener', 'waitForTransaction', 'detectNetwork', 'getBlockWithTransactions'];\nvar MulticallProvider = /*#__PURE__*/function (_ethers$providers$Bas) {\n  _inherits(MulticallProvider, _ethers$providers$Bas);\n  var _super = _createSuper(MulticallProvider);\n  function MulticallProvider(provider, multicall) {\n    var _this3;\n    _classCallCheck(this, MulticallProvider);\n    var _this;\n    _this3 = _super.call(this, provider.getNetwork());\n    _this = _assertThisInitialized(_this3);\n    _this3.provider = provider;\n    _this3.multicall = void 0;\n    _this3.listenerCount = _this3.provider.listenerCount;\n    _this3.getResolver = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name) {\n        var provider, ogResolver;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                provider = _this.provider;\n                if (!provider.getResolver) {\n                  _context2.next = 12;\n                  break;\n                }\n                _context2.t0 = provider;\n                _context2.next = 5;\n                return name;\n              case 5:\n                _context2.t1 = _context2.sent;\n                _context2.next = 8;\n                return _context2.t0.getResolver.call(_context2.t0, _context2.t1);\n              case 8:\n                ogResolver = _context2.sent;\n                if (ogResolver) {\n                  _context2.next = 11;\n                  break;\n                }\n                return _context2.abrupt(\"return\", null);\n              case 11:\n                return _context2.abrupt(\"return\", new ethers.providers.Resolver(_this, ogResolver.address, ogResolver.name));\n              case 12:\n                _context2.t2 = provider;\n                _context2.next = 15;\n                return name;\n              case 15:\n                _context2.t3 = _context2.sent;\n                return _context2.abrupt(\"return\", _context2.t2.getResolver.call(_context2.t2, _context2.t3));\n              case 17:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function (_x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    _this3.next = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, callback) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.t0 = req.method;\n                _context3.next = _context3.t0 === JsonRpcMethod.ethCall ? 4 : _context3.t0 === JsonRpcMethod.ethGetCode ? 12 : _context3.t0 === JsonRpcMethod.ethGetBalance ? 20 : 28;\n                break;\n              case 4:\n                _context3.t1 = _this;\n                _context3.t2 = req;\n                _context3.t3 = callback;\n                _context3.next = 9;\n                return _this.provider.call(req.params[0], req.params[1]);\n              case 9:\n                _context3.t4 = _context3.sent;\n                _context3.t1.callback.call(_context3.t1, _context3.t2, _context3.t3, _context3.t4);\n                return _context3.abrupt(\"break\", 28);\n              case 12:\n                _context3.t5 = _this;\n                _context3.t6 = req;\n                _context3.t7 = callback;\n                _context3.next = 17;\n                return _this.provider.getCode(req.params[0], req.params[1]);\n              case 17:\n                _context3.t8 = _context3.sent;\n                _context3.t5.callback.call(_context3.t5, _context3.t6, _context3.t7, _context3.t8);\n                return _context3.abrupt(\"break\", 28);\n              case 20:\n                _context3.t9 = _this;\n                _context3.t10 = req;\n                _context3.t11 = callback;\n                _context3.next = 25;\n                return _this.provider.getBalance(req.params[0], req.params[1]);\n              case 25:\n                _context3.t12 = _context3.sent;\n                _context3.t9.callback.call(_context3.t9, _context3.t10, _context3.t11, _context3.t12);\n                return _context3.abrupt(\"break\", 28);\n              case 28:\n                _context3.next = 33;\n                break;\n              case 30:\n                _context3.prev = 30;\n                _context3.t13 = _context3[\"catch\"](0);\n                _this.callback(req, callback, undefined, _context3.t13);\n              case 33:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 30]]);\n      }));\n      return function (_x4, _x5) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this3.multicall = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n    ProxyMethods.forEach(function (m) {\n      if (provider[m] !== undefined) {\n        _this3[m] = function () {\n          return provider[m].apply(provider, arguments);\n        };\n      }\n    });\n    return _this3;\n  }\n  _createClass(MulticallProvider, [{\n    key: \"callback\",\n    value: function callback(req, _callback, resp, err) {\n      _callback(err, {\n        jsonrpc: JsonRpcVersion,\n        id: req.id,\n        result: resp,\n        error: err\n      });\n    }\n  }, {\n    key: \"call\",\n    value: function () {\n      var _call = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transaction, blockTag) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.rpcCall(JsonRpcMethod.ethCall, transaction, blockTag));\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function call(_x6, _x7) {\n        return _call.apply(this, arguments);\n      }\n      return call;\n    }()\n  }, {\n    key: \"getCode\",\n    value: function () {\n      var _getCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(addressOrName, blockTag) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.rpcCall(JsonRpcMethod.ethGetCode, addressOrName, blockTag));\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function getCode(_x8, _x9) {\n        return _getCode.apply(this, arguments);\n      }\n      return getCode;\n    }()\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(addressOrName, blockTag) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.rpcCall(JsonRpcMethod.ethGetBalance, addressOrName, blockTag));\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function getBalance(_x10, _x11) {\n        return _getBalance.apply(this, arguments);\n      }\n      return getBalance;\n    }()\n  }, {\n    key: \"rpcCall\",\n    value: function () {\n      var _rpcCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(method) {\n        var reqId,\n          _len,\n          params,\n          _key,\n          resp,\n          _args7 = arguments;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                reqId = getRandomInt();\n                for (_len = _args7.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                  params[_key - 1] = _args7[_key];\n                }\n                _context7.next = 4;\n                return promisify(this.multicall.handle)(this.next, {\n                  jsonrpc: JsonRpcVersion,\n                  id: reqId,\n                  method: method,\n                  params: params\n                });\n              case 4:\n                resp = _context7.sent;\n                return _context7.abrupt(\"return\", resp.result);\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function rpcCall(_x12) {\n        return _rpcCall.apply(this, arguments);\n      }\n      return rpcCall;\n    }()\n  }]);\n  return MulticallProvider;\n}(ethers.providers.BaseProvider);\nvar MulticallExternalProvider = /*#__PURE__*/function () {\n  function MulticallExternalProvider(provider, multicall) {\n    var _this4 = this;\n    _classCallCheck(this, MulticallExternalProvider);\n    this.provider = provider;\n    this.multicall = void 0;\n    this.multicall = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n    if (provider.send) {\n      var next = /*#__PURE__*/function () {\n        var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req, callback) {\n          return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  provider.send(req, callback);\n                case 1:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee8);\n        }));\n        function next(_x13, _x14) {\n          return _next.apply(this, arguments);\n        }\n        return next;\n      }();\n      this.send = function (request, callback) {\n        _this4.multicall.handle(next, request, callback);\n      };\n    }\n    if (provider.sendAsync) {\n      var _next2 = /*#__PURE__*/function () {\n        var _next3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(req, callback) {\n          return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                  provider.sendAsync(req, callback);\n                case 1:\n                case \"end\":\n                  return _context9.stop();\n              }\n            }\n          }, _callee9);\n        }));\n        function next(_x15, _x16) {\n          return _next3.apply(this, arguments);\n        }\n        return next;\n      }();\n      this.sendAsync = function (request, callback) {\n        _this4.multicall.handle(_next2, request, callback);\n      };\n    }\n  }\n  _createClass(MulticallExternalProvider, [{\n    key: \"isMetaMask\",\n    get: function get() {\n      return this.provider.isMetaMask;\n    }\n  }, {\n    key: \"isStatus\",\n    get: function get() {\n      return this.provider.isStatus;\n    }\n  }]);\n  return MulticallExternalProvider;\n}();\nvar multicallMiddleware = function multicallMiddleware(multicall) {\n  return function (next) {\n    var lib = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n    return function (request, callback) {\n      return lib.handle(next, request, callback);\n    };\n  };\n};\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ProxyMethods: ProxyMethods,\n  MulticallProvider: MulticallProvider,\n  MulticallExternalProvider: MulticallExternalProvider,\n  multicallMiddleware: multicallMiddleware\n});\nexport { Multicall, index as providers };","map":{"version":3,"names":["BigNumber","ethers","walletContracts","getRandomInt","promisify","sequenceContext","JsonRpcVersion","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","JsonRpcMethod","safeSolve","promise","def","d","Function","partition","array","callback","reduce","result","element","push","parseBlockTag","cand","undefined","from","eqBlockTag","a","b","isBigNumber","eq","DefaultMulticallOptions","batchSize","timeWindow","contract","sequenceUtils","verbose","Multicall","options","_this","batchableJsonRpcMethods","ethCall","ethGetCode","ethGetBalance","multicallInterface","utils","Interface","abi","timeout","queue","scheduleExecution","clearTimeout","setTimeout","run","handle","next","request","find","m","method","console","log","limit","Math","min","forward","items","slice","item","params","gasPrice","value","itemBlockTag","blockTag","_unused","discartItems","callParams","map","v","delegateCall","revertOnError","to","data","gasLimit","gas","encodeFunctionData","getFunction","_unused2","_","filter","c","encodedCall","reqId","id","jsonrpc","toNumber","e","error","res","decoded","decodeFunctionResult","forEach","index","defaultAbiCoder","decode","DefaultOptions","Error","entries","Array","isArray","conf","isMulticallOptions","ProxyMethods","MulticallProvider","provider","multicall","getNetwork","listenerCount","getResolver","name","ogResolver","providers","Resolver","address","req","getCode","getBalance","isMulticall","resp","err","transaction","rpcCall","addressOrName","BaseProvider","MulticallExternalProvider","send","sendAsync","isMetaMask","isStatus","multicallMiddleware","lib","freeze","__proto__"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@0xsequence/multicall/dist/0xsequence-multicall.esm.js"],"sourcesContent":["import { BigNumber, ethers } from 'ethers';\nimport { walletContracts } from '@0xsequence/abi';\nimport { getRandomInt, promisify } from '@0xsequence/utils';\nimport { sequenceContext, JsonRpcVersion } from '@0xsequence/network';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nlet JsonRpcMethod;\n\n(function (JsonRpcMethod) {\n  JsonRpcMethod[\"ethCall\"] = \"eth_call\";\n  JsonRpcMethod[\"ethGetBalance\"] = \"eth_getBalance\";\n  JsonRpcMethod[\"ethGetCode\"] = \"eth_getCode\";\n})(JsonRpcMethod || (JsonRpcMethod = {}));\n\nasync function safeSolve(promise, def) {\n  try {\n    return await promise;\n  } catch (e) {\n    const d = def instanceof Function ? def(e) : def;\n    return d;\n  }\n}\nfunction partition(array, callback) {\n  return array.reduce(function (result, element, i) {\n    callback(element, i) ? result[0].push(element) : result[1].push(element);\n    return result;\n  }, [[], []]);\n}\nfunction parseBlockTag(cand) {\n  if (cand === undefined) return 'latest';\n\n  switch (cand) {\n    case 'earliest':\n    case 'latest':\n    case 'pending':\n      return cand;\n  }\n\n  return BigNumber.from(cand);\n}\nfunction eqBlockTag(a, b) {\n  if (a === b) return true;\n\n  if (BigNumber.isBigNumber(a)) {\n    if (BigNumber.isBigNumber(b)) return a.eq(b);\n    return false;\n  }\n\n  if (BigNumber.isBigNumber(b)) return false;\n  return a === b;\n}\n\nconst DefaultMulticallOptions = {\n  batchSize: 50,\n  timeWindow: 50,\n  contract: sequenceContext.sequenceUtils,\n  verbose: false\n};\nclass Multicall {\n  constructor(options) {\n    var _this = this;\n\n    this.batchableJsonRpcMethods = [JsonRpcMethod.ethCall, JsonRpcMethod.ethGetCode, JsonRpcMethod.ethGetBalance];\n    this.multicallInterface = new ethers.utils.Interface(walletContracts.sequenceUtils.abi);\n    this.options = void 0;\n    this.timeout = void 0;\n    this.queue = [];\n\n    this.scheduleExecution = () => {\n      if (this.queue.length > 0) {\n        if (this.timeout) clearTimeout(this.timeout);\n        this.timeout = setTimeout(this.run, this.options.timeWindow);\n      }\n    };\n\n    this.handle = (next, request, callback) => {\n      // Schedule for batching and return\n      if (this.batchableJsonRpcMethods.find(m => m === request.method)) {\n        this.queue.push({\n          request: request,\n          callback: callback,\n          next: next\n        });\n        if (this.options.verbose) console.log('Scheduling call', request.method);\n        this.scheduleExecution();\n        return;\n      }\n\n      if (this.options.verbose) console.log('Forwarded call', request.method); // Move to next handler\n\n      return next(request, callback);\n    };\n\n    this.run = async function () {\n      /* eslint-disable no-var */\n      if (_this.options.verbose) console.log('Processing multicall'); // Read items from queue\n\n      const limit = Math.min(_this.options.batchSize, _this.queue.length);\n      if (limit === 0) return; // Skip multicall on single item\n\n      if (limit === 1) {\n        _this.forward(_this.queue[0]);\n\n        _this.queue = [];\n        if (_this.options.verbose) console.log('Skip multicall, single item');\n        return;\n      }\n\n      if (_this.options.verbose) console.log('Resolving', limit); // Get batch from queue\n\n      var items = _this.queue.slice(0, limit); // Update queue\n\n\n      _this.queue = limit === _this.queue.length ? [] : _this.queue.slice(limit);\n      if (_this.options.verbose) console.log('Updated queue', _this.queue.length);\n\n      if (_this.queue.length !== 0) {\n        _this.scheduleExecution();\n      } // Get next candidate\n\n\n      const next = items[0].next;\n      let blockTag; // Partition incompatible calls\n\n      var [items, discartItems] = partition(items, item => {\n        try {\n          // Mixed next callbacks\n          if (item.next !== next) return false;\n\n          switch (item.request.method) {\n            case JsonRpcMethod.ethCall:\n              // Unsupported eth_call parameters\n              if (item.request.params[0].from || item.request.params[0].gasPrice || item.request.params[0].value) {\n                return false;\n              }\n\n            case JsonRpcMethod.ethGetBalance:\n            case JsonRpcMethod.ethGetCode:\n              // Mixed blockTags\n              const itemBlockTag = parseBlockTag(item.request.params[1]);\n              if (blockTag === undefined) blockTag = itemBlockTag;\n              if (!eqBlockTag(itemBlockTag, blockTag)) return false;\n          }\n\n          return true;\n        } catch (_unused) {\n          return false;\n        }\n      }); // Forward discarted items\n      // end execution if no items remain\n\n      if (discartItems.length !== 0) {\n        if (_this.options.verbose) console.log('Forwarding incompatible calls', discartItems.length);\n\n        _this.forward(discartItems);\n\n        if (items.length === 0) return;\n      } // Aggregate all calls\n\n\n      let callParams = items.map(v => {\n        try {\n          switch (v.request.method) {\n            case JsonRpcMethod.ethCall:\n              return {\n                delegateCall: false,\n                revertOnError: false,\n                target: v.request.params[0].to,\n                data: v.request.params[0].data,\n                gasLimit: v.request.params[0].gas ? v.request.params[0].gas : 0,\n                value: 0\n              };\n\n            case JsonRpcMethod.ethGetCode:\n              return {\n                delegateCall: false,\n                revertOnError: false,\n                target: _this.options.contract,\n                gasLimit: 0,\n                value: 0,\n                data: _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('callCode'), [v.request.params[0]])\n              };\n\n            case JsonRpcMethod.ethGetBalance:\n              return {\n                delegateCall: false,\n                revertOnError: false,\n                target: _this.options.contract,\n                gasLimit: 0,\n                value: 0,\n                data: _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('callBalanceOf'), [v.request.params[0]])\n              };\n\n            default:\n              return null;\n          }\n        } catch (_unused2) {\n          return null;\n        }\n      }); // Filter calls with enconding errors and forward items\n\n      var [items, discartItems] = partition(items, (_, i) => callParams[i] !== undefined);\n      callParams = callParams.filter(c => c);\n\n      if (discartItems.length !== 0) {\n        if (_this.options.verbose) console.log('Forwarding calls on error', discartItems.length);\n\n        _this.forward(discartItems);\n\n        if (items.length === 0) return;\n      } // Encode multicall\n\n\n      let encodedCall;\n\n      try {\n        encodedCall = _this.multicallInterface.encodeFunctionData(_this.multicallInterface.getFunction('multiCall'), [callParams]);\n      } catch (_unused3) {\n        _this.forward(items);\n\n        return;\n      } // Forward single multicall rpc call\n\n\n      const reqId = getRandomInt(); // TODO: fix types below..\n\n      const res = await safeSolve( // @ts-ignore\n      promisify(next)({\n        id: reqId,\n        jsonrpc: JsonRpcVersion,\n        method: JsonRpcMethod.ethCall,\n        params: [{\n          to: _this.options.contract,\n          value: 0,\n          data: encodedCall\n        }, BigNumber.isBigNumber(blockTag) ? blockTag.toNumber() : blockTag] // @ts-ignore\n\n      }), e => ({\n        jsonrpc: JsonRpcVersion,\n        id: reqId,\n        result: undefined,\n        error: e\n      })); // Error calling multicall\n      // Forward all calls to middleware\n      // @ts-ignore\n\n      if (res.error) {\n        return _this.forward(items);\n      } // Decode result from multicall\n\n\n      let decoded;\n\n      try {\n        // @ts-ignore\n        decoded = _this.multicallInterface.decodeFunctionResult(_this.multicallInterface.getFunction('multiCall'), res.result);\n      } catch (_unused4) {\n        _this.forward(items);\n\n        return;\n      } // Send results for each request\n      // errors fallback through the middleware\n\n\n      if (_this.options.verbose) console.log('Got response for', items.length);\n      items.forEach((item, index) => {\n        if (!decoded[0][index]) {\n          _this.forward(item);\n        } else {\n          switch (item.request.method) {\n            case JsonRpcMethod.ethCall:\n              item.callback(undefined, {\n                jsonrpc: item.request.jsonrpc,\n                id: item.request.id,\n                result: decoded[1][index]\n              });\n              break;\n\n            case JsonRpcMethod.ethGetCode:\n              item.callback(undefined, {\n                jsonrpc: item.request.jsonrpc,\n                id: item.request.id,\n                result: ethers.utils.defaultAbiCoder.decode(['bytes'], decoded[1][index])[0]\n              });\n              break;\n\n            case JsonRpcMethod.ethGetBalance:\n              item.callback(undefined, {\n                jsonrpc: item.request.jsonrpc,\n                id: item.request.id,\n                result: ethers.utils.defaultAbiCoder.decode(['uint256'], decoded[1][index])[0]\n              });\n              break;\n          }\n        }\n      });\n    };\n\n    this.options = options ? _extends({}, Multicall.DefaultOptions, options) : Multicall.DefaultOptions;\n    if (this.options.batchSize <= 0) throw new Error(`Invalid batch size of ${this.options.batchSize}`);\n  }\n\n  forward(entries) {\n    if (Array.isArray(entries)) {\n      entries.forEach(e => e.next(e.request, e.callback));\n    } else {\n      entries.next(entries.request, entries.callback);\n    }\n  }\n\n  static isMulticall(cand) {\n    return cand && cand.handle !== undefined && cand.conf !== undefined && Multicall.isMulticallOptions(cand.options);\n  }\n\n  static isMulticallOptions(cand) {\n    return cand !== undefined && cand.batchSize !== undefined && cand.timeWindow !== undefined && cand.contract !== undefined;\n  }\n\n}\nMulticall.DefaultOptions = _extends({}, DefaultMulticallOptions);\n\nconst ProxyMethods = ['getNetwork', 'getBlockNumber', 'getGasPrice', 'getTransactionCount', 'getStorageAt', 'sendTransaction', 'estimateGas', 'getBlock', 'getTransaction', 'getTransactionReceipt', 'getLogs', 'emit', 'litenerCount', 'addListener', 'removeListener', 'waitForTransaction', 'detectNetwork', 'getBlockWithTransactions'];\nclass MulticallProvider extends ethers.providers.BaseProvider {\n  constructor(provider, multicall) {\n    var _this;\n\n    super(provider.getNetwork());\n    _this = this;\n    this.provider = provider;\n    this.multicall = void 0;\n    this.listenerCount = this.provider.listenerCount;\n\n    this.getResolver = async function (name) {\n      const provider = _this.provider;\n\n      if (provider.getResolver) {\n        const ogResolver = await provider.getResolver(await name);\n        if (!ogResolver) return null;\n        return new ethers.providers.Resolver(_this, ogResolver.address, ogResolver.name);\n      }\n\n      return provider.getResolver(await name);\n    };\n\n    this.next = async function (req, callback) {\n      try {\n        switch (req.method) {\n          case JsonRpcMethod.ethCall:\n            _this.callback(req, callback, await _this.provider.call(req.params[0], req.params[1]));\n\n            break;\n\n          case JsonRpcMethod.ethGetCode:\n            _this.callback(req, callback, await _this.provider.getCode(req.params[0], req.params[1]));\n\n            break;\n\n          case JsonRpcMethod.ethGetBalance:\n            _this.callback(req, callback, await _this.provider.getBalance(req.params[0], req.params[1]));\n\n            break;\n        }\n      } catch (e) {\n        _this.callback(req, callback, undefined, e);\n      }\n    };\n\n    this.multicall = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n    ProxyMethods.forEach(m => {\n      if (provider[m] !== undefined) {\n\n        this[m] = (...args) => provider[m](...args);\n      }\n    });\n  }\n\n  callback(req, callback, resp, err) {\n    callback(err, {\n      jsonrpc: JsonRpcVersion,\n      id: req.id,\n      result: resp,\n      error: err\n    });\n  }\n\n  async call(transaction, blockTag) {\n    return this.rpcCall(JsonRpcMethod.ethCall, transaction, blockTag);\n  }\n\n  async getCode(addressOrName, blockTag) {\n    return this.rpcCall(JsonRpcMethod.ethGetCode, addressOrName, blockTag);\n  }\n\n  async getBalance(addressOrName, blockTag) {\n    return this.rpcCall(JsonRpcMethod.ethGetBalance, addressOrName, blockTag);\n  }\n\n  async rpcCall(method, ...params) {\n    const reqId = getRandomInt();\n    const resp = await promisify(this.multicall.handle)(this.next, {\n      jsonrpc: JsonRpcVersion,\n      id: reqId,\n      method: method,\n      params: params\n    });\n    return resp.result;\n  }\n\n}\n\nclass MulticallExternalProvider {\n  constructor(provider, multicall) {\n    this.provider = provider;\n    this.multicall = void 0;\n    this.multicall = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n\n    if (provider.send) {\n      const next = async function next(req, callback) {\n        provider.send(req, callback);\n      };\n\n      this.send = (request, callback) => {\n        this.multicall.handle(next, request, callback);\n      };\n    }\n\n    if (provider.sendAsync) {\n      const next = async function next(req, callback) {\n        provider.sendAsync(req, callback);\n      };\n\n      this.sendAsync = (request, callback) => {\n        this.multicall.handle(next, request, callback);\n      };\n    }\n  }\n\n  get isMetaMask() {\n    return this.provider.isMetaMask;\n  }\n\n  get isStatus() {\n    return this.provider.isStatus;\n  }\n\n}\n\nconst multicallMiddleware = multicall => next => {\n  const lib = Multicall.isMulticall(multicall) ? multicall : new Multicall(multicall);\n  return (request, callback) => {\n    return lib.handle(next, request, callback);\n  };\n};\n\nvar index = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ProxyMethods: ProxyMethods,\n  MulticallProvider: MulticallProvider,\n  MulticallExternalProvider: MulticallExternalProvider,\n  multicallMiddleware: multicallMiddleware\n});\n\nexport { Multicall, index as providers };\n"],"mappings":";;;;;;;;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,QAAQ;AAC1C,SAASC,eAAe,QAAQ,iBAAiB;AACjD,SAASC,YAAY,EAAEC,SAAS,QAAQ,mBAAmB;AAC3D,SAASC,eAAe,EAAEC,cAAc,QAAQ,qBAAqB;AAErE,SAASC,QAAQ,GAAG;EAClBA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;IAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACzC,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;MAEzB,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;QACtB,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;UACrDL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;QAC3B;MACF;IACF;IAEA,OAAOL,MAAM;EACf,CAAC;EAED,OAAOH,QAAQ,CAACY,KAAK,CAAC,IAAI,EAAEP,SAAS,CAAC;AACxC;AAEA,IAAIQ,aAAa;AAEjB,CAAC,UAAUA,aAAa,EAAE;EACxBA,aAAa,CAAC,SAAS,CAAC,GAAG,UAAU;EACrCA,aAAa,CAAC,eAAe,CAAC,GAAG,gBAAgB;EACjDA,aAAa,CAAC,YAAY,CAAC,GAAG,aAAa;AAC7C,CAAC,EAAEA,aAAa,KAAKA,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC;AAAC,SAE3BC,SAAS;EAAA;AAAA;AAAA;EAAA,sEAAxB,mBAAyBC,OAAO,EAAEC,GAAG;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA;YAAA,OAEpBD,OAAO;UAAA;YAAA;UAAA;YAAA;YAAA;YAEdE,CAAC,GAAGD,GAAG,YAAYE,QAAQ,GAAGF,GAAG,eAAG,GAAGA,GAAG;YAAA,mCACzCC,CAAC;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAEX;EAAA;AAAA;AACD,SAASE,SAAS,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAClC,OAAOD,KAAK,CAACE,MAAM,CAAC,UAAUC,MAAM,EAAEC,OAAO,EAAEpB,CAAC,EAAE;IAChDiB,QAAQ,CAACG,OAAO,EAAEpB,CAAC,CAAC,GAAGmB,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAACD,OAAO,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,CAACE,IAAI,CAACD,OAAO,CAAC;IACxE,OAAOD,MAAM;EACf,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACd;AACA,SAASG,aAAa,CAACC,IAAI,EAAE;EAC3B,IAAIA,IAAI,KAAKC,SAAS,EAAE,OAAO,QAAQ;EAEvC,QAAQD,IAAI;IACV,KAAK,UAAU;IACf,KAAK,QAAQ;IACb,KAAK,SAAS;MACZ,OAAOA,IAAI;EAAC;EAGhB,OAAOlC,SAAS,CAACoC,IAAI,CAACF,IAAI,CAAC;AAC7B;AACA,SAASG,UAAU,CAACC,CAAC,EAAEC,CAAC,EAAE;EACxB,IAAID,CAAC,KAAKC,CAAC,EAAE,OAAO,IAAI;EAExB,IAAIvC,SAAS,CAACwC,WAAW,CAACF,CAAC,CAAC,EAAE;IAC5B,IAAItC,SAAS,CAACwC,WAAW,CAACD,CAAC,CAAC,EAAE,OAAOD,CAAC,CAACG,EAAE,CAACF,CAAC,CAAC;IAC5C,OAAO,KAAK;EACd;EAEA,IAAIvC,SAAS,CAACwC,WAAW,CAACD,CAAC,CAAC,EAAE,OAAO,KAAK;EAC1C,OAAOD,CAAC,KAAKC,CAAC;AAChB;AAEA,IAAMG,uBAAuB,GAAG;EAC9BC,SAAS,EAAE,EAAE;EACbC,UAAU,EAAE,EAAE;EACdC,QAAQ,EAAExC,eAAe,CAACyC,aAAa;EACvCC,OAAO,EAAE;AACX,CAAC;AAAC,IACIC,SAAS;EACb,mBAAYC,OAAO,EAAE;IAAA;IAAA;IACnB,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAI,CAACC,uBAAuB,GAAG,CAAC/B,aAAa,CAACgC,OAAO,EAAEhC,aAAa,CAACiC,UAAU,EAAEjC,aAAa,CAACkC,aAAa,CAAC;IAC7G,IAAI,CAACC,kBAAkB,GAAG,IAAItD,MAAM,CAACuD,KAAK,CAACC,SAAS,CAACvD,eAAe,CAAC4C,aAAa,CAACY,GAAG,CAAC;IACvF,IAAI,CAACT,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACU,OAAO,GAAG,KAAK,CAAC;IACrB,IAAI,CAACC,KAAK,GAAG,EAAE;IAEf,IAAI,CAACC,iBAAiB,GAAG,YAAM;MAC7B,IAAI,MAAI,CAACD,KAAK,CAAC/C,MAAM,GAAG,CAAC,EAAE;QACzB,IAAI,MAAI,CAAC8C,OAAO,EAAEG,YAAY,CAAC,MAAI,CAACH,OAAO,CAAC;QAC5C,MAAI,CAACA,OAAO,GAAGI,UAAU,CAAC,MAAI,CAACC,GAAG,EAAE,MAAI,CAACf,OAAO,CAACL,UAAU,CAAC;MAC9D;IACF,CAAC;IAED,IAAI,CAACqB,MAAM,GAAG,UAACC,IAAI,EAAEC,OAAO,EAAEvC,QAAQ,EAAK;MACzC;MACA,IAAI,MAAI,CAACuB,uBAAuB,CAACiB,IAAI,CAAC,UAAAC,CAAC;QAAA,OAAIA,CAAC,KAAKF,OAAO,CAACG,MAAM;MAAA,EAAC,EAAE;QAChE,MAAI,CAACV,KAAK,CAAC5B,IAAI,CAAC;UACdmC,OAAO,EAAEA,OAAO;UAChBvC,QAAQ,EAAEA,QAAQ;UAClBsC,IAAI,EAAEA;QACR,CAAC,CAAC;QACF,IAAI,MAAI,CAACjB,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,OAAO,CAACG,MAAM,CAAC;QACxE,MAAI,CAACT,iBAAiB,EAAE;QACxB;MACF;MAEA,IAAI,MAAI,CAACZ,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,OAAO,CAACG,MAAM,CAAC,CAAC,CAAC;;MAEzE,OAAOJ,IAAI,CAACC,OAAO,EAAEvC,QAAQ,CAAC;IAChC,CAAC;IAED,IAAI,CAACoC,GAAG,yEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cACT;cACA,IAAId,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CAAC,CAAC;cAE1DC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAACzB,KAAK,CAACD,OAAO,CAACN,SAAS,EAAEO,KAAK,CAACU,KAAK,CAAC/C,MAAM,CAAC;cAAA,MAC/D4D,KAAK,KAAK,CAAC;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA,MAEXA,KAAK,KAAK,CAAC;gBAAA;gBAAA;cAAA;cACbvB,KAAK,CAAC0B,OAAO,CAAC1B,KAAK,CAACU,KAAK,CAAC,CAAC,CAAC,CAAC;cAE7BV,KAAK,CAACU,KAAK,GAAG,EAAE;cAChB,IAAIV,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;cAAC;YAAA;cAIxE,IAAItB,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,KAAK,CAAC,CAAC,CAAC;cAExDI,KAAK,GAAG3B,KAAK,CAACU,KAAK,CAACkB,KAAK,CAAC,CAAC,EAAEL,KAAK,CAAC,EAAE;cAGzCvB,KAAK,CAACU,KAAK,GAAGa,KAAK,KAAKvB,KAAK,CAACU,KAAK,CAAC/C,MAAM,GAAG,EAAE,GAAGqC,KAAK,CAACU,KAAK,CAACkB,KAAK,CAACL,KAAK,CAAC;cAC1E,IAAIvB,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEtB,KAAK,CAACU,KAAK,CAAC/C,MAAM,CAAC;cAE3E,IAAIqC,KAAK,CAACU,KAAK,CAAC/C,MAAM,KAAK,CAAC,EAAE;gBAC5BqC,KAAK,CAACW,iBAAiB,EAAE;cAC3B,CAAC,CAAC;cAGIK,IAAI,GAAGW,KAAK,CAAC,CAAC,CAAC,CAACX,IAAI;cACZ;cAAA,aAEcxC,SAAS,CAACmD,KAAK,EAAE,UAAAE,IAAI,EAAI;gBACnD,IAAI;kBACF;kBACA,IAAIA,IAAI,CAACb,IAAI,KAAKA,IAAI,EAAE,OAAO,KAAK;kBAEpC,QAAQa,IAAI,CAACZ,OAAO,CAACG,MAAM;oBACzB,KAAKlD,aAAa,CAACgC,OAAO;sBACxB;sBACA,IAAI2B,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC5C,IAAI,IAAI2C,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACC,QAAQ,IAAIF,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACE,KAAK,EAAE;wBAClG,OAAO,KAAK;sBACd;oBAEF,KAAK9D,aAAa,CAACkC,aAAa;oBAChC,KAAKlC,aAAa,CAACiC,UAAU;sBAC3B;sBACA,IAAM8B,YAAY,GAAGlD,aAAa,CAAC8C,IAAI,CAACZ,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;sBAC1D,IAAII,QAAQ,KAAKjD,SAAS,EAAEiD,QAAQ,GAAGD,YAAY;sBACnD,IAAI,CAAC9C,UAAU,CAAC8C,YAAY,EAAEC,QAAQ,CAAC,EAAE,OAAO,KAAK;kBAAC;kBAG1D,OAAO,IAAI;gBACb,CAAC,CAAC,OAAOC,OAAO,EAAE;kBAChB,OAAO,KAAK;gBACd;cACF,CAAC,CAAC,+CAxBGR,KAAK,mBAAES,YAAY,mBAwBpB;cACJ;cAAA,MAEIA,YAAY,CAACzE,MAAM,KAAK,CAAC;gBAAA;gBAAA;cAAA;cAC3B,IAAIqC,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEc,YAAY,CAACzE,MAAM,CAAC;cAE5FqC,KAAK,CAAC0B,OAAO,CAACU,YAAY,CAAC;cAAC,MAExBT,KAAK,CAAChE,MAAM,KAAK,CAAC;gBAAA;gBAAA;cAAA;cAAA;YAAA;cACtB;cAGE0E,UAAU,GAAGV,KAAK,CAACW,GAAG,CAAC,UAAAC,CAAC,EAAI;gBAC9B,IAAI;kBACF,QAAQA,CAAC,CAACtB,OAAO,CAACG,MAAM;oBACtB,KAAKlD,aAAa,CAACgC,OAAO;sBACxB,OAAO;wBACLsC,YAAY,EAAE,KAAK;wBACnBC,aAAa,EAAE,KAAK;wBACpBjF,MAAM,EAAE+E,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACY,EAAE;wBAC9BC,IAAI,EAAEJ,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACa,IAAI;wBAC9BC,QAAQ,EAAEL,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACe,GAAG,GAAGN,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAACe,GAAG,GAAG,CAAC;wBAC/Db,KAAK,EAAE;sBACT,CAAC;oBAEH,KAAK9D,aAAa,CAACiC,UAAU;sBAC3B,OAAO;wBACLqC,YAAY,EAAE,KAAK;wBACnBC,aAAa,EAAE,KAAK;wBACpBjF,MAAM,EAAEwC,KAAK,CAACD,OAAO,CAACJ,QAAQ;wBAC9BiD,QAAQ,EAAE,CAAC;wBACXZ,KAAK,EAAE,CAAC;wBACRW,IAAI,EAAE3C,KAAK,CAACK,kBAAkB,CAACyC,kBAAkB,CAAC9C,KAAK,CAACK,kBAAkB,CAAC0C,WAAW,CAAC,UAAU,CAAC,EAAE,CAACR,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;sBAC3H,CAAC;oBAEH,KAAK5D,aAAa,CAACkC,aAAa;sBAC9B,OAAO;wBACLoC,YAAY,EAAE,KAAK;wBACnBC,aAAa,EAAE,KAAK;wBACpBjF,MAAM,EAAEwC,KAAK,CAACD,OAAO,CAACJ,QAAQ;wBAC9BiD,QAAQ,EAAE,CAAC;wBACXZ,KAAK,EAAE,CAAC;wBACRW,IAAI,EAAE3C,KAAK,CAACK,kBAAkB,CAACyC,kBAAkB,CAAC9C,KAAK,CAACK,kBAAkB,CAAC0C,WAAW,CAAC,eAAe,CAAC,EAAE,CAACR,CAAC,CAACtB,OAAO,CAACa,MAAM,CAAC,CAAC,CAAC,CAAC;sBAChI,CAAC;oBAEH;sBACE,OAAO,IAAI;kBAAC;gBAElB,CAAC,CAAC,OAAOkB,QAAQ,EAAE;kBACjB,OAAO,IAAI;gBACb;cACF,CAAC,CAAC,EAAE;cAAA,cAEwBxE,SAAS,CAACmD,KAAK,EAAE,UAACsB,CAAC,EAAExF,CAAC;gBAAA,OAAK4E,UAAU,CAAC5E,CAAC,CAAC,KAAKwB,SAAS;cAAA,EAAC,gDAA9E0C,KAAK,mBAAES,YAAY;cACxBC,UAAU,GAAGA,UAAU,CAACa,MAAM,CAAC,UAAAC,CAAC;gBAAA,OAAIA,CAAC;cAAA,EAAC;cAAC,MAEnCf,YAAY,CAACzE,MAAM,KAAK,CAAC;gBAAA;gBAAA;cAAA;cAC3B,IAAIqC,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEc,YAAY,CAACzE,MAAM,CAAC;cAExFqC,KAAK,CAAC0B,OAAO,CAACU,YAAY,CAAC;cAAC,MAExBT,KAAK,CAAChE,MAAM,KAAK,CAAC;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;cAOtByF,WAAW,GAAGpD,KAAK,CAACK,kBAAkB,CAACyC,kBAAkB,CAAC9C,KAAK,CAACK,kBAAkB,CAAC0C,WAAW,CAAC,WAAW,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAE3HrC,KAAK,CAAC0B,OAAO,CAACC,KAAK,CAAC;cAAC;YAAA;cAGrB;cAGI0B,KAAK,GAAGpG,YAAY,EAAE,EAAE;cAAA;cAAA,OAEZkB,SAAS;cAAE;cAC7BjB,SAAS,CAAC8D,IAAI,CAAC,CAAC;gBACdsC,EAAE,EAAED,KAAK;gBACTE,OAAO,EAAEnG,cAAc;gBACvBgE,MAAM,EAAElD,aAAa,CAACgC,OAAO;gBAC7B4B,MAAM,EAAE,CAAC;kBACPY,EAAE,EAAE1C,KAAK,CAACD,OAAO,CAACJ,QAAQ;kBAC1BqC,KAAK,EAAE,CAAC;kBACRW,IAAI,EAAES;gBACR,CAAC,EAAEtG,SAAS,CAACwC,WAAW,CAAC4C,QAAQ,CAAC,GAAGA,QAAQ,CAACsB,QAAQ,EAAE,GAAGtB,QAAQ,CAAC,CAAC;cAEvE,CAAC,CAAC,EAAE,UAAAuB,CAAC;gBAAA,OAAK;kBACRF,OAAO,EAAEnG,cAAc;kBACvBkG,EAAE,EAAED,KAAK;kBACTzE,MAAM,EAAEK,SAAS;kBACjByE,KAAK,EAAED;gBACT,CAAC;cAAA,CAAC,CAAC;YAAA;cAhBGE,GAAG;cAAA,KAoBLA,GAAG,CAACD,KAAK;gBAAA;gBAAA;cAAA;cAAA,iCACJ1D,KAAK,CAAC0B,OAAO,CAACC,KAAK,CAAC;YAAA;cAAA;cAO3B;cACAiC,OAAO,GAAG5D,KAAK,CAACK,kBAAkB,CAACwD,oBAAoB,CAAC7D,KAAK,CAACK,kBAAkB,CAAC0C,WAAW,CAAC,WAAW,CAAC,EAAEY,GAAG,CAAC/E,MAAM,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAEvHoB,KAAK,CAAC0B,OAAO,CAACC,KAAK,CAAC;cAAC;YAAA;cAGrB;cACF;;cAGA,IAAI3B,KAAK,CAACD,OAAO,CAACF,OAAO,EAAEwB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEK,KAAK,CAAChE,MAAM,CAAC;cACxEgE,KAAK,CAACmC,OAAO,CAAC,UAACjC,IAAI,EAAEkC,KAAK,EAAK;gBAC7B,IAAI,CAACH,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,EAAE;kBACtB/D,KAAK,CAAC0B,OAAO,CAACG,IAAI,CAAC;gBACrB,CAAC,MAAM;kBACL,QAAQA,IAAI,CAACZ,OAAO,CAACG,MAAM;oBACzB,KAAKlD,aAAa,CAACgC,OAAO;sBACxB2B,IAAI,CAACnD,QAAQ,CAACO,SAAS,EAAE;wBACvBsE,OAAO,EAAE1B,IAAI,CAACZ,OAAO,CAACsC,OAAO;wBAC7BD,EAAE,EAAEzB,IAAI,CAACZ,OAAO,CAACqC,EAAE;wBACnB1E,MAAM,EAAEgF,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK;sBAC1B,CAAC,CAAC;sBACF;oBAEF,KAAK7F,aAAa,CAACiC,UAAU;sBAC3B0B,IAAI,CAACnD,QAAQ,CAACO,SAAS,EAAE;wBACvBsE,OAAO,EAAE1B,IAAI,CAACZ,OAAO,CAACsC,OAAO;wBAC7BD,EAAE,EAAEzB,IAAI,CAACZ,OAAO,CAACqC,EAAE;wBACnB1E,MAAM,EAAE7B,MAAM,CAACuD,KAAK,CAAC0D,eAAe,CAACC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;sBAC7E,CAAC,CAAC;sBACF;oBAEF,KAAK7F,aAAa,CAACkC,aAAa;sBAC9ByB,IAAI,CAACnD,QAAQ,CAACO,SAAS,EAAE;wBACvBsE,OAAO,EAAE1B,IAAI,CAACZ,OAAO,CAACsC,OAAO;wBAC7BD,EAAE,EAAEzB,IAAI,CAACZ,OAAO,CAACqC,EAAE;wBACnB1E,MAAM,EAAE7B,MAAM,CAACuD,KAAK,CAAC0D,eAAe,CAACC,MAAM,CAAC,CAAC,SAAS,CAAC,EAAEL,OAAO,CAAC,CAAC,CAAC,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;sBAC/E,CAAC,CAAC;sBACF;kBAAM;gBAEZ;cACF,CAAC,CAAC;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACJ;IAED,IAAI,CAAChE,OAAO,GAAGA,OAAO,GAAG1C,QAAQ,CAAC,CAAC,CAAC,EAAEyC,SAAS,CAACoE,cAAc,EAAEnE,OAAO,CAAC,GAAGD,SAAS,CAACoE,cAAc;IACnG,IAAI,IAAI,CAACnE,OAAO,CAACN,SAAS,IAAI,CAAC,EAAE,MAAM,IAAI0E,KAAK,iCAA0B,IAAI,CAACpE,OAAO,CAACN,SAAS,EAAG;EACrG;EAAC;IAAA;IAAA,OAED,iBAAQ2E,OAAO,EAAE;MACf,IAAIC,KAAK,CAACC,OAAO,CAACF,OAAO,CAAC,EAAE;QAC1BA,OAAO,CAACN,OAAO,CAAC,UAAAL,CAAC;UAAA,OAAIA,CAAC,CAACzC,IAAI,CAACyC,CAAC,CAACxC,OAAO,EAAEwC,CAAC,CAAC/E,QAAQ,CAAC;QAAA,EAAC;MACrD,CAAC,MAAM;QACL0F,OAAO,CAACpD,IAAI,CAACoD,OAAO,CAACnD,OAAO,EAAEmD,OAAO,CAAC1F,QAAQ,CAAC;MACjD;IACF;EAAC;IAAA;IAAA,OAED,qBAAmBM,IAAI,EAAE;MACvB,OAAOA,IAAI,IAAIA,IAAI,CAAC+B,MAAM,KAAK9B,SAAS,IAAID,IAAI,CAACuF,IAAI,KAAKtF,SAAS,IAAIa,SAAS,CAAC0E,kBAAkB,CAACxF,IAAI,CAACe,OAAO,CAAC;IACnH;EAAC;IAAA;IAAA,OAED,4BAA0Bf,IAAI,EAAE;MAC9B,OAAOA,IAAI,KAAKC,SAAS,IAAID,IAAI,CAACS,SAAS,KAAKR,SAAS,IAAID,IAAI,CAACU,UAAU,KAAKT,SAAS,IAAID,IAAI,CAACW,QAAQ,KAAKV,SAAS;IAC3H;EAAC;EAAA;AAAA;AAGHa,SAAS,CAACoE,cAAc,GAAG7G,QAAQ,CAAC,CAAC,CAAC,EAAEmC,uBAAuB,CAAC;AAEhE,IAAMiF,YAAY,GAAG,CAAC,YAAY,EAAE,gBAAgB,EAAE,aAAa,EAAE,qBAAqB,EAAE,cAAc,EAAE,iBAAiB,EAAE,aAAa,EAAE,UAAU,EAAE,gBAAgB,EAAE,uBAAuB,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,EAAE,aAAa,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,eAAe,EAAE,0BAA0B,CAAC;AAAC,IACtUC,iBAAiB;EAAA;EAAA;EACrB,2BAAYC,QAAQ,EAAEC,SAAS,EAAE;IAAA;IAAA;IAC/B,IAAI5E,KAAK;IAET,2BAAM2E,QAAQ,CAACE,UAAU,EAAE;IAC3B7E,KAAK,iCAAO;IACZ,OAAK2E,QAAQ,GAAGA,QAAQ;IACxB,OAAKC,SAAS,GAAG,KAAK,CAAC;IACvB,OAAKE,aAAa,GAAG,OAAKH,QAAQ,CAACG,aAAa;IAEhD,OAAKC,WAAW;MAAA,qEAAG,kBAAgBC,IAAI;QAAA;QAAA;UAAA;YAAA;cAAA;gBAC/BL,QAAQ,GAAG3E,KAAK,CAAC2E,QAAQ;gBAAA,KAE3BA,QAAQ,CAACI,WAAW;kBAAA;kBAAA;gBAAA;gBAAA,eACGJ,QAAQ;gBAAA;gBAAA,OAAmBK,IAAI;cAAA;gBAAA;gBAAA;gBAAA,oBAAtBD,WAAW;cAAA;gBAAvCE,UAAU;gBAAA,IACXA,UAAU;kBAAA;kBAAA;gBAAA;gBAAA,kCAAS,IAAI;cAAA;gBAAA,kCACrB,IAAIlI,MAAM,CAACmI,SAAS,CAACC,QAAQ,CAACnF,KAAK,EAAEiF,UAAU,CAACG,OAAO,EAAEH,UAAU,CAACD,IAAI,CAAC;cAAA;gBAAA,eAG3EL,QAAQ;gBAAA;gBAAA,OAAmBK,IAAI;cAAA;gBAAA;gBAAA,+CAAtBD,WAAW;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAC5B;MAAA;QAAA;MAAA;IAAA;IAED,OAAK/D,IAAI;MAAA,qEAAG,kBAAgBqE,GAAG,EAAE3G,QAAQ;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,eAE7B2G,GAAG,CAACjE,MAAM;gBAAA,kCACXlD,aAAa,CAACgC,OAAO,wBAKrBhC,aAAa,CAACiC,UAAU,yBAKxBjC,aAAa,CAACkC,aAAa;gBAAA;cAAA;gBAAA,eAT9BJ,KAAK;gBAAA,eAAUqF,GAAG;gBAAA,eAAE3G,QAAQ;gBAAA;gBAAA,OAAQsB,KAAK,CAAC2E,QAAQ,CAAC3G,IAAI,CAACqH,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,EAAEuD,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,CAAC;cAAA;gBAAA;gBAAA,aAA/EpD,QAAQ;gBAAA;cAAA;gBAAA,eAKdsB,KAAK;gBAAA,eAAUqF,GAAG;gBAAA,eAAE3G,QAAQ;gBAAA;gBAAA,OAAQsB,KAAK,CAAC2E,QAAQ,CAACW,OAAO,CAACD,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,EAAEuD,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,CAAC;cAAA;gBAAA;gBAAA,aAAlFpD,QAAQ;gBAAA;cAAA;gBAAA,eAKdsB,KAAK;gBAAA,gBAAUqF,GAAG;gBAAA,gBAAE3G,QAAQ;gBAAA;gBAAA,OAAQsB,KAAK,CAAC2E,QAAQ,CAACY,UAAU,CAACF,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,EAAEuD,GAAG,CAACvD,MAAM,CAAC,CAAC,CAAC,CAAC;cAAA;gBAAA;gBAAA,aAArFpD,QAAQ;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAKlBsB,KAAK,CAACtB,QAAQ,CAAC2G,GAAG,EAAE3G,QAAQ,EAAEO,SAAS,gBAAI;cAAC;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAE/C;MAAA;QAAA;MAAA;IAAA;IAED,OAAK2F,SAAS,GAAG9E,SAAS,CAAC0F,WAAW,CAACZ,SAAS,CAAC,GAAGA,SAAS,GAAG,IAAI9E,SAAS,CAAC8E,SAAS,CAAC;IACxFH,YAAY,CAACX,OAAO,CAAC,UAAA3C,CAAC,EAAI;MACxB,IAAIwD,QAAQ,CAACxD,CAAC,CAAC,KAAKlC,SAAS,EAAE;QAE7B,OAAKkC,CAAC,CAAC,GAAG;UAAA,OAAawD,QAAQ,CAACxD,CAAC,CAAC,OAAXwD,QAAQ,YAAY;QAAA;MAC7C;IACF,CAAC,CAAC;IAAC;EACL;EAAC;IAAA;IAAA,OAED,kBAASU,GAAG,EAAE3G,SAAQ,EAAE+G,IAAI,EAAEC,GAAG,EAAE;MACjChH,SAAQ,CAACgH,GAAG,EAAE;QACZnC,OAAO,EAAEnG,cAAc;QACvBkG,EAAE,EAAE+B,GAAG,CAAC/B,EAAE;QACV1E,MAAM,EAAE6G,IAAI;QACZ/B,KAAK,EAAEgC;MACT,CAAC,CAAC;IACJ;EAAC;IAAA;IAAA;MAAA,qEAED,kBAAWC,WAAW,EAAEzD,QAAQ;QAAA;UAAA;YAAA;cAAA;gBAAA,kCACvB,IAAI,CAAC0D,OAAO,CAAC1H,aAAa,CAACgC,OAAO,EAAEyF,WAAW,EAAEzD,QAAQ,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAClE;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,wEAED,kBAAc2D,aAAa,EAAE3D,QAAQ;QAAA;UAAA;YAAA;cAAA;gBAAA,kCAC5B,IAAI,CAAC0D,OAAO,CAAC1H,aAAa,CAACiC,UAAU,EAAE0F,aAAa,EAAE3D,QAAQ,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACvE;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,2EAED,kBAAiB2D,aAAa,EAAE3D,QAAQ;QAAA;UAAA;YAAA;cAAA;gBAAA,kCAC/B,IAAI,CAAC0D,OAAO,CAAC1H,aAAa,CAACkC,aAAa,EAAEyF,aAAa,EAAE3D,QAAQ,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAC1E;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA;MAAA,wEAED,kBAAcd,MAAM;QAAA;UAAA;UAAA;UAAA;UAAA;UAAA;QAAA;UAAA;YAAA;cAAA;gBACZiC,KAAK,GAAGpG,YAAY,EAAE;gBAAA,2BADL6E,MAAM;kBAANA,MAAM;gBAAA;gBAAA;gBAAA,OAEV5E,SAAS,CAAC,IAAI,CAAC0H,SAAS,CAAC7D,MAAM,CAAC,CAAC,IAAI,CAACC,IAAI,EAAE;kBAC7DuC,OAAO,EAAEnG,cAAc;kBACvBkG,EAAE,EAAED,KAAK;kBACTjC,MAAM,EAAEA,MAAM;kBACdU,MAAM,EAAEA;gBACV,CAAC,CAAC;cAAA;gBALI2D,IAAI;gBAAA,kCAMHA,IAAI,CAAC7G,MAAM;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACnB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EApF6B7B,MAAM,CAACmI,SAAS,CAACY,YAAY;AAAA,IAwFvDC,yBAAyB;EAC7B,mCAAYpB,QAAQ,EAAEC,SAAS,EAAE;IAAA;IAAA;IAC/B,IAAI,CAACD,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAG,KAAK,CAAC;IACvB,IAAI,CAACA,SAAS,GAAG9E,SAAS,CAAC0F,WAAW,CAACZ,SAAS,CAAC,GAAGA,SAAS,GAAG,IAAI9E,SAAS,CAAC8E,SAAS,CAAC;IAExF,IAAID,QAAQ,CAACqB,IAAI,EAAE;MACjB,IAAMhF,IAAI;QAAA,qEAAG,kBAAoBqE,GAAG,EAAE3G,QAAQ;UAAA;YAAA;cAAA;gBAAA;kBAC5CiG,QAAQ,CAACqB,IAAI,CAACX,GAAG,EAAE3G,QAAQ,CAAC;gBAAC;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CAC9B;QAAA,SAF2BsC,IAAI;UAAA;QAAA;QAAA,OAAJA,IAAI;MAAA,GAE/B;MAED,IAAI,CAACgF,IAAI,GAAG,UAAC/E,OAAO,EAAEvC,QAAQ,EAAK;QACjC,MAAI,CAACkG,SAAS,CAAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAEvC,QAAQ,CAAC;MAChD,CAAC;IACH;IAEA,IAAIiG,QAAQ,CAACsB,SAAS,EAAE;MACtB,IAAMjF,MAAI;QAAA,sEAAG,kBAAoBqE,GAAG,EAAE3G,QAAQ;UAAA;YAAA;cAAA;gBAAA;kBAC5CiG,QAAQ,CAACsB,SAAS,CAACZ,GAAG,EAAE3G,QAAQ,CAAC;gBAAC;gBAAA;kBAAA;cAAA;YAAA;UAAA;QAAA,CACnC;QAAA,SAF2BsC,IAAI;UAAA;QAAA;QAAA,OAAJA,IAAI;MAAA,GAE/B;MAED,IAAI,CAACiF,SAAS,GAAG,UAAChF,OAAO,EAAEvC,QAAQ,EAAK;QACtC,MAAI,CAACkG,SAAS,CAAC7D,MAAM,CAACC,MAAI,EAAEC,OAAO,EAAEvC,QAAQ,CAAC;MAChD,CAAC;IACH;EACF;EAAC;IAAA;IAAA,KAED,eAAiB;MACf,OAAO,IAAI,CAACiG,QAAQ,CAACuB,UAAU;IACjC;EAAC;IAAA;IAAA,KAED,eAAe;MACb,OAAO,IAAI,CAACvB,QAAQ,CAACwB,QAAQ;IAC/B;EAAC;EAAA;AAAA;AAIH,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmB,CAAGxB,SAAS;EAAA,OAAI,UAAA5D,IAAI,EAAI;IAC/C,IAAMqF,GAAG,GAAGvG,SAAS,CAAC0F,WAAW,CAACZ,SAAS,CAAC,GAAGA,SAAS,GAAG,IAAI9E,SAAS,CAAC8E,SAAS,CAAC;IACnF,OAAO,UAAC3D,OAAO,EAAEvC,QAAQ,EAAK;MAC5B,OAAO2H,GAAG,CAACtF,MAAM,CAACC,IAAI,EAAEC,OAAO,EAAEvC,QAAQ,CAAC;IAC5C,CAAC;EACH,CAAC;AAAA;AAED,IAAIqF,KAAK,GAAG,aAAazG,MAAM,CAACgJ,MAAM,CAAC;EACrCC,SAAS,EAAE,IAAI;EACf9B,YAAY,EAAEA,YAAY;EAC1BC,iBAAiB,EAAEA,iBAAiB;EACpCqB,yBAAyB,EAAEA,yBAAyB;EACpDK,mBAAmB,EAAEA;AACvB,CAAC,CAAC;AAEF,SAAStG,SAAS,EAAEiE,KAAK,IAAImB,SAAS"},"metadata":{},"sourceType":"module"}