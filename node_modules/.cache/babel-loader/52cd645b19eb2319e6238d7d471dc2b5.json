{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar Histogram = /** @class */function () {\n  function Histogram(pixels, opts) {\n    this.pixels = pixels;\n    this.opts = opts;\n    var sigBits = opts.sigBits;\n    var getColorIndex = function (r, g, b) {\n      return (r << 2 * sigBits) + (g << sigBits) + b;\n    };\n    this.getColorIndex = getColorIndex;\n    var rshift = 8 - sigBits;\n    var hn = 1 << 3 * sigBits;\n    var hist = new Uint32Array(hn);\n    var rmax;\n    var rmin;\n    var gmax;\n    var gmin;\n    var bmax;\n    var bmin;\n    var r;\n    var g;\n    var b;\n    var a;\n    rmax = gmax = bmax = 0;\n    rmin = gmin = bmin = Number.MAX_VALUE;\n    var n = pixels.length / 4;\n    var i = 0;\n    while (i < n) {\n      var offset = i * 4;\n      i++;\n      r = pixels[offset + 0];\n      g = pixels[offset + 1];\n      b = pixels[offset + 2];\n      a = pixels[offset + 3];\n      // Ignored pixels' alpha is marked as 0 in filtering stage\n      if (a === 0) continue;\n      r = r >> rshift;\n      g = g >> rshift;\n      b = b >> rshift;\n      var index = getColorIndex(r, g, b);\n      hist[index] += 1;\n      if (r > rmax) rmax = r;\n      if (r < rmin) rmin = r;\n      if (g > gmax) gmax = g;\n      if (g < gmin) gmin = g;\n      if (b > bmax) bmax = b;\n      if (b < bmin) bmin = b;\n    }\n    this._colorCount = hist.reduce(function (total, c) {\n      return c > 0 ? total + 1 : total;\n    }, 0);\n    this.hist = hist;\n    this.rmax = rmax;\n    this.rmin = rmin;\n    this.gmax = gmax;\n    this.gmin = gmin;\n    this.bmax = bmax;\n    this.bmin = bmin;\n  }\n  Object.defineProperty(Histogram.prototype, \"colorCount\", {\n    get: function () {\n      return this._colorCount;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Histogram;\n}();\nexports.default = Histogram;","map":{"version":3,"sources":["../../../../packages/vibrant-image/src/histogram.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Histogram = /** @class */ (function () {\n    function Histogram(pixels, opts) {\n        this.pixels = pixels;\n        this.opts = opts;\n        var sigBits = opts.sigBits;\n        var getColorIndex = function (r, g, b) {\n            return (r << (2 * sigBits)) + (g << sigBits) + b;\n        };\n        this.getColorIndex = getColorIndex;\n        var rshift = 8 - sigBits;\n        var hn = 1 << (3 * sigBits);\n        var hist = new Uint32Array(hn);\n        var rmax;\n        var rmin;\n        var gmax;\n        var gmin;\n        var bmax;\n        var bmin;\n        var r;\n        var g;\n        var b;\n        var a;\n        rmax = gmax = bmax = 0;\n        rmin = gmin = bmin = Number.MAX_VALUE;\n        var n = pixels.length / 4;\n        var i = 0;\n        while (i < n) {\n            var offset = i * 4;\n            i++;\n            r = pixels[offset + 0];\n            g = pixels[offset + 1];\n            b = pixels[offset + 2];\n            a = pixels[offset + 3];\n            // Ignored pixels' alpha is marked as 0 in filtering stage\n            if (a === 0)\n                continue;\n            r = r >> rshift;\n            g = g >> rshift;\n            b = b >> rshift;\n            var index = getColorIndex(r, g, b);\n            hist[index] += 1;\n            if (r > rmax)\n                rmax = r;\n            if (r < rmin)\n                rmin = r;\n            if (g > gmax)\n                gmax = g;\n            if (g < gmin)\n                gmin = g;\n            if (b > bmax)\n                bmax = b;\n            if (b < bmin)\n                bmin = b;\n        }\n        this._colorCount = hist.reduce(function (total, c) { return c > 0 ? total + 1 : total; }, 0);\n        this.hist = hist;\n        this.rmax = rmax;\n        this.rmin = rmin;\n        this.gmax = gmax;\n        this.gmin = gmin;\n        this.bmax = bmax;\n        this.bmin = bmin;\n    }\n    Object.defineProperty(Histogram.prototype, \"colorCount\", {\n        get: function () { return this._colorCount; },\n        enumerable: false,\n        configurable: true\n    });\n    return Histogram;\n}());\nexports.default = Histogram;\n//# sourceMappingURL=histogram.js.map"]},"metadata":{},"sourceType":"script"}