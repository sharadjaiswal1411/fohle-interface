{"ast":null,"code":"import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{BigNumber}from'@ethersproject/bignumber';import{BagItemStatus,isPooledMarket,Markets}from'nft/types';import{isInSameMarketplaceCollection,isInSameSudoSwapPool}from'nft/utils';var PRECISION='1000000000000000000';var PROTOCOL_FEE_MULTIPLIER=BigNumber.from('5000000000000000');var BondingCurve;(function(BondingCurve){BondingCurve[\"Linear\"]=\"LINEAR\";BondingCurve[\"Exponential\"]=\"EXPONENTIAL\";})(BondingCurve||(BondingCurve={}));var getPoolParameters=function getPoolParameters(protocolParameters){var _poolMetadata,_poolMetadata2;return{delta:(protocolParameters===null||protocolParameters===void 0?void 0:protocolParameters.delta)?protocolParameters.delta:undefined,fee:(protocolParameters===null||protocolParameters===void 0?void 0:protocolParameters.ammFeeFixed)?protocolParameters.ammFeeFixed:undefined,spotPrice:protocolParameters===null||protocolParameters===void 0?void 0:(_poolMetadata=protocolParameters.poolMetadata)===null||_poolMetadata===void 0?void 0:_poolMetadata.spotPrice,bondingCurve:protocolParameters===null||protocolParameters===void 0?void 0:(_poolMetadata2=protocolParameters.poolMetadata)===null||_poolMetadata2===void 0?void 0:_poolMetadata2.bondingCurve};};var calculateScaledPrice=function calculateScaledPrice(currentPrice,poolFee){var protocolFee=currentPrice.mul(PROTOCOL_FEE_MULTIPLIER).div(BigNumber.from(PRECISION));var tradeFee=currentPrice.mul(poolFee).div(BigNumber.from(PRECISION));return currentPrice.add(protocolFee).add(tradeFee);};export var calcSudoSwapPrice=function calcSudoSwapPrice(asset){var position=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(!asset.sellorders)return undefined;var sudoSwapParameters=asset.sellorders[0].protocolParameters;var sudoSwapPool=getPoolParameters(sudoSwapParameters);if(!sudoSwapPool.fee||!sudoSwapPool.delta||!sudoSwapPool.spotPrice||!sudoSwapPool.bondingCurve)return undefined;var currentPrice=BigNumber.from(sudoSwapPool.spotPrice);var delta=BigNumber.from(sudoSwapPool.delta);var poolFee=BigNumber.from(sudoSwapPool.fee);for(var i=0;i<=position;i++){if(sudoSwapPool.bondingCurve===BondingCurve.Linear){currentPrice=currentPrice.add(delta);}else if(sudoSwapPool.bondingCurve===BondingCurve.Exponential){currentPrice=currentPrice.mul(delta).div(BigNumber.from(PRECISION));}}return calculateScaledPrice(currentPrice,poolFee).toString();};// TODO: a lot of the below typecasting logic can be simplified when GraphQL migration is complete\nexport var calcPoolPrice=function calcPoolPrice(asset){var _poolMetadata$ethRese,_poolMetadata3,_poolMetadata3$ethRes,_poolMetadata$tokenRe,_poolMetadata4,_poolMetadata4$tokenR;var position=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;if(!asset.sellorders)return'';var amountToBuy=BigNumber.from(0);var marginalBuy=BigNumber.from(0);var nft=asset.sellorders[0].protocolParameters;var decimals=BigNumber.from(1).mul(10).pow(18);var ammFee=(nft===null||nft===void 0?void 0:nft.ammFeePercent)?(100+nft.ammFeePercent)*100:110*100;if(asset.marketplace===Markets.NFTX){var sixteenmul=BigNumber.from(1).mul(10).pow(16);amountToBuy=BigNumber.from(ammFee).div(100).mul(position+1);amountToBuy=amountToBuy.mul(sixteenmul);marginalBuy=BigNumber.from(ammFee).div(100).mul(position);marginalBuy=marginalBuy.mul(sixteenmul);}if(asset.marketplace===Markets.NFT20){amountToBuy=BigNumber.from(100).mul(position+1);amountToBuy=amountToBuy.mul(decimals);marginalBuy=BigNumber.from(100).mul(position);marginalBuy=marginalBuy.mul(decimals);}var ethReserves=BigNumber.from((_poolMetadata$ethRese=nft===null||nft===void 0?void 0:(_poolMetadata3=nft.poolMetadata)===null||_poolMetadata3===void 0?void 0:(_poolMetadata3$ethRes=_poolMetadata3.ethReserves)===null||_poolMetadata3$ethRes===void 0?void 0:_poolMetadata3$ethRes.toLocaleString('fullwide',{useGrouping:false}))!==null&&_poolMetadata$ethRese!==void 0?_poolMetadata$ethRese:1);var tokenReserves=BigNumber.from((_poolMetadata$tokenRe=nft===null||nft===void 0?void 0:(_poolMetadata4=nft.poolMetadata)===null||_poolMetadata4===void 0?void 0:(_poolMetadata4$tokenR=_poolMetadata4.tokenReserves)===null||_poolMetadata4$tokenR===void 0?void 0:_poolMetadata4$tokenR.toLocaleString('fullwide',{useGrouping:false}))!==null&&_poolMetadata$tokenRe!==void 0?_poolMetadata$tokenRe:1);var numerator=ethReserves.mul(amountToBuy).mul(1000);var denominator=tokenReserves.sub(amountToBuy).mul(997);var marginalnumerator=ethReserves.mul(marginalBuy).mul(1000);var marginaldenominator=tokenReserves.sub(marginalBuy).mul(997);var price=numerator.div(denominator);var marginalprice=marginalnumerator.div(marginaldenominator);price=price.sub(marginalprice);price=price.mul(101).div(100);return price.toString();};export var calcAvgGroupPoolPrice=function calcAvgGroupPoolPrice(asset,numberOfAssets){var total=BigNumber.from(0);for(var i=0;i<numberOfAssets;i++){if(asset.marketplace===Markets.Sudoswap){var _calcSudoSwapPrice;total=total.add(BigNumber.from((_calcSudoSwapPrice=calcSudoSwapPrice(asset,i))!==null&&_calcSudoSwapPrice!==void 0?_calcSudoSwapPrice:'0'));}else{total=total.add(BigNumber.from(calcPoolPrice(asset,i)));}}return total.div(numberOfAssets).toString();};var recalculatePooledAssetPrice=function recalculatePooledAssetPrice(asset,position){var _calcSudoSwapPrice2;return asset.marketplace===Markets.Sudoswap?(_calcSudoSwapPrice2=calcSudoSwapPrice(asset,position))!==null&&_calcSudoSwapPrice2!==void 0?_calcSudoSwapPrice2:'':calcPoolPrice(asset,position);};export var recalculateBagUsingPooledAssets=function recalculateBagUsingPooledAssets(uncheckedItemsInBag){if(!uncheckedItemsInBag.some(function(item){return item.asset.marketplace&&isPooledMarket(item.asset.marketplace);})||uncheckedItemsInBag.every(function(item){return item.status===BagItemStatus.REVIEWED||item.status===BagItemStatus.REVIEWING_PRICE_CHANGE;}))return uncheckedItemsInBag;var itemsInBag=_toConsumableArray(uncheckedItemsInBag);itemsInBag.forEach(function(item){if(item.asset.marketplace)if(isPooledMarket(item.asset.marketplace)){var asset=item.asset;var isPriceChangedAsset=!!asset.updatedPriceInfo;var itemsInPool=asset.marketplace===Markets.Sudoswap?itemsInBag.filter(function(bagItem){return isInSameSudoSwapPool(item.asset,bagItem.asset);}):itemsInBag.filter(function(bagItem){return isInSameMarketplaceCollection(item.asset,bagItem.asset);});var calculatedPrice=isPriceChangedAsset?calcAvgGroupPoolPrice(asset,itemsInPool.length):recalculatePooledAssetPrice(asset,itemsInPool.findIndex(function(itemInPool){return itemInPool.asset.tokenId===asset.tokenId;}));if(isPriceChangedAsset&&item.asset.updatedPriceInfo)item.asset.updatedPriceInfo.ETHPrice=item.asset.updatedPriceInfo.basePrice=calculatedPrice;else item.asset.priceInfo.ETHPrice=calculatedPrice;}});return itemsInBag;};","map":{"version":3,"names":["BigNumber","BagItemStatus","isPooledMarket","Markets","isInSameMarketplaceCollection","isInSameSudoSwapPool","PRECISION","PROTOCOL_FEE_MULTIPLIER","from","BondingCurve","getPoolParameters","protocolParameters","delta","undefined","fee","ammFeeFixed","spotPrice","poolMetadata","bondingCurve","calculateScaledPrice","currentPrice","poolFee","protocolFee","mul","div","tradeFee","add","calcSudoSwapPrice","asset","position","sellorders","sudoSwapParameters","sudoSwapPool","i","Linear","Exponential","toString","calcPoolPrice","amountToBuy","marginalBuy","nft","decimals","pow","ammFee","ammFeePercent","marketplace","NFTX","sixteenmul","NFT20","ethReserves","toLocaleString","useGrouping","tokenReserves","numerator","denominator","sub","marginalnumerator","marginaldenominator","price","marginalprice","calcAvgGroupPoolPrice","numberOfAssets","total","Sudoswap","recalculatePooledAssetPrice","recalculateBagUsingPooledAssets","uncheckedItemsInBag","some","item","every","status","REVIEWED","REVIEWING_PRICE_CHANGE","itemsInBag","forEach","isPriceChangedAsset","updatedPriceInfo","itemsInPool","filter","bagItem","calculatedPrice","length","findIndex","itemInPool","tokenId","ETHPrice","basePrice","priceInfo"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/pooledAssets.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { BagItem, BagItemStatus, GenieAsset, isPooledMarket, Markets } from 'nft/types'\nimport { isInSameMarketplaceCollection, isInSameSudoSwapPool } from 'nft/utils'\n\nconst PRECISION = '1000000000000000000'\nconst PROTOCOL_FEE_MULTIPLIER = BigNumber.from('5000000000000000')\n\nenum BondingCurve {\n  Linear = 'LINEAR',\n  Exponential = 'EXPONENTIAL',\n}\n\ninterface Pool {\n  delta?: string\n  spotPrice?: string\n  fee?: string\n  bondingCurve?: BondingCurve\n}\n\nconst getPoolParameters = (protocolParameters: Record<string, unknown>): Pool => {\n  return {\n    delta: protocolParameters?.delta ? (protocolParameters.delta as string) : undefined,\n    fee: protocolParameters?.ammFeeFixed ? (protocolParameters.ammFeeFixed as string) : undefined,\n    spotPrice: (protocolParameters as Record<string, { spotPrice?: string }>)?.poolMetadata?.spotPrice,\n    bondingCurve: (protocolParameters as Record<string, { bondingCurve?: BondingCurve }>)?.poolMetadata?.bondingCurve,\n  }\n}\n\nconst calculateScaledPrice = (currentPrice: BigNumber, poolFee: BigNumber): BigNumber => {\n  const protocolFee = currentPrice.mul(PROTOCOL_FEE_MULTIPLIER).div(BigNumber.from(PRECISION))\n  const tradeFee = currentPrice.mul(poolFee).div(BigNumber.from(PRECISION))\n  return currentPrice.add(protocolFee).add(tradeFee)\n}\n\nexport const calcSudoSwapPrice = (asset: GenieAsset, position = 0): string | undefined => {\n  if (!asset.sellorders) return undefined\n\n  const sudoSwapParameters = asset.sellorders[0].protocolParameters\n  const sudoSwapPool = getPoolParameters(sudoSwapParameters)\n\n  if (!sudoSwapPool.fee || !sudoSwapPool.delta || !sudoSwapPool.spotPrice || !sudoSwapPool.bondingCurve)\n    return undefined\n\n  let currentPrice = BigNumber.from(sudoSwapPool.spotPrice)\n  const delta = BigNumber.from(sudoSwapPool.delta)\n  const poolFee = BigNumber.from(sudoSwapPool.fee)\n\n  for (let i = 0; i <= position; i++) {\n    if (sudoSwapPool.bondingCurve === BondingCurve.Linear) {\n      currentPrice = currentPrice.add(delta)\n    } else if (sudoSwapPool.bondingCurve === BondingCurve.Exponential) {\n      currentPrice = currentPrice.mul(delta).div(BigNumber.from(PRECISION))\n    }\n  }\n\n  return calculateScaledPrice(currentPrice, poolFee).toString()\n}\n\n// TODO: a lot of the below typecasting logic can be simplified when GraphQL migration is complete\nexport const calcPoolPrice = (asset: GenieAsset, position = 0) => {\n  if (!asset.sellorders) return ''\n\n  let amountToBuy: BigNumber = BigNumber.from(0)\n  let marginalBuy: BigNumber = BigNumber.from(0)\n\n  const nft = asset.sellorders[0].protocolParameters\n  const decimals = BigNumber.from(1).mul(10).pow(18)\n  const ammFee = nft?.ammFeePercent ? (100 + (nft.ammFeePercent as number)) * 100 : 110 * 100\n\n  if (asset.marketplace === Markets.NFTX) {\n    const sixteenmul = BigNumber.from(1).mul(10).pow(16)\n    amountToBuy = BigNumber.from(ammFee)\n      .div(100)\n      .mul(position + 1)\n    amountToBuy = amountToBuy.mul(sixteenmul)\n\n    marginalBuy = BigNumber.from(ammFee).div(100).mul(position)\n    marginalBuy = marginalBuy.mul(sixteenmul)\n  }\n  if (asset.marketplace === Markets.NFT20) {\n    amountToBuy = BigNumber.from(100).mul(position + 1)\n    amountToBuy = amountToBuy.mul(decimals)\n\n    marginalBuy = BigNumber.from(100).mul(position)\n    marginalBuy = marginalBuy.mul(decimals)\n  }\n\n  const ethReserves = BigNumber.from(\n    (\n      nft as Record<\n        string,\n        {\n          ethReserves: number\n        }\n      >\n    )?.poolMetadata?.ethReserves?.toLocaleString('fullwide', { useGrouping: false }) ?? 1\n  )\n  const tokenReserves = BigNumber.from(\n    (\n      nft as Record<\n        string,\n        {\n          tokenReserves: number\n        }\n      >\n    )?.poolMetadata?.tokenReserves?.toLocaleString('fullwide', { useGrouping: false }) ?? 1\n  )\n  const numerator = ethReserves.mul(amountToBuy).mul(1000)\n  const denominator = tokenReserves.sub(amountToBuy).mul(997)\n\n  const marginalnumerator = ethReserves.mul(marginalBuy).mul(1000)\n  const marginaldenominator = tokenReserves.sub(marginalBuy).mul(997)\n\n  let price = numerator.div(denominator)\n  const marginalprice = marginalnumerator.div(marginaldenominator)\n\n  price = price.sub(marginalprice)\n  price = price.mul(101).div(100)\n\n  return price.toString()\n}\n\nexport const calcAvgGroupPoolPrice = (asset: GenieAsset, numberOfAssets: number) => {\n  let total = BigNumber.from(0)\n\n  for (let i = 0; i < numberOfAssets; i++) {\n    if (asset.marketplace === Markets.Sudoswap) {\n      total = total.add(BigNumber.from(calcSudoSwapPrice(asset, i) ?? '0'))\n    } else {\n      total = total.add(BigNumber.from(calcPoolPrice(asset, i)))\n    }\n  }\n\n  return total.div(numberOfAssets).toString()\n}\n\nconst recalculatePooledAssetPrice = (asset: GenieAsset, position: number): string => {\n  return asset.marketplace === Markets.Sudoswap\n    ? calcSudoSwapPrice(asset, position) ?? ''\n    : calcPoolPrice(asset, position)\n}\n\nexport const recalculateBagUsingPooledAssets = (uncheckedItemsInBag: BagItem[]) => {\n  if (\n    !uncheckedItemsInBag.some((item) => item.asset.marketplace && isPooledMarket(item.asset.marketplace)) ||\n    uncheckedItemsInBag.every(\n      (item) => item.status === BagItemStatus.REVIEWED || item.status === BagItemStatus.REVIEWING_PRICE_CHANGE\n    )\n  )\n    return uncheckedItemsInBag\n\n  const itemsInBag = [...uncheckedItemsInBag]\n  itemsInBag.forEach((item) => {\n    if (item.asset.marketplace)\n      if (isPooledMarket(item.asset.marketplace)) {\n        const asset = item.asset\n        const isPriceChangedAsset = !!asset.updatedPriceInfo\n\n        const itemsInPool =\n          asset.marketplace === Markets.Sudoswap\n            ? itemsInBag.filter((bagItem) => isInSameSudoSwapPool(item.asset, bagItem.asset))\n            : itemsInBag.filter((bagItem) => isInSameMarketplaceCollection(item.asset, bagItem.asset))\n        const calculatedPrice = isPriceChangedAsset\n          ? calcAvgGroupPoolPrice(asset, itemsInPool.length)\n          : recalculatePooledAssetPrice(\n              asset,\n              itemsInPool.findIndex((itemInPool) => itemInPool.asset.tokenId === asset.tokenId)\n            )\n\n        if (isPriceChangedAsset && item.asset.updatedPriceInfo)\n          item.asset.updatedPriceInfo.ETHPrice = item.asset.updatedPriceInfo.basePrice = calculatedPrice\n        else item.asset.priceInfo.ETHPrice = calculatedPrice\n      }\n  })\n\n  return itemsInBag\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}