{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var NFT_API_URL=process.env.REACT_APP_TEMP_API_URL;export var fetchTrendingCollections=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(payload){var url,r,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(NFT_API_URL){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve([]));case 2:url=\"\".concat(NFT_API_URL,\"/nft/collections/trending\");_context.next=5;return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});case 5:r=_context.sent;_context.next=8;return r.json();case 8:data=_context.sent;return _context.abrupt(\"return\",data!==null&&data!==void 0?data:[]);case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchTrendingCollections(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["NFT_API_URL","process","env","REACT_APP_TEMP_API_URL","fetchTrendingCollections","payload","Promise","resolve","url","fetch","method","headers","body","JSON","stringify","r","json","data"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/genie/TrendingCollectionsFetcher.ts"],"sourcesContent":["import { TimePeriod, TrendingCollection } from '../../types'\n\nconst NFT_API_URL = process.env.REACT_APP_TEMP_API_URL\nexport const fetchTrendingCollections = async (payload: {\n  volumeType: 'eth' | 'nft'\n  timePeriod: TimePeriod\n  size: number\n}): Promise<TrendingCollection[]> => {\n  if (!NFT_API_URL) return Promise.resolve([])\n  const url = `${NFT_API_URL}/nft/collections/trending`\n  const r = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  })\n\n  const data = await r.json()\n\n  return data ?? []\n}\n"],"mappings":"qVAEA,GAAMA,YAAW,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACtD,MAAO,IAAMC,yBAAwB,0FAAG,iBAAOC,OAI9C,oIACML,WAAW,yDAASM,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC,SACtCC,GAAG,WAAMR,WAAW,oDACVS,MAAK,CAACD,GAAG,CAAE,CACzBE,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACT,OAAO,CAC9B,CAAC,CAAC,QANIU,CAAC,qCAQYA,EAAC,CAACC,IAAI,EAAE,QAArBC,IAAI,+CAEHA,IAAI,SAAJA,IAAI,UAAJA,IAAI,CAAI,EAAE,yDAClB,kBAlBYb,yBAAwB,4CAkBpC"},"metadata":{},"sourceType":"module"}