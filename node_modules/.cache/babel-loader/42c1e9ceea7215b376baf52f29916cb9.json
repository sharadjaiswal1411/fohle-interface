{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __rest } from \"tslib\";\nimport { createIdentifyEvent, Identify } from '@amplitude/analytics-core';\nimport { getCookieName as getStorageKey } from '../cookie-name';\nimport { CampaignParser } from './campaign-parser';\nimport { BASE_CAMPAIGN, EMPTY_VALUE, MKTG } from './constants';\nvar CampaignTracker = /** @class */function () {\n  function CampaignTracker(apiKey, options) {\n    var _a, _b;\n    this.storage = options.storage;\n    this.storageKey = getStorageKey(apiKey, MKTG);\n    this.parser = new CampaignParser();\n    this.track = options.track;\n    this.onNewCampaign = options.onNewCampaign;\n    this.disabled = Boolean(options.disabled);\n    this.trackNewCampaigns = Boolean(options.trackNewCampaigns);\n    this.trackPageViews = Boolean(options.trackPageViews);\n    this.excludeReferrers = (_a = options.excludeReferrers) !== null && _a !== void 0 ? _a : [];\n    if (typeof location !== 'undefined') {\n      this.excludeReferrers.unshift(location.hostname);\n    }\n    this.initialEmptyValue = (_b = options.initialEmptyValue) !== null && _b !== void 0 ? _b : EMPTY_VALUE;\n  }\n  CampaignTracker.prototype.isNewCampaign = function (current, previous, ignoreSubdomainInReferrer) {\n    if (ignoreSubdomainInReferrer === void 0) {\n      ignoreSubdomainInReferrer = false;\n    }\n    var referrer = current.referrer,\n      referring_domain = current.referring_domain,\n      currentCampaign = __rest(current, [\"referrer\", \"referring_domain\"]);\n    var _a = previous || {},\n      _previous_referrer = _a.referrer,\n      prevReferringDomain = _a.referring_domain,\n      previousCampaign = __rest(_a, [\"referrer\", \"referring_domain\"]);\n    if (current.referring_domain && this.excludeReferrers.includes(current.referring_domain)) {\n      return false;\n    }\n    var hasNewCampaign = JSON.stringify(currentCampaign) !== JSON.stringify(previousCampaign);\n    var hasNewDomain = ignoreSubdomainInReferrer ? domainWithoutSubdomain(referring_domain || '') !== domainWithoutSubdomain(prevReferringDomain || '') : referring_domain !== prevReferringDomain;\n    return !previous || hasNewCampaign || hasNewDomain;\n  };\n  CampaignTracker.prototype.saveCampaignToStorage = function (campaign) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storage.set(this.storageKey, campaign)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  CampaignTracker.prototype.getCampaignFromStorage = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storage.get(this.storageKey)];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  CampaignTracker.prototype.createCampaignEvent = function (campaign) {\n    var _this = this;\n    var campaignParameters = __assign(__assign({}, BASE_CAMPAIGN), campaign);\n    var identifyEvent = Object.entries(campaignParameters).reduce(function (identify, _a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      identify.setOnce(\"initial_\".concat(key), value || _this.initialEmptyValue);\n      if (value) {\n        return identify.set(key, value);\n      }\n      return identify.unset(key);\n    }, new Identify());\n    var pageViewEvent = {\n      event_type: 'Page View',\n      event_properties: {\n        page_title: /* istanbul ignore next */typeof document !== 'undefined' && document.title || '',\n        page_location: /* istanbul ignore next */typeof location !== 'undefined' && location.href || '',\n        page_path: /* istanbul ignore next */typeof location !== 'undefined' && location.pathname || ''\n      }\n    };\n    return __assign(__assign({}, createIdentifyEvent(identifyEvent)), this.trackPageViews && pageViewEvent);\n  };\n  CampaignTracker.prototype.send = function (isNewSession) {\n    return __awaiter(this, void 0, void 0, function () {\n      var currentCampaign, previousCampaign;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.disabled) {\n              return [2 /*return*/];\n            }\n\n            return [4 /*yield*/, this.parser.parse()];\n          case 1:\n            currentCampaign = _a.sent();\n            return [4 /*yield*/, this.getCampaignFromStorage()];\n          case 2:\n            previousCampaign = _a.sent();\n            if (!isNewSession) {\n              if (!this.trackNewCampaigns || !this.isNewCampaign(currentCampaign, previousCampaign)) {\n                return [2 /*return*/];\n              }\n\n              this.onNewCampaign(currentCampaign);\n            }\n            return [4 /*yield*/, this.track(this.createCampaignEvent(currentCampaign))];\n          case 3:\n            _a.sent();\n            return [4 /*yield*/, this.saveCampaignToStorage(currentCampaign)];\n          case 4:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return CampaignTracker;\n}();\nexport { CampaignTracker };\nvar domainWithoutSubdomain = function domainWithoutSubdomain(domain) {\n  var parts = domain.split('.');\n  if (parts.length <= 2) {\n    return domain;\n  }\n  return parts.slice(parts.length - 2, parts.length).join('.');\n};","map":{"version":3,"sources":["../../../src/attribution/campaign-tracker.ts"],"names":[],"mappings":"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","sourcesContent":["import { createIdentifyEvent, Identify } from '@amplitude/analytics-core';\nimport {\n  Storage,\n  Campaign,\n  CampaignParser as ICampaignParser,\n  CampaignTracker as ICampaignTracker,\n  CampaignTrackFunction,\n  CampaignTrackerOptions,\n  BaseEvent,\n} from '@amplitude/analytics-types';\nimport { getCookieName as getStorageKey } from '../cookie-name';\nimport { CampaignParser } from './campaign-parser';\nimport { BASE_CAMPAIGN, EMPTY_VALUE, MKTG } from './constants';\n\nexport class CampaignTracker implements ICampaignTracker {\n  storage: Storage<Campaign>;\n  storageKey: string;\n  parser: ICampaignParser;\n  track: CampaignTrackFunction;\n  onNewCampaign: (campaign: Campaign) => unknown;\n\n  disabled: boolean;\n  trackNewCampaigns: boolean;\n  trackPageViews: boolean;\n  excludeReferrers: string[];\n  initialEmptyValue: string;\n\n  constructor(apiKey: string, options: CampaignTrackerOptions) {\n    this.storage = options.storage;\n    this.storageKey = getStorageKey(apiKey, MKTG);\n    this.parser = new CampaignParser();\n    this.track = options.track;\n    this.onNewCampaign = options.onNewCampaign;\n\n    this.disabled = Boolean(options.disabled);\n    this.trackNewCampaigns = Boolean(options.trackNewCampaigns);\n    this.trackPageViews = Boolean(options.trackPageViews);\n    this.excludeReferrers = options.excludeReferrers ?? [];\n    if (typeof location !== 'undefined') {\n      this.excludeReferrers.unshift(location.hostname);\n    }\n    this.initialEmptyValue = options.initialEmptyValue ?? EMPTY_VALUE;\n  }\n\n  isNewCampaign(current: Campaign, previous: Campaign | undefined, ignoreSubdomainInReferrer = false) {\n    const { referrer, referring_domain, ...currentCampaign } = current;\n    const { referrer: _previous_referrer, referring_domain: prevReferringDomain, ...previousCampaign } = previous || {};\n\n    if (current.referring_domain && this.excludeReferrers.includes(current.referring_domain)) {\n      return false;\n    }\n\n    const hasNewCampaign = JSON.stringify(currentCampaign) !== JSON.stringify(previousCampaign);\n    const hasNewDomain = ignoreSubdomainInReferrer\n      ? domainWithoutSubdomain(referring_domain || '') !== domainWithoutSubdomain(prevReferringDomain || '')\n      : referring_domain !== prevReferringDomain;\n\n    return !previous || hasNewCampaign || hasNewDomain;\n  }\n\n  async saveCampaignToStorage(campaign: Campaign): Promise<void> {\n    await this.storage.set(this.storageKey, campaign);\n  }\n\n  async getCampaignFromStorage(): Promise<Campaign | undefined> {\n    return await this.storage.get(this.storageKey);\n  }\n\n  createCampaignEvent(campaign: Campaign) {\n    const campaignParameters: Campaign = {\n      // This object definition allows undefined keys to be iterated on\n      // in .reduce() to build indentify object\n      ...BASE_CAMPAIGN,\n      ...campaign,\n    };\n    const identifyEvent = Object.entries(campaignParameters).reduce((identify, [key, value]) => {\n      identify.setOnce(`initial_${key}`, value || this.initialEmptyValue);\n      if (value) {\n        return identify.set(key, value);\n      }\n      return identify.unset(key);\n    }, new Identify());\n\n    const pageViewEvent: BaseEvent = {\n      event_type: 'Page View',\n      event_properties: {\n        page_title: /* istanbul ignore next */ (typeof document !== 'undefined' && document.title) || '',\n        page_location: /* istanbul ignore next */ (typeof location !== 'undefined' && location.href) || '',\n        page_path: /* istanbul ignore next */ (typeof location !== 'undefined' && location.pathname) || '',\n      },\n    };\n    return {\n      ...createIdentifyEvent(identifyEvent),\n      ...(this.trackPageViews && pageViewEvent),\n    };\n  }\n\n  async send(isNewSession: boolean) {\n    if (this.disabled) {\n      return;\n    }\n    const currentCampaign = await this.parser.parse();\n    const previousCampaign = await this.getCampaignFromStorage();\n    if (!isNewSession) {\n      if (!this.trackNewCampaigns || !this.isNewCampaign(currentCampaign, previousCampaign)) {\n        return;\n      }\n      this.onNewCampaign(currentCampaign);\n    }\n    await this.track(this.createCampaignEvent(currentCampaign));\n    await this.saveCampaignToStorage(currentCampaign);\n  }\n}\n\nconst domainWithoutSubdomain = (domain: string) => {\n  const parts = domain.split('.');\n\n  if (parts.length <= 2) {\n    return domain;\n  }\n\n  return parts.slice(parts.length - 2, parts.length).join('.');\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}