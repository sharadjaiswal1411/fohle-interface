{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _BASES_TO_CHECK_TRADE;\nimport { Pair } from '@uniswap/v2-sdk';\nimport _ from 'lodash';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_MAINNET, DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET } from '../token-provider';\nvar BASES_TO_CHECK_TRADES_AGAINST = (_BASES_TO_CHECK_TRADE = {}, _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.MAINNET, [WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET], DAI_MAINNET, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ROPSTEN, [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.RINKEBY, [WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY], DAI_RINKEBY_1, DAI_RINKEBY_2]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.GÖRLI, [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.KOVAN, [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]]), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISM, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_ONE, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.ARBITRUM_RINKEBY, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.OPTIMISTIC_KOVAN, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.POLYGON_MUMBAI, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.CELO, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.CELO_ALFAJORES, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.GNOSIS, []), _defineProperty(_BASES_TO_CHECK_TRADE, ChainId.MOONBEAM, []), _BASES_TO_CHECK_TRADE);\n/**\n * Provider that does not get data from an external source and instead returns\n * a hardcoded list of Subgraph pools.\n *\n * Since the pools are hardcoded, the liquidity/price values are dummys and should not\n * be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. subgraph not available.\n *\n * @export\n * @class StaticV2SubgraphProvider\n */\nexport var StaticV2SubgraphProvider = /*#__PURE__*/function () {\n  function StaticV2SubgraphProvider(chainId) {\n    _classCallCheck(this, StaticV2SubgraphProvider);\n    this.chainId = chainId;\n  }\n  _createClass(StaticV2SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIn, tokenOut) {\n        var bases, basePairs, pairs, poolAddressSet, subgraphPools;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                log.info('In static subgraph provider for V2');\n                bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n                basePairs = _.flatMap(bases, function (base) {\n                  return bases.map(function (otherBase) {\n                    return [base, otherBase];\n                  });\n                });\n                if (tokenIn && tokenOut) {\n                  basePairs.push.apply(basePairs, [[tokenIn, tokenOut]].concat(_toConsumableArray(bases.map(function (base) {\n                    return [tokenIn, base];\n                  })), _toConsumableArray(bases.map(function (base) {\n                    return [tokenOut, base];\n                  }))));\n                }\n                pairs = _(basePairs).filter(function (tokens) {\n                  return Boolean(tokens[0] && tokens[1]);\n                }).filter(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                    tokenA = _ref2[0],\n                    tokenB = _ref2[1];\n                  return tokenA.address !== tokenB.address && !tokenA.equals(tokenB);\n                }).value();\n                poolAddressSet = new Set();\n                subgraphPools = _(pairs).map(function (_ref3) {\n                  var _ref4 = _slicedToArray(_ref3, 2),\n                    tokenA = _ref4[0],\n                    tokenB = _ref4[1];\n                  var poolAddress = Pair.getAddress(tokenA, tokenB);\n                  if (poolAddressSet.has(poolAddress)) {\n                    return undefined;\n                  }\n                  poolAddressSet.add(poolAddress);\n                  var _ref5 = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA],\n                    _ref6 = _slicedToArray(_ref5, 2),\n                    token0 = _ref6[0],\n                    token1 = _ref6[1];\n                  return {\n                    id: poolAddress,\n                    liquidity: '100',\n                    token0: {\n                      id: token0.address\n                    },\n                    token1: {\n                      id: token1.address\n                    },\n                    supply: 100,\n                    reserve: 100,\n                    reserveUSD: 100\n                  };\n                }).compact().value();\n                return _context.abrupt(\"return\", subgraphPools);\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getPools(_x, _x2) {\n        return _getPools.apply(this, arguments);\n      }\n      return getPools;\n    }()\n  }]);\n  return StaticV2SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../src/providers/v2/static-subgraph-provider.ts"],"names":[],"mappings":";;;;;;;;AACA,SAAS,IAAI,QAAQ,iBAAiB;AACtC,OAAO,CAAC,MAAM,QAAQ;AAEtB,SAAS,OAAO,EAAE,uBAAuB,QAAQ,mBAAmB;AACpE,SAAS,GAAG,QAAQ,gBAAgB;AACpC,SACE,WAAW,EACX,aAAa,EACb,aAAa,EACb,YAAY,EACZ,YAAY,EACZ,YAAY,QACP,mBAAmB;AAQ1B,IAAM,6BAA6B,uEAChC,OAAO,CAAC,OAAO,EAAG,CACjB,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAE,EACzC,WAAW,EACX,YAAY,EACZ,YAAY,EACZ,YAAY,CACb,0CACA,OAAO,CAAC,OAAO,EAAG,CAAC,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAE,CAAC,0CAC7D,OAAO,CAAC,OAAO,EAAG,CACjB,uBAAuB,CAAC,OAAO,CAAC,OAAO,CAAE,EACzC,aAAa,EACb,aAAa,CACd,0CACA,OAAO,CAAC,KAAK,EAAG,CAAC,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAE,CAAC,0CACzD,OAAO,CAAC,KAAK,EAAG,CAAC,uBAAuB,CAAC,OAAO,CAAC,KAAK,CAAE,CAAC,0CAEzD,OAAO,CAAC,QAAQ,EAAG,EAAE,0CACrB,OAAO,CAAC,YAAY,EAAG,EAAE,0CACzB,OAAO,CAAC,gBAAgB,EAAG,EAAE,0CAC7B,OAAO,CAAC,gBAAgB,EAAG,EAAE,0CAC7B,OAAO,CAAC,OAAO,EAAG,EAAE,0CACpB,OAAO,CAAC,cAAc,EAAG,EAAE,0CAC3B,OAAO,CAAC,IAAI,EAAG,EAAE,0CACjB,OAAO,CAAC,cAAc,EAAG,EAAE,0CAC3B,OAAO,CAAC,MAAM,EAAG,EAAE,0CACnB,OAAO,CAAC,QAAQ,EAAG,EAAE,yBACvB;AAED;;;;;;;;;;;AAWG;AACH,WAAa,wBAAwB;EACnC,kCAAoB,OAAgB,EAAA;IAAA;IAAhB,IAAA,CAAA,OAAO,GAAP,OAAO;EAAY;EAAC;IAAA;IAAA;MAAA,yEAEjC,iBACL,OAAe,EACf,QAAgB;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEhB,GAAG,CAAC,IAAI,CAAC,oCAAoC,CAAC;gBACxC,KAAK,GAAG,6BAA6B,CAAC,IAAI,CAAC,OAAO,CAAC;gBAEnD,SAAS,GAAqB,CAAC,CAAC,OAAO,CAC3C,KAAK,EACL,UAAC,IAAI;kBAAA,OAAuB,KAAK,CAAC,GAAG,CAAC,UAAC,SAAS;oBAAA,OAAK,CAAC,IAAI,EAAE,SAAS,CAAC;kBAAA,EAAC;gBAAA,EACxE;gBAED,IAAI,OAAO,IAAI,QAAQ,EAAE;kBACvB,SAAS,CAAC,IAAI,OAAd,SAAS,GACP,CAAC,OAAO,EAAE,QAAQ,CAAC,4BAChB,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI;oBAAA,OAAqB,CAAC,OAAO,EAAE,IAAI,CAAC;kBAAA,EAAC,sBACpD,KAAK,CAAC,GAAG,CAAC,UAAC,IAAI;oBAAA,OAAqB,CAAC,QAAQ,EAAE,IAAI,CAAC;kBAAA,EAAC,GACzD;gBACF;gBAEK,KAAK,GAAqB,CAAC,CAAC,SAAS,CAAC,CACzC,MAAM,CAAC,UAAC,MAAM;kBAAA,OACb,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC;gBAAA,EAChC,CACA,MAAM,CACL;kBAAA;oBAAE,MAAM;oBAAE,MAAM;kBAAA,OACd,MAAM,CAAC,OAAO,KAAK,MAAM,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC;gBAAA,EAC9D,CACA,KAAK,EAAE;gBAEJ,cAAc,GAAG,IAAI,GAAG,EAAU;gBAElC,aAAa,GAAqB,CAAC,CAAC,KAAK,CAAC,CAC7C,GAAG,CAAC,iBAAqB;kBAAA;oBAAnB,MAAM;oBAAE,MAAM;kBACnB,IAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,MAAM,CAAC;kBAEnD,IAAI,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;oBACnC,OAAO,SAAS;kBACjB;kBACD,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC;kBAE/B,YAAyB,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,GAC/C,CAAC,MAAM,EAAE,MAAM,CAAC,GAChB,CAAC,MAAM,EAAE,MAAM,CAAC;oBAAA;oBAFb,MAAM;oBAAE,MAAM;kBAIrB,OAAO;oBACL,EAAE,EAAE,WAAW;oBACf,SAAS,EAAE,KAAK;oBAChB,MAAM,EAAE;sBACN,EAAE,EAAE,MAAM,CAAC;qBACZ;oBACD,MAAM,EAAE;sBACN,EAAE,EAAE,MAAM,CAAC;qBACZ;oBACD,MAAM,EAAE,GAAG;oBACX,OAAO,EAAE,GAAG;oBACZ,UAAU,EAAE;mBACb;gBACH,CAAC,CAAC,CACD,OAAO,EAAE,CACT,KAAK,EAAE;gBAAA,iCAEH,aAAa;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACrB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA","sourceRoot":"","sourcesContent":["import { Pair } from '@uniswap/v2-sdk';\nimport _ from 'lodash';\nimport { ChainId, WRAPPED_NATIVE_CURRENCY } from '../../util/chains';\nimport { log } from '../../util/log';\nimport { DAI_MAINNET, DAI_RINKEBY_1, DAI_RINKEBY_2, USDC_MAINNET, USDT_MAINNET, WBTC_MAINNET, } from '../token-provider';\nconst BASES_TO_CHECK_TRADES_AGAINST = {\n    [ChainId.MAINNET]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.MAINNET],\n        DAI_MAINNET,\n        USDC_MAINNET,\n        USDT_MAINNET,\n        WBTC_MAINNET,\n    ],\n    [ChainId.ROPSTEN]: [WRAPPED_NATIVE_CURRENCY[ChainId.ROPSTEN]],\n    [ChainId.RINKEBY]: [\n        WRAPPED_NATIVE_CURRENCY[ChainId.RINKEBY],\n        DAI_RINKEBY_1,\n        DAI_RINKEBY_2,\n    ],\n    [ChainId.GÖRLI]: [WRAPPED_NATIVE_CURRENCY[ChainId.GÖRLI]],\n    [ChainId.KOVAN]: [WRAPPED_NATIVE_CURRENCY[ChainId.KOVAN]],\n    //v2 not deployed on [optimism, arbitrum, polygon, celo, gnosis, moonbeam] and their testnets\n    [ChainId.OPTIMISM]: [],\n    [ChainId.ARBITRUM_ONE]: [],\n    [ChainId.ARBITRUM_RINKEBY]: [],\n    [ChainId.OPTIMISTIC_KOVAN]: [],\n    [ChainId.POLYGON]: [],\n    [ChainId.POLYGON_MUMBAI]: [],\n    [ChainId.CELO]: [],\n    [ChainId.CELO_ALFAJORES]: [],\n    [ChainId.GNOSIS]: [],\n    [ChainId.MOONBEAM]: [],\n};\n/**\n * Provider that does not get data from an external source and instead returns\n * a hardcoded list of Subgraph pools.\n *\n * Since the pools are hardcoded, the liquidity/price values are dummys and should not\n * be depended on.\n *\n * Useful for instances where other data sources are unavailable. E.g. subgraph not available.\n *\n * @export\n * @class StaticV2SubgraphProvider\n */\nexport class StaticV2SubgraphProvider {\n    constructor(chainId) {\n        this.chainId = chainId;\n    }\n    async getPools(tokenIn, tokenOut) {\n        log.info('In static subgraph provider for V2');\n        const bases = BASES_TO_CHECK_TRADES_AGAINST[this.chainId];\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        if (tokenIn && tokenOut) {\n            basePairs.push([tokenIn, tokenOut], ...bases.map((base) => [tokenIn, base]), ...bases.map((base) => [tokenOut, base]));\n        }\n        const pairs = _(basePairs)\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .value();\n        const poolAddressSet = new Set();\n        const subgraphPools = _(pairs)\n            .map(([tokenA, tokenB]) => {\n            const poolAddress = Pair.getAddress(tokenA, tokenB);\n            if (poolAddressSet.has(poolAddress)) {\n                return undefined;\n            }\n            poolAddressSet.add(poolAddress);\n            const [token0, token1] = tokenA.sortsBefore(tokenB)\n                ? [tokenA, tokenB]\n                : [tokenB, tokenA];\n            return {\n                id: poolAddress,\n                liquidity: '100',\n                token0: {\n                    id: token0.address,\n                },\n                token1: {\n                    id: token1.address,\n                },\n                supply: 100,\n                reserve: 100,\n                reserveUSD: 100,\n            };\n        })\n            .compact()\n            .value();\n        return subgraphPools;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhdGljLXN1YmdyYXBoLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy92Mi9zdGF0aWMtc3ViZ3JhcGgtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDckUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsYUFBYSxFQUNiLGFBQWEsRUFDYixZQUFZLEVBQ1osWUFBWSxFQUNaLFlBQVksR0FDYixNQUFNLG1CQUFtQixDQUFDO0FBUTNCLE1BQU0sNkJBQTZCLEdBQW1CO0lBQ3BELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUU7UUFDekMsV0FBVztRQUNYLFlBQVk7UUFDWixZQUFZO1FBQ1osWUFBWTtLQUNiO0lBQ0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFFLENBQUM7SUFDOUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDakIsdUJBQXVCLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBRTtRQUN6QyxhQUFhO1FBQ2IsYUFBYTtLQUNkO0lBQ0QsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENBQUM7SUFDMUQsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLENBQUM7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"]},"metadata":{},"sourceType":"module"}