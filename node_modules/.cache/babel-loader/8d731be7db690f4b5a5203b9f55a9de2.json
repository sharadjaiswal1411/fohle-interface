{"ast":null,"code":"import { CeloNetworkInfo, PolygonNetworkInfo } from 'constants/networks';\nimport { CELO_ADDRESS, MATIC_ADDRESS, WETH_ADDRESSES } from '../constants';\nexport function formatTokenSymbol(address, symbol, activeNetwork) {\n  // dumb catch for matic\n  if (address === MATIC_ADDRESS && activeNetwork === PolygonNetworkInfo) {\n    return 'MATIC';\n  }\n\n  // dumb catch for Celo\n  if (address === CELO_ADDRESS && activeNetwork === CeloNetworkInfo) {\n    return 'CELO';\n  }\n  if (WETH_ADDRESSES.includes(address)) {\n    return 'ETH';\n  }\n  return symbol;\n}\nexport function formatTokenName(address, name, activeNetwork) {\n  // dumb catch for matic\n  if (address === MATIC_ADDRESS && activeNetwork === PolygonNetworkInfo) {\n    return 'MATIC';\n  }\n\n  // dumb catch for Celo\n  if (address === CELO_ADDRESS && activeNetwork === CeloNetworkInfo) {\n    return 'CELO';\n  }\n  if (WETH_ADDRESSES.includes(address)) {\n    return 'Ether';\n  }\n  return name;\n}","map":{"version":3,"names":["CeloNetworkInfo","PolygonNetworkInfo","CELO_ADDRESS","MATIC_ADDRESS","WETH_ADDRESSES","formatTokenSymbol","address","symbol","activeNetwork","includes","formatTokenName","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/tokens.ts"],"sourcesContent":["import { Token } from '@uniswap/sdk-core'\nimport { CeloNetworkInfo, NetworkInfo, PolygonNetworkInfo } from 'constants/networks'\n\nimport { CELO_ADDRESS, MATIC_ADDRESS, WETH_ADDRESSES } from '../constants'\n\nexport function formatTokenSymbol(address: string, symbol: string, activeNetwork?: NetworkInfo) {\n  // dumb catch for matic\n  if (address === MATIC_ADDRESS && activeNetwork === PolygonNetworkInfo) {\n    return 'MATIC'\n  }\n\n  // dumb catch for Celo\n  if (address === CELO_ADDRESS && activeNetwork === CeloNetworkInfo) {\n    return 'CELO'\n  }\n\n  if (WETH_ADDRESSES.includes(address)) {\n    return 'ETH'\n  }\n  return symbol\n}\n\nexport function formatTokenName(address: string, name: string, activeNetwork?: NetworkInfo) {\n  // dumb catch for matic\n  if (address === MATIC_ADDRESS && activeNetwork === PolygonNetworkInfo) {\n    return 'MATIC'\n  }\n\n  // dumb catch for Celo\n  if (address === CELO_ADDRESS && activeNetwork === CeloNetworkInfo) {\n    return 'CELO'\n  }\n\n  if (WETH_ADDRESSES.includes(address)) {\n    return 'Ether'\n  }\n  return name\n}\n"],"mappings":"AACA,SAASA,eAAe,EAAeC,kBAAkB,QAAQ,oBAAoB;AAErF,SAASC,YAAY,EAAEC,aAAa,EAAEC,cAAc,QAAQ,cAAc;AAE1E,OAAO,SAASC,iBAAiB,CAACC,OAAe,EAAEC,MAAc,EAAEC,aAA2B,EAAE;EAC9F;EACA,IAAIF,OAAO,KAAKH,aAAa,IAAIK,aAAa,KAAKP,kBAAkB,EAAE;IACrE,OAAO,OAAO;EAChB;;EAEA;EACA,IAAIK,OAAO,KAAKJ,YAAY,IAAIM,aAAa,KAAKR,eAAe,EAAE;IACjE,OAAO,MAAM;EACf;EAEA,IAAII,cAAc,CAACK,QAAQ,CAACH,OAAO,CAAC,EAAE;IACpC,OAAO,KAAK;EACd;EACA,OAAOC,MAAM;AACf;AAEA,OAAO,SAASG,eAAe,CAACJ,OAAe,EAAEK,IAAY,EAAEH,aAA2B,EAAE;EAC1F;EACA,IAAIF,OAAO,KAAKH,aAAa,IAAIK,aAAa,KAAKP,kBAAkB,EAAE;IACrE,OAAO,OAAO;EAChB;;EAEA;EACA,IAAIK,OAAO,KAAKJ,YAAY,IAAIM,aAAa,KAAKR,eAAe,EAAE;IACjE,OAAO,MAAM;EACf;EAEA,IAAII,cAAc,CAACK,QAAQ,CAACH,OAAO,CAAC,EAAE;IACpC,OAAO,OAAO;EAChB;EACA,OAAOK,IAAI;AACb"},"metadata":{},"sourceType":"module"}