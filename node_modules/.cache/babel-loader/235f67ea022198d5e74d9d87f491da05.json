{"ast":null,"code":"import clsx from 'clsx';\nimport * as resetStyles from './reset.css';\nimport { sprinkles } from './sprinkles.css';\nexport const atoms = _ref => {\n  let {\n    reset,\n    ...rest\n  } = _ref;\n  if (!reset) return sprinkles(rest);\n  const elementReset = resetStyles.element[reset];\n  const sprinklesClasses = sprinkles(rest);\n  return clsx(resetStyles.base, elementReset, sprinklesClasses);\n};","map":{"version":3,"names":["clsx","resetStyles","sprinkles","atoms","reset","rest","elementReset","element","sprinklesClasses","base"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/css/atoms.ts"],"sourcesContent":["import clsx from 'clsx'\n\nimport * as resetStyles from './reset.css'\nimport { Sprinkles, sprinkles } from './sprinkles.css'\n\nexport interface Atoms extends Sprinkles {\n  // reset is used by the Box component when its expected to behave as something other than a div, ie button, a, or span\n  reset?: keyof JSX.IntrinsicElements\n}\n\nexport const atoms = ({ reset, ...rest }: Atoms) => {\n  if (!reset) return sprinkles(rest)\n\n  const elementReset = resetStyles.element[reset as keyof typeof resetStyles.element]\n\n  const sprinklesClasses = sprinkles(rest)\n\n  return clsx(resetStyles.base, elementReset, sprinklesClasses)\n}\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,OAAO,KAAKC,WAAW,MAAM,aAAa;AAC1C,SAAoBC,SAAS,QAAQ,iBAAiB;AAOtD,OAAO,MAAMC,KAAK,GAAG,QAA+B;EAAA,IAA9B;IAAEC,KAAK;IAAE,GAAGC;EAAY,CAAC;EAC7C,IAAI,CAACD,KAAK,EAAE,OAAOF,SAAS,CAACG,IAAI,CAAC;EAElC,MAAMC,YAAY,GAAGL,WAAW,CAACM,OAAO,CAACH,KAAK,CAAqC;EAEnF,MAAMI,gBAAgB,GAAGN,SAAS,CAACG,IAAI,CAAC;EAExC,OAAOL,IAAI,CAACC,WAAW,CAACQ,IAAI,EAAEH,YAAY,EAAEE,gBAAgB,CAAC;AAC/D,CAAC"},"metadata":{},"sourceType":"module"}