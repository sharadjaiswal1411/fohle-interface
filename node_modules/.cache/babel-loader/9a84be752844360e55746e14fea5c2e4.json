{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ApplicationTransport = exports.OriginApplication = void 0;\nconst analytics_core_1 = require(\"@amplitude/analytics-core\");\nvar OriginApplication;\n(function (OriginApplication) {\n  OriginApplication[\"DOCS\"] = \"docs\";\n  OriginApplication[\"INTERFACE\"] = \"interface\";\n  OriginApplication[\"ORG\"] = \"org\";\n})(OriginApplication = exports.OriginApplication || (exports.OriginApplication = {}));\n/**\n * A custom Transport layer that sets `x-origin-application` to route the application to its Amplitude project\n *\n * @param originApplication Name of the application consuming the package. Used to route events to its project.\n *\n * See example here: https://github.com/amplitude/Amplitude-TypeScript/blob/main/packages/analytics-client-common/src/transports/fetch.ts\n */\nclass ApplicationTransport extends analytics_core_1.BaseTransport {\n  constructor(originApplication) {\n    super();\n    this.originApplication = originApplication;\n    /* istanbul ignore if */\n    if (typeof fetch === 'undefined') {\n      throw new Error('FetchTransport is not supported');\n    }\n  }\n  send(serverUrl, payload) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const request = {\n        headers: {\n          'x-origin-application': this.originApplication,\n          'Content-Type': 'application/json',\n          Accept: '*/*'\n        },\n        keepalive: true,\n        body: JSON.stringify(payload),\n        method: 'POST'\n      };\n      const response = yield fetch(serverUrl, request);\n      const responseJSON = yield response.json();\n      return this.buildResponse(responseJSON);\n    });\n  }\n}\nexports.ApplicationTransport = ApplicationTransport;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","ApplicationTransport","OriginApplication","analytics_core_1","require","BaseTransport","constructor","originApplication","fetch","Error","send","serverUrl","payload","request","headers","Accept","keepalive","body","JSON","stringify","method","response","responseJSON","json","buildResponse"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@uniswap/analytics/lib/cjs/analytics/ApplicationTransport.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ApplicationTransport = exports.OriginApplication = void 0;\nconst analytics_core_1 = require(\"@amplitude/analytics-core\");\nvar OriginApplication;\n(function (OriginApplication) {\n    OriginApplication[\"DOCS\"] = \"docs\";\n    OriginApplication[\"INTERFACE\"] = \"interface\";\n    OriginApplication[\"ORG\"] = \"org\";\n})(OriginApplication = exports.OriginApplication || (exports.OriginApplication = {}));\n/**\n * A custom Transport layer that sets `x-origin-application` to route the application to its Amplitude project\n *\n * @param originApplication Name of the application consuming the package. Used to route events to its project.\n *\n * See example here: https://github.com/amplitude/Amplitude-TypeScript/blob/main/packages/analytics-client-common/src/transports/fetch.ts\n */\nclass ApplicationTransport extends analytics_core_1.BaseTransport {\n    constructor(originApplication) {\n        super();\n        this.originApplication = originApplication;\n        /* istanbul ignore if */\n        if (typeof fetch === 'undefined') {\n            throw new Error('FetchTransport is not supported');\n        }\n    }\n    send(serverUrl, payload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                headers: {\n                    'x-origin-application': this.originApplication,\n                    'Content-Type': 'application/json',\n                    Accept: '*/*',\n                },\n                keepalive: true,\n                body: JSON.stringify(payload),\n                method: 'POST',\n            };\n            const response = yield fetch(serverUrl, request);\n            const responseJSON = yield response.json();\n            return this.buildResponse(responseJSON);\n        });\n    }\n}\nexports.ApplicationTransport = ApplicationTransport;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}