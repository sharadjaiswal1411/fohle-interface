{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';/**\n * Debounces updates to a value.\n * Non-primitives *must* wrap the value in useMemo, or the value will be updated due to referential inequality.\n */ // modified from https://usehooks.com/useDebounce/\nexport default function useDebounce(value,delay){var _useState=useState(value),_useState2=_slicedToArray(_useState,2),debouncedValue=_useState2[0],setDebouncedValue=_useState2[1];useEffect(function(){// Update debounced value after delay\nvar handler=setTimeout(function(){setDebouncedValue(value);},delay);// Cancel the timeout if value changes (also on delay change or unmount)\n// This is how we prevent debounced value from updating if value is changed ...\n// .. within the delay period. Timeout gets cleared and restarted.\nreturn function(){clearTimeout(handler);};},[value,delay]);return debouncedValue;}","map":{"version":3,"names":["useEffect","useState","useDebounce","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useDebounce.ts"],"sourcesContent":["import { useEffect, useState } from 'react'\n\n/**\n * Debounces updates to a value.\n * Non-primitives *must* wrap the value in useMemo, or the value will be updated due to referential inequality.\n */\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n"],"mappings":"4KAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C;AACA;AACA;AACA,GAHA,CAIA;AACA,cAAe,SAASC,YAAW,CAAIC,KAAQ,CAAEC,KAAa,CAAK,CACjE,cAA4CH,QAAQ,CAAIE,KAAK,CAAC,wCAAvDE,cAAc,eAAEC,iBAAiB,eAExCN,SAAS,CAAC,UAAM,CACd;AACA,GAAMO,QAAO,CAAGC,UAAU,CAAC,UAAM,CAC/BF,iBAAiB,CAACH,KAAK,CAAC,CAC1B,CAAC,CAAEC,KAAK,CAAC,CAET;AACA;AACA;AACA,MAAO,WAAM,CACXK,YAAY,CAACF,OAAO,CAAC,CACvB,CAAC,CACH,CAAC,CAAE,CAACJ,KAAK,CAAEC,KAAK,CAAC,CAAC,CAElB,MAAOC,eAAc,CACvB"},"metadata":{},"sourceType":"module"}