{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import gql from'graphql-tag';import{TransactionType}from'types';import{formatTokenSymbol}from'utils/tokens';var POOL_TRANSACTIONS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query transactions($address: Bytes!) {\\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\\n      timestamp\\n      transaction {\\n        id\\n      }\\n      pool {\\n        token0 {\\n          id\\n          symbol\\n        }\\n        token1 {\\n          id\\n          symbol\\n        }\\n      }\\n      owner\\n      sender\\n      origin\\n      amount0\\n      amount1\\n      amountUSD\\n    }\\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\\n      timestamp\\n      transaction {\\n        id\\n      }\\n      pool {\\n        token0 {\\n          id\\n          symbol\\n        }\\n        token1 {\\n          id\\n          symbol\\n        }\\n      }\\n      origin\\n      amount0\\n      amount1\\n      amountUSD\\n    }\\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\\n      timestamp\\n      transaction {\\n        id\\n      }\\n      pool {\\n        token0 {\\n          id\\n          symbol\\n        }\\n        token1 {\\n          id\\n          symbol\\n        }\\n      }\\n      owner\\n      amount0\\n      amount1\\n      amountUSD\\n    }\\n  }\\n\"])));export function fetchPoolTransactions(_x,_x2){return _fetchPoolTransactions.apply(this,arguments);}function _fetchPoolTransactions(){_fetchPoolTransactions=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address,client){var _yield$client$query,data,error,loading,mints,burns,swaps;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return client.query({query:POOL_TRANSACTIONS,variables:{address:address},fetchPolicy:'cache-first'});case 2:_yield$client$query=_context.sent;data=_yield$client$query.data;error=_yield$client$query.error;loading=_yield$client$query.loading;if(!error){_context.next=8;break;}return _context.abrupt(\"return\",{data:undefined,error:true,loading:false});case 8:if(!(loading&&!data)){_context.next=10;break;}return _context.abrupt(\"return\",{data:undefined,error:false,loading:true});case 10:mints=data.mints.map(function(m){return{type:TransactionType.MINT,hash:m.transaction.id,timestamp:m.timestamp,sender:m.origin,token0Symbol:formatTokenSymbol(m.pool.token0.id,m.pool.token0.symbol),token1Symbol:formatTokenSymbol(m.pool.token1.id,m.pool.token1.symbol),token0Address:m.pool.token0.id,token1Address:m.pool.token1.id,amountUSD:parseFloat(m.amountUSD),amountToken0:parseFloat(m.amount0),amountToken1:parseFloat(m.amount1)};});burns=data.burns.map(function(m){return{type:TransactionType.BURN,hash:m.transaction.id,timestamp:m.timestamp,sender:m.owner,token0Symbol:formatTokenSymbol(m.pool.token0.id,m.pool.token0.symbol),token1Symbol:formatTokenSymbol(m.pool.token1.id,m.pool.token1.symbol),token0Address:m.pool.token0.id,token1Address:m.pool.token1.id,amountUSD:parseFloat(m.amountUSD),amountToken0:parseFloat(m.amount0),amountToken1:parseFloat(m.amount1)};});swaps=data.swaps.map(function(m){return{type:TransactionType.SWAP,hash:m.transaction.id,timestamp:m.timestamp,sender:m.origin,token0Symbol:formatTokenSymbol(m.pool.token0.id,m.pool.token0.symbol),token1Symbol:formatTokenSymbol(m.pool.token1.id,m.pool.token1.symbol),token0Address:m.pool.token0.id,token1Address:m.pool.token1.id,amountUSD:parseFloat(m.amountUSD),amountToken0:parseFloat(m.amount0),amountToken1:parseFloat(m.amount1)};});return _context.abrupt(\"return\",{data:[].concat(_toConsumableArray(mints),_toConsumableArray(burns),_toConsumableArray(swaps)),error:false,loading:false});case 14:case\"end\":return _context.stop();}}},_callee);}));return _fetchPoolTransactions.apply(this,arguments);}","map":{"version":3,"names":["gql","TransactionType","formatTokenSymbol","POOL_TRANSACTIONS","fetchPoolTransactions","address","client","query","variables","fetchPolicy","data","error","loading","undefined","mints","map","m","type","MINT","hash","transaction","id","timestamp","sender","origin","token0Symbol","pool","token0","symbol","token1Symbol","token1","token0Address","token1Address","amountUSD","parseFloat","amountToken0","amount0","amountToken1","amount1","burns","BURN","owner","swaps","SWAP"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/data/pools/transactions.ts"],"sourcesContent":["import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTokenSymbol } from 'utils/tokens'\n\nconst POOL_TRANSACTIONS = gql`\n  query transactions($address: Bytes!) {\n    mints(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      sender\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      origin\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 100, orderBy: timestamp, orderDirection: desc, where: { pool: $address }, subgraphError: allow) {\n      timestamp\n      transaction {\n        id\n      }\n      pool {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      owner\n      amount0\n      amount1\n      amountUSD\n    }\n  }\n`\n\ninterface TransactionResults {\n  mints: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  swaps: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    origin: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n  burns: {\n    timestamp: string\n    transaction: {\n      id: string\n    }\n    pool: {\n      token0: {\n        id: string\n        symbol: string\n      }\n      token1: {\n        id: string\n        symbol: string\n      }\n    }\n    owner: string\n    amount0: string\n    amount1: string\n    amountUSD: string\n  }[]\n}\n\nexport async function fetchPoolTransactions(\n  address: string,\n  client: ApolloClient<NormalizedCacheObject>\n): Promise<{ data: Transaction[] | undefined; error: boolean; loading: boolean }> {\n  const { data, error, loading } = await client.query<TransactionResults>({\n    query: POOL_TRANSACTIONS,\n    variables: {\n      address,\n    },\n    fetchPolicy: 'cache-first',\n  })\n\n  if (error) {\n    return {\n      data: undefined,\n      error: true,\n      loading: false,\n    }\n  }\n\n  if (loading && !data) {\n    return {\n      data: undefined,\n      error: false,\n      loading: true,\n    }\n  }\n\n  const mints = data.mints.map((m) => {\n    return {\n      type: TransactionType.MINT,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n  const burns = data.burns.map((m) => {\n    return {\n      type: TransactionType.BURN,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.owner,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  const swaps = data.swaps.map((m) => {\n    return {\n      type: TransactionType.SWAP,\n      hash: m.transaction.id,\n      timestamp: m.timestamp,\n      sender: m.origin,\n      token0Symbol: formatTokenSymbol(m.pool.token0.id, m.pool.token0.symbol),\n      token1Symbol: formatTokenSymbol(m.pool.token1.id, m.pool.token1.symbol),\n      token0Address: m.pool.token0.id,\n      token1Address: m.pool.token1.id,\n      amountUSD: parseFloat(m.amountUSD),\n      amountToken0: parseFloat(m.amount0),\n      amountToken1: parseFloat(m.amount1),\n    }\n  })\n\n  return { data: [...mints, ...burns, ...swaps], error: false, loading: false }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}