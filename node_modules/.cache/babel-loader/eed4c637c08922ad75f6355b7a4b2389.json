{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _SUBGRAPH_URL_BY_CHAI, _templateObject;\nimport retry from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nvar SUBGRAPH_URL_BY_CHAIN = (_SUBGRAPH_URL_BY_CHAI = {}, _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.MAINNET, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.RINKEBY, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v2-rinkeby'), _SUBGRAPH_URL_BY_CHAI);\nvar threshold = 0.025;\nvar PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport var V2SubgraphProvider = /*#__PURE__*/function () {\n  function V2SubgraphProvider(chainId) {\n    var retries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 360000;\n    var rollback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    _classCallCheck(this, V2SubgraphProvider);\n    this.chainId = chainId;\n    this.retries = retries;\n    this.timeout = timeout;\n    this.rollback = rollback;\n    var subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n    if (!subgraphUrl) {\n      throw new Error(\"No subgraph url for chain id: \".concat(this.chainId));\n    }\n    this.client = new GraphQLClient(subgraphUrl);\n  }\n  _createClass(V2SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_tokenIn, _tokenOut, providerConfig) {\n        var _this = this;\n        var blockNumber, query2, pools, FEI, poolsSanitized;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)) {\n                  _context4.next = 6;\n                  break;\n                }\n                _context4.next = 3;\n                return providerConfig.blockNumber;\n              case 3:\n                _context4.t0 = _context4.sent;\n                _context4.next = 7;\n                break;\n              case 6:\n                _context4.t0 = undefined;\n              case 7:\n                blockNumber = _context4.t0;\n                // Due to limitations with the Subgraph API this is the only way to parameterize the query.\n                query2 = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      query getPools($pageSize: Int!, $id: String) {\\n        pairs(\\n          first: $pageSize\\n          \", \"\\n          where: { id_gt: $id }\\n        ) {\\n          id\\n          token0 { id, symbol }\\n          token1 { id, symbol }\\n          totalSupply\\n          trackedReserveETH\\n          reserveUSD\\n        }\\n      }\\n    \"])), blockNumber ? \"block: { number: \".concat(blockNumber, \" }\") : \"\");\n                pools = [];\n                log.info(\"Getting V2 pools from the subgraph with page size \".concat(PAGE_SIZE).concat((providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) ? \" as of block \".concat(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) : '', \".\"));\n                _context4.next = 13;\n                return retry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                  var timeout, getPools, getPoolsPromise, timerPromise;\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          timeout = new Timeout();\n                          getPools = /*#__PURE__*/function () {\n                            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                              var lastId, pairs, pairsPage;\n                              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                while (1) {\n                                  switch (_context2.prev = _context2.next) {\n                                    case 0:\n                                      lastId = '';\n                                      pairs = [];\n                                      pairsPage = [];\n                                    case 3:\n                                      _context2.next = 5;\n                                      return retry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                                        var poolsResult;\n                                        return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                          while (1) {\n                                            switch (_context.prev = _context.next) {\n                                              case 0:\n                                                _context.next = 2;\n                                                return _this.client.request(query2, {\n                                                  pageSize: PAGE_SIZE,\n                                                  id: lastId\n                                                });\n                                              case 2:\n                                                poolsResult = _context.sent;\n                                                pairsPage = poolsResult.pairs;\n                                                pairs = pairs.concat(pairsPage);\n                                                lastId = pairs[pairs.length - 1].id;\n                                              case 6:\n                                              case \"end\":\n                                                return _context.stop();\n                                            }\n                                          }\n                                        }, _callee);\n                                      })), {\n                                        retries: _this.retries,\n                                        onRetry: function onRetry(err, retry) {\n                                          pools = [];\n                                          log.info({\n                                            err: err\n                                          }, \"Failed request for page of pools from subgraph. Retry attempt: \".concat(retry));\n                                        }\n                                      });\n                                    case 5:\n                                      if (pairsPage.length > 0) {\n                                        _context2.next = 3;\n                                        break;\n                                      }\n                                    case 6:\n                                      return _context2.abrupt(\"return\", pairs);\n                                    case 7:\n                                    case \"end\":\n                                      return _context2.stop();\n                                  }\n                                }\n                              }, _callee2);\n                            }));\n                            return function getPools() {\n                              return _ref2.apply(this, arguments);\n                            };\n                          }();\n                          /* eslint-disable no-useless-catch */\n                          _context3.prev = 2;\n                          getPoolsPromise = getPools();\n                          timerPromise = timeout.set(_this.timeout).then(function () {\n                            throw new Error(\"Timed out getting pools from subgraph: \".concat(_this.timeout));\n                          });\n                          _context3.next = 7;\n                          return Promise.race([getPoolsPromise, timerPromise]);\n                        case 7:\n                          pools = _context3.sent;\n                          return _context3.abrupt(\"return\");\n                        case 11:\n                          _context3.prev = 11;\n                          _context3.t0 = _context3[\"catch\"](2);\n                          throw _context3.t0;\n                        case 14:\n                          _context3.prev = 14;\n                          timeout.clear();\n                          return _context3.finish(14);\n                        case 17:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3, null, [[2, 11, 14, 17]]);\n                })), {\n                  retries: this.retries,\n                  onRetry: function onRetry(err, retry) {\n                    if (_this.rollback && blockNumber && _.includes(err.message, 'indexed up to')) {\n                      blockNumber = blockNumber - 10;\n                      log.info(\"Detected subgraph indexing error. Rolled back block number to: \".concat(blockNumber));\n                    }\n                    pools = [];\n                    log.info({\n                      err: err\n                    }, \"Failed to get pools from subgraph. Retry attempt: \".concat(retry));\n                  }\n                });\n              case 13:\n                // Filter pools that have tracked reserve ETH less than threshold.\n                // trackedReserveETH filters pools that do not involve a pool from this allowlist:\n                // https://github.com/Uniswap/v2-subgraph/blob/7c82235cad7aee4cfce8ea82f0030af3d224833e/src/mappings/pricing.ts#L43\n                // Which helps filter pools with manipulated prices/liquidity.\n                // TODO: Remove. Temporary fix to ensure tokens without trackedReserveETH are in the list.\n                FEI = '0x956f47f50a910163d8bf957cf5846d573e7f87ca';\n                poolsSanitized = pools.filter(function (pool) {\n                  return pool.token0.id == FEI || pool.token1.id == FEI || parseFloat(pool.trackedReserveETH) > threshold;\n                }).map(function (pool) {\n                  return _objectSpread(_objectSpread({}, pool), {}, {\n                    id: pool.id.toLowerCase(),\n                    token0: {\n                      id: pool.token0.id.toLowerCase()\n                    },\n                    token1: {\n                      id: pool.token1.id.toLowerCase()\n                    },\n                    supply: parseFloat(pool.totalSupply),\n                    reserve: parseFloat(pool.trackedReserveETH),\n                    reserveUSD: parseFloat(pool.reserveUSD)\n                  });\n                });\n                log.info(\"Got \".concat(pools.length, \" V2 pools from the subgraph. \").concat(poolsSanitized.length, \" after filtering\"));\n                return _context4.abrupt(\"return\", poolsSanitized);\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function getPools(_x, _x2, _x3) {\n        return _getPools.apply(this, arguments);\n      }\n      return getPools;\n    }()\n  }]);\n  return V2SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../src/providers/v2/subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import retry from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId } from '../../util/chains';\nimport { log } from '../../util/log';\nconst SUBGRAPH_URL_BY_CHAIN = {\n    [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswapv2',\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v2-rinkeby',\n};\nconst threshold = 0.025;\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport class V2SubgraphProvider {\n    constructor(chainId, retries = 2, timeout = 360000, rollback = true) {\n        this.chainId = chainId;\n        this.retries = retries;\n        this.timeout = timeout;\n        this.rollback = rollback;\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n        if (!subgraphUrl) {\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\n        }\n        this.client = new GraphQLClient(subgraphUrl);\n    }\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? await providerConfig.blockNumber\n            : undefined;\n        // Due to limitations with the Subgraph API this is the only way to parameterize the query.\n        const query2 = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pairs(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 { id, symbol }\n          token1 { id, symbol }\n          totalSupply\n          trackedReserveETH\n          reserveUSD\n        }\n      }\n    `;\n        let pools = [];\n        log.info(`Getting V2 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\n            : ''}.`);\n        await retry(async () => {\n            const timeout = new Timeout();\n            const getPools = async () => {\n                let lastId = '';\n                let pairs = [];\n                let pairsPage = [];\n                do {\n                    await retry(async () => {\n                        const poolsResult = await this.client.request(query2, {\n                            pageSize: PAGE_SIZE,\n                            id: lastId,\n                        });\n                        pairsPage = poolsResult.pairs;\n                        pairs = pairs.concat(pairsPage);\n                        lastId = pairs[pairs.length - 1].id;\n                    }, {\n                        retries: this.retries,\n                        onRetry: (err, retry) => {\n                            pools = [];\n                            log.info({ err }, `Failed request for page of pools from subgraph. Retry attempt: ${retry}`);\n                        },\n                    });\n                } while (pairsPage.length > 0);\n                return pairs;\n            };\n            /* eslint-disable no-useless-catch */\n            try {\n                const getPoolsPromise = getPools();\n                const timerPromise = timeout.set(this.timeout).then(() => {\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\n                });\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\n                return;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                timeout.clear();\n            }\n            /* eslint-enable no-useless-catch */\n        }, {\n            retries: this.retries,\n            onRetry: (err, retry) => {\n                if (this.rollback &&\n                    blockNumber &&\n                    _.includes(err.message, 'indexed up to')) {\n                    blockNumber = blockNumber - 10;\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\n                }\n                pools = [];\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\n            },\n        });\n        // Filter pools that have tracked reserve ETH less than threshold.\n        // trackedReserveETH filters pools that do not involve a pool from this allowlist:\n        // https://github.com/Uniswap/v2-subgraph/blob/7c82235cad7aee4cfce8ea82f0030af3d224833e/src/mappings/pricing.ts#L43\n        // Which helps filter pools with manipulated prices/liquidity.\n        // TODO: Remove. Temporary fix to ensure tokens without trackedReserveETH are in the list.\n        const FEI = '0x956f47f50a910163d8bf957cf5846d573e7f87ca';\n        const poolsSanitized = pools\n            .filter((pool) => {\n            return (pool.token0.id == FEI ||\n                pool.token1.id == FEI ||\n                parseFloat(pool.trackedReserveETH) > threshold);\n        })\n            .map((pool) => {\n            return {\n                ...pool,\n                id: pool.id.toLowerCase(),\n                token0: {\n                    id: pool.token0.id.toLowerCase(),\n                },\n                token1: {\n                    id: pool.token1.id.toLowerCase(),\n                },\n                supply: parseFloat(pool.totalSupply),\n                reserve: parseFloat(pool.trackedReserveETH),\n                reserveUSD: parseFloat(pool.reserveUSD),\n            };\n        });\n        log.info(`Got ${pools.length} V2 pools from the subgraph. ${poolsSanitized.length} after filtering`);\n        return poolsSanitized;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YyL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQzVDLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQStCckMsTUFBTSxxQkFBcUIsR0FBc0M7SUFDL0QsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2YsNkRBQTZEO0lBQy9ELENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNmLHNFQUFzRTtDQUN6RSxDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDO0FBRXhCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxDQUFDLCtDQUErQztBQWdCdkUsTUFBTSxPQUFPLGtCQUFrQjtJQUc3QixZQUNVLE9BQWdCLEVBQ2hCLFVBQVUsQ0FBQyxFQUNYLFVBQVUsTUFBTSxFQUNoQixXQUFXLElBQUk7UUFIZixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLFlBQU8sR0FBUCxPQUFPLENBQUk7UUFDWCxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLGFBQVEsR0FBUixRQUFRLENBQU87UUFFdkIsTUFBTSxXQUFXLEdBQUcscUJBQXFCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxXQUFXLEVBQUU7WUFDaEIsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQ0FBaUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxD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"]},"metadata":{},"sourceType":"module"}