{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{Trans}from\"@lingui/react\";import{CurrencyAmount,Percent,Price}from'@uniswap/sdk-core';import{useWeb3React}from'@web3-react/core';import JSBI from'jsbi';import tryParseCurrencyAmount from'lib/utils/tryParseCurrencyAmount';import{useCallback,useMemo}from'react';import{useAppDispatch,useAppSelector}from'state/hooks';import{useTotalSupply}from'../../hooks/useTotalSupply';import{PairState,useV2Pair}from'../../hooks/useV2Pairs';import{useCurrencyBalances}from'../connection/hooks';import{Field,typeInput}from'./actions';import{jsx as _jsx}from\"react/jsx-runtime\";var ZERO=JSBI.BigInt(0);export function useMintState(){return useAppSelector(function(state){return state.mint;});}export function useMintActionHandlers(noLiquidity){var dispatch=useAppDispatch();var onFieldAInput=useCallback(function(typedValue){dispatch(typeInput({field:Field.CURRENCY_A,typedValue:typedValue,noLiquidity:noLiquidity===true}));},[dispatch,noLiquidity]);var onFieldBInput=useCallback(function(typedValue){dispatch(typeInput({field:Field.CURRENCY_B,typedValue:typedValue,noLiquidity:noLiquidity===true}));},[dispatch,noLiquidity]);return{onFieldAInput:onFieldAInput,onFieldBInput:onFieldBInput};}export function useDerivedMintInfo(currencyA,currencyB){var _currencyBalances,_currencyBalances$Fie,_currencyBalances$Fie2;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useMintState=useMintState(),independentField=_useMintState.independentField,typedValue=_useMintState.typedValue,otherTypedValue=_useMintState.otherTypedValue;var dependentField=independentField===Field.CURRENCY_A?Field.CURRENCY_B:Field.CURRENCY_A;// tokens\nvar currencies=useMemo(function(){var _ref;return _ref={},_defineProperty(_ref,Field.CURRENCY_A,currencyA!==null&&currencyA!==void 0?currencyA:undefined),_defineProperty(_ref,Field.CURRENCY_B,currencyB!==null&&currencyB!==void 0?currencyB:undefined),_ref;},[currencyA,currencyB]);// pair\nvar _useV2Pair=useV2Pair(currencies[Field.CURRENCY_A],currencies[Field.CURRENCY_B]),_useV2Pair2=_slicedToArray(_useV2Pair,2),pairState=_useV2Pair2[0],pair=_useV2Pair2[1];var totalSupply=useTotalSupply(pair===null||pair===void 0?void 0:pair.liquidityToken);var noLiquidity=pairState===PairState.NOT_EXISTS||Boolean(totalSupply&&JSBI.equal(totalSupply.quotient,ZERO))||Boolean(pairState===PairState.EXISTS&&pair&&JSBI.equal(pair.reserve0.quotient,ZERO)&&JSBI.equal(pair.reserve1.quotient,ZERO));// balances\nvar balances=useCurrencyBalances(account!==null&&account!==void 0?account:undefined,useMemo(function(){return[currencies[Field.CURRENCY_A],currencies[Field.CURRENCY_B]];},[currencies]));var currencyBalances=(_currencyBalances={},_defineProperty(_currencyBalances,Field.CURRENCY_A,balances[0]),_defineProperty(_currencyBalances,Field.CURRENCY_B,balances[1]),_currencyBalances);// amounts\nvar independentAmount=tryParseCurrencyAmount(typedValue,currencies[independentField]);var dependentAmount=useMemo(function(){if(noLiquidity){if(otherTypedValue&&currencies[dependentField]){return tryParseCurrencyAmount(otherTypedValue,currencies[dependentField]);}return undefined;}else if(independentAmount){// we wrap the currencies just to get the price in terms of the other token\nvar wrappedIndependentAmount=independentAmount===null||independentAmount===void 0?void 0:independentAmount.wrapped;var tokenA=currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,tokenB=currencyB===null||currencyB===void 0?void 0:currencyB.wrapped;if(tokenA&&tokenB&&wrappedIndependentAmount&&pair){var dependentCurrency=dependentField===Field.CURRENCY_B?currencyB:currencyA;var dependentTokenAmount=dependentField===Field.CURRENCY_B?pair.priceOf(tokenA).quote(wrappedIndependentAmount):pair.priceOf(tokenB).quote(wrappedIndependentAmount);return(dependentCurrency===null||dependentCurrency===void 0?void 0:dependentCurrency.isNative)?CurrencyAmount.fromRawAmount(dependentCurrency,dependentTokenAmount.quotient):dependentTokenAmount;}return undefined;}else{return undefined;}},[noLiquidity,otherTypedValue,currencies,dependentField,independentAmount,currencyA,currencyB,pair]);var parsedAmounts=useMemo(function(){var _ref2;return _ref2={},_defineProperty(_ref2,Field.CURRENCY_A,independentField===Field.CURRENCY_A?independentAmount:dependentAmount),_defineProperty(_ref2,Field.CURRENCY_B,independentField===Field.CURRENCY_A?dependentAmount:independentAmount),_ref2;},[dependentAmount,independentAmount,independentField]);var price=useMemo(function(){if(noLiquidity){var _currencyAAmount=parsedAmounts[Field.CURRENCY_A],_currencyBAmount=parsedAmounts[Field.CURRENCY_B];if((_currencyAAmount===null||_currencyAAmount===void 0?void 0:_currencyAAmount.greaterThan(0))&&(_currencyBAmount===null||_currencyBAmount===void 0?void 0:_currencyBAmount.greaterThan(0))){var value=_currencyBAmount.divide(_currencyAAmount);return new Price(_currencyAAmount.currency,_currencyBAmount.currency,value.denominator,value.numerator);}return undefined;}else{var wrappedCurrencyA=currencyA===null||currencyA===void 0?void 0:currencyA.wrapped;return pair&&wrappedCurrencyA?pair.priceOf(wrappedCurrencyA):undefined;}},[currencyA,noLiquidity,pair,parsedAmounts]);// liquidity minted\nvar liquidityMinted=useMemo(function(){var currencyAAmount=parsedAmounts[Field.CURRENCY_A],currencyBAmount=parsedAmounts[Field.CURRENCY_B];var tokenAmountA=currencyAAmount===null||currencyAAmount===void 0?void 0:currencyAAmount.wrapped,tokenAmountB=currencyBAmount===null||currencyBAmount===void 0?void 0:currencyBAmount.wrapped;if(pair&&totalSupply&&tokenAmountA&&tokenAmountB){try{return pair.getLiquidityMinted(totalSupply,tokenAmountA,tokenAmountB);}catch(error){console.error(error);return undefined;}}else{return undefined;}},[parsedAmounts,pair,totalSupply]);var poolTokenPercentage=useMemo(function(){if(liquidityMinted&&totalSupply){return new Percent(liquidityMinted.quotient,totalSupply.add(liquidityMinted).quotient);}else{return undefined;}},[liquidityMinted,totalSupply]);var error;if(!account){error=/*#__PURE__*/_jsx(Trans,{id:\"Connect Wallet\"});}if(pairState===PairState.INVALID){var _error;error=(_error=error)!==null&&_error!==void 0?_error:/*#__PURE__*/_jsx(Trans,{id:\"Invalid pair\"});}if(!parsedAmounts[Field.CURRENCY_A]||!parsedAmounts[Field.CURRENCY_B]){var _error2;error=(_error2=error)!==null&&_error2!==void 0?_error2:/*#__PURE__*/_jsx(Trans,{id:\"Enter an amount\"});}var currencyAAmount=parsedAmounts[Field.CURRENCY_A],currencyBAmount=parsedAmounts[Field.CURRENCY_B];if(currencyAAmount&&(currencyBalances===null||currencyBalances===void 0?void 0:(_currencyBalances$Fie=currencyBalances[Field.CURRENCY_A])===null||_currencyBalances$Fie===void 0?void 0:_currencyBalances$Fie.lessThan(currencyAAmount))){var _currencies$Field$CUR;error=/*#__PURE__*/_jsx(Trans,{id:\"Insufficient {0} balance\",values:{0:(_currencies$Field$CUR=currencies[Field.CURRENCY_A])===null||_currencies$Field$CUR===void 0?void 0:_currencies$Field$CUR.symbol}});}if(currencyBAmount&&(currencyBalances===null||currencyBalances===void 0?void 0:(_currencyBalances$Fie2=currencyBalances[Field.CURRENCY_B])===null||_currencyBalances$Fie2===void 0?void 0:_currencyBalances$Fie2.lessThan(currencyBAmount))){var _currencies$Field$CUR2;error=/*#__PURE__*/_jsx(Trans,{id:\"Insufficient {0} balance\",values:{0:(_currencies$Field$CUR2=currencies[Field.CURRENCY_B])===null||_currencies$Field$CUR2===void 0?void 0:_currencies$Field$CUR2.symbol}});}return{dependentField:dependentField,currencies:currencies,pair:pair,pairState:pairState,currencyBalances:currencyBalances,parsedAmounts:parsedAmounts,price:price,noLiquidity:noLiquidity,liquidityMinted:liquidityMinted,poolTokenPercentage:poolTokenPercentage,error:error};}","map":{"version":3,"names":["CurrencyAmount","Percent","Price","useWeb3React","JSBI","tryParseCurrencyAmount","useCallback","useMemo","useAppDispatch","useAppSelector","useTotalSupply","PairState","useV2Pair","useCurrencyBalances","Field","typeInput","ZERO","BigInt","useMintState","state","mint","useMintActionHandlers","noLiquidity","dispatch","onFieldAInput","typedValue","field","CURRENCY_A","onFieldBInput","CURRENCY_B","useDerivedMintInfo","currencyA","currencyB","account","independentField","otherTypedValue","dependentField","currencies","undefined","pairState","pair","totalSupply","liquidityToken","NOT_EXISTS","Boolean","equal","quotient","EXISTS","reserve0","reserve1","balances","currencyBalances","independentAmount","dependentAmount","wrappedIndependentAmount","wrapped","tokenA","tokenB","dependentCurrency","dependentTokenAmount","priceOf","quote","isNative","fromRawAmount","parsedAmounts","price","currencyAAmount","currencyBAmount","greaterThan","value","divide","currency","denominator","numerator","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","error","console","poolTokenPercentage","add","INVALID","lessThan","symbol"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/mint/hooks.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, Price, Token } from '@uniswap/sdk-core'\nimport { Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport JSBI from 'jsbi'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ReactNode, useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { useTotalSupply } from '../../hooks/useTotalSupply'\nimport { PairState, useV2Pair } from '../../hooks/useV2Pairs'\nimport { useCurrencyBalances } from '../connection/hooks'\nimport { AppState } from '../index'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useAppSelector((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useAppDispatch()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity]\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmounts: { [field in Field]?: CurrencyAmount<Currency> }\n  price?: Price<Currency, Currency>\n  noLiquidity?: boolean\n  liquidityMinted?: CurrencyAmount<Token>\n  poolTokenPercentage?: Percent\n  error?: ReactNode\n} {\n  const { account } = useWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB]\n  )\n\n  // pair\n  const [pairState, pair] = useV2Pair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS ||\n    Boolean(totalSupply && JSBI.equal(totalSupply.quotient, ZERO)) ||\n    Boolean(\n      pairState === PairState.EXISTS &&\n        pair &&\n        JSBI.equal(pair.reserve0.quotient, ZERO) &&\n        JSBI.equal(pair.reserve1.quotient, ZERO)\n    )\n\n  // balances\n  const balances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B]], [currencies])\n  )\n  const currencyBalances: { [field in Field]?: CurrencyAmount<Currency> } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount<Currency> | undefined = tryParseCurrencyAmount(\n    typedValue,\n    currencies[independentField]\n  )\n  const dependentAmount: CurrencyAmount<Currency> | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseCurrencyAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    } else if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = independentAmount?.wrapped\n      const [tokenA, tokenB] = [currencyA?.wrapped, currencyB?.wrapped]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency?.isNative\n          ? CurrencyAmount.fromRawAmount(dependentCurrency, dependentTokenAmount.quotient)\n          : dependentTokenAmount\n      }\n      return undefined\n    } else {\n      return undefined\n    }\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount<Currency> | undefined } = useMemo(() => {\n    return {\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }\n  }, [dependentAmount, independentAmount, independentField])\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount?.greaterThan(0) && currencyBAmount?.greaterThan(0)) {\n        const value = currencyBAmount.divide(currencyAAmount)\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, value.denominator, value.numerator)\n      }\n      return undefined\n    } else {\n      const wrappedCurrencyA = currencyA?.wrapped\n      return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n    }\n  }, [currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [currencyAAmount?.wrapped, currencyBAmount?.wrapped]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      try {\n        return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n      } catch (error) {\n        console.error(error)\n        return undefined\n      }\n    } else {\n      return undefined\n    }\n  }, [parsedAmounts, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.quotient, totalSupply.add(liquidityMinted).quotient)\n    } else {\n      return undefined\n    }\n  }, [liquidityMinted, totalSupply])\n\n  let error: ReactNode | undefined\n  if (!account) {\n    error = <Trans>Connect Wallet</Trans>\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? <Trans>Invalid pair</Trans>\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? <Trans>Enter an amount</Trans>\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_A]?.symbol} balance</Trans>\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = <Trans>Insufficient {currencies[Field.CURRENCY_B]?.symbol} balance</Trans>\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}