{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _styled from\"styled-components\";var _templateObject,_templateObject2,_templateObject3;import{Trans}from\"@lingui/react\";import{sendAnalyticsEvent,user}from'@uniswap/analytics';import{CustomUserProperties,EventName,WalletConnectionResult}from'@uniswap/analytics-events';import{useWeb3React}from'@web3-react/core';import{sendEvent}from'components/analytics';import{AutoColumn}from'components/Column';import{AutoRow}from'components/Row';import{networkConnection}from'connection';import{getConnection,getConnectionName,getIsCoinbaseWallet,getIsInjected,getIsMetaMask}from'connection/utils';import usePrevious from'hooks/usePrevious';import{useCallback,useEffect,useState}from'react';import{ArrowLeft}from'react-feather';import{useLocation,useNavigate}from'react-router-dom';import{updateConnectionError}from'state/connection/reducer';import{useAppDispatch,useAppSelector}from'state/hooks';import{updateSelectedWallet}from'state/user/reducer';import{useConnectedWallets}from'state/wallets/hooks';import{flexColumnNoWrap,flexRowNoWrap}from'theme/styles';import{isMobile}from'utils/userAgent';import{ReactComponent as Close}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";import{useModalIsOpen,useToggleWalletModal}from'../../state/application/hooks';import{ApplicationModal}from'../../state/application/reducer';import{ExternalLink,ThemedText}from'../../theme';import AccountDetails from'../AccountDetails';import Modal from'../Modal';import{CoinbaseWalletOption,OpenCoinbaseWalletOption}from'./CoinbaseWalletOption';import{InjectedOption,InstallMetaMaskOption,MetaMaskOption}from'./InjectedOption';import PendingView from'./PendingView';import{WalletConnectOption}from'./WalletConnectOption';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CloseIcon=_styled.div.withConfig({componentId:\"sc-1hmbv05-0\"})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:\",\";}\"],function(_ref){var theme=_ref.theme;return theme.opacity.hover;});var CloseColor=_styled(Close).withConfig({componentId:\"sc-1hmbv05-1\"})([\"path{stroke:\",\";}\"],function(_ref2){var theme=_ref2.theme;return theme.deprecated_text4;});var Wrapper=_styled.div.withConfig({componentId:\"sc-1hmbv05-2\"})([\"\",\";background-color:\",\";outline:\",\";box-shadow:\",\";margin:0;padding:0;width:100%;\"],flexColumnNoWrap,function(_ref3){var theme=_ref3.theme;return theme.backgroundSurface;},function(_ref4){var theme=_ref4.theme;return\"1px solid \".concat(theme.backgroundOutline);},function(_ref5){var theme=_ref5.theme;return theme.deepShadow;});var HeaderRow=_styled.div.withConfig({componentId:\"sc-1hmbv05-3\"})([\"\",\";padding:1rem 1rem;font-weight:600;size:16px;color:\",\";\",\";\"],flexRowNoWrap,function(props){return props.color==='blue'?function(_ref6){var theme=_ref6.theme;return theme.accentAction;}:'inherit';},function(_ref7){var theme=_ref7.theme;return theme.deprecated_mediaWidth.deprecated_upToMedium(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n    padding: 1rem;\\n  \"])));});var ContentWrapper=_styled.div.withConfig({componentId:\"sc-1hmbv05-4\"})([\"background-color:\",\";padding:0 1rem 1rem 1rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\",\";\"],function(_ref8){var theme=_ref8.theme;return theme.backgroundSurface;},function(_ref9){var theme=_ref9.theme;return theme.deprecated_mediaWidth.deprecated_upToMedium(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"padding: 0 1rem 1rem 1rem\"])));});var UpperSection=_styled.div.withConfig({componentId:\"sc-1hmbv05-5\"})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);var OptionGrid=_styled.div.withConfig({componentId:\"sc-1hmbv05-6\"})([\"display:grid;grid-gap:10px;\",\";\"],function(_ref10){var theme=_ref10.theme;return theme.deprecated_mediaWidth.deprecated_upToMedium(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n    grid-template-columns: 1fr;\\n    grid-gap: 10px;\\n  \"])));});var HoverText=_styled.div.withConfig({componentId:\"sc-1hmbv05-7\"})([\"text-decoration:none;color:\",\";display:flex;align-items:center;:hover{cursor:pointer;}\"],function(_ref11){var theme=_ref11.theme;return theme.textPrimary;});var WALLET_VIEWS={OPTIONS:'options',ACCOUNT:'account',PENDING:'pending'};var sendAnalyticsEventAndUserInfo=function sendAnalyticsEventAndUserInfo(account,walletType,chainId,isReconnect){sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED,{result:WalletConnectionResult.SUCCEEDED,wallet_address:account,wallet_type:walletType,is_reconnect:isReconnect});user.set(CustomUserProperties.WALLET_ADDRESS,account);user.set(CustomUserProperties.WALLET_TYPE,walletType);if(chainId){user.postInsert(CustomUserProperties.ALL_WALLET_CHAIN_IDS,chainId);}user.postInsert(CustomUserProperties.ALL_WALLET_ADDRESSES_CONNECTED,account);};export default function WalletModal(_ref12){var pendingTransactions=_ref12.pendingTransactions,confirmedTransactions=_ref12.confirmedTransactions,ENSName=_ref12.ENSName;var dispatch=useAppDispatch();var _useWeb3React=useWeb3React(),connector=_useWeb3React.connector,account=_useWeb3React.account,chainId=_useWeb3React.chainId;var previousAccount=usePrevious(account);var location=useLocation();var navigate=useNavigate();var _useConnectedWallets=useConnectedWallets(),_useConnectedWallets2=_slicedToArray(_useConnectedWallets,2),connectedWallets=_useConnectedWallets2[0],addWalletToConnectedWallets=_useConnectedWallets2[1];var _useState=useState(WALLET_VIEWS.ACCOUNT),_useState2=_slicedToArray(_useState,2),walletView=_useState2[0],setWalletView=_useState2[1];var _useState3=useState(account),_useState4=_slicedToArray(_useState3,2),lastActiveWalletAddress=_useState4[0],setLastActiveWalletAddress=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),pendingConnector=_useState6[0],setPendingConnector=_useState6[1];var pendingError=useAppSelector(function(state){return pendingConnector?state.connection.errorByConnectionType[getConnection(pendingConnector).type]:undefined;});var walletModalOpen=useModalIsOpen(ApplicationModal.WALLET);var toggleWalletModal=useToggleWalletModal();var openOptions=useCallback(function(){setWalletView(WALLET_VIEWS.OPTIONS);},[setWalletView]);useEffect(function(){if(walletModalOpen){setWalletView(account?WALLET_VIEWS.ACCOUNT:WALLET_VIEWS.OPTIONS);}},[walletModalOpen,setWalletView,account]);useEffect(function(){if(account&&account!==previousAccount&&walletModalOpen){toggleWalletModal();if(location.pathname==='/'){navigate('/swap');}}},[account,previousAccount,toggleWalletModal,walletModalOpen,location.pathname,navigate]);useEffect(function(){if(pendingConnector&&walletView!==WALLET_VIEWS.PENDING){updateConnectionError({connectionType:getConnection(pendingConnector).type,error:undefined});setPendingConnector(undefined);}},[pendingConnector,walletView]);// Keep the network connector in sync with any active user connector to prevent chain-switching on wallet disconnection.\nuseEffect(function(){if(chainId&&connector!==networkConnection.connector){networkConnection.connector.activate(chainId);}},[chainId,connector]);// When new wallet is successfully set by the user, trigger logging of Amplitude analytics event.\nuseEffect(function(){if(account&&account!==lastActiveWalletAddress){var walletType=getConnectionName(getConnection(connector).type,getIsMetaMask());var isReconnect=connectedWallets.filter(function(wallet){return wallet.account===account&&wallet.walletType===walletType;}).length>0;sendAnalyticsEventAndUserInfo(account,walletType,chainId,isReconnect);if(!isReconnect)addWalletToConnectedWallets({account:account,walletType:walletType});}setLastActiveWalletAddress(account);},[connectedWallets,addWalletToConnectedWallets,lastActiveWalletAddress,account,connector,chainId]);var tryActivation=useCallback(/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(connector){var connectionType;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:connectionType=getConnection(connector).type;// log selected wallet\nsendEvent({category:'Wallet',action:'Change Wallet',label:connectionType});_context.prev=2;setPendingConnector(connector);setWalletView(WALLET_VIEWS.PENDING);dispatch(updateConnectionError({connectionType:connectionType,error:undefined}));_context.next=8;return connector.activate();case 8:dispatch(updateSelectedWallet({wallet:connectionType}));_context.next=16;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](2);console.debug(\"web3-react connection error: \".concat(_context.t0));dispatch(updateConnectionError({connectionType:connectionType,error:_context.t0.message}));sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED,{result:WalletConnectionResult.FAILED,wallet_type:getConnectionName(connectionType,getIsMetaMask())});case 16:case\"end\":return _context.stop();}}},_callee,null,[[2,11]]);}));return function(_x){return _ref13.apply(this,arguments);};}(),[dispatch]);function getOptions(){var _ref14;var isInjected=getIsInjected();var isMetaMask=getIsMetaMask();var isCoinbaseWallet=getIsCoinbaseWallet();var isCoinbaseWalletBrowser=isMobile&&isCoinbaseWallet;var isMetaMaskBrowser=isMobile&&isMetaMask;var isInjectedMobileBrowser=isCoinbaseWalletBrowser||isMetaMaskBrowser;var injectedOption;if(!isInjected){if(!isMobile){injectedOption=/*#__PURE__*/_jsx(InstallMetaMaskOption,{});}}else if(!isCoinbaseWallet){if(isMetaMask){injectedOption=/*#__PURE__*/_jsx(MetaMaskOption,{tryActivation:tryActivation});}else{injectedOption=/*#__PURE__*/_jsx(InjectedOption,{tryActivation:tryActivation});}}var coinbaseWalletOption;if(isMobile&&!isInjectedMobileBrowser){coinbaseWalletOption=/*#__PURE__*/_jsx(OpenCoinbaseWalletOption,{});}else if(!isMobile||isCoinbaseWalletBrowser){coinbaseWalletOption=/*#__PURE__*/_jsx(CoinbaseWalletOption,{tryActivation:tryActivation});}var walletConnectionOption=(_ref14=!isInjectedMobileBrowser&&/*#__PURE__*/_jsx(WalletConnectOption,{tryActivation:tryActivation}))!==null&&_ref14!==void 0?_ref14:null;return/*#__PURE__*/_jsxs(_Fragment,{children:[injectedOption,coinbaseWalletOption,walletConnectionOption]});}function getModalContent(){if(walletView===WALLET_VIEWS.ACCOUNT){return/*#__PURE__*/_jsx(AccountDetails,{toggleWalletModal:toggleWalletModal,pendingTransactions:pendingTransactions,confirmedTransactions:confirmedTransactions,ENSName:ENSName,openOptions:openOptions});}var headerRow;if(walletView===WALLET_VIEWS.PENDING||walletView===WALLET_VIEWS.ACCOUNT||!!account){headerRow=/*#__PURE__*/_jsx(HeaderRow,{color:\"blue\",children:/*#__PURE__*/_jsx(HoverText,{onClick:function onClick(){return setWalletView(account?WALLET_VIEWS.ACCOUNT:WALLET_VIEWS.OPTIONS);},children:/*#__PURE__*/_jsx(ArrowLeft,{})})});}else{headerRow=/*#__PURE__*/_jsx(HeaderRow,{children:/*#__PURE__*/_jsx(HoverText,{children:/*#__PURE__*/_jsx(Trans,{id:\"Connect a wallet\"})})});}function getTermsOfService(walletView){if(walletView===WALLET_VIEWS.PENDING)return null;var content=/*#__PURE__*/_jsx(Trans,{id:\"By connecting a wallet, you agree to Uniswap Labs\\u2019 <0>Terms of Service</0> and consent to its <1>Privacy Policy</1>.\",components:{0:/*#__PURE__*/_jsx(ExternalLink,{href:\"https://uniswap.org/terms-of-service/\"}),1:/*#__PURE__*/_jsx(ExternalLink,{href:\"https://uniswap.org/privacy-policy\"})}});return/*#__PURE__*/_jsx(AutoRow,{style:{flexWrap:'nowrap',padding:'4px 16px'},children:/*#__PURE__*/_jsx(ThemedText.BodySecondary,{fontSize:16,lineHeight:\"24px\",children:content})});}return/*#__PURE__*/_jsxs(UpperSection,{children:[/*#__PURE__*/_jsx(CloseIcon,{\"data-testid\":\"wallet-modal-close\",onClick:toggleWalletModal,children:/*#__PURE__*/_jsx(CloseColor,{})}),headerRow,/*#__PURE__*/_jsx(ContentWrapper,{children:/*#__PURE__*/_jsxs(AutoColumn,{gap:\"16px\",children:[walletView===WALLET_VIEWS.PENDING&&pendingConnector&&/*#__PURE__*/_jsx(PendingView,{openOptions:openOptions,connector:pendingConnector,error:!!pendingError,tryActivation:tryActivation}),walletView!==WALLET_VIEWS.PENDING&&/*#__PURE__*/_jsx(OptionGrid,{\"data-testid\":\"option-grid\",children:getOptions()}),!pendingError&&getTermsOfService(walletView)]})})]});}return/*#__PURE__*/_jsx(Modal,{isOpen:walletModalOpen,onDismiss:toggleWalletModal,minHeight:false,maxHeight:90,children:/*#__PURE__*/_jsx(Wrapper,{\"data-testid\":\"wallet-modal\",children:getModalContent()})});}","map":{"version":3,"names":["sendAnalyticsEvent","user","CustomUserProperties","EventName","WalletConnectionResult","useWeb3React","sendEvent","AutoColumn","AutoRow","networkConnection","getConnection","getConnectionName","getIsCoinbaseWallet","getIsInjected","getIsMetaMask","usePrevious","useCallback","useEffect","useState","ArrowLeft","useLocation","useNavigate","updateConnectionError","useAppDispatch","useAppSelector","updateSelectedWallet","useConnectedWallets","flexColumnNoWrap","flexRowNoWrap","isMobile","useModalIsOpen","useToggleWalletModal","ApplicationModal","ExternalLink","ThemedText","AccountDetails","Modal","CoinbaseWalletOption","OpenCoinbaseWalletOption","InjectedOption","InstallMetaMaskOption","MetaMaskOption","PendingView","WalletConnectOption","CloseIcon","styled","div","theme","opacity","hover","CloseColor","Close","deprecated_text4","Wrapper","backgroundSurface","backgroundOutline","deepShadow","HeaderRow","props","color","accentAction","deprecated_mediaWidth","deprecated_upToMedium","ContentWrapper","UpperSection","OptionGrid","HoverText","textPrimary","WALLET_VIEWS","OPTIONS","ACCOUNT","PENDING","sendAnalyticsEventAndUserInfo","account","walletType","chainId","isReconnect","WALLET_CONNECT_TXN_COMPLETED","result","SUCCEEDED","wallet_address","wallet_type","is_reconnect","set","WALLET_ADDRESS","WALLET_TYPE","postInsert","ALL_WALLET_CHAIN_IDS","ALL_WALLET_ADDRESSES_CONNECTED","WalletModal","pendingTransactions","confirmedTransactions","ENSName","dispatch","connector","previousAccount","location","navigate","connectedWallets","addWalletToConnectedWallets","walletView","setWalletView","lastActiveWalletAddress","setLastActiveWalletAddress","pendingConnector","setPendingConnector","pendingError","state","connection","errorByConnectionType","type","undefined","walletModalOpen","WALLET","toggleWalletModal","openOptions","pathname","connectionType","error","activate","filter","wallet","length","tryActivation","category","action","label","console","debug","message","FAILED","getOptions","isInjected","isMetaMask","isCoinbaseWallet","isCoinbaseWalletBrowser","isMetaMaskBrowser","isInjectedMobileBrowser","injectedOption","coinbaseWalletOption","walletConnectionOption","getModalContent","headerRow","getTermsOfService","content","flexWrap","padding"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/WalletModal/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, user } from '@uniswap/analytics'\nimport { CustomUserProperties, EventName, WalletConnectionResult } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Connector } from '@web3-react/types'\nimport { sendEvent } from 'components/analytics'\nimport { AutoColumn } from 'components/Column'\nimport { AutoRow } from 'components/Row'\nimport { networkConnection } from 'connection'\nimport { getConnection, getConnectionName, getIsCoinbaseWallet, getIsInjected, getIsMetaMask } from 'connection/utils'\nimport usePrevious from 'hooks/usePrevious'\nimport { useCallback, useEffect, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { updateConnectionError } from 'state/connection/reducer'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { updateSelectedWallet } from 'state/user/reducer'\nimport { useConnectedWallets } from 'state/wallets/hooks'\nimport styled from 'styled-components/macro'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { isMobile } from 'utils/userAgent'\n\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { useModalIsOpen, useToggleWalletModal } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { ExternalLink, ThemedText } from '../../theme'\nimport AccountDetails from '../AccountDetails'\nimport Modal from '../Modal'\nimport { CoinbaseWalletOption, OpenCoinbaseWalletOption } from './CoinbaseWalletOption'\nimport { InjectedOption, InstallMetaMaskOption, MetaMaskOption } from './InjectedOption'\nimport PendingView from './PendingView'\nimport { WalletConnectOption } from './WalletConnectOption'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.deprecated_text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${flexColumnNoWrap};\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  outline: ${({ theme }) => `1px solid ${theme.backgroundOutline}`};\n  box-shadow: ${({ theme }) => theme.deepShadow};\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 600;\n  size: 16px;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.accentAction : 'inherit')};\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`padding: 0 1rem 1rem 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nconst sendAnalyticsEventAndUserInfo = (\n  account: string,\n  walletType: string,\n  chainId: number | undefined,\n  isReconnect: boolean\n) => {\n  sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n    result: WalletConnectionResult.SUCCEEDED,\n    wallet_address: account,\n    wallet_type: walletType,\n    is_reconnect: isReconnect,\n  })\n  user.set(CustomUserProperties.WALLET_ADDRESS, account)\n  user.set(CustomUserProperties.WALLET_TYPE, walletType)\n  if (chainId) {\n    user.postInsert(CustomUserProperties.ALL_WALLET_CHAIN_IDS, chainId)\n  }\n  user.postInsert(CustomUserProperties.ALL_WALLET_ADDRESSES_CONNECTED, account)\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  const dispatch = useAppDispatch()\n  const { connector, account, chainId } = useWeb3React()\n  const previousAccount = usePrevious(account)\n\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const [connectedWallets, addWalletToConnectedWallets] = useConnectedWallets()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n  const [lastActiveWalletAddress, setLastActiveWalletAddress] = useState<string | undefined>(account)\n\n  const [pendingConnector, setPendingConnector] = useState<Connector | undefined>()\n  const pendingError = useAppSelector((state) =>\n    pendingConnector ? state.connection.errorByConnectionType[getConnection(pendingConnector).type] : undefined\n  )\n\n  const walletModalOpen = useModalIsOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useToggleWalletModal()\n\n  const openOptions = useCallback(() => {\n    setWalletView(WALLET_VIEWS.OPTIONS)\n  }, [setWalletView])\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS)\n    }\n  }, [walletModalOpen, setWalletView, account])\n\n  useEffect(() => {\n    if (account && account !== previousAccount && walletModalOpen) {\n      toggleWalletModal()\n      if (location.pathname === '/') {\n        navigate('/swap')\n      }\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen, location.pathname, navigate])\n\n  useEffect(() => {\n    if (pendingConnector && walletView !== WALLET_VIEWS.PENDING) {\n      updateConnectionError({ connectionType: getConnection(pendingConnector).type, error: undefined })\n      setPendingConnector(undefined)\n    }\n  }, [pendingConnector, walletView])\n\n  // Keep the network connector in sync with any active user connector to prevent chain-switching on wallet disconnection.\n  useEffect(() => {\n    if (chainId && connector !== networkConnection.connector) {\n      networkConnection.connector.activate(chainId)\n    }\n  }, [chainId, connector])\n\n  // When new wallet is successfully set by the user, trigger logging of Amplitude analytics event.\n  useEffect(() => {\n    if (account && account !== lastActiveWalletAddress) {\n      const walletType = getConnectionName(getConnection(connector).type, getIsMetaMask())\n      const isReconnect =\n        connectedWallets.filter((wallet) => wallet.account === account && wallet.walletType === walletType).length > 0\n      sendAnalyticsEventAndUserInfo(account, walletType, chainId, isReconnect)\n      if (!isReconnect) addWalletToConnectedWallets({ account, walletType })\n    }\n    setLastActiveWalletAddress(account)\n  }, [connectedWallets, addWalletToConnectedWallets, lastActiveWalletAddress, account, connector, chainId])\n\n  const tryActivation = useCallback(\n    async (connector: Connector) => {\n      const connectionType = getConnection(connector).type\n\n      // log selected wallet\n      sendEvent({\n        category: 'Wallet',\n        action: 'Change Wallet',\n        label: connectionType,\n      })\n\n      try {\n        setPendingConnector(connector)\n        setWalletView(WALLET_VIEWS.PENDING)\n        dispatch(updateConnectionError({ connectionType, error: undefined }))\n\n        await connector.activate()\n\n        dispatch(updateSelectedWallet({ wallet: connectionType }))\n      } catch (error) {\n        console.debug(`web3-react connection error: ${error}`)\n        dispatch(updateConnectionError({ connectionType, error: error.message }))\n\n        sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n          result: WalletConnectionResult.FAILED,\n          wallet_type: getConnectionName(connectionType, getIsMetaMask()),\n        })\n      }\n    },\n    [dispatch]\n  )\n\n  function getOptions() {\n    const isInjected = getIsInjected()\n    const isMetaMask = getIsMetaMask()\n    const isCoinbaseWallet = getIsCoinbaseWallet()\n\n    const isCoinbaseWalletBrowser = isMobile && isCoinbaseWallet\n    const isMetaMaskBrowser = isMobile && isMetaMask\n    const isInjectedMobileBrowser = isCoinbaseWalletBrowser || isMetaMaskBrowser\n\n    let injectedOption\n    if (!isInjected) {\n      if (!isMobile) {\n        injectedOption = <InstallMetaMaskOption />\n      }\n    } else if (!isCoinbaseWallet) {\n      if (isMetaMask) {\n        injectedOption = <MetaMaskOption tryActivation={tryActivation} />\n      } else {\n        injectedOption = <InjectedOption tryActivation={tryActivation} />\n      }\n    }\n\n    let coinbaseWalletOption\n    if (isMobile && !isInjectedMobileBrowser) {\n      coinbaseWalletOption = <OpenCoinbaseWalletOption />\n    } else if (!isMobile || isCoinbaseWalletBrowser) {\n      coinbaseWalletOption = <CoinbaseWalletOption tryActivation={tryActivation} />\n    }\n\n    const walletConnectionOption =\n      (!isInjectedMobileBrowser && <WalletConnectOption tryActivation={tryActivation} />) ?? null\n\n    return (\n      <>\n        {injectedOption}\n        {coinbaseWalletOption}\n        {walletConnectionOption}\n      </>\n    )\n  }\n\n  function getModalContent() {\n    if (walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={openOptions}\n        />\n      )\n    }\n\n    let headerRow\n    if (walletView === WALLET_VIEWS.PENDING || walletView === WALLET_VIEWS.ACCOUNT || !!account) {\n      headerRow = (\n        <HeaderRow color=\"blue\">\n          <HoverText onClick={() => setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS)}>\n            <ArrowLeft />\n          </HoverText>\n        </HeaderRow>\n      )\n    } else {\n      headerRow = (\n        <HeaderRow>\n          <HoverText>\n            <Trans>Connect a wallet</Trans>\n          </HoverText>\n        </HeaderRow>\n      )\n    }\n\n    function getTermsOfService(walletView: string) {\n      if (walletView === WALLET_VIEWS.PENDING) return null\n\n      const content = (\n        <Trans>\n          By connecting a wallet, you agree to Uniswap Labs’{' '}\n          <ExternalLink href=\"https://uniswap.org/terms-of-service/\">Terms of Service</ExternalLink> and consent to its{' '}\n          <ExternalLink href=\"https://uniswap.org/privacy-policy\">Privacy Policy</ExternalLink>.\n        </Trans>\n      )\n      return (\n        <AutoRow style={{ flexWrap: 'nowrap', padding: '4px 16px' }}>\n          <ThemedText.BodySecondary fontSize={16} lineHeight=\"24px\">\n            {content}\n          </ThemedText.BodySecondary>\n        </AutoRow>\n      )\n    }\n\n    return (\n      <UpperSection>\n        <CloseIcon data-testid=\"wallet-modal-close\" onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {headerRow}\n        <ContentWrapper>\n          <AutoColumn gap=\"16px\">\n            {walletView === WALLET_VIEWS.PENDING && pendingConnector && (\n              <PendingView\n                openOptions={openOptions}\n                connector={pendingConnector}\n                error={!!pendingError}\n                tryActivation={tryActivation}\n              />\n            )}\n            {walletView !== WALLET_VIEWS.PENDING && <OptionGrid data-testid=\"option-grid\">{getOptions()}</OptionGrid>}\n            {!pendingError && getTermsOfService(walletView)}\n          </AutoColumn>\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper data-testid=\"wallet-modal\">{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}