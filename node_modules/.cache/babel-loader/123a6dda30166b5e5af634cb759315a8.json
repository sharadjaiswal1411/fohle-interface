{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/components/bag/Bag.tsx\",\n  _s = $RefreshSig$();\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { formatEther } from '@ethersproject/units';\nimport { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { EventName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { useIsNftDetailsPage, useIsNftPage, useIsNftProfilePage } from 'hooks/useIsNftPage';\nimport { BagFooter } from 'nft/components/bag/BagFooter';\nimport ListingModal from 'nft/components/bag/profile/ListingModal';\nimport { Box } from 'nft/components/Box';\nimport { Portal } from 'nft/components/common/Portal';\nimport { Column } from 'nft/components/Flex';\nimport { Overlay } from 'nft/components/modals/Overlay';\nimport { buttonTextMedium, commonButtonStyles } from 'nft/css/common.css';\nimport { useBag, useIsMobile, useProfilePageState, useSellAsset, useSendTransaction, useTransactionResponse } from 'nft/hooks';\nimport { fetchRoute } from 'nft/queries';\nimport { BagItemStatus, BagStatus, ProfilePageStateType, TxStateType } from 'nft/types';\nimport { buildSellObject, fetchPrice, formatAssetEventProperties, recalculateBagUsingPooledAssets, sortUpdatedAssets } from 'nft/utils';\nimport { combineBuyItemsWithTxRoute } from 'nft/utils/txRoute/combineItemsWithTxRoute';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useQuery, useQueryClient } from 'react-query';\nimport { Z_INDEX } from 'theme/zIndex';\nimport shallow from 'zustand/shallow';\nimport * as styles from './Bag.css';\nimport { BagContent } from './BagContent';\nimport { BagHeader } from './BagHeader';\nimport EmptyState from './EmptyContent';\nimport { ProfileBagContent } from './profile/ProfileBagContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BAG_WIDTH = 320;\nexport const XXXL_BAG_WIDTH = 360;\nconst BagContainer = _styled.div.withConfig({\n  displayName: \"Bag__BagContainer\",\n  componentId: \"sc-1cpp7nx-0\"\n})([\"position:fixed;display:flex;flex-direction:column;top:88px;right:20px;width:\", \"px;height:calc(100vh - 108px);background:\", \";border:1px solid \", \";border-radius:16px;box-shadow:\", \";z-index:\", \";@media only screen and (max-width:\", \"){right:0px;top:0px;width:100%;height:100%;border-radius:0px;border:none;}@media only screen and (min-width:\", \"){width:\", \"px;}\"], BAG_WIDTH, _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.backgroundSurface;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.backgroundOutline;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.shallowShadow;\n}, _ref4 => {\n  let {\n    raiseZIndex\n  } = _ref4;\n  return raiseZIndex ? Z_INDEX.modalOverTooltip : 3;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return `${theme.breakpoint.sm}px`;\n}, _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return `${theme.breakpoint.xxxl}px`;\n}, XXXL_BAG_WIDTH);\nconst DetailsPageBackground = _styled.div.withConfig({\n  displayName: \"Bag__DetailsPageBackground\",\n  componentId: \"sc-1cpp7nx-1\"\n})([\"position:fixed;background:rgba(0,0,0,0.7);top:0px;width:100%;height:100%;\"]);\nconst ScrollingIndicator = _ref7 => {\n  let {\n    top,\n    show\n  } = _ref7;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    marginX: \"24\",\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n    borderColor: \"transparent\",\n    borderTopColor: top ? 'transparent' : 'backgroundOutline',\n    borderBottomColor: top ? 'backgroundOutline' : 'transparent',\n    opacity: show ? '1' : '0',\n    transition: \"250\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 3\n  }, this);\n};\n_c = ScrollingIndicator;\nconst Bag = () => {\n  _s();\n  const {\n    account,\n    provider\n  } = useWeb3React();\n  const {\n    resetSellAssets,\n    sellAssets\n  } = useSellAsset(_ref8 => {\n    let {\n      reset,\n      sellAssets\n    } = _ref8;\n    return {\n      resetSellAssets: reset,\n      sellAssets\n    };\n  }, shallow);\n  const {\n    profilePageState,\n    setProfilePageState\n  } = useProfilePageState(_ref9 => {\n    let {\n      setProfilePageState,\n      state\n    } = _ref9;\n    return {\n      profilePageState: state,\n      setProfilePageState\n    };\n  }, shallow);\n  const {\n    bagStatus,\n    setBagStatus,\n    didOpenUnavailableAssets,\n    setDidOpenUnavailableAssets,\n    bagIsLocked,\n    setLocked,\n    reset,\n    setItemsInBag,\n    bagExpanded,\n    toggleBag,\n    setTotalEthPrice,\n    setTotalUsdPrice,\n    setBagExpanded\n  } = useBag(state => ({\n    ...state,\n    bagIsLocked: state.isLocked,\n    uncheckedItemsInBag: state.itemsInBag\n  }), shallow);\n  const {\n    uncheckedItemsInBag\n  } = useBag(_ref10 => {\n    let {\n      itemsInBag\n    } = _ref10;\n    return {\n      uncheckedItemsInBag: itemsInBag\n    };\n  });\n  const isProfilePage = useIsNftProfilePage();\n  const isDetailsPage = useIsNftDetailsPage();\n  const isNFTPage = useIsNftPage();\n  const isMobile = useIsMobile();\n  const sendTransaction = useSendTransaction(state => state.sendTransaction);\n  const transactionState = useSendTransaction(state => state.state);\n  const setTransactionState = useSendTransaction(state => state.setState);\n  const transactionStateRef = useRef(transactionState);\n  const [setTransactionResponse] = useTransactionResponse(state => [state.setTransactionResponse]);\n  const queryClient = useQueryClient();\n  const itemsInBag = useMemo(() => recalculateBagUsingPooledAssets(uncheckedItemsInBag), [uncheckedItemsInBag]);\n  const [isModalOpen, setModalIsOpen] = useState(false);\n  const [userCanScroll, setUserCanScroll] = useState(false);\n  const [scrollProgress, setScrollProgress] = useState(0);\n  const scrollRef = node => {\n    if (node !== null) {\n      const canScroll = node.scrollHeight > node.clientHeight;\n      canScroll !== userCanScroll && setUserCanScroll(canScroll);\n    }\n  };\n  const {\n    data: fetchedPriceData\n  } = useQuery(['fetchPrice', {}], () => fetchPrice(), {});\n  const {\n    totalEthPrice,\n    totalUsdPrice\n  } = useMemo(() => {\n    const totalEthPrice = itemsInBag.reduce((total, item) => item.status !== BagItemStatus.UNAVAILABLE ? total.add(BigNumber.from(item.asset.updatedPriceInfo ? item.asset.updatedPriceInfo.ETHPrice : item.asset.priceInfo.ETHPrice)) : total, BigNumber.from(0));\n    const totalUsdPrice = fetchedPriceData ? parseFloat(formatEther(totalEthPrice)) * fetchedPriceData : undefined;\n    return {\n      totalEthPrice,\n      totalUsdPrice\n    };\n  }, [itemsInBag, fetchedPriceData]);\n  const purchaseAssets = async routingData => {\n    if (!provider || !routingData) return;\n    const purchaseResponse = await sendTransaction(provider === null || provider === void 0 ? void 0 : provider.getSigner(), itemsInBag.filter(item => item.status !== BagItemStatus.UNAVAILABLE).map(item => item.asset), routingData);\n    if (purchaseResponse && (transactionStateRef.current === TxStateType.Success || transactionStateRef.current === TxStateType.Failed)) {\n      setLocked(false);\n      setModalIsOpen(false);\n      setTransactionResponse(purchaseResponse);\n      setBagExpanded({\n        bagExpanded: false\n      });\n      reset();\n    }\n  };\n  const handleCloseBag = useCallback(() => {\n    setBagExpanded({\n      bagExpanded: false,\n      manualClose: true\n    });\n  }, [setBagExpanded]);\n  const fetchAssets = async () => {\n    const itemsToBuy = itemsInBag.filter(item => item.status !== BagItemStatus.UNAVAILABLE).map(item => item.asset);\n    const ethSellObject = buildSellObject(itemsToBuy.reduce((ethTotal, asset) => ethTotal.add(BigNumber.from(asset.priceInfo.ETHPrice)), BigNumber.from(0)).toString());\n    didOpenUnavailableAssets && setDidOpenUnavailableAssets(false);\n    !bagIsLocked && setLocked(true);\n    setBagStatus(BagStatus.FETCHING_ROUTE);\n    try {\n      const data = await queryClient.fetchQuery(['assetsRoute', ethSellObject, itemsToBuy, account], () => fetchRoute({\n        toSell: [ethSellObject],\n        toBuy: itemsToBuy,\n        senderAddress: account !== null && account !== void 0 ? account : ''\n      }));\n      const updatedAssets = combineBuyItemsWithTxRoute(itemsToBuy, data.route);\n      const fetchedPriceChangedAssets = updatedAssets.filter(asset => asset.updatedPriceInfo).sort(sortUpdatedAssets);\n      const fetchedUnavailableAssets = updatedAssets.filter(asset => asset.isUnavailable);\n      const fetchedUnchangedAssets = updatedAssets.filter(asset => !asset.updatedPriceInfo && !asset.isUnavailable);\n      const hasReviewedAssets = fetchedUnchangedAssets.length > 0;\n      const hasAssetsInReview = fetchedPriceChangedAssets.length > 0;\n      const hasUnavailableAssets = fetchedUnavailableAssets.length > 0;\n      const hasAssets = hasReviewedAssets || hasAssetsInReview || hasUnavailableAssets;\n      const shouldReview = hasAssetsInReview || hasUnavailableAssets;\n      setItemsInBag([...fetchedUnavailableAssets.map(unavailableAsset => ({\n        asset: unavailableAsset,\n        status: BagItemStatus.UNAVAILABLE\n      })), ...fetchedPriceChangedAssets.map(changedAsset => ({\n        asset: changedAsset,\n        status: BagItemStatus.REVIEWING_PRICE_CHANGE\n      })), ...fetchedUnchangedAssets.map(unchangedAsset => ({\n        asset: unchangedAsset,\n        status: BagItemStatus.REVIEWED\n      }))]);\n      setLocked(false);\n      if (hasAssets) {\n        if (!shouldReview) {\n          purchaseAssets(data);\n          setBagStatus(BagStatus.CONFIRMING_IN_WALLET);\n        } else if (!hasAssetsInReview) setBagStatus(BagStatus.CONFIRM_REVIEW);else {\n          setBagStatus(BagStatus.IN_REVIEW);\n        }\n      } else {\n        setBagStatus(BagStatus.ADDING_TO_BAG);\n      }\n    } catch (error) {\n      setBagStatus(BagStatus.ADDING_TO_BAG);\n    }\n  };\n  useEffect(() => {\n    useSendTransaction.subscribe(state => transactionStateRef.current = state.state);\n  }, []);\n  useEffect(() => {\n    if (bagIsLocked && !isModalOpen) setModalIsOpen(true);\n  }, [bagIsLocked, isModalOpen]);\n  useEffect(() => {\n    if (transactionStateRef.current === TxStateType.Confirming) setBagStatus(BagStatus.PROCESSING_TRANSACTION);\n    if (transactionStateRef.current === TxStateType.Denied || transactionStateRef.current === TxStateType.Invalid) {\n      if (transactionStateRef.current === TxStateType.Invalid) setBagStatus(BagStatus.WARNING);else setBagStatus(BagStatus.CONFIRM_REVIEW);\n      setTransactionState(TxStateType.New);\n      setLocked(false);\n      setModalIsOpen(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transactionStateRef.current]);\n  useEffect(() => {\n    setTotalEthPrice(totalEthPrice);\n    setTotalUsdPrice(totalUsdPrice);\n  }, [totalEthPrice, totalUsdPrice, setTotalEthPrice, setTotalUsdPrice]);\n  const hasAssetsToShow = itemsInBag.length > 0;\n  const scrollHandler = event => {\n    const scrollTop = event.currentTarget.scrollTop;\n    const containerHeight = event.currentTarget.clientHeight;\n    const scrollHeight = event.currentTarget.scrollHeight;\n    setScrollProgress(scrollTop ? (scrollTop + containerHeight) / scrollHeight * 100 : 0);\n  };\n  const isBuyingAssets = itemsInBag.length > 0;\n  const isSellingAssets = sellAssets.length > 0;\n  const shouldRenderEmptyState = Boolean(!isProfilePage && !isBuyingAssets && bagStatus === BagStatus.ADDING_TO_BAG || isProfilePage && !isSellingAssets);\n  const eventProperties = useMemo(() => ({\n    usd_value: totalUsdPrice,\n    ...formatAssetEventProperties(itemsInBag.map(item => item.asset))\n  }), [itemsInBag, totalUsdPrice]);\n  if (!bagExpanded || !isNFTPage) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Portal, {\n    children: [/*#__PURE__*/_jsxDEV(BagContainer, {\n      \"data-testid\": \"nft-bag\",\n      raiseZIndex: isMobile || isModalOpen,\n      children: !(isProfilePage && profilePageState === ProfilePageStateType.LISTING) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(BagHeader, {\n          numberOfAssets: isProfilePage ? sellAssets.length : itemsInBag.length,\n          closeBag: handleCloseBag,\n          resetFlow: isProfilePage ? resetSellAssets : reset,\n          isProfilePage: isProfilePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), shouldRenderEmptyState && /*#__PURE__*/_jsxDEV(EmptyState, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(ScrollingIndicator, {\n          top: true,\n          show: userCanScroll && scrollProgress > 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          ref: scrollRef,\n          className: styles.assetsContainer,\n          onScroll: scrollHandler,\n          gap: \"12\",\n          children: isProfilePage ? /*#__PURE__*/_jsxDEV(ProfileBagContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(BagContent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 13\n        }, this), hasAssetsToShow && !isProfilePage && /*#__PURE__*/_jsxDEV(BagFooter, {\n          totalEthPrice: totalEthPrice,\n          totalUsdPrice: totalUsdPrice,\n          bagStatus: bagStatus,\n          fetchAssets: fetchAssets,\n          eventProperties: eventProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this), isSellingAssets && isProfilePage && /*#__PURE__*/_jsxDEV(Box, {\n          marginTop: \"32\",\n          marginX: \"28\",\n          marginBottom: \"16\",\n          paddingY: \"10\",\n          className: `${buttonTextMedium} ${commonButtonStyles}`,\n          backgroundColor: \"accentAction\",\n          color: \"white\",\n          textAlign: \"center\",\n          onClick: () => {\n            isMobile && toggleBag();\n            setProfilePageState(ProfilePageStateType.LISTING);\n            sendAnalyticsEvent(EventName.NFT_PROFILE_PAGE_START_SELL, {\n              list_quantity: sellAssets.length,\n              collection_addresses: sellAssets.map(asset => asset.asset_contract.address),\n              token_ids: sellAssets.map(asset => asset.tokenId)\n            });\n          },\n          children: \"Continue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(ListingModal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), isDetailsPage ? /*#__PURE__*/_jsxDEV(DetailsPageBackground, {\n      onClick: toggleBag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 9\n    }, this) : isModalOpen && /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: () => !bagIsLocked ? setModalIsOpen(false) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(Bag, \"SOqr89F5kuFcrTp6n+3cqWOEM4w=\", false, function () {\n  return [useWeb3React, useSellAsset, useProfilePageState, useBag, useBag, useIsNftProfilePage, useIsNftDetailsPage, useIsNftPage, useIsMobile, useSendTransaction, useSendTransaction, useSendTransaction, useTransactionResponse, useQueryClient, useQuery];\n});\n_c2 = Bag;\nexport default Bag;\nvar _c, _c2;\n$RefreshReg$(_c, \"ScrollingIndicator\");\n$RefreshReg$(_c2, \"Bag\");","map":{"version":3,"names":["BigNumber","formatEther","sendAnalyticsEvent","EventName","useWeb3React","useIsNftDetailsPage","useIsNftPage","useIsNftProfilePage","BagFooter","ListingModal","Box","Portal","Column","Overlay","buttonTextMedium","commonButtonStyles","useBag","useIsMobile","useProfilePageState","useSellAsset","useSendTransaction","useTransactionResponse","fetchRoute","BagItemStatus","BagStatus","ProfilePageStateType","TxStateType","buildSellObject","fetchPrice","formatAssetEventProperties","recalculateBagUsingPooledAssets","sortUpdatedAssets","combineBuyItemsWithTxRoute","useCallback","useEffect","useMemo","useRef","useState","useQuery","useQueryClient","Z_INDEX","shallow","styles","BagContent","BagHeader","EmptyState","ProfileBagContent","BAG_WIDTH","XXXL_BAG_WIDTH","BagContainer","styled","div","theme","backgroundSurface","backgroundOutline","shallowShadow","raiseZIndex","modalOverTooltip","breakpoint","sm","xxxl","DetailsPageBackground","ScrollingIndicator","top","show","Bag","account","provider","resetSellAssets","sellAssets","reset","profilePageState","setProfilePageState","state","bagStatus","setBagStatus","didOpenUnavailableAssets","setDidOpenUnavailableAssets","bagIsLocked","setLocked","setItemsInBag","bagExpanded","toggleBag","setTotalEthPrice","setTotalUsdPrice","setBagExpanded","isLocked","uncheckedItemsInBag","itemsInBag","isProfilePage","isDetailsPage","isNFTPage","isMobile","sendTransaction","transactionState","setTransactionState","setState","transactionStateRef","setTransactionResponse","queryClient","isModalOpen","setModalIsOpen","userCanScroll","setUserCanScroll","scrollProgress","setScrollProgress","scrollRef","node","canScroll","scrollHeight","clientHeight","data","fetchedPriceData","totalEthPrice","totalUsdPrice","reduce","total","item","status","UNAVAILABLE","add","from","asset","updatedPriceInfo","ETHPrice","priceInfo","parseFloat","undefined","purchaseAssets","routingData","purchaseResponse","getSigner","filter","map","current","Success","Failed","handleCloseBag","manualClose","fetchAssets","itemsToBuy","ethSellObject","ethTotal","toString","FETCHING_ROUTE","fetchQuery","toSell","toBuy","senderAddress","updatedAssets","route","fetchedPriceChangedAssets","sort","fetchedUnavailableAssets","isUnavailable","fetchedUnchangedAssets","hasReviewedAssets","length","hasAssetsInReview","hasUnavailableAssets","hasAssets","shouldReview","unavailableAsset","changedAsset","REVIEWING_PRICE_CHANGE","unchangedAsset","REVIEWED","CONFIRMING_IN_WALLET","CONFIRM_REVIEW","IN_REVIEW","ADDING_TO_BAG","error","subscribe","Confirming","PROCESSING_TRANSACTION","Denied","Invalid","WARNING","New","hasAssetsToShow","scrollHandler","event","scrollTop","currentTarget","containerHeight","isBuyingAssets","isSellingAssets","shouldRenderEmptyState","Boolean","eventProperties","usd_value","LISTING","assetsContainer","NFT_PROFILE_PAGE_START_SELL","list_quantity","collection_addresses","asset_contract","address","token_ids","tokenId"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/components/bag/Bag.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\nimport { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { EventName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { useIsNftDetailsPage, useIsNftPage, useIsNftProfilePage } from 'hooks/useIsNftPage'\nimport { BagFooter } from 'nft/components/bag/BagFooter'\nimport ListingModal from 'nft/components/bag/profile/ListingModal'\nimport { Box } from 'nft/components/Box'\nimport { Portal } from 'nft/components/common/Portal'\nimport { Column } from 'nft/components/Flex'\nimport { Overlay } from 'nft/components/modals/Overlay'\nimport { buttonTextMedium, commonButtonStyles } from 'nft/css/common.css'\nimport {\n  useBag,\n  useIsMobile,\n  useProfilePageState,\n  useSellAsset,\n  useSendTransaction,\n  useTransactionResponse,\n} from 'nft/hooks'\nimport { fetchRoute } from 'nft/queries'\nimport { BagItemStatus, BagStatus, ProfilePageStateType, RouteResponse, TxStateType } from 'nft/types'\nimport {\n  buildSellObject,\n  fetchPrice,\n  formatAssetEventProperties,\n  recalculateBagUsingPooledAssets,\n  sortUpdatedAssets,\n} from 'nft/utils'\nimport { combineBuyItemsWithTxRoute } from 'nft/utils/txRoute/combineItemsWithTxRoute'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useQuery, useQueryClient } from 'react-query'\nimport styled from 'styled-components/macro'\nimport { Z_INDEX } from 'theme/zIndex'\nimport shallow from 'zustand/shallow'\n\nimport * as styles from './Bag.css'\nimport { BagContent } from './BagContent'\nimport { BagHeader } from './BagHeader'\nimport EmptyState from './EmptyContent'\nimport { ProfileBagContent } from './profile/ProfileBagContent'\n\nexport const BAG_WIDTH = 320\nexport const XXXL_BAG_WIDTH = 360\n\ninterface SeparatorProps {\n  top?: boolean\n  show?: boolean\n}\n\nconst BagContainer = styled.div<{ raiseZIndex: boolean }>`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  top: 88px;\n  right: 20px;\n  width: ${BAG_WIDTH}px;\n  height: calc(100vh - 108px);\n  background: ${({ theme }) => theme.backgroundSurface};\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n  border-radius: 16px;\n  box-shadow: ${({ theme }) => theme.shallowShadow};\n  z-index: ${({ raiseZIndex }) => (raiseZIndex ? Z_INDEX.modalOverTooltip : 3)};\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    right: 0px;\n    top: 0px;\n    width: 100%;\n    height: 100%;\n    border-radius: 0px;\n    border: none;\n  }\n\n  @media only screen and (min-width: ${({ theme }) => `${theme.breakpoint.xxxl}px`}) {\n    width: ${XXXL_BAG_WIDTH}px;\n  }\n`\n\nconst DetailsPageBackground = styled.div`\n  position: fixed;\n  background: rgba(0, 0, 0, 0.7);\n  top: 0px;\n  width: 100%;\n  height: 100%;\n`\n\nconst ScrollingIndicator = ({ top, show }: SeparatorProps) => (\n  <Box\n    marginX=\"24\"\n    borderWidth=\"1px\"\n    borderStyle=\"solid\"\n    borderColor=\"transparent\"\n    borderTopColor={top ? 'transparent' : 'backgroundOutline'}\n    borderBottomColor={top ? 'backgroundOutline' : 'transparent'}\n    opacity={show ? '1' : '0'}\n    transition=\"250\"\n  />\n)\n\nconst Bag = () => {\n  const { account, provider } = useWeb3React()\n\n  const { resetSellAssets, sellAssets } = useSellAsset(\n    ({ reset, sellAssets }) => ({\n      resetSellAssets: reset,\n      sellAssets,\n    }),\n    shallow\n  )\n\n  const { profilePageState, setProfilePageState } = useProfilePageState(\n    ({ setProfilePageState, state }) => ({ profilePageState: state, setProfilePageState }),\n    shallow\n  )\n\n  const {\n    bagStatus,\n    setBagStatus,\n    didOpenUnavailableAssets,\n    setDidOpenUnavailableAssets,\n    bagIsLocked,\n    setLocked,\n    reset,\n    setItemsInBag,\n    bagExpanded,\n    toggleBag,\n    setTotalEthPrice,\n    setTotalUsdPrice,\n    setBagExpanded,\n  } = useBag((state) => ({ ...state, bagIsLocked: state.isLocked, uncheckedItemsInBag: state.itemsInBag }), shallow)\n  const { uncheckedItemsInBag } = useBag(({ itemsInBag }) => ({ uncheckedItemsInBag: itemsInBag }))\n\n  const isProfilePage = useIsNftProfilePage()\n  const isDetailsPage = useIsNftDetailsPage()\n  const isNFTPage = useIsNftPage()\n  const isMobile = useIsMobile()\n\n  const sendTransaction = useSendTransaction((state) => state.sendTransaction)\n  const transactionState = useSendTransaction((state) => state.state)\n  const setTransactionState = useSendTransaction((state) => state.setState)\n  const transactionStateRef = useRef(transactionState)\n  const [setTransactionResponse] = useTransactionResponse((state) => [state.setTransactionResponse])\n\n  const queryClient = useQueryClient()\n\n  const itemsInBag = useMemo(() => recalculateBagUsingPooledAssets(uncheckedItemsInBag), [uncheckedItemsInBag])\n\n  const [isModalOpen, setModalIsOpen] = useState(false)\n  const [userCanScroll, setUserCanScroll] = useState(false)\n  const [scrollProgress, setScrollProgress] = useState(0)\n  const scrollRef = (node: HTMLDivElement) => {\n    if (node !== null) {\n      const canScroll = node.scrollHeight > node.clientHeight\n      canScroll !== userCanScroll && setUserCanScroll(canScroll)\n    }\n  }\n\n  const { data: fetchedPriceData } = useQuery(['fetchPrice', {}], () => fetchPrice(), {})\n\n  const { totalEthPrice, totalUsdPrice } = useMemo(() => {\n    const totalEthPrice = itemsInBag.reduce(\n      (total, item) =>\n        item.status !== BagItemStatus.UNAVAILABLE\n          ? total.add(\n              BigNumber.from(\n                item.asset.updatedPriceInfo ? item.asset.updatedPriceInfo.ETHPrice : item.asset.priceInfo.ETHPrice\n              )\n            )\n          : total,\n      BigNumber.from(0)\n    )\n    const totalUsdPrice = fetchedPriceData ? parseFloat(formatEther(totalEthPrice)) * fetchedPriceData : undefined\n\n    return { totalEthPrice, totalUsdPrice }\n  }, [itemsInBag, fetchedPriceData])\n\n  const purchaseAssets = async (routingData: RouteResponse) => {\n    if (!provider || !routingData) return\n    const purchaseResponse = await sendTransaction(\n      provider?.getSigner(),\n      itemsInBag.filter((item) => item.status !== BagItemStatus.UNAVAILABLE).map((item) => item.asset),\n      routingData\n    )\n    if (\n      purchaseResponse &&\n      (transactionStateRef.current === TxStateType.Success || transactionStateRef.current === TxStateType.Failed)\n    ) {\n      setLocked(false)\n      setModalIsOpen(false)\n      setTransactionResponse(purchaseResponse)\n      setBagExpanded({ bagExpanded: false })\n      reset()\n    }\n  }\n\n  const handleCloseBag = useCallback(() => {\n    setBagExpanded({ bagExpanded: false, manualClose: true })\n  }, [setBagExpanded])\n\n  const fetchAssets = async () => {\n    const itemsToBuy = itemsInBag.filter((item) => item.status !== BagItemStatus.UNAVAILABLE).map((item) => item.asset)\n    const ethSellObject = buildSellObject(\n      itemsToBuy\n        .reduce((ethTotal, asset) => ethTotal.add(BigNumber.from(asset.priceInfo.ETHPrice)), BigNumber.from(0))\n        .toString()\n    )\n\n    didOpenUnavailableAssets && setDidOpenUnavailableAssets(false)\n    !bagIsLocked && setLocked(true)\n    setBagStatus(BagStatus.FETCHING_ROUTE)\n    try {\n      const data = await queryClient.fetchQuery(['assetsRoute', ethSellObject, itemsToBuy, account], () =>\n        fetchRoute({\n          toSell: [ethSellObject],\n          toBuy: itemsToBuy,\n          senderAddress: account ?? '',\n        })\n      )\n\n      const updatedAssets = combineBuyItemsWithTxRoute(itemsToBuy, data.route)\n\n      const fetchedPriceChangedAssets = updatedAssets.filter((asset) => asset.updatedPriceInfo).sort(sortUpdatedAssets)\n      const fetchedUnavailableAssets = updatedAssets.filter((asset) => asset.isUnavailable)\n      const fetchedUnchangedAssets = updatedAssets.filter((asset) => !asset.updatedPriceInfo && !asset.isUnavailable)\n      const hasReviewedAssets = fetchedUnchangedAssets.length > 0\n      const hasAssetsInReview = fetchedPriceChangedAssets.length > 0\n      const hasUnavailableAssets = fetchedUnavailableAssets.length > 0\n      const hasAssets = hasReviewedAssets || hasAssetsInReview || hasUnavailableAssets\n      const shouldReview = hasAssetsInReview || hasUnavailableAssets\n\n      setItemsInBag([\n        ...fetchedUnavailableAssets.map((unavailableAsset) => ({\n          asset: unavailableAsset,\n          status: BagItemStatus.UNAVAILABLE,\n        })),\n        ...fetchedPriceChangedAssets.map((changedAsset) => ({\n          asset: changedAsset,\n          status: BagItemStatus.REVIEWING_PRICE_CHANGE,\n        })),\n        ...fetchedUnchangedAssets.map((unchangedAsset) => ({ asset: unchangedAsset, status: BagItemStatus.REVIEWED })),\n      ])\n      setLocked(false)\n\n      if (hasAssets) {\n        if (!shouldReview) {\n          purchaseAssets(data)\n          setBagStatus(BagStatus.CONFIRMING_IN_WALLET)\n        } else if (!hasAssetsInReview) setBagStatus(BagStatus.CONFIRM_REVIEW)\n        else {\n          setBagStatus(BagStatus.IN_REVIEW)\n        }\n      } else {\n        setBagStatus(BagStatus.ADDING_TO_BAG)\n      }\n    } catch (error) {\n      setBagStatus(BagStatus.ADDING_TO_BAG)\n    }\n  }\n\n  useEffect(() => {\n    useSendTransaction.subscribe((state) => (transactionStateRef.current = state.state))\n  }, [])\n\n  useEffect(() => {\n    if (bagIsLocked && !isModalOpen) setModalIsOpen(true)\n  }, [bagIsLocked, isModalOpen])\n\n  useEffect(() => {\n    if (transactionStateRef.current === TxStateType.Confirming) setBagStatus(BagStatus.PROCESSING_TRANSACTION)\n    if (transactionStateRef.current === TxStateType.Denied || transactionStateRef.current === TxStateType.Invalid) {\n      if (transactionStateRef.current === TxStateType.Invalid) setBagStatus(BagStatus.WARNING)\n      else setBagStatus(BagStatus.CONFIRM_REVIEW)\n      setTransactionState(TxStateType.New)\n\n      setLocked(false)\n      setModalIsOpen(false)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transactionStateRef.current])\n\n  useEffect(() => {\n    setTotalEthPrice(totalEthPrice)\n    setTotalUsdPrice(totalUsdPrice)\n  }, [totalEthPrice, totalUsdPrice, setTotalEthPrice, setTotalUsdPrice])\n\n  const hasAssetsToShow = itemsInBag.length > 0\n\n  const scrollHandler = (event: React.UIEvent<HTMLDivElement>) => {\n    const scrollTop = event.currentTarget.scrollTop\n    const containerHeight = event.currentTarget.clientHeight\n    const scrollHeight = event.currentTarget.scrollHeight\n\n    setScrollProgress(scrollTop ? ((scrollTop + containerHeight) / scrollHeight) * 100 : 0)\n  }\n\n  const isBuyingAssets = itemsInBag.length > 0\n  const isSellingAssets = sellAssets.length > 0\n\n  const shouldRenderEmptyState = Boolean(\n    (!isProfilePage && !isBuyingAssets && bagStatus === BagStatus.ADDING_TO_BAG) || (isProfilePage && !isSellingAssets)\n  )\n\n  const eventProperties = useMemo(\n    () => ({\n      usd_value: totalUsdPrice,\n      ...formatAssetEventProperties(itemsInBag.map((item) => item.asset)),\n    }),\n    [itemsInBag, totalUsdPrice]\n  )\n\n  if (!bagExpanded || !isNFTPage) {\n    return null\n  }\n\n  return (\n    <Portal>\n      <BagContainer data-testid=\"nft-bag\" raiseZIndex={isMobile || isModalOpen}>\n        {!(isProfilePage && profilePageState === ProfilePageStateType.LISTING) ? (\n          <>\n            <BagHeader\n              numberOfAssets={isProfilePage ? sellAssets.length : itemsInBag.length}\n              closeBag={handleCloseBag}\n              resetFlow={isProfilePage ? resetSellAssets : reset}\n              isProfilePage={isProfilePage}\n            />\n            {shouldRenderEmptyState && <EmptyState />}\n            <ScrollingIndicator top show={userCanScroll && scrollProgress > 0} />\n            <Column ref={scrollRef} className={styles.assetsContainer} onScroll={scrollHandler} gap=\"12\">\n              {isProfilePage ? <ProfileBagContent /> : <BagContent />}\n            </Column>\n            {hasAssetsToShow && !isProfilePage && (\n              <BagFooter\n                totalEthPrice={totalEthPrice}\n                totalUsdPrice={totalUsdPrice}\n                bagStatus={bagStatus}\n                fetchAssets={fetchAssets}\n                eventProperties={eventProperties}\n              />\n            )}\n            {isSellingAssets && isProfilePage && (\n              <Box\n                marginTop=\"32\"\n                marginX=\"28\"\n                marginBottom=\"16\"\n                paddingY=\"10\"\n                className={`${buttonTextMedium} ${commonButtonStyles}`}\n                backgroundColor=\"accentAction\"\n                color=\"white\"\n                textAlign=\"center\"\n                onClick={() => {\n                  isMobile && toggleBag()\n                  setProfilePageState(ProfilePageStateType.LISTING)\n                  sendAnalyticsEvent(EventName.NFT_PROFILE_PAGE_START_SELL, {\n                    list_quantity: sellAssets.length,\n                    collection_addresses: sellAssets.map((asset) => asset.asset_contract.address),\n                    token_ids: sellAssets.map((asset) => asset.tokenId),\n                  })\n                }}\n              >\n                Continue\n              </Box>\n            )}\n          </>\n        ) : (\n          <ListingModal />\n        )}\n      </BagContainer>\n\n      {isDetailsPage ? (\n        <DetailsPageBackground onClick={toggleBag} />\n      ) : (\n        isModalOpen && <Overlay onClick={() => (!bagIsLocked ? setModalIsOpen(false) : undefined)} />\n      )}\n    </Portal>\n  )\n}\n\nexport default Bag\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}