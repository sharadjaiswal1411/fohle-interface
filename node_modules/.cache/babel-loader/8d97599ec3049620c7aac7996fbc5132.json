{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/Pools/index.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { Trace } from '@uniswap/analytics';\nimport { PageName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { MAX_WIDTH_MEDIA_BREAKPOINT, MEDIUM_MEDIA_BREAKPOINT } from 'components/Tokens/constants';\nimport { filterStringAtom } from 'components/Tokens/state';\nimport { chainIdToBackendName, isValidBackendChainName } from 'graphql/data/util';\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch';\nimport { useResetAtom } from 'jotai/utils';\nimport { useEffect, useMemo } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { ThemedText } from 'theme';\nimport { notEmpty } from 'utils';\nimport PoolTable from 'components/Pools/PoolTable';\nimport { useAllPoolData } from 'state/pools/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExploreContainer = _styled.div.withConfig({\n  displayName: \"Pools__ExploreContainer\",\n  componentId: \"sc-xtbgq5-0\"\n})([\"width:100%;min-width:320px;padding:68px 12px 0px;@media only screen and (max-width:\", \"){padding-top:48px;}@media only screen and (max-width:\", \"){padding-top:20px;}\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return `${theme.breakpoint.md}px`;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return `${theme.breakpoint.sm}px`;\n});\nconst TitleContainer = _styled.div.withConfig({\n  displayName: \"Pools__TitleContainer\",\n  componentId: \"sc-xtbgq5-1\"\n})([\"margin-bottom:32px;max-width:\", \";margin-left:auto;margin-right:auto;display:flex;\"], MAX_WIDTH_MEDIA_BREAKPOINT);\nconst FiltersContainer = _styled.div.withConfig({\n  displayName: \"Pools__FiltersContainer\",\n  componentId: \"sc-xtbgq5-2\"\n})([\"display:flex;gap:8px;height:40px;@media only screen and (max-width:\", \"){order:2;}\"], MEDIUM_MEDIA_BREAKPOINT);\nconst SearchContainer = _styled(FiltersContainer).withConfig({\n  displayName: \"Pools__SearchContainer\",\n  componentId: \"sc-xtbgq5-3\"\n})([\"width:100%;margin-left:8px;@media only screen and (max-width:\", \"){margin:0px;order:1;}\"], MEDIUM_MEDIA_BREAKPOINT);\nconst FiltersWrapper = _styled.div.withConfig({\n  displayName: \"Pools__FiltersWrapper\",\n  componentId: \"sc-xtbgq5-4\"\n})([\"display:flex;max-width:\", \";margin:0 auto;margin-bottom:20px;@media only screen and (max-width:\", \"){flex-direction:column;gap:8px;}\"], MAX_WIDTH_MEDIA_BREAKPOINT, MEDIUM_MEDIA_BREAKPOINT);\nconst Pools = () => {\n  _s();\n  const resetFilterString = useResetAtom(filterStringAtom);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    chainName: chainNameParam\n  } = useParams();\n  const {\n    chainId: connectedChainId\n  } = useWeb3React();\n  const connectedChainName = chainIdToBackendName(connectedChainId);\n  const allPoolData = useAllPoolData();\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData).map(p => p.data).filter(notEmpty);\n  }, [allPoolData]);\n  console.log(\"poolDatas\", poolDatas);\n  useEffect(() => {\n    resetFilterString();\n  }, [location, resetFilterString]);\n  useEffect(() => {\n    if (!chainNameParam) {\n      navigate(`/pools/${connectedChainName.toLowerCase()}`, {\n        replace: true\n      });\n    }\n  }, [chainNameParam, connectedChainName, navigate]);\n  useOnGlobalChainSwitch(chain => {\n    if (isValidBackendChainName(chain)) {\n      navigate(`/tokens/${chain.toLowerCase()}`, {\n        replace: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Trace, {\n    page: PageName.POOL_PAGE,\n    shouldLogImpression: true,\n    children: /*#__PURE__*/_jsxDEV(ExploreContainer, {\n      children: [/*#__PURE__*/_jsxDEV(TitleContainer, {\n        children: /*#__PURE__*/_jsxDEV(ThemedText.LargeHeader, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Top Pools on Thera Ecosystem\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PoolTable, {\n        poolDatas: poolDatas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Pools, \"l1ABUx1WbYBtxqEdKlBvJIN6vOc=\", false, function () {\n  return [useResetAtom, useLocation, useNavigate, useParams, useWeb3React, useAllPoolData, useOnGlobalChainSwitch];\n});\n_c = Pools;\nexport default Pools;\nvar _c;\n$RefreshReg$(_c, \"Pools\");","map":{"version":3,"names":["Trace","PageName","useWeb3React","MAX_WIDTH_MEDIA_BREAKPOINT","MEDIUM_MEDIA_BREAKPOINT","filterStringAtom","chainIdToBackendName","isValidBackendChainName","useOnGlobalChainSwitch","useResetAtom","useEffect","useMemo","useLocation","useNavigate","useParams","ThemedText","notEmpty","PoolTable","useAllPoolData","ExploreContainer","styled","div","theme","breakpoint","md","sm","TitleContainer","FiltersContainer","SearchContainer","FiltersWrapper","Pools","resetFilterString","location","navigate","chainName","chainNameParam","chainId","connectedChainId","connectedChainName","allPoolData","poolDatas","Object","values","map","p","data","filter","console","log","toLowerCase","replace","chain","POOL_PAGE"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/Pools/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Trace } from '@uniswap/analytics'\nimport { PageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { MAX_WIDTH_MEDIA_BREAKPOINT, MEDIUM_MEDIA_BREAKPOINT } from 'components/Tokens/constants'\nimport { filterStringAtom } from 'components/Tokens/state'\nimport { chainIdToBackendName, isValidBackendChainName } from 'graphql/data/util'\nimport { useOnGlobalChainSwitch } from 'hooks/useGlobalChainSwitch'\nimport { useResetAtom } from 'jotai/utils'\nimport { useEffect,useMemo } from 'react'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport { ThemedText } from 'theme'\nimport { notEmpty } from 'utils'\nimport PoolTable from 'components/Pools/PoolTable'\n\nimport { useAllPoolData, usePoolDatas } from 'state/pools/hooks'\n\n\nconst ExploreContainer = styled.div`\n  width: 100%;\n  min-width: 320px;\n  padding: 68px 12px 0px;\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.md}px`}) {\n    padding-top: 48px;\n  }\n\n  @media only screen and (max-width: ${({ theme }) => `${theme.breakpoint.sm}px`}) {\n    padding-top: 20px;\n  }\n`\nconst TitleContainer = styled.div`\n  margin-bottom: 32px;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n`\nconst FiltersContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  height: 40px;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    order: 2;\n  }\n`\nconst SearchContainer = styled(FiltersContainer)`\n  width: 100%;\n  margin-left: 8px;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    margin: 0px;\n    order: 1;\n  }\n`\nconst FiltersWrapper = styled.div`\n  display: flex;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  margin: 0 auto;\n  margin-bottom: 20px;\n\n  @media only screen and (max-width: ${MEDIUM_MEDIA_BREAKPOINT}) {\n    flex-direction: column;\n    gap: 8px;\n  }\n`\n\nconst Pools = () => {\n  const resetFilterString = useResetAtom(filterStringAtom)\n  const location = useLocation()\n  const navigate = useNavigate()\n  const { chainName: chainNameParam } = useParams<{ chainName?: string }>()\n  const { chainId: connectedChainId } = useWeb3React()\n  const connectedChainName = chainIdToBackendName(connectedChainId)\n\n  const allPoolData = useAllPoolData()\n  const poolDatas = useMemo(() => {\n    return Object.values(allPoolData)\n      .map((p) => p.data)\n      .filter(notEmpty)\n  }, [allPoolData])\n\n  console.log(\"poolDatas\",poolDatas)\n\n  useEffect(() => {\n    resetFilterString()\n  }, [location, resetFilterString])\n\n  useEffect(() => {\n    if (!chainNameParam) {\n      navigate(`/pools/${connectedChainName.toLowerCase()}`, { replace: true })\n    }\n  }, [chainNameParam, connectedChainName, navigate])\n\n  useOnGlobalChainSwitch((chain) => {\n    if (isValidBackendChainName(chain)) {\n      navigate(`/tokens/${chain.toLowerCase()}`, { replace: true })\n    }\n  })\n\n  return (\n    <Trace page={PageName.POOL_PAGE} shouldLogImpression>\n      <ExploreContainer>\n        <TitleContainer>\n          <ThemedText.LargeHeader>\n            <Trans>Top Pools on Thera Ecosystem</Trans>\n          </ThemedText.LargeHeader>\n        </TitleContainer>\n\n        {<PoolTable poolDatas={poolDatas} />}\n       \n      </ExploreContainer>\n    </Trace>\n  )\n}\n\nexport default Pools\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}