{"ast":null,"code":"import { BigNumber } from '@ethersproject/bignumber';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { InsufficientInputAmountError, InsufficientReservesError } from '@uniswap/v2-sdk';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\n/**\n * Computes quotes for V2 off-chain. Quotes are computed using the balances\n * of the pools within each route provided.\n *\n * @export\n * @class V2QuoteProvider\n */\nexport class V2QuoteProvider {\n  /* eslint-disable @typescript-eslint/no-empty-function */\n  constructor() {}\n  /* eslint-enable @typescript-eslint/no-empty-function */\n  async getQuotesManyExactIn(amountIns, routes) {\n    return this.getQuotes(amountIns, routes, TradeType.EXACT_INPUT);\n  }\n  async getQuotesManyExactOut(amountOuts, routes) {\n    return this.getQuotes(amountOuts, routes, TradeType.EXACT_OUTPUT);\n  }\n  async getQuotes(amounts, routes, tradeType) {\n    const routesWithQuotes = [];\n    const debugStrs = [];\n    for (const route of routes) {\n      const amountQuotes = [];\n      let insufficientInputAmountErrorCount = 0;\n      let insufficientReservesErrorCount = 0;\n      for (const amount of amounts) {\n        try {\n          if (tradeType == TradeType.EXACT_INPUT) {\n            let outputAmount = amount.wrapped;\n            for (const pair of route.pairs) {\n              const [outputAmountNew] = pair.getOutputAmount(outputAmount);\n              outputAmount = outputAmountNew;\n            }\n            amountQuotes.push({\n              amount,\n              quote: BigNumber.from(outputAmount.quotient.toString())\n            });\n          } else {\n            let inputAmount = amount.wrapped;\n            for (let i = route.pairs.length - 1; i >= 0; i--) {\n              const pair = route.pairs[i];\n              [inputAmount] = pair.getInputAmount(inputAmount);\n            }\n            amountQuotes.push({\n              amount,\n              quote: BigNumber.from(inputAmount.quotient.toString())\n            });\n          }\n        } catch (err) {\n          // Can fail to get quotes, e.g. throws InsufficientReservesError or InsufficientInputAmountError.\n          if (err instanceof InsufficientInputAmountError) {\n            insufficientInputAmountErrorCount = insufficientInputAmountErrorCount + 1;\n            amountQuotes.push({\n              amount,\n              quote: null\n            });\n          } else if (err instanceof InsufficientReservesError) {\n            insufficientReservesErrorCount = insufficientReservesErrorCount + 1;\n            amountQuotes.push({\n              amount,\n              quote: null\n            });\n          } else {\n            throw err;\n          }\n        }\n      }\n      if (insufficientInputAmountErrorCount > 0 || insufficientReservesErrorCount > 0) {\n        debugStrs.push(`${[routeToString(route)]} Input: ${insufficientInputAmountErrorCount} Reserves: ${insufficientReservesErrorCount} }`);\n      }\n      routesWithQuotes.push([route, amountQuotes]);\n    }\n    if (debugStrs.length > 0) {\n      log.info({\n        debugStrs\n      }, `Failed quotes for V2 routes`);\n    }\n    return {\n      routesWithQuotes\n    };\n  }\n}","map":{"version":3,"sources":["../../../../src/providers/v2/quote-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { InsufficientInputAmountError, InsufficientReservesError, } from '@uniswap/v2-sdk';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\n/**\n * Computes quotes for V2 off-chain. Quotes are computed using the balances\n * of the pools within each route provided.\n *\n * @export\n * @class V2QuoteProvider\n */\nexport class V2QuoteProvider {\n    /* eslint-disable @typescript-eslint/no-empty-function */\n    constructor() { }\n    /* eslint-enable @typescript-eslint/no-empty-function */\n    async getQuotesManyExactIn(amountIns, routes) {\n        return this.getQuotes(amountIns, routes, TradeType.EXACT_INPUT);\n    }\n    async getQuotesManyExactOut(amountOuts, routes) {\n        return this.getQuotes(amountOuts, routes, TradeType.EXACT_OUTPUT);\n    }\n    async getQuotes(amounts, routes, tradeType) {\n        const routesWithQuotes = [];\n        const debugStrs = [];\n        for (const route of routes) {\n            const amountQuotes = [];\n            let insufficientInputAmountErrorCount = 0;\n            let insufficientReservesErrorCount = 0;\n            for (const amount of amounts) {\n                try {\n                    if (tradeType == TradeType.EXACT_INPUT) {\n                        let outputAmount = amount.wrapped;\n                        for (const pair of route.pairs) {\n                            const [outputAmountNew] = pair.getOutputAmount(outputAmount);\n                            outputAmount = outputAmountNew;\n                        }\n                        amountQuotes.push({\n                            amount,\n                            quote: BigNumber.from(outputAmount.quotient.toString()),\n                        });\n                    }\n                    else {\n                        let inputAmount = amount.wrapped;\n                        for (let i = route.pairs.length - 1; i >= 0; i--) {\n                            const pair = route.pairs[i];\n                            [inputAmount] = pair.getInputAmount(inputAmount);\n                        }\n                        amountQuotes.push({\n                            amount,\n                            quote: BigNumber.from(inputAmount.quotient.toString()),\n                        });\n                    }\n                }\n                catch (err) {\n                    // Can fail to get quotes, e.g. throws InsufficientReservesError or InsufficientInputAmountError.\n                    if (err instanceof InsufficientInputAmountError) {\n                        insufficientInputAmountErrorCount =\n                            insufficientInputAmountErrorCount + 1;\n                        amountQuotes.push({ amount, quote: null });\n                    }\n                    else if (err instanceof InsufficientReservesError) {\n                        insufficientReservesErrorCount = insufficientReservesErrorCount + 1;\n                        amountQuotes.push({ amount, quote: null });\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n            if (insufficientInputAmountErrorCount > 0 ||\n                insufficientReservesErrorCount > 0) {\n                debugStrs.push(`${[\n                    routeToString(route),\n                ]} Input: ${insufficientInputAmountErrorCount} Reserves: ${insufficientReservesErrorCount} }`);\n            }\n            routesWithQuotes.push([route, amountQuotes]);\n        }\n        if (debugStrs.length > 0) {\n            log.info({ debugStrs }, `Failed quotes for V2 routes`);\n        }\n        return {\n            routesWithQuotes,\n        };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVvdGUtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YyL3F1b3RlLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUMsT0FBTyxFQUNMLDRCQUE0QixFQUM1Qix5QkFBeUIsR0FDMUIsTUFBTSxpQkFBaUIsQ0FBQztBQUl6QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBc0JsRDs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sZUFBZTtJQUMxQix5REFBeUQ7SUFDekQsZ0JBQWUsQ0FBQztJQUNoQix3REFBd0Q7SUFFakQsS0FBSyxDQUFDLG9CQUFvQixDQUMvQixTQUEyQixFQUMzQixNQUFpQjtRQUVqQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxFQUFFLE1BQU0sRUFBRSxTQUFTLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVNLEtBQUssQ0FBQyxxQkFBcUIsQ0FDaEMsVUFBNEIsRUFDNUIsTUFBaUI7UUFFakIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFTyxLQUFLLENBQUMsU0FBUyxDQUNyQixPQUF5QixFQUN6QixNQUFpQixFQUNqQixTQUFvQjtRQUVwQixNQUFNLGdCQUFnQixHQUF3QixFQUFFLENBQUM7UUFFakQsTUFBTSxTQUFTLEdBQWEsRUFBRSxDQUFDO1FBQy9CLEtBQUssTUFBTSxLQUFLLElBQUksTUFBTSxFQUFFO1lBQzFCLE1BQU0sWUFBWSxHQUFvQixFQUFF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"]},"metadata":{},"sourceType":"module"}