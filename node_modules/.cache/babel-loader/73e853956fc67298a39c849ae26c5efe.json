{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { Erc20__factory } from '../types/other/factories/Erc20__factory';\nimport { SwapRouter02__factory } from '../types/other/factories/SwapRouter02__factory';\nimport { ChainId, log, SWAP_ROUTER_ADDRESS } from '../util';\nimport { APPROVE_TOKEN_FOR_TRANSFER } from '../util/callData';\nimport { calculateGasUsed, initSwapRouteFromExisting } from '../util/gas-factory-helpers';\nvar TENDERLY_BATCH_SIMULATE_API = function TENDERLY_BATCH_SIMULATE_API(tenderlyBaseUrl, tenderlyUser, tenderlyProject) {\n  return \"\".concat(tenderlyBaseUrl, \"/api/v1/account/\").concat(tenderlyUser, \"/project/\").concat(tenderlyProject, \"/simulate-batch\");\n};\n// We multiply tenderly gas estimate by this estimate to overestimate gas fee\nvar ESTIMATE_MULTIPLIER = 1.25;\nvar checkTokenApproved = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(fromAddress, inputAmount, provider) {\n    var tokenContract, allowance;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tokenContract = Erc20__factory.connect(inputAmount.currency.wrapped.address, provider);\n            _context.next = 3;\n            return tokenContract.allowance(fromAddress, SWAP_ROUTER_ADDRESS);\n          case 3:\n            allowance = _context.sent;\n            return _context.abrupt(\"return\", allowance.gt(BigNumber.from(inputAmount.quotient.toString())));\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return function checkTokenApproved(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var FallbackTenderlySimulator = /*#__PURE__*/function () {\n  function FallbackTenderlySimulator(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, provider, v2PoolProvider, v3PoolProvider, tenderlySimulator) {\n    _classCallCheck(this, FallbackTenderlySimulator);\n    this.tenderlySimulator = tenderlySimulator !== null && tenderlySimulator !== void 0 ? tenderlySimulator : new TenderlySimulator(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider);\n    this.provider = provider;\n    this.v2PoolProvider = v2PoolProvider;\n    this.v3PoolProvider = v3PoolProvider;\n  }\n  _createClass(FallbackTenderlySimulator, [{\n    key: \"ethEstimateGas\",\n    value: function () {\n      var _ethEstimateGas = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(fromAddress, route, l2GasData) {\n        var currencyIn, router, estimatedGasUsed, _yield$calculateGasUs, estimatedGasUsedUSD, estimatedGasUsedQuoteToken, quoteGasAdjusted;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                currencyIn = route.trade.inputAmount.currency;\n                router = SwapRouter02__factory.connect(SWAP_ROUTER_ADDRESS, this.provider);\n                _context2.next = 4;\n                return router.estimateGas['multicall(bytes[])']([route.methodParameters.calldata], {\n                  from: fromAddress,\n                  value: BigNumber.from(currencyIn.isNative ? route.methodParameters.value : '0')\n                });\n              case 4:\n                estimatedGasUsed = _context2.sent;\n                _context2.next = 7;\n                return calculateGasUsed(route.quote.currency.chainId, route, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n              case 7:\n                _yield$calculateGasUs = _context2.sent;\n                estimatedGasUsedUSD = _yield$calculateGasUs.estimatedGasUsedUSD;\n                estimatedGasUsedQuoteToken = _yield$calculateGasUs.estimatedGasUsedQuoteToken;\n                quoteGasAdjusted = _yield$calculateGasUs.quoteGasAdjusted;\n                return _context2.abrupt(\"return\", initSwapRouteFromExisting(route, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD));\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function ethEstimateGas(_x4, _x5, _x6) {\n        return _ethEstimateGas.apply(this, arguments);\n      }\n      return ethEstimateGas;\n    }()\n  }, {\n    key: \"simulateTransaction\",\n    value: function () {\n      var _simulateTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(fromAddress, swapRoute, l2GasData) {\n        var inputAmount, swapRouteWithGasEstimate;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // Make call to eth estimate gas if possible\n                // For erc20s, we must check if the token allowance is sufficient\n                inputAmount = swapRoute.trade.inputAmount;\n                _context3.t0 = inputAmount.currency.isNative;\n                if (_context3.t0) {\n                  _context3.next = 6;\n                  break;\n                }\n                _context3.next = 5;\n                return checkTokenApproved(fromAddress, inputAmount, this.provider);\n              case 5:\n                _context3.t0 = _context3.sent;\n              case 6:\n                if (!_context3.t0) {\n                  _context3.next = 18;\n                  break;\n                }\n                _context3.prev = 7;\n                _context3.next = 10;\n                return this.ethEstimateGas(fromAddress, swapRoute, l2GasData);\n              case 10:\n                swapRouteWithGasEstimate = _context3.sent;\n                return _context3.abrupt(\"return\", swapRouteWithGasEstimate);\n              case 14:\n                _context3.prev = 14;\n                _context3.t1 = _context3[\"catch\"](7);\n                log.info({\n                  err: _context3.t1\n                }, 'Error calling eth estimate gas!');\n                return _context3.abrupt(\"return\", _objectSpread(_objectSpread({}, swapRoute), {}, {\n                  simulationError: true\n                }));\n              case 18:\n                _context3.prev = 18;\n                _context3.next = 21;\n                return this.tenderlySimulator.simulateTransaction(fromAddress, swapRoute, l2GasData);\n              case 21:\n                return _context3.abrupt(\"return\", _context3.sent);\n              case 24:\n                _context3.prev = 24;\n                _context3.t2 = _context3[\"catch\"](18);\n                log.info({\n                  err: _context3.t2\n                }, 'Failed to simulate via Tenderly!');\n                // set error flag to true\n                return _context3.abrupt(\"return\", _objectSpread(_objectSpread({}, swapRoute), {}, {\n                  simulationError: true\n                }));\n              case 28:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[7, 14], [18, 24]]);\n      }));\n      function simulateTransaction(_x7, _x8, _x9) {\n        return _simulateTransaction.apply(this, arguments);\n      }\n      return simulateTransaction;\n    }()\n  }]);\n  return FallbackTenderlySimulator;\n}();\nexport var TenderlySimulator = /*#__PURE__*/function () {\n  function TenderlySimulator(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider) {\n    _classCallCheck(this, TenderlySimulator);\n    this.tenderlyBaseUrl = tenderlyBaseUrl;\n    this.tenderlyUser = tenderlyUser;\n    this.tenderlyProject = tenderlyProject;\n    this.tenderlyAccessKey = tenderlyAccessKey;\n    this.v2PoolProvider = v2PoolProvider;\n    this.v3PoolProvider = v3PoolProvider;\n  }\n  _createClass(TenderlySimulator, [{\n    key: \"simulateTransaction\",\n    value: function () {\n      var _simulateTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(fromAddress, swapRoute, l2GasData) {\n        var currencyIn, tokenIn, chainId, msg, _msg, calldata, approve, swap, body, opts, url, resp, estimatedGasUsed, _yield$calculateGasUs2, estimatedGasUsedUSD, estimatedGasUsedQuoteToken, quoteGasAdjusted;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                currencyIn = swapRoute.trade.inputAmount.currency;\n                tokenIn = currencyIn.wrapped;\n                chainId = tokenIn.chainId;\n                if (![ChainId.CELO, ChainId.CELO_ALFAJORES].includes(chainId)) {\n                  _context4.next = 7;\n                  break;\n                }\n                msg = 'Celo not supported by Tenderly!';\n                log.info(msg);\n                return _context4.abrupt(\"return\", _objectSpread(_objectSpread({}, swapRoute), {}, {\n                  simulationError: true\n                }));\n              case 7:\n                if (swapRoute.methodParameters) {\n                  _context4.next = 11;\n                  break;\n                }\n                _msg = 'No calldata provided to simulate transaction';\n                log.info(_msg);\n                throw new Error(_msg);\n              case 11:\n                calldata = swapRoute.methodParameters.calldata;\n                log.info({\n                  calldata: swapRoute.methodParameters.calldata,\n                  fromAddress: fromAddress,\n                  chainId: chainId,\n                  tokenInAddress: tokenIn.address\n                }, 'Simulating transaction via Tenderly');\n                approve = {\n                  network_id: chainId,\n                  input: APPROVE_TOKEN_FOR_TRANSFER,\n                  to: tokenIn.address,\n                  value: '0',\n                  from: fromAddress,\n                  gasPrice: '0',\n                  gas: 30000000\n                };\n                swap = {\n                  network_id: chainId,\n                  input: calldata,\n                  to: SWAP_ROUTER_ADDRESS,\n                  value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n                  from: fromAddress,\n                  gasPrice: '0',\n                  gas: 30000000,\n                  type: 1\n                };\n                body = {\n                  simulations: [approve, swap]\n                };\n                opts = {\n                  headers: {\n                    'X-Access-Key': this.tenderlyAccessKey\n                  }\n                };\n                url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n                _context4.next = 20;\n                return axios.post(url, body, opts);\n              case 20:\n                resp = _context4.sent.data;\n                if (!(!resp || resp.simulation_results.length < 2 || !resp.simulation_results[1].transaction || resp.simulation_results[1].transaction.error_message)) {\n                  _context4.next = 25;\n                  break;\n                }\n                msg = \"Failed to Simulate Via Tenderly!: \".concat(resp.simulation_results[1].transaction.error_message);\n                log.info({\n                  err: resp.simulation_results[1].transaction.error_message\n                }, msg);\n                return _context4.abrupt(\"return\", _objectSpread(_objectSpread({}, swapRoute), {}, {\n                  simulationError: true\n                }));\n              case 25:\n                log.info({\n                  approve: resp.simulation_results[0],\n                  swap: resp.simulation_results[1]\n                }, 'Simulated Approval + Swap via Tenderly');\n                // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n                estimatedGasUsed = BigNumber.from((resp.simulation_results[1].transaction.gas_used * ESTIMATE_MULTIPLIER).toFixed(0));\n                _context4.next = 29;\n                return calculateGasUsed(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n              case 29:\n                _yield$calculateGasUs2 = _context4.sent;\n                estimatedGasUsedUSD = _yield$calculateGasUs2.estimatedGasUsedUSD;\n                estimatedGasUsedQuoteToken = _yield$calculateGasUs2.estimatedGasUsedQuoteToken;\n                quoteGasAdjusted = _yield$calculateGasUs2.quoteGasAdjusted;\n                return _context4.abrupt(\"return\", initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD));\n              case 34:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function simulateTransaction(_x10, _x11, _x12) {\n        return _simulateTransaction2.apply(this, arguments);\n      }\n      return simulateTransaction;\n    }()\n  }]);\n  return TenderlySimulator;\n}();","map":{"version":3,"sources":["../../../src/providers/tenderly-simulation-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import axios from 'axios';\nimport { BigNumber } from 'ethers/lib/ethers';\nimport { Erc20__factory } from '../types/other/factories/Erc20__factory';\nimport { SwapRouter02__factory } from '../types/other/factories/SwapRouter02__factory';\nimport { ChainId, log, SWAP_ROUTER_ADDRESS } from '../util';\nimport { APPROVE_TOKEN_FOR_TRANSFER } from '../util/callData';\nimport { calculateGasUsed, initSwapRouteFromExisting, } from '../util/gas-factory-helpers';\nconst TENDERLY_BATCH_SIMULATE_API = (tenderlyBaseUrl, tenderlyUser, tenderlyProject) => `${tenderlyBaseUrl}/api/v1/account/${tenderlyUser}/project/${tenderlyProject}/simulate-batch`;\n// We multiply tenderly gas estimate by this estimate to overestimate gas fee\nconst ESTIMATE_MULTIPLIER = 1.25;\nconst checkTokenApproved = async (fromAddress, inputAmount, provider) => {\n    const tokenContract = Erc20__factory.connect(inputAmount.currency.wrapped.address, provider);\n    const allowance = await tokenContract.allowance(fromAddress, SWAP_ROUTER_ADDRESS);\n    // Return true if token allowance is greater than input amount\n    return allowance.gt(BigNumber.from(inputAmount.quotient.toString()));\n};\nexport class FallbackTenderlySimulator {\n    constructor(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, provider, v2PoolProvider, v3PoolProvider, tenderlySimulator) {\n        this.tenderlySimulator =\n            tenderlySimulator !== null && tenderlySimulator !== void 0 ? tenderlySimulator : new TenderlySimulator(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider);\n        this.provider = provider;\n        this.v2PoolProvider = v2PoolProvider;\n        this.v3PoolProvider = v3PoolProvider;\n    }\n    async ethEstimateGas(fromAddress, route, l2GasData) {\n        const currencyIn = route.trade.inputAmount.currency;\n        const router = SwapRouter02__factory.connect(SWAP_ROUTER_ADDRESS, this.provider);\n        const estimatedGasUsed = await router.estimateGas['multicall(bytes[])']([route.methodParameters.calldata], {\n            from: fromAddress,\n            value: BigNumber.from(currencyIn.isNative ? route.methodParameters.value : '0'),\n        });\n        const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, quoteGasAdjusted, } = await calculateGasUsed(route.quote.currency.chainId, route, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n        return initSwapRouteFromExisting(route, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD);\n    }\n    async simulateTransaction(fromAddress, swapRoute, l2GasData) {\n        // Make call to eth estimate gas if possible\n        // For erc20s, we must check if the token allowance is sufficient\n        const inputAmount = swapRoute.trade.inputAmount;\n        if (inputAmount.currency.isNative ||\n            (await checkTokenApproved(fromAddress, inputAmount, this.provider))) {\n            try {\n                const swapRouteWithGasEstimate = await this.ethEstimateGas(fromAddress, swapRoute, l2GasData);\n                return swapRouteWithGasEstimate;\n            }\n            catch (err) {\n                log.info({ err: err }, 'Error calling eth estimate gas!');\n                return { ...swapRoute, simulationError: true };\n            }\n        }\n        // simulate via tenderly\n        try {\n            return await this.tenderlySimulator.simulateTransaction(fromAddress, swapRoute, l2GasData);\n        }\n        catch (err) {\n            log.info({ err: err }, 'Failed to simulate via Tenderly!');\n            // set error flag to true\n            return { ...swapRoute, simulationError: true };\n        }\n    }\n}\nexport class TenderlySimulator {\n    constructor(tenderlyBaseUrl, tenderlyUser, tenderlyProject, tenderlyAccessKey, v2PoolProvider, v3PoolProvider) {\n        this.tenderlyBaseUrl = tenderlyBaseUrl;\n        this.tenderlyUser = tenderlyUser;\n        this.tenderlyProject = tenderlyProject;\n        this.tenderlyAccessKey = tenderlyAccessKey;\n        this.v2PoolProvider = v2PoolProvider;\n        this.v3PoolProvider = v3PoolProvider;\n    }\n    async simulateTransaction(fromAddress, swapRoute, l2GasData) {\n        const currencyIn = swapRoute.trade.inputAmount.currency;\n        const tokenIn = currencyIn.wrapped;\n        const chainId = tokenIn.chainId;\n        if ([ChainId.CELO, ChainId.CELO_ALFAJORES].includes(chainId)) {\n            const msg = 'Celo not supported by Tenderly!';\n            log.info(msg);\n            return { ...swapRoute, simulationError: true };\n        }\n        if (!swapRoute.methodParameters) {\n            const msg = 'No calldata provided to simulate transaction';\n            log.info(msg);\n            throw new Error(msg);\n        }\n        const { calldata } = swapRoute.methodParameters;\n        log.info({\n            calldata: swapRoute.methodParameters.calldata,\n            fromAddress: fromAddress,\n            chainId: chainId,\n            tokenInAddress: tokenIn.address,\n        }, 'Simulating transaction via Tenderly');\n        const approve = {\n            network_id: chainId,\n            input: APPROVE_TOKEN_FOR_TRANSFER,\n            to: tokenIn.address,\n            value: '0',\n            from: fromAddress,\n            gasPrice: '0',\n            gas: 30000000,\n        };\n        const swap = {\n            network_id: chainId,\n            input: calldata,\n            to: SWAP_ROUTER_ADDRESS,\n            value: currencyIn.isNative ? swapRoute.methodParameters.value : '0',\n            from: fromAddress,\n            gasPrice: '0',\n            gas: 30000000,\n            type: 1,\n        };\n        const body = { simulations: [approve, swap] };\n        const opts = {\n            headers: {\n                'X-Access-Key': this.tenderlyAccessKey,\n            },\n        };\n        const url = TENDERLY_BATCH_SIMULATE_API(this.tenderlyBaseUrl, this.tenderlyUser, this.tenderlyProject);\n        const resp = (await axios.post(url, body, opts)).data;\n        // Validate tenderly response body\n        if (!resp ||\n            resp.simulation_results.length < 2 ||\n            !resp.simulation_results[1].transaction ||\n            resp.simulation_results[1].transaction.error_message) {\n            const msg = `Failed to Simulate Via Tenderly!: ${resp.simulation_results[1].transaction.error_message}`;\n            log.info({ err: resp.simulation_results[1].transaction.error_message }, msg);\n            return { ...swapRoute, simulationError: true };\n        }\n        log.info({ approve: resp.simulation_results[0], swap: resp.simulation_results[1] }, 'Simulated Approval + Swap via Tenderly');\n        // Parse the gas used in the simulation response object, and then pad it so that we overestimate.\n        const estimatedGasUsed = BigNumber.from((resp.simulation_results[1].transaction.gas_used * ESTIMATE_MULTIPLIER).toFixed(0));\n        const { estimatedGasUsedUSD, estimatedGasUsedQuoteToken, quoteGasAdjusted, } = await calculateGasUsed(chainId, swapRoute, estimatedGasUsed, this.v2PoolProvider, this.v3PoolProvider, l2GasData);\n        return initSwapRouteFromExisting(swapRoute, this.v2PoolProvider, this.v3PoolProvider, quoteGasAdjusted, estimatedGasUsed, estimatedGasUsedQuoteToken, estimatedGasUsedUSD);\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVuZGVybHktc2ltdWxhdGlvbi1wcm92aWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdGVuZGVybHktc2ltdWxhdGlvbi1wcm92aWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEtBQUssTUFBTSxPQUFPLENBQUM7QUFDMUIsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRzlDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUN6RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUN2RixPQUFPLEVBQUUsT0FBTyxFQUFrQixHQUFHLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDNUUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDOUQsT0FBTyxFQUNMLGdCQUFnQixFQUNoQix5QkFBeUIsR0FDMUIsTUFBTSw2QkFBNkIsQ0FBQztBQW9CckMsTUFBTSwyQkFBMkIsR0FBRyxDQUNsQyxlQUF1QixFQUN2QixZQUFvQixFQUNwQixlQUF1QixFQUN2QixFQUFFLENBQ0YsR0FBRyxlQUFlLG1CQUFtQixZQUFZLFlBQVksZUFBZSxpQkFBaUIsQ0FBQztBQUVoRyw2RUFBNkU7QUFDN0UsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLENBQUM7QUF1QmpDLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxFQUM5QixXQUFtQixFQUNuQixXQUEyQixFQUMzQixRQUF5QixFQUNQLEVBQUU7SUFDcEIsTUFBTSxhQUFhLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FDMUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUNwQyxRQUFRLENBQ1QsQ0FBQztJQUNGLE1BQU0sU0FBUyxHQUFHLE1BQU0sYUFBYSxDQUFDLFNBQVMsQ0FDN0MsV0FBVyxFQUNYLG1CQUFtQixDQUNwQixD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"]},"metadata":{},"sourceType":"module"}