{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { EventEmitter } from \"events\";\nimport fetch from \"cross-fetch\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { formatJsonRpcError, isHttpUrl, parseConnectionError } from \"@walletconnect/jsonrpc-utils\";\nvar DEFAULT_HTTP_HEADERS = {\n  Accept: \"application/json\",\n  \"Content-Type\": \"application/json\"\n};\nvar DEFAULT_HTTP_METHOD = \"POST\";\nvar DEFAULT_FETCH_OPTS = {\n  headers: DEFAULT_HTTP_HEADERS,\n  method: DEFAULT_HTTP_METHOD\n};\nvar EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nexport var HttpConnection = /*#__PURE__*/function () {\n  function HttpConnection(url) {\n    _classCallCheck(this, HttpConnection);\n    this.url = url;\n    this.events = new EventEmitter();\n    this.isAvailable = false;\n    this.registering = false;\n    if (!isHttpUrl(url)) {\n      throw new Error(\"Provided URL is not compatible with HTTP connection: \".concat(url));\n    }\n    this.url = url;\n  }\n  _createClass(HttpConnection, [{\n    key: \"connected\",\n    get: function get() {\n      return this.isAvailable;\n    }\n  }, {\n    key: \"connecting\",\n    get: function get() {\n      return this.registering;\n    }\n  }, {\n    key: \"on\",\n    value: function on(event, listener) {\n      this.events.on(event, listener);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, listener) {\n      this.events.once(event, listener);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, listener) {\n      this.events.off(event, listener);\n    }\n  }, {\n    key: \"removeListener\",\n    value: function removeListener(event, listener) {\n      this.events.removeListener(event, listener);\n    }\n  }, {\n    key: \"open\",\n    value: function () {\n      var _open = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var url,\n          _args = arguments;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = _args.length > 0 && _args[0] !== undefined ? _args[0] : this.url;\n                _context.next = 3;\n                return this.register(url);\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function open() {\n        return _open.apply(this, arguments);\n      }\n      return open;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.isAvailable) {\n                  _context2.next = 2;\n                  break;\n                }\n                throw new Error(\"Connection already closed\");\n              case 2:\n                this.onClose();\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(payload, context) {\n        var body, res, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.isAvailable) {\n                  _context3.next = 3;\n                  break;\n                }\n                _context3.next = 3;\n                return this.register();\n              case 3:\n                _context3.prev = 3;\n                body = safeJsonStringify(payload);\n                _context3.next = 7;\n                return fetch(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                  body: body\n                }));\n              case 7:\n                res = _context3.sent;\n                _context3.next = 10;\n                return res.json();\n              case 10:\n                data = _context3.sent;\n                this.onPayload({\n                  data: data\n                });\n                _context3.next = 17;\n                break;\n              case 14:\n                _context3.prev = 14;\n                _context3.t0 = _context3[\"catch\"](3);\n                this.onError(payload.id, _context3.t0);\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[3, 14]]);\n      }));\n      function send(_x, _x2) {\n        return _send.apply(this, arguments);\n      }\n      return send;\n    }()\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _this = this;\n        var url,\n          currentMaxListeners,\n          body,\n          error,\n          _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : this.url;\n                if (isHttpUrl(url)) {\n                  _context4.next = 3;\n                  break;\n                }\n                throw new Error(\"Provided URL is not compatible with HTTP connection: \".concat(url));\n              case 3:\n                if (!this.registering) {\n                  _context4.next = 7;\n                  break;\n                }\n                currentMaxListeners = this.events.getMaxListeners();\n                if (this.events.listenerCount(\"register_error\") >= currentMaxListeners || this.events.listenerCount(\"open\") >= currentMaxListeners) {\n                  this.events.setMaxListeners(currentMaxListeners + 1);\n                }\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this.events.once(\"register_error\", function (error) {\n                    _this.resetMaxListeners();\n                    reject(error);\n                  });\n                  _this.events.once(\"open\", function () {\n                    _this.resetMaxListeners();\n                    if (typeof _this.isAvailable === \"undefined\") {\n                      return reject(new Error(\"HTTP connection is missing or invalid\"));\n                    }\n                    resolve();\n                  });\n                }));\n              case 7:\n                this.url = url;\n                this.registering = true;\n                _context4.prev = 9;\n                body = safeJsonStringify({\n                  id: 1,\n                  jsonrpc: \"2.0\",\n                  method: \"test\",\n                  params: []\n                });\n                _context4.next = 13;\n                return fetch(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), {\n                  body: body\n                }));\n              case 13:\n                this.onOpen();\n                _context4.next = 22;\n                break;\n              case 16:\n                _context4.prev = 16;\n                _context4.t0 = _context4[\"catch\"](9);\n                error = this.parseError(_context4.t0);\n                this.events.emit(\"register_error\", error);\n                this.onClose();\n                throw error;\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[9, 16]]);\n      }));\n      function register() {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n  }, {\n    key: \"onOpen\",\n    value: function onOpen() {\n      this.isAvailable = true;\n      this.registering = false;\n      this.events.emit(\"open\");\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      this.isAvailable = false;\n      this.registering = false;\n      this.events.emit(\"close\");\n    }\n  }, {\n    key: \"onPayload\",\n    value: function onPayload(e) {\n      if (typeof e.data === \"undefined\") return;\n      var payload = typeof e.data === \"string\" ? safeJsonParse(e.data) : e.data;\n      this.events.emit(\"payload\", payload);\n    }\n  }, {\n    key: \"onError\",\n    value: function onError(id, e) {\n      var error = this.parseError(e);\n      var message = error.message || error.toString();\n      var payload = formatJsonRpcError(id, message);\n      this.events.emit(\"payload\", payload);\n    }\n  }, {\n    key: \"parseError\",\n    value: function parseError(e) {\n      var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.url;\n      return parseConnectionError(e, url, \"HTTP\");\n    }\n  }, {\n    key: \"resetMaxListeners\",\n    value: function resetMaxListeners() {\n      if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n        this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n      }\n    }\n  }]);\n  return HttpConnection;\n}();\nexport default HttpConnection;","map":{"version":3,"sources":["../../src/http.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { EventEmitter } from \"events\";\nimport fetch from \"cross-fetch\";\nimport { safeJsonParse, safeJsonStringify } from \"@walletconnect/safe-json\";\nimport { formatJsonRpcError, isHttpUrl, parseConnectionError, } from \"@walletconnect/jsonrpc-utils\";\nconst DEFAULT_HTTP_HEADERS = {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n};\nconst DEFAULT_HTTP_METHOD = \"POST\";\nconst DEFAULT_FETCH_OPTS = {\n    headers: DEFAULT_HTTP_HEADERS,\n    method: DEFAULT_HTTP_METHOD,\n};\nconst EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;\nexport class HttpConnection {\n    constructor(url) {\n        this.url = url;\n        this.events = new EventEmitter();\n        this.isAvailable = false;\n        this.registering = false;\n        if (!isHttpUrl(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        this.url = url;\n    }\n    get connected() {\n        return this.isAvailable;\n    }\n    get connecting() {\n        return this.registering;\n    }\n    on(event, listener) {\n        this.events.on(event, listener);\n    }\n    once(event, listener) {\n        this.events.once(event, listener);\n    }\n    off(event, listener) {\n        this.events.off(event, listener);\n    }\n    removeListener(event, listener) {\n        this.events.removeListener(event, listener);\n    }\n    async open(url = this.url) {\n        await this.register(url);\n    }\n    async close() {\n        if (!this.isAvailable) {\n            throw new Error(\"Connection already closed\");\n        }\n        this.onClose();\n    }\n    async send(payload, context) {\n        if (!this.isAvailable) {\n            await this.register();\n        }\n        try {\n            const body = safeJsonStringify(payload);\n            const res = await fetch(this.url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n            const data = await res.json();\n            this.onPayload({ data });\n        }\n        catch (e) {\n            this.onError(payload.id, e);\n        }\n    }\n    async register(url = this.url) {\n        if (!isHttpUrl(url)) {\n            throw new Error(`Provided URL is not compatible with HTTP connection: ${url}`);\n        }\n        if (this.registering) {\n            const currentMaxListeners = this.events.getMaxListeners();\n            if (this.events.listenerCount(\"register_error\") >= currentMaxListeners ||\n                this.events.listenerCount(\"open\") >= currentMaxListeners) {\n                this.events.setMaxListeners(currentMaxListeners + 1);\n            }\n            return new Promise((resolve, reject) => {\n                this.events.once(\"register_error\", error => {\n                    this.resetMaxListeners();\n                    reject(error);\n                });\n                this.events.once(\"open\", () => {\n                    this.resetMaxListeners();\n                    if (typeof this.isAvailable === \"undefined\") {\n                        return reject(new Error(\"HTTP connection is missing or invalid\"));\n                    }\n                    resolve();\n                });\n            });\n        }\n        this.url = url;\n        this.registering = true;\n        try {\n            const body = safeJsonStringify({ id: 1, jsonrpc: \"2.0\", method: \"test\", params: [] });\n            await fetch(url, Object.assign(Object.assign({}, DEFAULT_FETCH_OPTS), { body }));\n            this.onOpen();\n        }\n        catch (e) {\n            const error = this.parseError(e);\n            this.events.emit(\"register_error\", error);\n            this.onClose();\n            throw error;\n        }\n    }\n    onOpen() {\n        this.isAvailable = true;\n        this.registering = false;\n        this.events.emit(\"open\");\n    }\n    onClose() {\n        this.isAvailable = false;\n        this.registering = false;\n        this.events.emit(\"close\");\n    }\n    onPayload(e) {\n        if (typeof e.data === \"undefined\")\n            return;\n        const payload = typeof e.data === \"string\" ? safeJsonParse(e.data) : e.data;\n        this.events.emit(\"payload\", payload);\n    }\n    onError(id, e) {\n        const error = this.parseError(e);\n        const message = error.message || error.toString();\n        const payload = formatJsonRpcError(id, message);\n        this.events.emit(\"payload\", payload);\n    }\n    parseError(e, url = this.url) {\n        return parseConnectionError(e, url, \"HTTP\");\n    }\n    resetMaxListeners() {\n        if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {\n            this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);\n        }\n    }\n}\nexport default HttpConnection;\n//# sourceMappingURL=http.js.map"]},"metadata":{},"sourceType":"module"}