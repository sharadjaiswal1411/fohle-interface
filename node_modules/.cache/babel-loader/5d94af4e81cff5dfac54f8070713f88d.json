{"ast":null,"code":"export const ActivityFetcher = async (contractAddress, filters, cursor, limit) => {\n  var _filters$eventTypes;\n  const filterParam = filters && filters.eventTypes ? `&event_types=${(_filters$eventTypes = filters.eventTypes) === null || _filters$eventTypes === void 0 ? void 0 : _filters$eventTypes.map(eventType => `${eventType}`).join(',')}` : '';\n  const tokenId = (filters === null || filters === void 0 ? void 0 : filters.token_id) ? `&token_id=${filters === null || filters === void 0 ? void 0 : filters.token_id}` : '';\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/collections/${contractAddress}/activity?limit=${limit ? limit : '25'}${filterParam}${cursor ? `&cursor=${cursor}` : ''}${tokenId}`;\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await r.json();\n  return data.data;\n};\n_c = ActivityFetcher;\nvar _c;\n$RefreshReg$(_c, \"ActivityFetcher\");","map":{"version":3,"names":["ActivityFetcher","contractAddress","filters","cursor","limit","filterParam","eventTypes","map","eventType","join","tokenId","token_id","url","process","env","REACT_APP_TEMP_API_URL","r","fetch","method","headers","data","json"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/genie/ActivityFetcher.ts"],"sourcesContent":["import { ActivityEventResponse, ActivityFilter } from '../../types'\n\nexport const ActivityFetcher = async (\n  contractAddress: string,\n  filters?: ActivityFilter,\n  cursor?: string,\n  limit?: string\n): Promise<ActivityEventResponse> => {\n  const filterParam =\n    filters && filters.eventTypes\n      ? `&event_types=${filters.eventTypes?.map((eventType) => `${eventType}`).join(',')}`\n      : ''\n\n  const tokenId = filters?.token_id ? `&token_id=${filters?.token_id}` : ''\n\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/collections/${contractAddress}/activity?limit=${\n    limit ? limit : '25'\n  }${filterParam}${cursor ? `&cursor=${cursor}` : ''}${tokenId}`\n\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n  const data = await r.json()\n  return data.data\n}\n"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,OAC7BC,eAAuB,EACvBC,OAAwB,EACxBC,MAAe,EACfC,KAAc,KACqB;EAAA;EACnC,MAAMC,WAAW,GACfH,OAAO,IAAIA,OAAO,CAACI,UAAU,GACxB,gBAAa,uBAAEJ,OAAO,CAACI,UAAU,wDAAlB,oBAAoBC,GAAG,CAAEC,SAAS,IAAM,GAAEA,SAAU,EAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAE,EAAC,GAClF,EAAE;EAER,MAAMC,OAAO,GAAG,CAAAR,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,QAAQ,IAAI,aAAYT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,QAAS,EAAC,GAAG,EAAE;EAEzE,MAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,oBAAmBd,eAAgB,mBACnFG,KAAK,GAAGA,KAAK,GAAG,IACjB,GAAEC,WAAY,GAAEF,MAAM,GAAI,WAAUA,MAAO,EAAC,GAAG,EAAG,GAAEO,OAAQ,EAAC;EAE9D,MAAMM,CAAC,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;IACzBM,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EACF,MAAMC,IAAI,GAAG,MAAMJ,CAAC,CAACK,IAAI,EAAE;EAC3B,OAAOD,IAAI,CAACA,IAAI;AAClB,CAAC;AAAA,KAzBYpB,eAAe;AAAA;AAAA"},"metadata":{},"sourceType":"module"}