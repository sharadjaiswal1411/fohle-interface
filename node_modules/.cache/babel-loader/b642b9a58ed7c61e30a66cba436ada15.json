{"ast":null,"code":"'use strict';\n\nvar openCloseTag = require('../util/html').openCloseTag;\nmodule.exports = blockHTML;\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_LT = '<';\nfunction blockHTML(eat, value, silent) {\n  var self = this;\n  var blocks = self.options.blocks;\n  var length = value.length;\n  var index = 0;\n  var next;\n  var line;\n  var offset;\n  var character;\n  var count;\n  var sequence;\n  var subvalue;\n  var sequences = [[/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Za-z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + blocks.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(openCloseTag.source + '\\\\s*$'), /^$/, false]];\n\n  /* Eat initial spacing. */\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n    index++;\n  }\n  if (value.charAt(index) !== C_LT) {\n    return;\n  }\n  next = value.indexOf(C_NEWLINE, index + 1);\n  next = next === -1 ? length : next;\n  line = value.slice(index, next);\n  offset = -1;\n  count = sequences.length;\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset];\n      break;\n    }\n  }\n  if (!sequence) {\n    return;\n  }\n  if (silent) {\n    return sequence[2];\n  }\n  index = next;\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(C_NEWLINE, index + 1);\n      next = next === -1 ? length : next;\n      line = value.slice(index + 1, next);\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next;\n        }\n        break;\n      }\n      index = next;\n    }\n  }\n  subvalue = value.slice(0, index);\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"names":["openCloseTag","require","module","exports","blockHTML","C_TAB","C_SPACE","C_NEWLINE","C_LT","eat","value","silent","self","blocks","options","length","index","next","line","offset","character","count","sequence","subvalue","sequences","RegExp","join","source","charAt","indexOf","slice","test","type"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/html-block.js"],"sourcesContent":["'use strict';\n\nvar openCloseTag = require('../util/html').openCloseTag;\n\nmodule.exports = blockHTML;\n\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_NEWLINE = '\\n';\nvar C_LT = '<';\n\nfunction blockHTML(eat, value, silent) {\n  var self = this;\n  var blocks = self.options.blocks;\n  var length = value.length;\n  var index = 0;\n  var next;\n  var line;\n  var offset;\n  var character;\n  var count;\n  var sequence;\n  var subvalue;\n\n  var sequences = [\n    [/^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true],\n    [/^<!--/, /-->/, true],\n    [/^<\\?/, /\\?>/, true],\n    [/^<![A-Za-z]/, />/, true],\n    [/^<!\\[CDATA\\[/, /\\]\\]>/, true],\n    [new RegExp('^</?(' + blocks.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true],\n    [new RegExp(openCloseTag.source + '\\\\s*$'), /^$/, false]\n  ];\n\n  /* Eat initial spacing. */\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    index++;\n  }\n\n  if (value.charAt(index) !== C_LT) {\n    return;\n  }\n\n  next = value.indexOf(C_NEWLINE, index + 1);\n  next = next === -1 ? length : next;\n  line = value.slice(index, next);\n  offset = -1;\n  count = sequences.length;\n\n  while (++offset < count) {\n    if (sequences[offset][0].test(line)) {\n      sequence = sequences[offset];\n      break;\n    }\n  }\n\n  if (!sequence) {\n    return;\n  }\n\n  if (silent) {\n    return sequence[2];\n  }\n\n  index = next;\n\n  if (!sequence[1].test(line)) {\n    while (index < length) {\n      next = value.indexOf(C_NEWLINE, index + 1);\n      next = next === -1 ? length : next;\n      line = value.slice(index + 1, next);\n\n      if (sequence[1].test(line)) {\n        if (line) {\n          index = next;\n        }\n\n        break;\n      }\n\n      index = next;\n    }\n  }\n\n  subvalue = value.slice(0, index);\n\n  return eat(subvalue)({type: 'html', value: subvalue});\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}