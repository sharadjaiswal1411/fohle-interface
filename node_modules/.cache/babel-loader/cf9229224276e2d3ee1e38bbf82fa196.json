{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { log } from '../../util';\n/**\n * Provider for getting V2 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V2SubgraphProviderWithFallBacks\n */\nexport var V2SubgraphProviderWithFallBacks = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of V2SubgraphProviderWithFallBacks.\n   * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.\n   */\n  function V2SubgraphProviderWithFallBacks(fallbacks) {\n    _classCallCheck(this, V2SubgraphProviderWithFallBacks);\n    this.fallbacks = fallbacks;\n  }\n  _createClass(V2SubgraphProviderWithFallBacks, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tokenIn, tokenOut, providerConfig) {\n        var i, provider, pools;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n              case 1:\n                if (!(i < this.fallbacks.length)) {\n                  _context.next = 16;\n                  break;\n                }\n                provider = this.fallbacks[i];\n                _context.prev = 3;\n                _context.next = 6;\n                return provider.getPools(tokenIn, tokenOut, providerConfig);\n              case 6:\n                pools = _context.sent;\n                return _context.abrupt(\"return\", pools);\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](3);\n                log.info(\"Failed to get subgraph pools for V2 from fallback #\".concat(i));\n              case 13:\n                i++;\n                _context.next = 1;\n                break;\n              case 16:\n                throw new Error('Failed to get subgraph pools from any providers');\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 10]]);\n      }));\n      function getPools(_x, _x2, _x3) {\n        return _getPools.apply(this, arguments);\n      }\n      return getPools;\n    }()\n  }]);\n  return V2SubgraphProviderWithFallBacks;\n}();","map":{"version":3,"sources":["../../../../src/providers/v2/subgraph-provider-with-fallback.ts"],"names":[],"mappings":";;;;AAEA,SAAS,GAAG,QAAQ,YAAY;AAKhC;;;;;;AAMG;AACH,WAAa,+BAA+B;EAC1C;;;AAGG;EACH,yCAAoB,SAAgC,EAAA;IAAA;IAAhC,IAAA,CAAA,SAAS,GAAT,SAAS;EAA0B;EAAC;IAAA;IAAA;MAAA,yEAEjD,iBACL,OAAe,EACf,QAAgB,EAChB,cAA+B;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEtB,CAAC,GAAG,CAAC;cAAA;gBAAA,MAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM;kBAAA;kBAAA;gBAAA;gBACjC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE;gBAAA;gBAAA;gBAAA,OAEb,QAAQ,CAAC,QAAQ,CACnC,OAAO,EACP,QAAQ,EACR,cAAc,CACf;cAAA;gBAJK,KAAK;gBAAA,iCAKJ,KAAK;cAAA;gBAAA;gBAAA;gBAEZ,GAAG,CAAC,IAAI,8DAAuD,CAAC,EAAG;cAAC;gBAV7B,CAAC,EAAE;gBAAA;gBAAA;cAAA;gBAAA,MAcxC,IAAI,KAAK,CAAC,iDAAiD,CAAC;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CACnE;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA","sourceRoot":"","sourcesContent":["import { log } from '../../util';\n/**\n * Provider for getting V2 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V2SubgraphProviderWithFallBacks\n */\nexport class V2SubgraphProviderWithFallBacks {\n    /**\n     * Creates an instance of V2SubgraphProviderWithFallBacks.\n     * @param fallbacks Ordered list of `IV2SubgraphProvider` to try to get pools from.\n     */\n    constructor(fallbacks) {\n        this.fallbacks = fallbacks;\n    }\n    async getPools(tokenIn, tokenOut, providerConfig) {\n        for (let i = 0; i < this.fallbacks.length; i++) {\n            const provider = this.fallbacks[i];\n            try {\n                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\n                return pools;\n            }\n            catch (err) {\n                log.info(`Failed to get subgraph pools for V2 from fallback #${i}`);\n            }\n        }\n        throw new Error('Failed to get subgraph pools from any providers');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjIvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUM7OztPQUdHO0lBQ0gsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}