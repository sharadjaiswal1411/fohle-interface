{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_CARET = '^';\nvar C_COLON = ':';\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n  if (!self.options.footnotes) {\n    return;\n  }\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n  while (index < length) {\n    character = value.charAt(index);\n    if (!whitespace(character)) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n  if (value.charAt(index) !== C_BRACKET_OPEN || value.charAt(index + 1) !== C_CARET) {\n    return;\n  }\n  subvalue += C_BRACKET_OPEN + C_CARET;\n  index = subvalue.length;\n  queue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n    queue += character;\n    index++;\n  }\n  if (!queue || value.charAt(index) !== C_BRACKET_CLOSE || value.charAt(index + 1) !== C_COLON) {\n    return;\n  }\n  if (silent) {\n    return true;\n  }\n  identifier = normalize(queue);\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n  while (index < length) {\n    character = value.charAt(index);\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n    subvalue += character;\n    index++;\n  }\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n  while (index < length) {\n    character = value.charAt(index);\n    if (character === C_NEWLINE) {\n      subqueue = character;\n      index++;\n      while (index < length) {\n        character = value.charAt(index);\n        if (character !== C_NEWLINE) {\n          break;\n        }\n        subqueue += character;\n        index++;\n      }\n      queue += subqueue;\n      subqueue = '';\n      while (index < length) {\n        character = value.charAt(index);\n        if (character !== C_SPACE) {\n          break;\n        }\n        subqueue += character;\n        index++;\n      }\n      if (subqueue.length === 0) {\n        break;\n      }\n      queue += subqueue;\n    }\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n    content += character;\n    index++;\n  }\n  subvalue += content;\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n    return '';\n  });\n  add = eat(subvalue);\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n  return add({\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: content\n  });\n}","map":{"version":3,"names":["whitespace","require","normalize","module","exports","footnoteDefinition","notInList","notInBlock","C_BACKSLASH","C_NEWLINE","C_TAB","C_SPACE","C_BRACKET_OPEN","C_BRACKET_CLOSE","C_CARET","C_COLON","EXPRESSION_INITIAL_TAB","eat","value","silent","self","offsets","offset","index","length","subvalue","now","currentLine","content","queue","subqueue","character","identifier","add","exit","options","footnotes","line","charAt","column","replace","enterBlock","tokenizeBlock","type","children"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/footnote-definition.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\n\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\n\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_CARET = '^';\nvar C_COLON = ':';\n\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\n\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n\n  if (!self.options.footnotes) {\n    return;\n  }\n\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  if (\n    value.charAt(index) !== C_BRACKET_OPEN ||\n    value.charAt(index + 1) !== C_CARET\n  ) {\n    return;\n  }\n\n  subvalue += C_BRACKET_OPEN + C_CARET;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (\n    !queue ||\n    value.charAt(index) !== C_BRACKET_CLOSE ||\n    value.charAt(index + 1) !== C_COLON\n  ) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  identifier = normalize(queue);\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      subqueue = character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_NEWLINE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      queue += subqueue;\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_SPACE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      if (subqueue.length === 0) {\n        break;\n      }\n\n      queue += subqueue;\n    }\n\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n\n    content += character;\n    index++;\n  }\n\n  subvalue += content;\n\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n\n    return '';\n  });\n\n  add = eat(subvalue);\n\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n\n  return add({\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: content\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}