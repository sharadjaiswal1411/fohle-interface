{"ast":null,"code":"import{formatEther,parseEther}from'@ethersproject/units';export var formatUsdPrice=function formatUsdPrice(price){if(price>1000000){return\"$\".concat((price/1000000).toFixed(1),\"M\");}else if(price>1000){return\"$\".concat((price/1000).toFixed(1),\"K\");}else{return\"$\".concat(price.toFixed(2));}};export var formatEth=function formatEth(price){if(price>1000000){return\"\".concat(Math.round(price/1000000),\"M\");}else if(price>1000){return\"\".concat(Math.round(price/1000),\"K\");}else if(price<0.001){return'<0.001';}else{return\"\".concat(Math.round(price*100+Number.EPSILON)/100);}};export var formatUSDPriceWithCommas=function formatUSDPriceWithCommas(price){return\"$\".concat(Math.round(price).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,','));};export var formatEthPrice=function formatEthPrice(price){if(!price)return 0;var formattedPrice=parseFloat(formatEther(String(price)));return Math.round(formattedPrice*(formattedPrice>=1?100:1000)+Number.EPSILON)/(formattedPrice>=1?100:1000);};// Stringify the `price` anyway because the `price` is being passed as any in some places\nexport var numberToWei=function numberToWei(amount){return parseEther(amount.toString());};export var ethNumberStandardFormatter=function ethNumberStandardFormatter(amount){var includeDollarSign=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var removeZeroes=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var roundToNearestWholeNumber=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;if(!amount)return'-';var amountInDecimals=parseFloat(amount.toString());var conditionalDollarSign=includeDollarSign?'$':'';if(amountInDecimals<=0)return'-';if(amountInDecimals<0.0001)return\"< \".concat(conditionalDollarSign,\"0.00001\");if(amountInDecimals<1)return\"\".concat(conditionalDollarSign).concat(parseFloat(amountInDecimals.toFixed(3)));var formattedPrice=(removeZeroes?parseFloat(amountInDecimals.toFixed(2)):roundToNearestWholeNumber?Math.round(amountInDecimals):amountInDecimals.toFixed(2)).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g,',');return conditionalDollarSign+formattedPrice;};export var formatWeiToDecimal=function formatWeiToDecimal(amount){var removeZeroes=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(!amount)return'-';return ethNumberStandardFormatter(formatEther(amount),false,removeZeroes,false);};// prevent BigNumber overflow by properly handling scientific notation and comma delimited values\nexport function wrapScientificNotation(value){return parseFloat(value.toString()).toLocaleString('fullwide',{useGrouping:false}).replace(',','.').replace(' ','');}","map":{"version":3,"names":["formatEther","parseEther","formatUsdPrice","price","toFixed","formatEth","Math","round","Number","EPSILON","formatUSDPriceWithCommas","toString","replace","formatEthPrice","formattedPrice","parseFloat","String","numberToWei","amount","ethNumberStandardFormatter","includeDollarSign","removeZeroes","roundToNearestWholeNumber","amountInDecimals","conditionalDollarSign","formatWeiToDecimal","wrapScientificNotation","value","toLocaleString","useGrouping"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/currency.ts"],"sourcesContent":["import { formatEther, parseEther } from '@ethersproject/units'\n\nexport const formatUsdPrice = (price: number) => {\n  if (price > 1000000) {\n    return `$${(price / 1000000).toFixed(1)}M`\n  } else if (price > 1000) {\n    return `$${(price / 1000).toFixed(1)}K`\n  } else {\n    return `$${price.toFixed(2)}`\n  }\n}\n\nexport const formatEth = (price: number) => {\n  if (price > 1000000) {\n    return `${Math.round(price / 1000000)}M`\n  } else if (price > 1000) {\n    return `${Math.round(price / 1000)}K`\n  } else if (price < 0.001) {\n    return '<0.001'\n  } else {\n    return `${Math.round(price * 100 + Number.EPSILON) / 100}`\n  }\n}\n\nexport const formatUSDPriceWithCommas = (price: number) => {\n  return `$${Math.round(price)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}`\n}\n\nexport const formatEthPrice = (price: string | undefined) => {\n  if (!price) return 0\n\n  const formattedPrice = parseFloat(formatEther(String(price)))\n  return (\n    Math.round(formattedPrice * (formattedPrice >= 1 ? 100 : 1000) + Number.EPSILON) /\n    (formattedPrice >= 1 ? 100 : 1000)\n  )\n}\n\n// Stringify the `price` anyway because the `price` is being passed as any in some places\nexport const numberToWei = (amount: number) => {\n  return parseEther(amount.toString())\n}\n\nexport const ethNumberStandardFormatter = (\n  amount: string | number | undefined,\n  includeDollarSign = false,\n  removeZeroes = false,\n  roundToNearestWholeNumber = false\n): string => {\n  if (!amount) return '-'\n\n  const amountInDecimals = parseFloat(amount.toString())\n  const conditionalDollarSign = includeDollarSign ? '$' : ''\n\n  if (amountInDecimals <= 0) return '-'\n  if (amountInDecimals < 0.0001) return `< ${conditionalDollarSign}0.00001`\n  if (amountInDecimals < 1) return `${conditionalDollarSign}${parseFloat(amountInDecimals.toFixed(3))}`\n  const formattedPrice = (\n    removeZeroes\n      ? parseFloat(amountInDecimals.toFixed(2))\n      : roundToNearestWholeNumber\n      ? Math.round(amountInDecimals)\n      : amountInDecimals.toFixed(2)\n  )\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  return conditionalDollarSign + formattedPrice\n}\n\nexport const formatWeiToDecimal = (amount: string, removeZeroes = false) => {\n  if (!amount) return '-'\n  return ethNumberStandardFormatter(formatEther(amount), false, removeZeroes, false)\n}\n\n// prevent BigNumber overflow by properly handling scientific notation and comma delimited values\nexport function wrapScientificNotation(value: string | number): string {\n  return parseFloat(value.toString())\n    .toLocaleString('fullwide', { useGrouping: false })\n    .replace(',', '.')\n    .replace(' ', '')\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}