{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nconst geckoTerminalApi = createApi({\n  reducerPath: 'geckoTerminalApi',\n  baseQuery: fetchBaseQuery({\n    // TODO(viet-nv): check prod env\n    baseUrl: 'https://ks-proxy.dev.kyberengineering.io/geckoterminal'\n  }),\n  endpoints: builder => ({\n    geckoTerminalSearch: builder.query({\n      query: search => ({\n        url: '/api/p1/search',\n        params: {\n          query: search\n        }\n      })\n    }),\n    getPoolDetail: builder.query({\n      query: _ref => {\n        let {\n          network,\n          poolAddress\n        } = _ref;\n        return {\n          url: `/api/p1/${network}/pools/${poolAddress}?include=tokens`\n        };\n      }\n    }),\n    candelsticks: builder.query({\n      query: params => ({\n        url: '/contracts/1/candlesticks.json',\n        params\n      })\n    })\n  })\n});\nexport const {\n  useGeckoTerminalSearchQuery,\n  useGetPoolDetailQuery,\n  useLazyCandelsticksQuery\n} = geckoTerminalApi;\nexport default geckoTerminalApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","geckoTerminalApi","reducerPath","baseQuery","baseUrl","endpoints","builder","geckoTerminalSearch","query","search","url","params","getPoolDetail","network","poolAddress","candelsticks","useGeckoTerminalSearchQuery","useGetPoolDetailQuery","useLazyCandelsticksQuery"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/services/geckoTermial.ts"],"sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\ntype SearchResponse = {\n  data: {\n    id: string\n    attributes: {\n      pools: {\n        address: string\n        reserve_in_usd: string\n        tokens: [{ symbol: string }, { symbol: string }]\n        network: {\n          identifier: string\n        }\n      }[]\n    }\n  }\n}\n\ninterface CandleResponse {\n  data: Array<{\n    dt: string\n    o: number\n    h: number\n    l: number\n    c: number\n    v: number\n  }>\n  meta?: {\n    noData: boolean\n  }\n}\n\ninterface CandleParams {\n  token_id: string\n  pool_id: string\n  resolution: number | string\n  from: string | number\n  to: string | number\n  for_update: boolean\n  currency: 'usd' | 'token'\n  count_back?: number\n}\n\ninterface Token {\n  id: string\n  attributes: {\n    name: string\n    symbol: string\n  }\n}\n\nexport interface PoolResponse {\n  data: {\n    id: string\n    attributes: {\n      address: string\n      name: string\n      base_token_id: string\n    }\n  }\n  included: [Token, Token]\n}\n\nconst geckoTerminalApi = createApi({\n  reducerPath: 'geckoTerminalApi',\n  baseQuery: fetchBaseQuery({\n    // TODO(viet-nv): check prod env\n    baseUrl: 'https://ks-proxy.dev.kyberengineering.io/geckoterminal',\n  }),\n  endpoints: builder => ({\n    geckoTerminalSearch: builder.query<SearchResponse, string>({\n      query: search => ({\n        url: '/api/p1/search',\n        params: {\n          query: search,\n        },\n      }),\n    }),\n\n    getPoolDetail: builder.query<PoolResponse, { network: string; poolAddress: string }>({\n      query: ({ network, poolAddress }) => ({\n        url: `/api/p1/${network}/pools/${poolAddress}?include=tokens`,\n      }),\n    }),\n\n    candelsticks: builder.query<CandleResponse, CandleParams>({\n      query: params => ({\n        url: '/contracts/1/candlesticks.json',\n        params,\n      }),\n    }),\n  }),\n})\n\nexport const { useGeckoTerminalSearchQuery, useGetPoolDetailQuery, useLazyCandelsticksQuery } = geckoTerminalApi\n\nexport default geckoTerminalApi"],"mappings":"AAAA,SAASA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AA+DxE,MAAMC,gBAAgB,GAAGF,SAAS,CAAC;EACjCG,WAAW,EAAE,kBAAkB;EAC/BC,SAAS,EAAEH,cAAc,CAAC;IACxB;IACAI,OAAO,EAAE;EACX,CAAC,CAAC;EACFC,SAAS,EAAEC,OAAO,KAAK;IACrBC,mBAAmB,EAAED,OAAO,CAACE,KAAK,CAAyB;MACzDA,KAAK,EAAEC,MAAM,KAAK;QAChBC,GAAG,EAAE,gBAAgB;QACrBC,MAAM,EAAE;UACNH,KAAK,EAAEC;QACT;MACF,CAAC;IACH,CAAC,CAAC;IAEFG,aAAa,EAAEN,OAAO,CAACE,KAAK,CAAyD;MACnFA,KAAK,EAAE;QAAA,IAAC;UAAEK,OAAO;UAAEC;QAAY,CAAC;QAAA,OAAM;UACpCJ,GAAG,EAAG,WAAUG,OAAQ,UAASC,WAAY;QAC/C,CAAC;MAAA;IACH,CAAC,CAAC;IAEFC,YAAY,EAAET,OAAO,CAACE,KAAK,CAA+B;MACxDA,KAAK,EAAEG,MAAM,KAAK;QAChBD,GAAG,EAAE,gCAAgC;QACrCC;MACF,CAAC;IACH,CAAC;EACH,CAAC;AACH,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,2BAA2B;EAAEC,qBAAqB;EAAEC;AAAyB,CAAC,GAAGjB,gBAAgB;AAEhH,eAAeA,gBAAgB"},"metadata":{},"sourceType":"module"}