{"ast":null,"code":"import { Fraction } from '@uniswap/sdk-core';\nimport { CurrencyAmount } from '../../../util/amounts';\nexport function calculateRatioAmountIn(optimalRatio, inputTokenPrice, inputBalance, outputBalance) {\n  // formula: amountToSwap = (inputBalance - (optimalRatio * outputBalance)) / ((optimalRatio * inputTokenPrice) + 1))\n  var amountToSwapRaw = new Fraction(inputBalance.quotient).subtract(optimalRatio.multiply(outputBalance.quotient)).divide(optimalRatio.multiply(inputTokenPrice).add(1));\n  if (amountToSwapRaw.lessThan(0)) {\n    // should never happen since we do checks before calling in\n    throw new Error('routeToRatio: insufficient input token amount');\n  }\n  return CurrencyAmount.fromRawAmount(inputBalance.currency, amountToSwapRaw.quotient);\n}","map":{"version":3,"sources":["../../../../../src/routers/alpha-router/functions/calculate-ratio-amount-in.ts"],"names":[],"mappings":"AAAA,SAAS,QAAQ,QAAQ,mBAAmB;AAE5C,SAAS,cAAc,QAAQ,uBAAuB;AAEtD,OAAM,SAAU,sBAAsB,CACpC,YAAsB,EACtB,eAAyB,EACzB,YAA4B,EAC5B,aAA6B,EAAA;EAE7B;EACA,IAAM,eAAe,GAAG,IAAI,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,CACxD,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CACvD,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAExD,IAAI,eAAe,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;IAC/B;IACA,MAAM,IAAI,KAAK,CAAC,+CAA+C,CAAC;EACjE;EAED,OAAO,cAAc,CAAC,aAAa,CACjC,YAAY,CAAC,QAAQ,EACrB,eAAe,CAAC,QAAQ,CACzB;AACH","sourceRoot":"","sourcesContent":["import { Fraction } from '@uniswap/sdk-core';\nimport { CurrencyAmount } from '../../../util/amounts';\nexport function calculateRatioAmountIn(optimalRatio, inputTokenPrice, inputBalance, outputBalance) {\n    // formula: amountToSwap = (inputBalance - (optimalRatio * outputBalance)) / ((optimalRatio * inputTokenPrice) + 1))\n    const amountToSwapRaw = new Fraction(inputBalance.quotient)\n        .subtract(optimalRatio.multiply(outputBalance.quotient))\n        .divide(optimalRatio.multiply(inputTokenPrice).add(1));\n    if (amountToSwapRaw.lessThan(0)) {\n        // should never happen since we do checks before calling in\n        throw new Error('routeToRatio: insufficient input token amount');\n    }\n    return CurrencyAmount.fromRawAmount(inputBalance.currency, amountToSwapRaw.quotient);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9yb3V0ZXJzL2FscGhhLXJvdXRlci9mdW5jdGlvbnMvY2FsY3VsYXRlLXJhdGlvLWFtb3VudC1pbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFN0MsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRXZELE1BQU0sVUFBVSxzQkFBc0IsQ0FDcEMsWUFBc0IsRUFDdEIsZUFBeUIsRUFDekIsWUFBNEIsRUFDNUIsYUFBNkI7SUFFN0Isb0hBQW9IO0lBQ3BILE1BQU0sZUFBZSxHQUFHLElBQUksUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUM7U0FDeEQsUUFBUSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3ZELE1BQU0sQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBRXpELElBQUksZUFBZSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUMvQiwyREFBMkQ7UUFDM0QsTUFBTSxJQUFJLEtBQUssQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO0tBQ2xFO0lBRUQsT0FBTyxjQUFjLENBQUMsYUFBYSxDQUNqQyxZQUFZLENBQUMsUUFBUSxFQUNyQixlQUFlLENBQUMsUUFBUSxDQUN6QixDQUFDO0FBQ0osQ0FBQyJ9"]},"metadata":{},"sourceType":"module"}