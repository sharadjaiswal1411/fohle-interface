{"ast":null,"code":"/**\n * Converts a filter to the corresponding string key\n * @param filter the filter to convert\n */export function filterToKey(filter){var _filter$address,_filter$topics$map$jo,_filter$topics,_filter$topics$map,_filter$fromBlock,_filter$toBlock;return\"\".concat((_filter$address=filter.address)!==null&&_filter$address!==void 0?_filter$address:'',\":\").concat((_filter$topics$map$jo=(_filter$topics=filter.topics)===null||_filter$topics===void 0?void 0:(_filter$topics$map=_filter$topics.map(function(topic){return topic?Array.isArray(topic)?topic.join(';'):topic:'\\0';}))===null||_filter$topics$map===void 0?void 0:_filter$topics$map.join('-'))!==null&&_filter$topics$map$jo!==void 0?_filter$topics$map$jo:'',\":\").concat((_filter$fromBlock=filter.fromBlock)!==null&&_filter$fromBlock!==void 0?_filter$fromBlock:'',\":\").concat((_filter$toBlock=filter.toBlock)!==null&&_filter$toBlock!==void 0?_filter$toBlock:'');}/**\n * Convert a filter key to the corresponding filter\n * @param key key to convert\n */export function keyToFilter(key){var pcs=key.split(':');var address=pcs[0];var topics=pcs[1].split('-').map(function(topic){if(topic==='\\0')return null;var parts=topic.split(';');if(parts.length===1)return parts[0];return parts;});var fromBlock=pcs[2];var toBlock=pcs[3];return{address:address.length===0?undefined:address,topics:topics,fromBlock:fromBlock.length===0?undefined:fromBlock,toBlock:toBlock.length===0?undefined:toBlock};}/**\n * Determines whether a filter is for a historical log that doesn't need to be re-fetched.\n * @param filter The filter to check.\n * @param blockNumber The current block number.\n */export function isHistoricalLog(filter,blockNumber){if(!filter.toBlock)return false;var toBlock=filter.toBlock;if(typeof toBlock==='string')toBlock=Number.parseInt(toBlock);return toBlock<=blockNumber;}","map":{"version":3,"names":["filterToKey","filter","address","topics","map","topic","Array","isArray","join","fromBlock","toBlock","keyToFilter","key","pcs","split","parts","length","undefined","isHistoricalLog","blockNumber","Number","parseInt"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/logs/utils.ts"],"sourcesContent":["import type { Filter } from '@ethersproject/providers'\n\nexport interface Log {\n  topics: Array<string>\n  data: string\n  transactionIndex: number\n  logIndex: number\n  blockNumber: number\n}\n\n/**\n * Converts a filter to the corresponding string key\n * @param filter the filter to convert\n */\nexport function filterToKey(filter: Filter): string {\n  return `${filter.address ?? ''}:${\n    filter.topics?.map((topic) => (topic ? (Array.isArray(topic) ? topic.join(';') : topic) : '\\0'))?.join('-') ?? ''\n  }:${filter.fromBlock ?? ''}:${filter.toBlock ?? ''}`\n}\n\n/**\n * Convert a filter key to the corresponding filter\n * @param key key to convert\n */\nexport function keyToFilter(key: string): Filter {\n  const pcs = key.split(':')\n  const address = pcs[0]\n  const topics = pcs[1].split('-').map((topic) => {\n    if (topic === '\\0') return null\n    const parts = topic.split(';')\n    if (parts.length === 1) return parts[0]\n    return parts\n  })\n  const fromBlock = pcs[2]\n  const toBlock = pcs[3]\n\n  return {\n    address: address.length === 0 ? undefined : address,\n    topics,\n    fromBlock: fromBlock.length === 0 ? undefined : fromBlock,\n    toBlock: toBlock.length === 0 ? undefined : toBlock,\n  }\n}\n\n/**\n * Determines whether a filter is for a historical log that doesn't need to be re-fetched.\n * @param filter The filter to check.\n * @param blockNumber The current block number.\n */\nexport function isHistoricalLog(filter: Filter, blockNumber: number): boolean {\n  if (!filter.toBlock) return false\n\n  let toBlock = filter.toBlock\n  if (typeof toBlock === 'string') toBlock = Number.parseInt(toBlock)\n  return toBlock <= blockNumber\n}\n"],"mappings":"AAUA;AACA;AACA;AACA,GACA,MAAO,SAASA,YAAW,CAACC,MAAc,CAAU,+GAClD,iCAAUA,MAAM,CAACC,OAAO,mDAAI,EAAE,oDAC5BD,MAAM,CAACE,MAAM,6DAAb,eAAeC,GAAG,CAAC,SAACC,KAAK,QAAMA,MAAK,CAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,CAAGA,KAAK,CAACG,IAAI,CAAC,GAAG,CAAC,CAAGH,KAAK,CAAI,IAAI,EAAC,CAAC,6CAAhG,mBAAkGG,IAAI,CAAC,GAAG,CAAC,+DAAI,EAAE,gCAC/GP,MAAM,CAACQ,SAAS,uDAAI,EAAE,8BAAIR,MAAM,CAACS,OAAO,mDAAI,EAAE,EACpD,CAEA;AACA;AACA;AACA,GACA,MAAO,SAASC,YAAW,CAACC,GAAW,CAAU,CAC/C,GAAMC,IAAG,CAAGD,GAAG,CAACE,KAAK,CAAC,GAAG,CAAC,CAC1B,GAAMZ,QAAO,CAAGW,GAAG,CAAC,CAAC,CAAC,CACtB,GAAMV,OAAM,CAAGU,GAAG,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAACV,GAAG,CAAC,SAACC,KAAK,CAAK,CAC9C,GAAIA,KAAK,GAAK,IAAI,CAAE,MAAO,KAAI,CAC/B,GAAMU,MAAK,CAAGV,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAC9B,GAAIC,KAAK,CAACC,MAAM,GAAK,CAAC,CAAE,MAAOD,MAAK,CAAC,CAAC,CAAC,CACvC,MAAOA,MAAK,CACd,CAAC,CAAC,CACF,GAAMN,UAAS,CAAGI,GAAG,CAAC,CAAC,CAAC,CACxB,GAAMH,QAAO,CAAGG,GAAG,CAAC,CAAC,CAAC,CAEtB,MAAO,CACLX,OAAO,CAAEA,OAAO,CAACc,MAAM,GAAK,CAAC,CAAGC,SAAS,CAAGf,OAAO,CACnDC,MAAM,CAANA,MAAM,CACNM,SAAS,CAAEA,SAAS,CAACO,MAAM,GAAK,CAAC,CAAGC,SAAS,CAAGR,SAAS,CACzDC,OAAO,CAAEA,OAAO,CAACM,MAAM,GAAK,CAAC,CAAGC,SAAS,CAAGP,OAC9C,CAAC,CACH,CAEA;AACA;AACA;AACA;AACA,GACA,MAAO,SAASQ,gBAAe,CAACjB,MAAc,CAAEkB,WAAmB,CAAW,CAC5E,GAAI,CAAClB,MAAM,CAACS,OAAO,CAAE,MAAO,MAAK,CAEjC,GAAIA,QAAO,CAAGT,MAAM,CAACS,OAAO,CAC5B,GAAI,MAAOA,QAAO,GAAK,QAAQ,CAAEA,OAAO,CAAGU,MAAM,CAACC,QAAQ,CAACX,OAAO,CAAC,CACnE,MAAOA,QAAO,EAAIS,WAAW,CAC/B"},"metadata":{},"sourceType":"module"}