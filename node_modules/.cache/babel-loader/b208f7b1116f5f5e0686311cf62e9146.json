{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/AddLiquidity/redirects.tsx\",\n  _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport AddLiquidity from './index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function RedirectDuplicateTokenIds() {\n  _s();\n  var _WRAPPED_NATIVE_CURRE, _WRAPPED_NATIVE_CURRE2;\n  const {\n    currencyIdA,\n    currencyIdB\n  } = useParams();\n  const {\n    chainId\n  } = useWeb3React();\n\n  // prevent weth + eth\n  const isETHOrWETHA = currencyIdA === 'ETH' || chainId !== undefined && currencyIdA === ((_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.address);\n  const isETHOrWETHB = currencyIdB === 'ETH' || chainId !== undefined && currencyIdB === ((_WRAPPED_NATIVE_CURRE2 = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE2 === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE2.address);\n  if (currencyIdA && currencyIdB && (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || isETHOrWETHA && isETHOrWETHB)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: `/add/${currencyIdA}`,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AddLiquidity, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n_s(RedirectDuplicateTokenIds, \"8xYVfLBLHv5MEuttaDh03vqISrE=\", false, function () {\n  return [useParams, useWeb3React];\n});\n_c = RedirectDuplicateTokenIds;\nvar _c;\n$RefreshReg$(_c, \"RedirectDuplicateTokenIds\");","map":{"version":3,"names":["useWeb3React","Navigate","useParams","WRAPPED_NATIVE_CURRENCY","AddLiquidity","RedirectDuplicateTokenIds","currencyIdA","currencyIdB","chainId","isETHOrWETHA","undefined","address","isETHOrWETHB","toLowerCase"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/AddLiquidity/redirects.tsx"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { Navigate, useParams } from 'react-router-dom'\n\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport AddLiquidity from './index'\n\nexport function RedirectDuplicateTokenIds() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA: string; currencyIdB: string; feeAmount?: string }>()\n\n  const { chainId } = useWeb3React()\n\n  // prevent weth + eth\n  const isETHOrWETHA =\n    currencyIdA === 'ETH' || (chainId !== undefined && currencyIdA === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n  const isETHOrWETHB =\n    currencyIdB === 'ETH' || (chainId !== undefined && currencyIdB === WRAPPED_NATIVE_CURRENCY[chainId]?.address)\n\n  if (\n    currencyIdA &&\n    currencyIdB &&\n    (currencyIdA.toLowerCase() === currencyIdB.toLowerCase() || (isETHOrWETHA && isETHOrWETHB))\n  ) {\n    return <Navigate to={`/add/${currencyIdA}`} replace />\n  }\n  return <AddLiquidity />\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,kBAAkB;AAEtD,SAASC,uBAAuB,QAAQ,wBAAwB;AAChE,OAAOC,YAAY,MAAM,SAAS;AAAA;AAElC,OAAO,SAASC,yBAAyB,GAAG;EAAA;EAAA;EAC1C,MAAM;IAAEC,WAAW;IAAEC;EAAY,CAAC,GAAGL,SAAS,EAAoE;EAElH,MAAM;IAAEM;EAAQ,CAAC,GAAGR,YAAY,EAAE;;EAElC;EACA,MAAMS,YAAY,GAChBH,WAAW,KAAK,KAAK,IAAKE,OAAO,KAAKE,SAAS,IAAIJ,WAAW,+BAAKH,uBAAuB,CAACK,OAAO,CAAC,0DAAhC,sBAAkCG,OAAO,CAAC;EAC/G,MAAMC,YAAY,GAChBL,WAAW,KAAK,KAAK,IAAKC,OAAO,KAAKE,SAAS,IAAIH,WAAW,gCAAKJ,uBAAuB,CAACK,OAAO,CAAC,2DAAhC,uBAAkCG,OAAO,CAAC;EAE/G,IACEL,WAAW,IACXC,WAAW,KACVD,WAAW,CAACO,WAAW,EAAE,KAAKN,WAAW,CAACM,WAAW,EAAE,IAAKJ,YAAY,IAAIG,YAAa,CAAC,EAC3F;IACA,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAG,QAAON,WAAY,EAAE;MAAC,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG;EACxD;EACA,oBAAO,QAAC,YAAY;IAAA;IAAA;IAAA;EAAA,QAAG;AACzB;AAAC,GAnBeD,yBAAyB;EAAA,QACFH,SAAS,EAE1BF,YAAY;AAAA;AAAA,KAHlBK,yBAAyB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}