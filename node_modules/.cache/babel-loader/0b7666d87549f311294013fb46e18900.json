{"ast":null,"code":"import { Protocol } from '@uniswap/router-sdk';\nimport { routeAmountsToString } from '@uniswap/smart-order-router';\nimport { Pool } from '@uniswap/v3-sdk';\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(type, amount, _ref) {\n  let {\n    quote,\n    quoteGasAdjusted,\n    route,\n    estimatedGasUsed,\n    estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD,\n    gasPriceWei,\n    methodParameters,\n    blockNumber\n  } = _ref;\n  const routeResponse = [];\n  for (const subRoute of route) {\n    const {\n      amount,\n      quote,\n      tokenPath\n    } = subRoute;\n    const pools = subRoute.protocol === Protocol.V2 ? subRoute.route.pairs : subRoute.route.pools;\n    const curRoute = [];\n    for (let i = 0; i < pools.length; i++) {\n      const nextPool = pools[i];\n      const tokenIn = tokenPath[i];\n      const tokenOut = tokenPath[i + 1];\n      let edgeAmountIn = undefined;\n      if (i === 0) {\n        edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString();\n      }\n      let edgeAmountOut = undefined;\n      if (i === pools.length - 1) {\n        edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString();\n      }\n      if (nextPool instanceof Pool) {\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut\n        });\n      } else {\n        const reserve0 = nextPool.reserve0;\n        const reserve1 = nextPool.reserve1;\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol\n            },\n            quotient: reserve0.quotient.toString()\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol\n            },\n            quotient: reserve1.quotient.toString()\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut\n        });\n      }\n    }\n    routeResponse.push(curRoute);\n  }\n  const result = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route)\n  };\n  return result;\n}","map":{"version":3,"names":["Protocol","routeAmountsToString","Pool","transformSwapRouteToGetQuoteResult","type","amount","quote","quoteGasAdjusted","route","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","routeResponse","subRoute","tokenPath","pools","protocol","V2","pairs","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","quotient","toString","edgeAmountOut","push","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","reserve0","reserve1","token","currency","wrapped","result","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","routeString"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/transformSwapRouteToGetQuoteResult.ts"],"sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount } from '@uniswap/sdk-core'\nimport { routeAmountsToString, SwapRoute } from '@uniswap/smart-order-router'\nimport { Pool } from '@uniswap/v3-sdk'\nimport { GetQuoteResult, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult(\n  type: 'exactIn' | 'exactOut',\n  amount: CurrencyAmount<Currency>,\n  {\n    quote,\n    quoteGasAdjusted,\n    route,\n    estimatedGasUsed,\n    estimatedGasUsedQuoteToken,\n    estimatedGasUsedUSD,\n    gasPriceWei,\n    methodParameters,\n    blockNumber,\n  }: SwapRoute\n): GetQuoteResult {\n  const routeResponse: Array<(V3PoolInRoute | V2PoolInRoute)[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    const pools = subRoute.protocol === Protocol.V2 ? subRoute.route.pairs : subRoute.route.pools\n    const curRoute: (V3PoolInRoute | V2PoolInRoute)[] = []\n    for (let i = 0; i < pools.length; i++) {\n      const nextPool = pools[i]\n      const tokenIn = tokenPath[i]\n      const tokenOut = tokenPath[i + 1]\n\n      let edgeAmountIn = undefined\n      if (i === 0) {\n        edgeAmountIn = type === 'exactIn' ? amount.quotient.toString() : quote.quotient.toString()\n      }\n\n      let edgeAmountOut = undefined\n      if (i === pools.length - 1) {\n        edgeAmountOut = type === 'exactIn' ? quote.quotient.toString() : amount.quotient.toString()\n      }\n\n      if (nextPool instanceof Pool) {\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      } else {\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n    }\n\n    routeResponse.push(curRoute)\n  }\n\n  const result: GetQuoteResult = {\n    methodParameters,\n    blockNumber: blockNumber.toString(),\n    amount: amount.quotient.toString(),\n    amountDecimals: amount.toExact(),\n    quote: quote.quotient.toString(),\n    quoteDecimals: quote.toExact(),\n    quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n    quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n    gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n    gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n    gasUseEstimate: estimatedGasUsed.toString(),\n    gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n    gasPriceWei: gasPriceWei.toString(),\n    route: routeResponse,\n    routeString: routeAmountsToString(route),\n  }\n\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}