{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useMemo } from 'react';\nimport { apolloClient } from './apollo';\nconst query = gql`\n  query FeeTierDistribution($token0: String!, $token1: String!) {\n    _meta {\n      block {\n        number\n      }\n    }\n    asToken0: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token0, token1: $token1 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n    asToken1: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token1, token1: $token0 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n  }\n`;\nexport default function useFeeTierDistributionQuery(token0, token1, interval) {\n  _s();\n  const {\n    data,\n    loading: isLoading,\n    error\n  } = useQuery(query, {\n    variables: {\n      token0: token0 === null || token0 === void 0 ? void 0 : token0.toLowerCase(),\n      token1: token1 === null || token1 === void 0 ? void 0 : token1.toLowerCase()\n    },\n    pollInterval: interval,\n    client: apolloClient\n  });\n  return useMemo(() => ({\n    error,\n    isLoading,\n    data\n  }), [data, error, isLoading]);\n}\n_s(useFeeTierDistributionQuery, \"gjuHhMOhlMwRR9OS8d0j/7tnAaI=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","gql","useMemo","apolloClient","query","useFeeTierDistributionQuery","token0","token1","interval","data","loading","isLoading","error","variables","toLowerCase","pollInterval","client"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/thegraph/FeeTierDistributionQuery.ts"],"sourcesContent":["import { ApolloError, useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { FeeTierDistributionQuery } from './__generated__/types-and-hooks'\nimport { apolloClient } from './apollo'\n\nconst query = gql`\n  query FeeTierDistribution($token0: String!, $token1: String!) {\n    _meta {\n      block {\n        number\n      }\n    }\n    asToken0: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token0, token1: $token1 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n    asToken1: pools(\n      orderBy: totalValueLockedToken0\n      orderDirection: desc\n      where: { token0: $token1, token1: $token0 }\n    ) {\n      feeTier\n      totalValueLockedToken0\n      totalValueLockedToken1\n    }\n  }\n`\n\nexport default function useFeeTierDistributionQuery(\n  token0: string | undefined,\n  token1: string | undefined,\n  interval: number\n): { error: ApolloError | undefined; isLoading: boolean; data: FeeTierDistributionQuery } {\n  const {\n    data,\n    loading: isLoading,\n    error,\n  } = useQuery(query, {\n    variables: {\n      token0: token0?.toLowerCase(),\n      token1: token1?.toLowerCase(),\n    },\n    pollInterval: interval,\n    client: apolloClient,\n  })\n\n  return useMemo(\n    () => ({\n      error,\n      isLoading,\n      data,\n    }),\n    [data, error, isLoading]\n  )\n}\n"],"mappings":";AAAA,SAAsBA,QAAQ,QAAQ,gBAAgB;AACtD,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,OAAO,QAAQ,OAAO;AAG/B,SAASC,YAAY,QAAQ,UAAU;AAEvC,MAAMC,KAAK,GAAGH,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAe,SAASI,2BAA2B,CACjDC,MAA0B,EAC1BC,MAA0B,EAC1BC,QAAgB,EACwE;EAAA;EACxF,MAAM;IACJC,IAAI;IACJC,OAAO,EAAEC,SAAS;IAClBC;EACF,CAAC,GAAGZ,QAAQ,CAACI,KAAK,EAAE;IAClBS,SAAS,EAAE;MACTP,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEQ,WAAW,EAAE;MAC7BP,MAAM,EAAEA,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEO,WAAW;IAC7B,CAAC;IACDC,YAAY,EAAEP,QAAQ;IACtBQ,MAAM,EAAEb;EACV,CAAC,CAAC;EAEF,OAAOD,OAAO,CACZ,OAAO;IACLU,KAAK;IACLD,SAAS;IACTF;EACF,CAAC,CAAC,EACF,CAACA,IAAI,EAAEG,KAAK,EAAED,SAAS,CAAC,CACzB;AACH;AAAC,GA1BuBN,2BAA2B;EAAA,QAS7CL,QAAQ;AAAA"},"metadata":{},"sourceType":"module"}