{"ast":null,"code":"import React, { isValidElement, cloneElement, createContext, useRef, useState, useCallback, useEffect, useMemo } from 'react';\nexport { default as warning } from 'warning';\n\n/* eslint-disable no-restricted-globals, eqeqeq  */\n/**\r\n * React currently throws a warning when using useLayoutEffect on the server.\r\n * To get around it, we can conditionally useEffect on the server (no-op) and\r\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\r\n * ensure we don't get a render flash for certain operations, but we may also\r\n * need affected components to render on the server. One example is when setting\r\n * a component's descendants to retrieve their index values.\r\n *\r\n * Important to note that using this hook as an escape hatch will break the\r\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\r\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\r\n * any server/client mismatch.\r\n *\r\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\r\n * likely that the component in question shouldn't be rendered on the server at\r\n * all, so a better approach would be to lazily render those in a parent\r\n * component after client-side hydration.\r\n *\r\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\r\n * cause some issues for SSR users, whether the warning shows or not. Audit and\r\n * fix these.\r\n *\r\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\r\n *\r\n * @param effect\r\n * @param deps\r\n */\n\nvar useIsomorphicLayoutEffect = /*#__PURE__*/canUseDOM() ? React.useLayoutEffect : React.useEffect;\nvar checkedPkgs = {};\n/**\r\n * When in dev mode, checks that styles for a given @reach package are loaded.\r\n *\r\n * @param packageName Name of the package to check.\r\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\r\n */\n// @ts-ignore\n\nvar checkStyles = noop;\nif (process.env.NODE_ENV !== \"production\") {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  var _ref = typeof process !== \"undefined\" ? process : {\n      env: {\n        NODE_ENV: \"development\"\n      }\n    },\n    env = _ref.env;\n  checkStyles = function checkStyles(packageName) {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n    if (env.NODE_ENV !== \"test\" && parseInt(window.getComputedStyle(document.body).getPropertyValue(\"--reach-\" + packageName), 10) !== 1) {\n      console.warn(\"@reach/\" + packageName + \" styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\\n\\n    import \\\"@reach/\" + packageName + \"/styles.css\\\";\\n\\n  Otherwise you'll need to include them some other way:\\n\\n    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"node_modules/@reach/\" + packageName + \"/styles.css\\\" />\\n\\n  For more information visit https://ui.reach.tech/styling.\\n  \");\n    }\n  };\n}\n/**\r\n * Ponyfill for the global object in some environments.\r\n *\r\n * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\r\n */\n\nvar ponyfillGlobal = typeof window != \"undefined\" && window.Math == Math ? window : typeof self != \"undefined\" && self.Math == Math ? self : /*#__PURE__*/\n// eslint-disable-next-line no-new-func\nFunction(\"return this\")();\n/**\r\n * Passes or assigns an arbitrary value to a ref function or object.\r\n *\r\n * @param ref\r\n * @param value\r\n */\n\nfunction assignRef(ref, value) {\n  if (ref == null) return;\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(\"Cannot assign value \\\"\" + value + \"\\\" to ref \\\"\" + ref + \"\\\"\");\n    }\n  }\n}\n/**\r\n * Checks true|\"true\" vs false|\"false\"\r\n *\r\n * @param value\r\n */\n\nfunction boolOrBoolString(value) {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\nfunction canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\n/**\r\n * Type-safe clone element\r\n *\r\n * @param element\r\n * @param props\r\n * @param children\r\n */\n\nfunction cloneValidElement(element, props) {\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n  return isValidElement(element) ? cloneElement.apply(void 0, [element, props].concat(children)) : element;\n}\nfunction createNamedContext(name, defaultValue) {\n  var Ctx = createContext(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n/**\r\n * This is a hack for sure. The thing is, getting a component to intelligently\r\n * infer props based on a component or JSX string passed into an `as` prop is\r\n * kind of a huge pain. Getting it to work and satisfy the constraints of\r\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\r\n * type song-and-dance every time we want to forward a ref into a component\r\n * that accepts an `as` prop, we abstract all of that mess to this function for\r\n * the time time being.\r\n */\n\nfunction forwardRefWithAs(render) {\n  return React.forwardRef(render);\n}\nfunction memoWithAs(Component, propsAreEqual) {\n  return React.memo(Component, propsAreEqual);\n}\n/**\r\n * Get the size of the working document minus the scrollbar offset.\r\n *\r\n * @param element\r\n */\n\nfunction getDocumentDimensions(element) {\n  if (!canUseDOM()) return {\n    width: 0,\n    height: 0\n  };\n  var doc = element ? getOwnerDocument(element) : document;\n  var win = element ? getOwnerWindow(element) : window;\n  return {\n    width: doc.documentElement.clientWidth || win.innerWidth,\n    height: doc.documentElement.clientHeight || win.innerHeight\n  };\n}\n/**\r\n * Get the scoll position of the global window object relative to a given node.\r\n *\r\n * @param element\r\n */\n\nfunction getScrollPosition(element) {\n  if (!canUseDOM()) return {\n    scrollX: 0,\n    scrollY: 0\n  };\n  var win = element ? getOwnerWindow(element) : window;\n  return {\n    scrollX: win.scrollX,\n    scrollY: win.scrollY\n  };\n}\n/**\r\n * Get a computed style value by property, backwards compatible with IE\r\n * @param element\r\n * @param styleProp\r\n */\n\nfunction getElementComputedStyle(element, styleProp) {\n  var y = null;\n  var doc = getOwnerDocument(element);\n  if (element.currentStyle) {\n    y = element.currentStyle[styleProp];\n  } else if (doc && doc.defaultView && isFunction(doc.defaultView.getComputedStyle)) {\n    y = doc.defaultView.getComputedStyle(element, null).getPropertyValue(styleProp);\n  }\n  return y;\n}\n/**\r\n * Get an element's owner document. Useful when components are used in iframes\r\n * or other environments like dev tools.\r\n *\r\n * @param element\r\n */\n\nfunction getOwnerDocument(element) {\n  return element && element.ownerDocument ? element.ownerDocument : canUseDOM() ? document : null;\n}\nfunction getOwnerWindow(element) {\n  var doc = element ? getOwnerDocument(element) : null;\n  return doc ? doc.defaultView || window : null;\n}\n/**\r\n * Get the scrollbar offset distance.\r\n *\r\n * TODO: Remove in 1.0 (we used this in public examples)\r\n */\n\nfunction getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n  return 0;\n}\n/**\r\n * Checks whether or not a value is a boolean.\r\n *\r\n * @param value\r\n */\n\nfunction isBoolean(value) {\n  return typeof value === \"boolean\";\n}\n/**\r\n * Checks whether or not a value is a function.\r\n *\r\n * @param value\r\n */\n\nfunction isFunction(value) {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n/**\r\n * Checks whether or not a value is a number.\r\n *\r\n * @param value\r\n */\n\nfunction isNumber(value) {\n  return typeof value === \"number\";\n}\n/**\r\n * Detects right clicks\r\n *\r\n * @param nativeEvent\r\n */\n\nfunction isRightClick(nativeEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n/**\r\n * Checks whether or not a value is a string.\r\n *\r\n * @param value\r\n */\n\nfunction isString(value) {\n  return typeof value === \"string\";\n}\n/**\r\n * Joins strings to format IDs for compound components.\r\n *\r\n * @param args\r\n */\n\nfunction makeId() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return args.filter(function (val) {\n    return val != null;\n  }).join(\"--\");\n}\n/**\r\n * No-op function.\r\n */\n\nfunction noop() {}\n/**\r\n * Convert our state strings for HTML data attributes.\r\n * No need for a fancy kebab-caser here, we know what our state strings are!\r\n *\r\n * @param state\r\n */\n\nfunction stateToAttributeString(state) {\n  return String(state).replace(/([\\s_]+)/g, \"-\").toLowerCase();\n}\n/**\r\n * Check if a component is controlled or uncontrolled and return the correct\r\n * state value and setter accordingly. If the component state is controlled by\r\n * the app, the setter is a noop.\r\n *\r\n * @param controlledValue\r\n * @param defaultValue\r\n */\n\nfunction useControlledState(controlledValue, defaultValue) {\n  var controlledRef = useRef(controlledValue != null);\n  var _useState = useState(defaultValue),\n    valueState = _useState[0],\n    setValue = _useState[1];\n  var set = useCallback(function (n) {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? controlledValue : valueState, set];\n}\n/**\r\n * Logs a warning in dev mode when a component switches from controlled to\r\n * uncontrolled, or vice versa\r\n *\r\n * A single prop should typically be used to determine whether or not a\r\n * component is controlled or not.\r\n *\r\n * @param controlledValue\r\n * @param controlledPropName\r\n * @param componentName\r\n */\n\nvar useControlledSwitchWarning = noop;\nif (process.env.NODE_ENV !== \"production\") {\n  useControlledSwitchWarning = function useControlledSwitchWarning(controlledValue, controlledPropName, componentName) {\n    var controlledRef = useRef(controlledValue != null);\n    var nameCache = useRef({\n      componentName: componentName,\n      controlledPropName: controlledPropName\n    });\n    useEffect(function () {\n      nameCache.current = {\n        componentName: componentName,\n        controlledPropName: controlledPropName\n      };\n    }, [componentName, controlledPropName]);\n    useEffect(function () {\n      var wasControlled = controlledRef.current;\n      var _nameCache$current = nameCache.current,\n        componentName = _nameCache$current.componentName,\n        controlledPropName = _nameCache$current.controlledPropName;\n      var isControlled = controlledValue != null;\n      if (wasControlled !== isControlled) {\n        console.error(\"A component is changing an \" + (wasControlled ? \"\" : \"un\") + \"controlled `\" + controlledPropName + \"` state of \" + componentName + \" to be \" + (wasControlled ? \"un\" : \"\") + \"controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled \" + componentName + \" element for the lifetime of the component.\\nMore info: https://fb.me/react-controlled-components\");\n      }\n    }, [controlledValue]);\n  };\n}\nvar useCheckStyles = noop;\nif (process.env.NODE_ENV !== \"production\") {\n  useCheckStyles = function useCheckStyles(pkg) {\n    var name = useRef(pkg);\n    useEffect(function () {\n      return void (name.current = pkg);\n    }, [pkg]);\n    useEffect(function () {\n      return checkStyles(name.current);\n    }, []);\n  };\n}\n/**\r\n * React hook for creating a value exactly once.\r\n * @see https://github.com/Andarist/use-constant\r\n */\n\nfunction useConstant(fn) {\n  var ref = React.useRef();\n  if (!ref.current) {\n    ref.current = {\n      v: fn()\n    };\n  }\n  return ref.current.v;\n}\n/**\r\n * @param callback\r\n */\n\nfunction useEventCallback(callback) {\n  var ref = useRef(callback);\n  useIsomorphicLayoutEffect(function () {\n    ref.current = callback;\n  });\n  return useCallback(function (event) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    return ref.current.apply(ref, [event].concat(args));\n  }, []);\n}\n/**\r\n * @param callback\r\n */\n\nfunction useCallbackProp(callback) {\n  var ref = useRef(callback);\n  useEffect(function () {\n    ref.current = callback;\n  });\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, []);\n}\n/**\r\n * Adds a DOM event listener\r\n *\r\n * @param eventName\r\n * @param listener\r\n * @param element\r\n */\n\nfunction useEventListener(eventName, listener, element) {\n  if (element === void 0) {\n    element = window;\n  }\n  var savedHandler = useRef(listener);\n  useEffect(function () {\n    savedHandler.current = listener;\n  }, [listener]);\n  useEffect(function () {\n    var isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.warn(\"Event listener not supported on the element provided\");\n      }\n      return;\n    }\n    function eventListener(event) {\n      savedHandler.current(event);\n    }\n    element.addEventListener(eventName, eventListener);\n    return function () {\n      element.removeEventListener(eventName, eventListener);\n    };\n  }, [eventName, element]);\n}\n/**\r\n * Detect when focus changes in our document.\r\n *\r\n * @param handleChange\r\n * @param when\r\n * @param ownerDocument\r\n */\n\nfunction useFocusChange(handleChange, when, ownerDocument) {\n  if (handleChange === void 0) {\n    handleChange = console.log;\n  }\n  if (when === void 0) {\n    when = \"focus\";\n  }\n  if (ownerDocument === void 0) {\n    ownerDocument = document;\n  }\n  var lastActiveElement = useRef(ownerDocument.activeElement);\n  useEffect(function () {\n    lastActiveElement.current = ownerDocument.activeElement;\n    function onChange(event) {\n      if (lastActiveElement.current !== ownerDocument.activeElement) {\n        handleChange(ownerDocument.activeElement, lastActiveElement.current, event);\n        lastActiveElement.current = ownerDocument.activeElement;\n      }\n    }\n    ownerDocument.addEventListener(when, onChange, true);\n    return function () {\n      ownerDocument.removeEventListener(when, onChange);\n    };\n  }, [when, handleChange, ownerDocument]);\n}\n/**\r\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\r\n * dealing with components that need an explicit ref for DOM calculations but\r\n * also forwards refs assigned by an app.\r\n *\r\n * @param refs Refs to fork\r\n */\n\nfunction useForkedRef() {\n  for (var _len4 = arguments.length, refs = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    refs[_key4] = arguments[_key4];\n  }\n  return useMemo(function () {\n    if (refs.every(function (ref) {\n      return ref == null;\n    })) {\n      return null;\n    }\n    return function (node) {\n      refs.forEach(function (ref) {\n        assignRef(ref, node);\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [].concat(refs));\n}\n/**\r\n * Returns the previous value of a reference after a component update.\r\n *\r\n * @param value\r\n */\n\nfunction usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n/**\r\n * Call an effect after a component update, skipping the initial mount.\r\n *\r\n * @param effect Effect to call\r\n * @param deps Effect dependency list\r\n */\n\nfunction useUpdateEffect(effect, deps) {\n  var mounted = useRef(false);\n  useEffect(function () {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n/**\r\n * Just a lil state logger\r\n *\r\n * @param state\r\n * @param DEBUG\r\n */\n\nvar useStateLogger = noop;\nif (process.env.NODE_ENV !== \"production\") {\n  useStateLogger = function useStateLogger(state, DEBUG) {\n    if (DEBUG === void 0) {\n      DEBUG = false;\n    }\n    var debugRef = useRef(DEBUG);\n    useEffect(function () {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(function () {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\"%c\" + state, \"font-weight: normal; font-size: 120%; font-style: italic;\");\n        console.groupEnd();\n      }\n    }, [state]);\n  };\n}\n/**\r\n * Wraps a lib-defined event handler and a user-defined event handler, returning\r\n * a single handler that allows a user to prevent lib-defined handlers from\r\n * firing.\r\n *\r\n * @param theirHandler User-supplied event handler\r\n * @param ourHandler Library-supplied event handler\r\n */\n\nfunction wrapEvent(theirHandler, ourHandler) {\n  return function (event) {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\nexport { assignRef, boolOrBoolString, canUseDOM, checkStyles, cloneValidElement, createNamedContext, forwardRefWithAs, getDocumentDimensions, getElementComputedStyle, getOwnerDocument, getOwnerWindow, getScrollPosition, getScrollbarOffset, isBoolean, isFunction, isNumber, isRightClick, isString, makeId, memoWithAs, noop, ponyfillGlobal, stateToAttributeString, useCallbackProp, useCheckStyles, useConstant, useControlledState, useControlledSwitchWarning, useEventCallback, useEventListener, useFocusChange, useForkedRef, useIsomorphicLayoutEffect, usePrevious, useStateLogger, useUpdateEffect, wrapEvent };","map":{"version":3,"sources":["../src/index.tsx"],"names":["useIsomorphicLayoutEffect","canUseDOM","React","useLayoutEffect","useEffect","checkedPkgs","checkStyles","noop","env","process","NODE_ENV","packageName","parseInt","window","getComputedStyle","document","body","getPropertyValue","console","warn","ponyfillGlobal","Math","self","Function","assignRef","ref","value","isFunction","current","error","Error","boolOrBoolString","isBoolean","createElement","cloneValidElement","element","props","children","isValidElement","cloneElement","createNamedContext","name","defaultValue","Ctx","createContext","displayName","forwardRefWithAs","render","forwardRef","memoWithAs","Component","propsAreEqual","memo","getDocumentDimensions","width","height","doc","getOwnerDocument","win","getOwnerWindow","documentElement","clientWidth","innerWidth","clientHeight","innerHeight","getScrollPosition","scrollX","scrollY","getElementComputedStyle","styleProp","y","currentStyle","defaultView","ownerDocument","getScrollbarOffset","err","toString","call","isNumber","isRightClick","nativeEvent","which","button","isString","makeId","args","filter","val","join","stateToAttributeString","state","String","replace","toLowerCase","useControlledState","controlledValue","controlledRef","useRef","valueState","setValue","useState","set","useCallback","n","useControlledSwitchWarning","controlledPropName","componentName","nameCache","wasControlled","isControlled","useCheckStyles","pkg","useConstant","fn","v","useEventCallback","callback","event","useCallbackProp","useEventListener","eventName","listener","savedHandler","isSupported","addEventListener","eventListener","removeEventListener","useFocusChange","handleChange","log","when","lastActiveElement","activeElement","onChange","useForkedRef","refs","useMemo","every","node","forEach","usePrevious","useUpdateEffect","effect","deps","mounted","useStateLogger","DEBUG","debugRef","group","groupEnd","wrapEvent","theirHandler","ourHandler","defaultPrevented"],"mappings":"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","sourcesContent":["/* eslint-disable no-restricted-globals, eqeqeq  */\n\nimport React, {\n  cloneElement,\n  createContext,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport warning from \"warning\";\nimport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  ElementByTag,\n  ElementTagNameMap,\n  ForwardRefExoticComponentWithAs,\n  ForwardRefWithAsRenderFunction,\n  FunctionComponentWithAs,\n  MemoExoticComponentWithAs,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n  ThenArg,\n} from \"./types\";\n\n/**\n * React currently throws a warning when using useLayoutEffect on the server.\n * To get around it, we can conditionally useEffect on the server (no-op) and\n * useLayoutEffect in the browser. We occasionally need useLayoutEffect to\n * ensure we don't get a render flash for certain operations, but we may also\n * need affected components to render on the server. One example is when setting\n * a component's descendants to retrieve their index values.\n *\n * Important to note that using this hook as an escape hatch will break the\n * eslint dependency warnings unless you rename the import to `useLayoutEffect`.\n * Use sparingly only when the effect won't effect the rendered HTML to avoid\n * any server/client mismatch.\n *\n * If a useLayoutEffect is needed and the result would create a mismatch, it's\n * likely that the component in question shouldn't be rendered on the server at\n * all, so a better approach would be to lazily render those in a parent\n * component after client-side hydration.\n *\n * TODO: We are calling useLayoutEffect in a couple of places that will likely\n * cause some issues for SSR users, whether the warning shows or not. Audit and\n * fix these.\n *\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\n *\n * @param effect\n * @param deps\n */\nexport const useIsomorphicLayoutEffect = canUseDOM()\n  ? React.useLayoutEffect\n  : React.useEffect;\n\nlet checkedPkgs: { [key: string]: boolean } = {};\n\n/**\n * Copy of Facebook's warning package.\n */\nexport { warning };\n\n/**\n * When in dev mode, checks that styles for a given @reach package are loaded.\n *\n * @param packageName Name of the package to check.\n * @example checkStyles(\"dialog\") will check for styles for @reach/dialog\n */\n// @ts-ignore\nlet checkStyles: (packageName: string) => void = noop;\n\nif (__DEV__) {\n  // In CJS files, process.env.NODE_ENV is stripped from our build, but we need\n  // it to prevent style checks from clogging up user logs while testing.\n  // This is a workaround until we can tweak the build a bit to accommodate.\n  let { env } =\n    typeof process !== \"undefined\"\n      ? process\n      : { env: { NODE_ENV: \"development\" } };\n\n  checkStyles = function checkStyles(packageName: string) {\n    // only check once per package\n    if (checkedPkgs[packageName]) return;\n    checkedPkgs[packageName] = true;\n\n    if (\n      env.NODE_ENV !== \"test\" &&\n      parseInt(\n        window\n          .getComputedStyle(document.body)\n          .getPropertyValue(`--reach-${packageName}`),\n        10\n      ) !== 1\n    ) {\n      console.warn(\n        `@reach/${packageName} styles not found. If you are using a bundler like webpack or parcel include this in the entry file of your app before any of your own styles:\n\n    import \"@reach/${packageName}/styles.css\";\n\n  Otherwise you'll need to include them some other way:\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"node_modules/@reach/${packageName}/styles.css\" />\n\n  For more information visit https://ui.reach.tech/styling.\n  `\n      );\n    }\n  };\n}\n\nexport { checkStyles };\n\n/**\n * Ponyfill for the global object in some environments.\n *\n * @link https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n */\nexport const ponyfillGlobal =\n  typeof window != \"undefined\" && window.Math == Math\n    ? window\n    : typeof self != \"undefined\" && self.Math == Math\n    ? self\n    : // eslint-disable-next-line no-new-func\n      Function(\"return this\")();\n\n/**\n * Passes or assigns an arbitrary value to a ref function or object.\n *\n * @param ref\n * @param value\n */\nexport function assignRef<RefValueType = any>(\n  ref: AssignableRef<RefValueType> | null | undefined,\n  value: any\n) {\n  if (ref == null) return;\n  if (isFunction(ref)) {\n    ref(value);\n  } else {\n    try {\n      ref.current = value;\n    } catch (error) {\n      throw new Error(`Cannot assign value \"${value}\" to ref \"${ref}\"`);\n    }\n  }\n}\n\n/**\n * Checks true|\"true\" vs false|\"false\"\n *\n * @param value\n */\nexport function boolOrBoolString(value: any): value is \"true\" | true {\n  return value === \"true\" ? true : isBoolean(value) ? value : false;\n}\n\nexport function canUseDOM() {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  );\n}\n\n/**\n * Type-safe clone element\n *\n * @param element\n * @param props\n * @param children\n */\nexport function cloneValidElement<Props>(\n  element: React.ReactElement<Props> | React.ReactNode,\n  props?: Partial<Props> & React.Attributes,\n  ...children: React.ReactNode[]\n): React.ReactElement<Props> | React.ReactNode {\n  return isValidElement(element)\n    ? cloneElement(element, props, ...children)\n    : element;\n}\n\nexport function createNamedContext<ContextValueType>(\n  name: string,\n  defaultValue: ContextValueType\n): React.Context<ContextValueType> {\n  const Ctx = createContext<ContextValueType>(defaultValue);\n  Ctx.displayName = name;\n  return Ctx;\n}\n\n/**\n * This is a hack for sure. The thing is, getting a component to intelligently\n * infer props based on a component or JSX string passed into an `as` prop is\n * kind of a huge pain. Getting it to work and satisfy the constraints of\n * `forwardRef` seems dang near impossible. To avoid needing to do this awkward\n * type song-and-dance every time we want to forward a ref into a component\n * that accepts an `as` prop, we abstract all of that mess to this function for\n * the time time being.\n */\nexport function forwardRefWithAs<Props, ComponentType extends As = \"div\">(\n  render: ForwardRefWithAsRenderFunction<ComponentType, Props>\n) {\n  return React.forwardRef(render) as ForwardRefExoticComponentWithAs<\n    ComponentType,\n    Props\n  >;\n}\n\nexport function memoWithAs<Props, ComponentType extends As = \"div\">(\n  Component: FunctionComponentWithAs<ComponentType, Props>,\n  propsAreEqual?: (\n    prevProps: Readonly<React.PropsWithChildren<Props>>,\n    nextProps: Readonly<React.PropsWithChildren<Props>>\n  ) => boolean\n) {\n  return React.memo(Component, propsAreEqual) as MemoExoticComponentWithAs<\n    ComponentType,\n    Props\n  >;\n}\n\n/**\n * Get the size of the working document minus the scrollbar offset.\n *\n * @param element\n */\nexport function getDocumentDimensions(\n  element?: HTMLElement | null | undefined\n) {\n  if (!canUseDOM()) return { width: 0, height: 0 };\n  let doc = element ? getOwnerDocument(element)! : document;\n  let win = element ? getOwnerWindow(element)! : window;\n  return {\n    width: doc.documentElement.clientWidth || win.innerWidth,\n    height: doc.documentElement.clientHeight || win.innerHeight,\n  };\n}\n\n/**\n * Get the scoll position of the global window object relative to a given node.\n *\n * @param element\n */\nexport function getScrollPosition(element?: HTMLElement | null | undefined) {\n  if (!canUseDOM()) return { scrollX: 0, scrollY: 0 };\n  let win = element ? getOwnerWindow(element)! : window;\n  return {\n    scrollX: win.scrollX,\n    scrollY: win.scrollY,\n  };\n}\n\n/**\n * Get a computed style value by property, backwards compatible with IE\n * @param element\n * @param styleProp\n */\nexport function getElementComputedStyle(\n  element: HTMLElement & {\n    currentStyle?: Record<string, string>;\n  },\n  styleProp: string\n) {\n  let y: string | null = null;\n  let doc = getOwnerDocument(element);\n  if (element.currentStyle) {\n    y = element.currentStyle[styleProp];\n  } else if (\n    doc &&\n    doc.defaultView &&\n    isFunction(doc.defaultView.getComputedStyle)\n  ) {\n    y = doc.defaultView\n      .getComputedStyle(element, null)\n      .getPropertyValue(styleProp);\n  }\n  return y;\n}\n\n/**\n * Get an element's owner document. Useful when components are used in iframes\n * or other environments like dev tools.\n *\n * @param element\n */\nexport function getOwnerDocument<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  return element && element.ownerDocument\n    ? element.ownerDocument\n    : canUseDOM()\n    ? document\n    : null;\n}\n\nexport function getOwnerWindow<T extends HTMLElement = HTMLElement>(\n  element: T | null\n) {\n  let doc = element ? getOwnerDocument(element) : null;\n  return doc ? doc.defaultView || window : null;\n}\n\n/**\n * Get the scrollbar offset distance.\n *\n * TODO: Remove in 1.0 (we used this in public examples)\n */\nexport function getScrollbarOffset() {\n  try {\n    if (window.innerWidth > document.documentElement.clientWidth) {\n      return window.innerWidth - document.documentElement.clientWidth;\n    }\n  } catch (err) {}\n  return 0;\n}\n\n/**\n * Checks whether or not a value is a boolean.\n *\n * @param value\n */\nexport function isBoolean(value: any): value is boolean {\n  return typeof value === \"boolean\";\n}\n\n/**\n * Checks whether or not a value is a function.\n *\n * @param value\n */\nexport function isFunction(value: any): value is Function {\n  return !!(value && {}.toString.call(value) == \"[object Function]\");\n}\n\n/**\n * Checks whether or not a value is a number.\n *\n * @param value\n */\nexport function isNumber(value: any): value is number {\n  return typeof value === \"number\";\n}\n\n/**\n * Detects right clicks\n *\n * @param nativeEvent\n */\nexport function isRightClick(nativeEvent: MouseEvent) {\n  return nativeEvent.which === 3 || nativeEvent.button === 2;\n}\n\n/**\n * Checks whether or not a value is a string.\n *\n * @param value\n */\nexport function isString(value: any): value is string {\n  return typeof value === \"string\";\n}\n\n/**\n * Joins strings to format IDs for compound components.\n *\n * @param args\n */\nexport function makeId(...args: (string | number | null | undefined)[]) {\n  return args.filter((val) => val != null).join(\"--\");\n}\n\n/**\n * No-op function.\n */\nexport function noop(): void {}\n\n/**\n * Convert our state strings for HTML data attributes.\n * No need for a fancy kebab-caser here, we know what our state strings are!\n *\n * @param state\n */\nexport function stateToAttributeString(state: any) {\n  return String(state)\n    .replace(/([\\s_]+)/g, \"-\")\n    .toLowerCase();\n}\n\n/**\n * Check if a component is controlled or uncontrolled and return the correct\n * state value and setter accordingly. If the component state is controlled by\n * the app, the setter is a noop.\n *\n * @param controlledValue\n * @param defaultValue\n */\nexport function useControlledState<T = any>(\n  controlledValue: T | undefined,\n  defaultValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] {\n  let controlledRef = useRef(controlledValue != null);\n  let [valueState, setValue] = useState(defaultValue);\n  let set: React.Dispatch<React.SetStateAction<T>> = useCallback((n) => {\n    if (!controlledRef.current) {\n      setValue(n);\n    }\n  }, []);\n  return [controlledRef.current ? (controlledValue as T) : valueState, set];\n}\n\n/**\n * Logs a warning in dev mode when a component switches from controlled to\n * uncontrolled, or vice versa\n *\n * A single prop should typically be used to determine whether or not a\n * component is controlled or not.\n *\n * @param controlledValue\n * @param controlledPropName\n * @param componentName\n */\nlet useControlledSwitchWarning: (\n  controlledValue: any,\n  controlledPropName: string,\n  componentName: string\n) => void = noop;\n\nif (__DEV__) {\n  useControlledSwitchWarning = function useControlledSwitchWarning(\n    controlledValue,\n    controlledPropName,\n    componentName\n  ) {\n    let controlledRef = useRef(controlledValue != null);\n    let nameCache = useRef({ componentName, controlledPropName });\n    useEffect(() => {\n      nameCache.current = { componentName, controlledPropName };\n    }, [componentName, controlledPropName]);\n\n    useEffect(() => {\n      let { current: wasControlled } = controlledRef;\n      let { componentName, controlledPropName } = nameCache.current;\n      let isControlled = controlledValue != null;\n      if (wasControlled !== isControlled) {\n        console.error(\n          `A component is changing an ${\n            wasControlled ? \"\" : \"un\"\n          }controlled \\`${controlledPropName}\\` state of ${componentName} to be ${\n            wasControlled ? \"un\" : \"\"\n          }controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled ${componentName} element for the lifetime of the component.\nMore info: https://fb.me/react-controlled-components`\n        );\n      }\n    }, [controlledValue]);\n  };\n}\n\nexport { useControlledSwitchWarning };\n\nlet useCheckStyles: (packageName: string) => void = noop;\n\nif (__DEV__) {\n  useCheckStyles = function useCheckStyles(pkg: string) {\n    let name = useRef(pkg);\n    useEffect(() => void (name.current = pkg), [pkg]);\n    useEffect(() => checkStyles(name.current), []);\n  };\n}\n\nexport { useCheckStyles };\n\n/**\n * React hook for creating a value exactly once.\n * @see https://github.com/Andarist/use-constant\n */\nexport function useConstant<ValueType>(fn: () => ValueType): ValueType {\n  const ref = React.useRef<{ v: ValueType }>();\n  if (!ref.current) {\n    ref.current = { v: fn() };\n  }\n  return ref.current.v;\n}\n\n/**\n * @param callback\n */\nexport function useEventCallback<E extends Event | React.SyntheticEvent>(\n  callback: (event: E, ...args: any[]) => void\n) {\n  const ref = useRef(callback);\n  useIsomorphicLayoutEffect(() => {\n    ref.current = callback;\n  });\n  return useCallback(\n    (event: E, ...args: any[]) => ref.current(event, ...args),\n    []\n  );\n}\n\n/**\n * @param callback\n */\nexport function useCallbackProp<F extends Function>(callback: F | undefined) {\n  const ref = useRef(callback);\n  useEffect(() => {\n    ref.current = callback;\n  });\n  return (useCallback(\n    (...args: any[]) => ref.current && ref.current(...args),\n    []\n  ) as unknown) as F;\n}\n\n/**\n * Adds a DOM event listener\n *\n * @param eventName\n * @param listener\n * @param element\n */\nexport function useEventListener<K extends keyof WindowEventMap>(\n  eventName: K,\n  listener: (event: WindowEventMap[K]) => any,\n  element: HTMLElement | Document | Window | EventTarget = window\n) {\n  const savedHandler = useRef(listener);\n  useEffect(() => {\n    savedHandler.current = listener;\n  }, [listener]);\n\n  useEffect(() => {\n    const isSupported = element && element.addEventListener;\n    if (!isSupported) {\n      if (__DEV__) {\n        console.warn(\"Event listener not supported on the element provided\");\n      }\n      return;\n    }\n\n    function eventListener(event: WindowEventMap[K]) {\n      savedHandler.current(event);\n    }\n\n    element.addEventListener(eventName, eventListener as any);\n    return () => {\n      element.removeEventListener(eventName, eventListener as any);\n    };\n  }, [eventName, element]);\n}\n\n/**\n * Detect when focus changes in our document.\n *\n * @param handleChange\n * @param when\n * @param ownerDocument\n */\nexport function useFocusChange(\n  handleChange: (\n    activeElement: Element | null,\n    previousActiveElement: Element | null,\n    event?: FocusEvent\n  ) => void = console.log,\n  when: \"focus\" | \"blur\" = \"focus\",\n  ownerDocument: Document = document\n) {\n  let lastActiveElement = useRef(ownerDocument.activeElement);\n\n  useEffect(() => {\n    lastActiveElement.current = ownerDocument.activeElement;\n\n    function onChange(event: FocusEvent) {\n      if (lastActiveElement.current !== ownerDocument.activeElement) {\n        handleChange(\n          ownerDocument.activeElement,\n          lastActiveElement.current,\n          event\n        );\n        lastActiveElement.current = ownerDocument.activeElement;\n      }\n    }\n\n    ownerDocument.addEventListener(when, onChange, true);\n\n    return () => {\n      ownerDocument.removeEventListener(when, onChange);\n    };\n  }, [when, handleChange, ownerDocument]);\n}\n\n/**\n * Passes or assigns a value to multiple refs (typically a DOM node). Useful for\n * dealing with components that need an explicit ref for DOM calculations but\n * also forwards refs assigned by an app.\n *\n * @param refs Refs to fork\n */\nexport function useForkedRef<RefValueType = any>(\n  ...refs: (AssignableRef<RefValueType> | null | undefined)[]\n) {\n  return useMemo(() => {\n    if (refs.every((ref) => ref == null)) {\n      return null;\n    }\n    return (node: any) => {\n      refs.forEach((ref) => {\n        assignRef(ref, node);\n      });\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [...refs]);\n}\n\n/**\n * Returns the previous value of a reference after a component update.\n *\n * @param value\n */\nexport function usePrevious<ValueType = any>(value: ValueType) {\n  const ref = useRef<ValueType | null>(null);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\n/**\n * Call an effect after a component update, skipping the initial mount.\n *\n * @param effect Effect to call\n * @param deps Effect dependency list\n */\nexport function useUpdateEffect(\n  effect: React.EffectCallback,\n  deps?: React.DependencyList\n) {\n  const mounted = useRef(false);\n  useEffect(() => {\n    if (mounted.current) {\n      effect();\n    } else {\n      mounted.current = true;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n}\n\n/**\n * Just a lil state logger\n *\n * @param state\n * @param DEBUG\n */\nlet useStateLogger: (state: string, DEBUG: boolean) => void = noop;\n\nif (__DEV__) {\n  useStateLogger = function useStateLogger(state, DEBUG = false) {\n    let debugRef = useRef(DEBUG);\n    useEffect(() => {\n      debugRef.current = DEBUG;\n    }, [DEBUG]);\n    useEffect(() => {\n      if (debugRef.current) {\n        console.group(\"State Updated\");\n        console.log(\n          \"%c\" + state,\n          \"font-weight: normal; font-size: 120%; font-style: italic;\"\n        );\n        console.groupEnd();\n      }\n    }, [state]);\n  };\n}\n\nexport { useStateLogger };\n\n/**\n * Wraps a lib-defined event handler and a user-defined event handler, returning\n * a single handler that allows a user to prevent lib-defined handlers from\n * firing.\n *\n * @param theirHandler User-supplied event handler\n * @param ourHandler Library-supplied event handler\n */\nexport function wrapEvent<EventType extends React.SyntheticEvent | Event>(\n  theirHandler: ((event: EventType) => any) | undefined,\n  ourHandler: (event: EventType) => any\n): (event: EventType) => any {\n  return (event) => {\n    theirHandler && theirHandler(event);\n    if (!event.defaultPrevented) {\n      return ourHandler(event);\n    }\n  };\n}\n\n// Export types\nexport {\n  As,\n  AssignableRef,\n  ComponentWithAs,\n  ComponentWithForwardedRef,\n  DistributiveOmit,\n  ElementByTag,\n  ElementTagNameMap,\n  ForwardRefExoticComponentWithAs,\n  FunctionComponentWithAs,\n  MemoExoticComponentWithAs,\n  PropsFromAs,\n  PropsWithAs,\n  SingleOrArray,\n  ThenArg,\n};\n"]},"metadata":{},"sourceType":"module"}