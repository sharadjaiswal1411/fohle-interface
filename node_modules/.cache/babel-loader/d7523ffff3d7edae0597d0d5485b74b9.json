{"ast":null,"code":"import create from 'zustand';\nimport { devtools, persist } from 'zustand/middleware';\nexport const useSearchHistory = create()(persist(devtools(set => ({\n  history: [],\n  addItem: item => {\n    set(_ref => {\n      let {\n        history\n      } = _ref;\n      const historyCopy = [...history];\n      if (historyCopy.length === 0 || historyCopy[0].address !== item.address) historyCopy.unshift(item);\n      return {\n        history: historyCopy\n      };\n    });\n  },\n  updateItem: update => {\n    set(_ref2 => {\n      let {\n        history\n      } = _ref2;\n      const index = history.findIndex(item => item.address === update.address);\n      if (index === -1) return {\n        history\n      };\n      const historyCopy = [...history];\n      historyCopy[index] = update;\n      return {\n        history: historyCopy\n      };\n    });\n  }\n})), {\n  name: 'useSearchHistory'\n}));","map":{"version":3,"names":["create","devtools","persist","useSearchHistory","set","history","addItem","item","historyCopy","length","address","unshift","updateItem","update","index","findIndex","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useSearchHistory.ts"],"sourcesContent":["import { FungibleToken, GenieCollection } from 'nft/types'\nimport create from 'zustand'\nimport { devtools, persist } from 'zustand/middleware'\n\ninterface SearchHistoryProps {\n  history: (FungibleToken | GenieCollection)[]\n  addItem: (item: FungibleToken | GenieCollection) => void\n  updateItem: (update: FungibleToken | GenieCollection) => void\n}\n\nexport const useSearchHistory = create<SearchHistoryProps>()(\n  persist(\n    devtools((set) => ({\n      history: [],\n      addItem: (item: FungibleToken | GenieCollection) => {\n        set(({ history }) => {\n          const historyCopy = [...history]\n          if (historyCopy.length === 0 || historyCopy[0].address !== item.address) historyCopy.unshift(item)\n          return { history: historyCopy }\n        })\n      },\n      updateItem: (update: FungibleToken | GenieCollection) => {\n        set(({ history }) => {\n          const index = history.findIndex((item) => item.address === update.address)\n          if (index === -1) return { history }\n\n          const historyCopy = [...history]\n          historyCopy[index] = update\n          return { history: historyCopy }\n        })\n      },\n    })),\n    { name: 'useSearchHistory' }\n  )\n)\n"],"mappings":"AACA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,EAAEC,OAAO,QAAQ,oBAAoB;AAQtD,OAAO,MAAMC,gBAAgB,GAAGH,MAAM,EAAsB,CAC1DE,OAAO,CACLD,QAAQ,CAAEG,GAAG,KAAM;EACjBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAGC,IAAqC,IAAK;IAClDH,GAAG,CAAC,QAAiB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACd,MAAMG,WAAW,GAAG,CAAC,GAAGH,OAAO,CAAC;MAChC,IAAIG,WAAW,CAACC,MAAM,KAAK,CAAC,IAAID,WAAW,CAAC,CAAC,CAAC,CAACE,OAAO,KAAKH,IAAI,CAACG,OAAO,EAAEF,WAAW,CAACG,OAAO,CAACJ,IAAI,CAAC;MAClG,OAAO;QAAEF,OAAO,EAAEG;MAAY,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC;EACDI,UAAU,EAAGC,MAAuC,IAAK;IACvDT,GAAG,CAAC,SAAiB;MAAA,IAAhB;QAAEC;MAAQ,CAAC;MACd,MAAMS,KAAK,GAAGT,OAAO,CAACU,SAAS,CAAER,IAAI,IAAKA,IAAI,CAACG,OAAO,KAAKG,MAAM,CAACH,OAAO,CAAC;MAC1E,IAAII,KAAK,KAAK,CAAC,CAAC,EAAE,OAAO;QAAET;MAAQ,CAAC;MAEpC,MAAMG,WAAW,GAAG,CAAC,GAAGH,OAAO,CAAC;MAChCG,WAAW,CAACM,KAAK,CAAC,GAAGD,MAAM;MAC3B,OAAO;QAAER,OAAO,EAAEG;MAAY,CAAC;IACjC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC,CAAC,EACH;EAAEQ,IAAI,EAAE;AAAmB,CAAC,CAC7B,CACF"},"metadata":{},"sourceType":"module"}