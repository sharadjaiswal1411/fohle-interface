{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/CoinInfo/index.tsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart, chartDays, SingleCoin } from \"constants/index\";\nimport { Line } from \"react-chartjs-2\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinInfo = _ref => {\n  _s();\n  var _coinData$image, _coinData$market_data, _coinData$market_data2;\n  let {\n    coin\n  } = _ref;\n  const [historicData, setHistoricData] = useState();\n  const [coinData, setCoinData] = useState();\n  console.log(\"name\", coin);\n  const [days, setDays] = useState(1);\n  const currency = 'USD';\n  const address = coin ? coin.OUTPUT ? coin.OUTPUT.isNative ? '0x0000000000000000000000000000000000001010' : coin.OUTPUT.tokenInfo.address : coin.INPUT ? coin.INPUT.isNative ? '0x0000000000000000000000000000000000001010' : coin.INPUT.tokenInfo.address : '0x0000000000000000000000000000000000001010' : \"0x0000000000000000000000000000000000001010\";\n  const fetchHistoricData = async () => {\n    axios.get(SingleCoin(address.toLowerCase())).then(res => {\n      const data = res.data;\n      console.log(\"coinData\", data);\n      setCoinData(data);\n    });\n    const {\n      data\n    } = await axios.get(HistoricalChart(address.toLowerCase(), days, currency));\n    setHistoricData(data.prices);\n  };\n  console.log(\"address\", address);\n  useEffect(() => {\n    setHistoricData([]);\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days, address]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !historicData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading Data\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          marginTop: 20,\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: coinData === null || coinData === void 0 ? void 0 : (_coinData$image = coinData.image) === null || _coinData$image === void 0 ? void 0 : _coinData$image.thumb\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), coinData === null || coinData === void 0 ? void 0 : coinData.symbol.toUpperCase(), \" / \", coinData === null || coinData === void 0 ? void 0 : (_coinData$market_data = coinData.market_data) === null || _coinData$market_data === void 0 ? void 0 : (_coinData$market_data2 = _coinData$market_data.current_price) === null || _coinData$market_data2 === void 0 ? void 0 : _coinData$market_data2.usd]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            marginTop: 20,\n            justifyContent: \"right\",\n            width: \"75%\"\n          },\n          children: chartDays.map(day => /*#__PURE__*/_jsxDEV(\"timePanel\", {\n            onClick: () => setDays(day.value),\n            children: day.label\n          }, day.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: {\n          labels: historicData.map(coin => {\n            let date = new Date(coin[0]);\n            let time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n            return days === 1 ? time : date.toLocaleDateString();\n          }),\n          datasets: [{\n            data: historicData.map(coin => coin[1]),\n            label: `Price ( Past ${days} Days ) in ${currency}`,\n            borderColor: \"#30a2db\"\n          }]\n        },\n        options: {\n          elements: {\n            point: {\n              radius: 1\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(CoinInfo, \"O1s9WD2gGmf+jcSzHuLvjAQvvg4=\");\n_c = CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["axios","useEffect","useState","HistoricalChart","chartDays","SingleCoin","Line","CoinInfo","coin","historicData","setHistoricData","coinData","setCoinData","console","log","days","setDays","currency","address","OUTPUT","isNative","tokenInfo","INPUT","fetchHistoricData","get","toLowerCase","then","res","data","prices","display","marginTop","width","image","thumb","symbol","toUpperCase","market_data","current_price","usd","justifyContent","map","day","value","label","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","elements","point","radius"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/CoinInfo/index.tsx"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { HistoricalChart,chartDays,SingleCoin } from \"constants/index\";\nimport { Line } from \"react-chartjs-2\";\nimport { TimePanel} from 'components/swap/styleds'\n\nexport const CoinInfo = ({ coin }:{coin:any}) => {\n  const [historicData, setHistoricData] = useState<any[]>()\n  const [coinData, setCoinData] = useState<any>()\n  console.log(\"name\",coin);\n  const [days, setDays] = useState(1);\n  \n  const currency  = 'USD';\n\n  const address=coin? (coin.OUTPUT ? (coin.OUTPUT.isNative ? '0x0000000000000000000000000000000000001010' : coin.OUTPUT.tokenInfo.address) : (coin.INPUT ?(coin.INPUT.isNative ? '0x0000000000000000000000000000000000001010' : coin.INPUT.tokenInfo.address) : '0x0000000000000000000000000000000000001010')) : \"0x0000000000000000000000000000000000001010\";\n\n  const fetchHistoricData = async () => {\n\n    axios.get(SingleCoin(address.toLowerCase()))\n      .then(res => {\n        const data = res.data;\n        console.log(\"coinData\",data);\n        setCoinData(data);\n      })\n\n  \n   const { data} = await axios.get(HistoricalChart(address.toLowerCase(), days, currency));\n   setHistoricData(data.prices);\n\n\n  \n  };\n\n  console.log(\"address\",address);\n\n  useEffect(() => {\n    setHistoricData([]);\n    fetchHistoricData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [days,address]);\n\n\n  return (\n      <div >\n        {!historicData ? \n          <>Loading Data</>\n         : \n          <>\n\n           <div\n              style={{\n                display: \"flex\",\n                marginTop: 20,\n                width: \"100%\",\n              }}\n            >\n            <h3>\n            <img src={coinData?.image?.thumb} />\n            {coinData?.symbol.toUpperCase()} / {coinData?.market_data?.current_price?.usd}</h3>\n\n            <div  style={{\n                display: \"flex\",\n                marginTop: 20,\n                justifyContent:\"right\",\n                width: \"75%\",\n              }}>\n              {chartDays.map((day) => (\n                <timePanel\n                  key={day.value}\n                  onClick={() => setDays(day.value)}\n                 \n                >\n                  {day.label}\n                </timePanel>\n            \n              ))}\n            </div> \n            </div>\n            <Line\n              data={{\n                labels: historicData.map((coin) => {\n                  let date = new Date(coin[0]);\n                  let time =\n                    date.getHours() > 12\n                      ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n                      : `${date.getHours()}:${date.getMinutes()} AM`;\n                  return days === 1 ? time : date.toLocaleDateString();\n                }),\n\n                datasets: [\n                  {\n                    data: historicData.map((coin) => coin[1]),\n                    label: `Price ( Past ${days} Days ) in ${currency}`,\n                    borderColor: \"#30a2db\",\n                  },\n                ],\n              }}\n              options={{\n                elements: {\n                  point: {\n                    radius: 1,\n                  },\n                },\n              }}\n            />\n           \n          </>\n        }\n      </div>\n\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}