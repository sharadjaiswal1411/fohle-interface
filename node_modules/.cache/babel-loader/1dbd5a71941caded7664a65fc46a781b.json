{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$(),\n  _s18 = $RefreshSig$(),\n  _s19 = $RefreshSig$(),\n  _s20 = $RefreshSig$();\nimport { Percent, Token } from '@uniswap/sdk-core';\nimport { computePairAddress } from '@uniswap/v2-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { L2_CHAIN_IDS } from 'constants/chains';\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc';\nimport JSBI from 'jsbi';\nimport { useCallback, useMemo } from 'react';\nimport { shallowEqual } from 'react-redux';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { UserAddedToken } from 'types/tokens';\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses';\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing';\nimport { useAllTokens } from '../../hooks/Tokens';\nimport { addSerializedPair, addSerializedToken, updateFiatOnrampAcknowledgments, updateHideClosedPositions, updateUserClientSideRouter, updateUserDarkMode, updateUserDeadline, updateUserExpertMode, toggleProLiveChart, updateUserLocale, updateUserSlippageTolerance } from './reducer';\nfunction serializeToken(token) {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name\n  };\n}\nfunction deserializeToken(serializedToken) {\n  let Class = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Token;\n  return new Class(serializedToken.chainId, serializedToken.address, serializedToken.decimals, serializedToken.symbol, serializedToken.name);\n}\nexport function useIsDarkMode() {\n  _s();\n  const {\n    userDarkMode,\n    matchesDarkMode\n  } = useAppSelector(_ref => {\n    let {\n      user: {\n        matchesDarkMode,\n        userDarkMode\n      }\n    } = _ref;\n    return {\n      userDarkMode,\n      matchesDarkMode\n    };\n  }, shallowEqual);\n  return userDarkMode === null ? matchesDarkMode : userDarkMode;\n}\n_s(useIsDarkMode, \"kDetlrcb1KAucqiqqWhHZNG5DvE=\", false, function () {\n  return [useAppSelector];\n});\nexport function useDarkModeManager() {\n  _s2();\n  const dispatch = useAppDispatch();\n  const darkMode = useIsDarkMode();\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({\n      userDarkMode: !darkMode\n    }));\n  }, [darkMode, dispatch]);\n  return [darkMode, toggleSetDarkMode];\n}\n_s2(useDarkModeManager, \"yb97mOnsvylpbPbKPKVpk4l7+/E=\", false, function () {\n  return [useAppDispatch, useIsDarkMode];\n});\nexport function useUserLocale() {\n  _s3();\n  return useAppSelector(state => state.user.userLocale);\n}\n_s3(useUserLocale, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useUserLocaleManager() {\n  _s4();\n  const dispatch = useAppDispatch();\n  const locale = useUserLocale();\n  const setLocale = useCallback(newLocale => {\n    dispatch(updateUserLocale({\n      userLocale: newLocale\n    }));\n  }, [dispatch]);\n  return [locale, setLocale];\n}\n_s4(useUserLocaleManager, \"/2yPrtUZ6T42PZGdNtf19U6ueCI=\", false, function () {\n  return [useAppDispatch, useUserLocale];\n});\nexport function useIsExpertMode() {\n  _s5();\n  return useAppSelector(state => state.user.userExpertMode);\n}\n_s5(useIsExpertMode, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function useExpertModeManager() {\n  _s6();\n  const dispatch = useAppDispatch();\n  const expertMode = useIsExpertMode();\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({\n      userExpertMode: !expertMode\n    }));\n  }, [expertMode, dispatch]);\n  return [expertMode, toggleSetExpertMode];\n}\n_s6(useExpertModeManager, \"NICgZLOjDAdTnm82TefdTjIHIEc=\", false, function () {\n  return [useAppDispatch, useIsExpertMode];\n});\nexport function useFiatOnrampAck() {\n  _s7();\n  const dispatch = useAppDispatch();\n  const fiatOnrampAcknowledgments = useAppSelector(state => state.user.fiatOnrampAcknowledgments);\n  const setAcknowledgements = useCallback(acks => {\n    dispatch(updateFiatOnrampAcknowledgments(acks));\n  }, [dispatch]);\n  return [fiatOnrampAcknowledgments, setAcknowledgements];\n}\n_s7(useFiatOnrampAck, \"LHIkT9IzEGtcB295qZDhyXDHlBA=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useClientSideRouter() {\n  _s8();\n  const dispatch = useAppDispatch();\n  const clientSideRouter = useAppSelector(state => Boolean(state.user.userClientSideRouter));\n  const setClientSideRouter = useCallback(newClientSideRouter => {\n    dispatch(updateUserClientSideRouter({\n      userClientSideRouter: newClientSideRouter\n    }));\n  }, [dispatch]);\n  return [clientSideRouter, setClientSideRouter];\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\n_s8(useClientSideRouter, \"HynwrfgFKtwvLSLWNwQjeHFl0Wo=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useUserSlippageTolerance() {\n  _s9();\n  const userSlippageToleranceRaw = useAppSelector(state => {\n    return state.user.userSlippageTolerance;\n  });\n  const userSlippageTolerance = useMemo(() => userSlippageToleranceRaw === 'auto' ? 'auto' : new Percent(userSlippageToleranceRaw, 10000), [userSlippageToleranceRaw]);\n  const dispatch = useAppDispatch();\n  const setUserSlippageTolerance = useCallback(userSlippageTolerance => {\n    let value;\n    try {\n      value = userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10000).quotient);\n    } catch (error) {\n      value = 'auto';\n    }\n    dispatch(updateUserSlippageTolerance({\n      userSlippageTolerance: value\n    }));\n  }, [dispatch]);\n  return useMemo(() => [userSlippageTolerance, setUserSlippageTolerance], [setUserSlippageTolerance, userSlippageTolerance]);\n}\n_s9(useUserSlippageTolerance, \"kT7Qpmdn3df5KwyNkFVYBucEQJc=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\nexport function useUserHideClosedPositions() {\n  _s10();\n  const dispatch = useAppDispatch();\n  const hideClosedPositions = useAppSelector(state => state.user.userHideClosedPositions);\n  const setHideClosedPositions = useCallback(newHideClosedPositions => {\n    dispatch(updateHideClosedPositions({\n      userHideClosedPositions: newHideClosedPositions\n    }));\n  }, [dispatch]);\n  return [hideClosedPositions, setHideClosedPositions];\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\n_s10(useUserHideClosedPositions, \"Vcmo1HP+P+HDRDTxyVzY57SqCS0=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance) {\n  _s11();\n  const allowedSlippage = useUserSlippageTolerance()[0];\n  return useMemo(() => allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage, [allowedSlippage, defaultSlippageTolerance]);\n}\n_s11(useUserSlippageToleranceWithDefault, \"X4+mxkmsy7qBrGVGGEr3UsDNit4=\", false, function () {\n  return [useUserSlippageTolerance];\n});\nexport function useUserTransactionTTL() {\n  _s12();\n  const {\n    chainId\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  const userDeadline = useAppSelector(state => state.user.userDeadline);\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId));\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline;\n  const setUserDeadline = useCallback(userDeadline => {\n    dispatch(updateUserDeadline({\n      userDeadline\n    }));\n  }, [dispatch]);\n  return [deadline, setUserDeadline];\n}\n_s12(useUserTransactionTTL, \"7X+wgHtc/F7ZHZh/CWSdhH8OddI=\", false, function () {\n  return [useWeb3React, useAppDispatch, useAppSelector];\n});\nexport function useAddUserToken() {\n  _s13();\n  const dispatch = useAppDispatch();\n  return useCallback(token => {\n    dispatch(addSerializedToken({\n      serializedToken: serializeToken(token)\n    }));\n  }, [dispatch]);\n}\n_s13(useAddUserToken, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useUserAddedTokensOnChain(chainId) {\n  _s14();\n  const serializedTokensMap = useAppSelector(_ref2 => {\n    let {\n      user: {\n        tokens\n      }\n    } = _ref2;\n    return tokens;\n  });\n  return useMemo(() => {\n    if (!chainId) return [];\n    const tokenMap = (serializedTokensMap === null || serializedTokensMap === void 0 ? void 0 : serializedTokensMap[chainId]) ? Object.values(serializedTokensMap[chainId]).map(value => deserializeToken(value, UserAddedToken)) : [];\n    return tokenMap;\n  }, [serializedTokensMap, chainId]);\n}\n_s14(useUserAddedTokensOnChain, \"pH1dW+7tf/t9QdwQEN2IhrF09h8=\", false, function () {\n  return [useAppSelector];\n});\nexport function useUserAddedTokens() {\n  _s15();\n  return useUserAddedTokensOnChain(useWeb3React().chainId);\n}\n_s15(useUserAddedTokens, \"wKQeP2OTxqQyuFbMnSW80haJmi0=\", false, function () {\n  return [useUserAddedTokensOnChain, useWeb3React];\n});\nfunction serializePair(pair) {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1)\n  };\n}\nexport function usePairAdder() {\n  _s16();\n  const dispatch = useAppDispatch();\n  return useCallback(pair => {\n    dispatch(addSerializedPair({\n      serializedPair: serializePair(pair)\n    }));\n  }, [dispatch]);\n}\n_s16(usePairAdder, \"OqBVLt6aN3sywE9xSMcloJ9SYsA=\", false, function () {\n  return [useAppDispatch];\n});\nexport function useURLWarningVisible() {\n  _s17();\n  return useAppSelector(state => state.user.URLWarningVisible);\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\n_s17(useURLWarningVisible, \"bRaY7Fsh/GrWHjZMhGvF04Z7BZI=\", false, function () {\n  return [useAppSelector];\n});\nexport function toV2LiquidityToken(_ref3) {\n  let [tokenA, tokenB] = _ref3;\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs');\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal');\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain');\n  return new Token(tokenA.chainId, computePairAddress({\n    factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId],\n    tokenA,\n    tokenB\n  }), 18, 'UNI-V2', 'Uniswap V2');\n}\nexport function useShowProLiveChart() {\n  _s18();\n  const showProLiveChart = useSelector(state => state.showProLiveChart);\n  return showProLiveChart;\n}\n_s18(useShowProLiveChart, \"Gt9xnlmo27Cw2ZY0raIPijtE2PM=\", true);\nexport function useToggleProLiveChart() {\n  _s19();\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleProLiveChart()), [dispatch]);\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\n_s19(useToggleProLiveChart, \"nhyv+fhSuBJ7yx/uYuCmtG3KTzU=\", true);\nexport function useTrackedTokenPairs() {\n  _s20();\n  const {\n    chainId\n  } = useWeb3React();\n  const tokens = useAllTokens();\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => {\n    var _PINNED_PAIRS$chainId;\n    return chainId ? (_PINNED_PAIRS$chainId = PINNED_PAIRS[chainId]) !== null && _PINNED_PAIRS$chainId !== void 0 ? _PINNED_PAIRS$chainId : [] : [];\n  }, [chainId]);\n\n  // pairs for every token against every base\n  const generatedPairs = useMemo(() => chainId ? Object.keys(tokens).flatMap(tokenAddress => {\n    var _BASES_TO_TRACK_LIQUI;\n    const token = tokens[tokenAddress];\n    // for each token on the current chain,\n    return (\n      // loop though all bases on the current chain\n      ((_BASES_TO_TRACK_LIQUI = BASES_TO_TRACK_LIQUIDITY_FOR[chainId]) !== null && _BASES_TO_TRACK_LIQUI !== void 0 ? _BASES_TO_TRACK_LIQUI : [] // to construct pairs of the given token with each base\n      ).map(base => {\n        if (base.address === token.address) {\n          return null;\n        } else {\n          return [base, token];\n        }\n      }).filter(p => p !== null)\n    );\n  }) : [], [tokens, chainId]);\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(_ref4 => {\n    let {\n      user: {\n        pairs\n      }\n    } = _ref4;\n    return pairs;\n  });\n  const userPairs = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return [];\n    const forChain = savedSerializedPairs[chainId];\n    if (!forChain) return [];\n    return Object.keys(forChain).map(pairId => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)];\n    });\n  }, [savedSerializedPairs, chainId]);\n  const combinedList = useMemo(() => userPairs.concat(generatedPairs).concat(pinnedPairs), [generatedPairs, pinnedPairs, userPairs]);\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce((memo, _ref5) => {\n      let [tokenA, tokenB] = _ref5;\n      const sorted = tokenA.sortsBefore(tokenB);\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`;\n      if (memo[key]) return memo;\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA];\n      return memo;\n    }, {});\n    return Object.keys(keyed).map(key => keyed[key]);\n  }, [combinedList]);\n}\n_s20(useTrackedTokenPairs, \"QInLPUCxYXyWKVe+Vw4YY6r71+g=\", false, function () {\n  return [useWeb3React, useAllTokens, useAppSelector];\n});","map":{"version":3,"names":["Percent","Token","computePairAddress","useWeb3React","L2_CHAIN_IDS","L2_DEADLINE_FROM_NOW","JSBI","useCallback","useMemo","shallowEqual","useAppDispatch","useAppSelector","UserAddedToken","V2_FACTORY_ADDRESSES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","useAllTokens","addSerializedPair","addSerializedToken","updateFiatOnrampAcknowledgments","updateHideClosedPositions","updateUserClientSideRouter","updateUserDarkMode","updateUserDeadline","updateUserExpertMode","toggleProLiveChart","updateUserLocale","updateUserSlippageTolerance","serializeToken","token","chainId","address","decimals","symbol","name","deserializeToken","serializedToken","Class","useIsDarkMode","userDarkMode","matchesDarkMode","user","useDarkModeManager","dispatch","darkMode","toggleSetDarkMode","useUserLocale","state","userLocale","useUserLocaleManager","locale","setLocale","newLocale","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useFiatOnrampAck","fiatOnrampAcknowledgments","setAcknowledgements","acks","useClientSideRouter","clientSideRouter","Boolean","userClientSideRouter","setClientSideRouter","newClientSideRouter","useUserSlippageTolerance","userSlippageToleranceRaw","userSlippageTolerance","setUserSlippageTolerance","value","toNumber","multiply","quotient","error","useUserHideClosedPositions","hideClosedPositions","userHideClosedPositions","setHideClosedPositions","newHideClosedPositions","useUserSlippageToleranceWithDefault","defaultSlippageTolerance","allowedSlippage","useUserTransactionTTL","userDeadline","onL2","includes","deadline","setUserDeadline","useAddUserToken","useUserAddedTokensOnChain","serializedTokensMap","tokens","tokenMap","Object","values","map","useUserAddedTokens","serializePair","pair","token0","token1","usePairAdder","serializedPair","useURLWarningVisible","URLWarningVisible","toV2LiquidityToken","tokenA","tokenB","Error","equals","factoryAddress","useShowProLiveChart","showProLiveChart","useSelector","useToggleProLiveChart","useDispatch","useTrackedTokenPairs","pinnedPairs","generatedPairs","keys","flatMap","tokenAddress","base","filter","p","savedSerializedPairs","pairs","userPairs","forChain","pairId","combinedList","concat","keyed","reduce","memo","sorted","sortsBefore","key"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/user/hooks.tsx"],"sourcesContent":["import { Percent, Token } from '@uniswap/sdk-core'\nimport { computePairAddress, Pair } from '@uniswap/v2-sdk'\nimport { useWeb3React } from '@web3-react/core'\nimport { L2_CHAIN_IDS } from 'constants/chains'\nimport { SupportedLocale } from 'constants/locales'\nimport { L2_DEADLINE_FROM_NOW } from 'constants/misc'\nimport JSBI from 'jsbi'\nimport { useCallback, useMemo } from 'react'\nimport { shallowEqual } from 'react-redux'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { UserAddedToken } from 'types/tokens'\n\nimport { V2_FACTORY_ADDRESSES } from '../../constants/addresses'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from '../../constants/routing'\nimport { useAllTokens } from '../../hooks/Tokens'\nimport { AppState } from '../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  updateFiatOnrampAcknowledgments,\n  updateHideClosedPositions,\n  updateUserClientSideRouter,\n  updateUserDarkMode,\n  updateUserDeadline,\n  updateUserExpertMode,\n  toggleLiveChart,\n  toggleProLiveChart,\n  updateUserLocale,\n  updateUserSlippageTolerance,\n} from './reducer'\nimport { SerializedPair, SerializedToken } from './types'\n\nfunction serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n  }\n}\n\nfunction deserializeToken(serializedToken: SerializedToken, Class: typeof Token = Token): Token {\n  return new Class(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name\n  )\n}\n\nexport function useIsDarkMode(): boolean {\n  const { userDarkMode, matchesDarkMode } = useAppSelector(\n    ({ user: { matchesDarkMode, userDarkMode } }) => ({\n      userDarkMode,\n      matchesDarkMode,\n    }),\n    shallowEqual\n  )\n\n  return userDarkMode === null ? matchesDarkMode : userDarkMode\n}\n\nexport function useDarkModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const darkMode = useIsDarkMode()\n\n  const toggleSetDarkMode = useCallback(() => {\n    dispatch(updateUserDarkMode({ userDarkMode: !darkMode }))\n  }, [darkMode, dispatch])\n\n  return [darkMode, toggleSetDarkMode]\n}\n\nexport function useUserLocale(): SupportedLocale | null {\n  return useAppSelector((state) => state.user.userLocale)\n}\n\nexport function useUserLocaleManager(): [SupportedLocale | null, (newLocale: SupportedLocale) => void] {\n  const dispatch = useAppDispatch()\n  const locale = useUserLocale()\n\n  const setLocale = useCallback(\n    (newLocale: SupportedLocale) => {\n      dispatch(updateUserLocale({ userLocale: newLocale }))\n    },\n    [dispatch]\n  )\n\n  return [locale, setLocale]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useAppSelector((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useAppDispatch()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\ninterface FiatOnrampAcknowledgements {\n  renderCount: number\n  system: boolean\n  user: boolean\n}\nexport function useFiatOnrampAck(): [\n  FiatOnrampAcknowledgements,\n  (acknowledgements: Partial<FiatOnrampAcknowledgements>) => void\n] {\n  const dispatch = useAppDispatch()\n  const fiatOnrampAcknowledgments = useAppSelector((state) => state.user.fiatOnrampAcknowledgments)\n  const setAcknowledgements = useCallback(\n    (acks: Partial<FiatOnrampAcknowledgements>) => {\n      dispatch(updateFiatOnrampAcknowledgments(acks))\n    },\n    [dispatch]\n  )\n  return [fiatOnrampAcknowledgments, setAcknowledgements]\n}\n\nexport function useClientSideRouter(): [boolean, (userClientSideRouter: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const clientSideRouter = useAppSelector((state) => Boolean(state.user.userClientSideRouter))\n\n  const setClientSideRouter = useCallback(\n    (newClientSideRouter: boolean) => {\n      dispatch(updateUserClientSideRouter({ userClientSideRouter: newClientSideRouter }))\n    },\n    [dispatch]\n  )\n\n  return [clientSideRouter, setClientSideRouter]\n}\n\n/**\n * Return the user's slippage tolerance, from the redux store, and a function to update the slippage tolerance\n */\nexport function useUserSlippageTolerance(): [Percent | 'auto', (slippageTolerance: Percent | 'auto') => void] {\n  const userSlippageToleranceRaw = useAppSelector((state) => {\n    return state.user.userSlippageTolerance\n  })\n  const userSlippageTolerance = useMemo(\n    () => (userSlippageToleranceRaw === 'auto' ? 'auto' : new Percent(userSlippageToleranceRaw, 10_000)),\n    [userSlippageToleranceRaw]\n  )\n\n  const dispatch = useAppDispatch()\n  const setUserSlippageTolerance = useCallback(\n    (userSlippageTolerance: Percent | 'auto') => {\n      let value: 'auto' | number\n      try {\n        value =\n          userSlippageTolerance === 'auto' ? 'auto' : JSBI.toNumber(userSlippageTolerance.multiply(10_000).quotient)\n      } catch (error) {\n        value = 'auto'\n      }\n      dispatch(\n        updateUserSlippageTolerance({\n          userSlippageTolerance: value,\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  return useMemo(\n    () => [userSlippageTolerance, setUserSlippageTolerance],\n    [setUserSlippageTolerance, userSlippageTolerance]\n  )\n}\n\nexport function useUserHideClosedPositions(): [boolean, (newHideClosedPositions: boolean) => void] {\n  const dispatch = useAppDispatch()\n\n  const hideClosedPositions = useAppSelector((state) => state.user.userHideClosedPositions)\n\n  const setHideClosedPositions = useCallback(\n    (newHideClosedPositions: boolean) => {\n      dispatch(updateHideClosedPositions({ userHideClosedPositions: newHideClosedPositions }))\n    },\n    [dispatch]\n  )\n\n  return [hideClosedPositions, setHideClosedPositions]\n}\n\n/**\n * Same as above but replaces the auto with a default value\n * @param defaultSlippageTolerance the default value to replace auto with\n */\nexport function useUserSlippageToleranceWithDefault(defaultSlippageTolerance: Percent): Percent {\n  const allowedSlippage = useUserSlippageTolerance()[0]\n  return useMemo(\n    () => (allowedSlippage === 'auto' ? defaultSlippageTolerance : allowedSlippage),\n    [allowedSlippage, defaultSlippageTolerance]\n  )\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const { chainId } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const userDeadline = useAppSelector((state) => state.user.userDeadline)\n  const onL2 = Boolean(chainId && L2_CHAIN_IDS.includes(chainId))\n  const deadline = onL2 ? L2_DEADLINE_FROM_NOW : userDeadline\n\n  const setUserDeadline = useCallback(\n    (userDeadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline }))\n    },\n    [dispatch]\n  )\n\n  return [deadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useAppDispatch()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useUserAddedTokensOnChain(chainId: number | undefined | null): Token[] {\n  const serializedTokensMap = useAppSelector(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    const tokenMap: Token[] = serializedTokensMap?.[chainId]\n      ? Object.values(serializedTokensMap[chainId]).map((value) => deserializeToken(value, UserAddedToken))\n      : []\n    return tokenMap\n  }, [serializedTokensMap, chainId])\n}\n\nexport function useUserAddedTokens(): Token[] {\n  return useUserAddedTokensOnChain(useWeb3React().chainId)\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch]\n  )\n}\n\nexport function useURLWarningVisible(): boolean {\n  return useAppSelector((state: AppState) => state.user.URLWarningVisible)\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  if (tokenA.chainId !== tokenB.chainId) throw new Error('Not matching chain IDs')\n  if (tokenA.equals(tokenB)) throw new Error('Tokens cannot be equal')\n  if (!V2_FACTORY_ADDRESSES[tokenA.chainId]) throw new Error('No V2 factory address on this chain')\n\n  return new Token(\n    tokenA.chainId,\n    computePairAddress({ factoryAddress: V2_FACTORY_ADDRESSES[tokenA.chainId], tokenA, tokenB }),\n    18,\n    'UNI-V2',\n    'Uniswap V2'\n  )\n}\n\n\nexport function useShowProLiveChart(): boolean {\n  const showProLiveChart = useSelector((state: AppState) => state.showProLiveChart)\n  return showProLiveChart\n}\n\nexport function useToggleProLiveChart(): () => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(() => dispatch(toggleProLiveChart()), [dispatch])\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? Object.keys(tokens).flatMap((tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  } else {\n                    return [base, token]\n                  }\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId]\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useAppSelector(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs]\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}