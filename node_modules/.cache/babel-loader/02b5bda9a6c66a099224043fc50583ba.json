{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar decode = require('parse-entities');\nvar locate = require('../locate/tag');\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_AT_SIGN = '@';\nvar C_SLASH = '/';\nvar MAILTO = 'mailto:';\nvar MAILTO_LENGTH = MAILTO.length;\n\n/* Tokenise a link. */\nfunction autoLink(eat, value, silent) {\n  var self;\n  var subvalue;\n  var length;\n  var index;\n  var queue;\n  var character;\n  var hasAtCharacter;\n  var link;\n  var now;\n  var content;\n  var tokenizers;\n  var exit;\n  if (value.charAt(0) !== C_LT) {\n    return;\n  }\n  self = this;\n  subvalue = '';\n  length = value.length;\n  index = 0;\n  queue = '';\n  hasAtCharacter = false;\n  link = '';\n  index++;\n  subvalue = C_LT;\n  while (index < length) {\n    character = value.charAt(index);\n    if (whitespace(character) || character === C_GT || character === C_AT_SIGN || character === ':' && value.charAt(index + 1) === C_SLASH) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  if (!queue) {\n    return;\n  }\n  link += queue;\n  queue = '';\n  character = value.charAt(index);\n  link += character;\n  index++;\n  if (character === C_AT_SIGN) {\n    hasAtCharacter = true;\n  } else {\n    if (character !== ':' || value.charAt(index + 1) !== C_SLASH) {\n      return;\n    }\n    link += C_SLASH;\n    index++;\n  }\n  while (index < length) {\n    character = value.charAt(index);\n    if (whitespace(character) || character === C_GT) {\n      break;\n    }\n    queue += character;\n    index++;\n  }\n  character = value.charAt(index);\n  if (!queue || character !== C_GT) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n  link += queue;\n  content = link;\n  subvalue += link + character;\n  now = eat.now();\n  now.column++;\n  now.offset++;\n  if (hasAtCharacter) {\n    if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {\n      content = content.substr(MAILTO_LENGTH);\n      now.column += MAILTO_LENGTH;\n      now.offset += MAILTO_LENGTH;\n    } else {\n      link = MAILTO + link;\n    }\n  }\n\n  /* Temporarily remove all tokenizers except text in autolinks. */\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {\n    text: tokenizers.text\n  };\n  exit = self.enterLink();\n  content = self.tokenizeInline(content, now);\n  self.inlineTokenizers = tokenizers;\n  exit();\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {\n      nonTerminated: false\n    }),\n    children: content\n  });\n}","map":{"version":3,"names":["whitespace","require","decode","locate","module","exports","autoLink","locator","notInLink","C_LT","C_GT","C_AT_SIGN","C_SLASH","MAILTO","MAILTO_LENGTH","length","eat","value","silent","self","subvalue","index","queue","character","hasAtCharacter","link","now","content","tokenizers","exit","charAt","column","offset","slice","toLowerCase","substr","inlineTokenizers","text","enterLink","tokenizeInline","type","title","url","nonTerminated","children"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/auto-link.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar decode = require('parse-entities');\nvar locate = require('../locate/tag');\n\nmodule.exports = autoLink;\nautoLink.locator = locate;\nautoLink.notInLink = true;\n\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_AT_SIGN = '@';\nvar C_SLASH = '/';\nvar MAILTO = 'mailto:';\nvar MAILTO_LENGTH = MAILTO.length;\n\n/* Tokenise a link. */\nfunction autoLink(eat, value, silent) {\n  var self;\n  var subvalue;\n  var length;\n  var index;\n  var queue;\n  var character;\n  var hasAtCharacter;\n  var link;\n  var now;\n  var content;\n  var tokenizers;\n  var exit;\n\n  if (value.charAt(0) !== C_LT) {\n    return;\n  }\n\n  self = this;\n  subvalue = '';\n  length = value.length;\n  index = 0;\n  queue = '';\n  hasAtCharacter = false;\n  link = '';\n\n  index++;\n  subvalue = C_LT;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (\n      whitespace(character) ||\n      character === C_GT ||\n      character === C_AT_SIGN ||\n      (character === ':' && value.charAt(index + 1) === C_SLASH)\n    ) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue) {\n    return;\n  }\n\n  link += queue;\n  queue = '';\n\n  character = value.charAt(index);\n  link += character;\n  index++;\n\n  if (character === C_AT_SIGN) {\n    hasAtCharacter = true;\n  } else {\n    if (\n      character !== ':' ||\n      value.charAt(index + 1) !== C_SLASH\n    ) {\n      return;\n    }\n\n    link += C_SLASH;\n    index++;\n  }\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (whitespace(character) || character === C_GT) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n\n  if (!queue || character !== C_GT) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  link += queue;\n  content = link;\n  subvalue += link + character;\n  now = eat.now();\n  now.column++;\n  now.offset++;\n\n  if (hasAtCharacter) {\n    if (link.slice(0, MAILTO_LENGTH).toLowerCase() === MAILTO) {\n      content = content.substr(MAILTO_LENGTH);\n      now.column += MAILTO_LENGTH;\n      now.offset += MAILTO_LENGTH;\n    } else {\n      link = MAILTO + link;\n    }\n  }\n\n  /* Temporarily remove all tokenizers except text in autolinks. */\n  tokenizers = self.inlineTokenizers;\n  self.inlineTokenizers = {text: tokenizers.text};\n\n  exit = self.enterLink();\n\n  content = self.tokenizeInline(content, now);\n\n  self.inlineTokenizers = tokenizers;\n  exit();\n\n  return eat(subvalue)({\n    type: 'link',\n    title: null,\n    url: decode(link, {nonTerminated: false}),\n    children: content\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}