{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/TransactionsTable/index.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useState, useMemo, useEffect } from 'react';\nimport { DarkGrayCard } from 'components/Card';\nimport Loader from 'components/Loader';\nimport { AutoColumn } from 'components/Column';\nimport { formatDollarAmount, formatAmount } from 'utils/numbers';\nimport { shortenAddress, getEtherscanLink } from 'utils';\nimport { Label, ClickableText } from 'components/Text';\nimport { TransactionType } from 'types';\nimport { formatTime } from 'utils/date';\nimport { RowFixed } from 'components/Row';\nimport { ExternalLink, TYPE } from 'theme';\nimport { PageButtons, Arrow, Break } from 'components/shared';\nimport useTheme from 'hooks/useTheme';\nimport HoverInlineText from 'components/HoverInlineText';\nimport { useActiveNetworkVersion } from 'state/application/hooks';\nimport { OptimismNetworkInfo } from 'constants/networks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = _styled(DarkGrayCard).withConfig({\n  displayName: \"TransactionsTable__Wrapper\",\n  componentId: \"sc-1jsm67r-0\"\n})([\"width:100%;\"]);\nconst ResponsiveGrid = _styled.div.withConfig({\n  displayName: \"TransactionsTable__ResponsiveGrid\",\n  componentId: \"sc-1jsm67r-1\"\n})([\"display:grid;grid-gap:1em;align-items:center;grid-template-columns:1.5fr repeat(5,1fr);@media screen and (max-width:940px){grid-template-columns:1.5fr repeat(4,1fr);& > *:nth-child(5){display:none;}}@media screen and (max-width:800px){grid-template-columns:1.5fr repeat(2,1fr);& > *:nth-child(5){display:none;}& > *:nth-child(3){display:none;}& > *:nth-child(4){display:none;}}@media screen and (max-width:500px){grid-template-columns:1.5fr repeat(1,1fr);& > *:nth-child(5){display:none;}& > *:nth-child(3){display:none;}& > *:nth-child(4){display:none;}& > *:nth-child(2){display:none;}}\"]);\nconst SortText = _styled.button.withConfig({\n  displayName: \"TransactionsTable__SortText\",\n  componentId: \"sc-1jsm67r-2\"\n})([\"cursor:pointer;font-weight:\", \";margin-right:0.75rem !important;border:none;background-color:transparent;font-size:1rem;padding:0px;color:\", \";outline:none;@media screen and (max-width:600px){font-size:14px;}\"], _ref => {\n  let {\n    active\n  } = _ref;\n  return active ? 500 : 400;\n}, _ref2 => {\n  let {\n    active,\n    theme\n  } = _ref2;\n  return active ? theme.textPrimary : theme.textSecondary;\n});\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1'\n};\nconst DataRow = _ref3 => {\n  _s();\n  let {\n    transaction,\n    color\n  } = _ref3;\n  const abs0 = Math.abs(transaction.amountToken0);\n  const abs1 = Math.abs(transaction.amountToken1);\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol;\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol;\n  const [activeNetwork] = useActiveNetworkVersion();\n  const theme = useTheme();\n  return /*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n    children: [/*#__PURE__*/_jsxDEV(ExternalLink, {\n      href: getEtherscanLink(1, transaction.hash, 'transaction', activeNetwork),\n      children: /*#__PURE__*/_jsxDEV(Label, {\n        color: color !== null && color !== void 0 ? color : theme.blue1,\n        fontWeight: 400,\n        children: transaction.type === TransactionType.MINT ? `Add ${transaction.token0Symbol} and ${transaction.token1Symbol}` : transaction.type === TransactionType.SWAP ? `Swap ${inputTokenSymbol} for ${outputTokenSymbol}` : `Remove ${transaction.token0Symbol} and ${transaction.token1Symbol}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      end: 1,\n      fontWeight: 400,\n      children: formatDollarAmount(transaction.amountUSD)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      end: 1,\n      fontWeight: 400,\n      children: /*#__PURE__*/_jsxDEV(HoverInlineText, {\n        text: `${formatAmount(abs0)}  ${transaction.token0Symbol}`,\n        maxCharacters: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      end: 1,\n      fontWeight: 400,\n      children: /*#__PURE__*/_jsxDEV(HoverInlineText, {\n        text: `${formatAmount(abs1)}  ${transaction.token1Symbol}`,\n        maxCharacters: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      end: 1,\n      fontWeight: 400,\n      children: /*#__PURE__*/_jsxDEV(ExternalLink, {\n        href: getEtherscanLink(1, transaction.sender, 'address', activeNetwork),\n        style: {\n          color: color !== null && color !== void 0 ? color : theme.blue1\n        },\n        children: shortenAddress(transaction.sender)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      end: 1,\n      fontWeight: 400,\n      children: formatTime(transaction.timestamp, activeNetwork === OptimismNetworkInfo ? 8 : 0)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(DataRow, \"4XxfZWsyUAYoVk3eyXyuvnuFQ5I=\", false, function () {\n  return [useActiveNetworkVersion, useTheme];\n});\n_c = DataRow;\nexport default function TransactionTable(_ref4) {\n  _s2();\n  let {\n    transactions,\n    maxItems = 10,\n    color\n  } = _ref4;\n  // theming\n  const theme = useTheme();\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp);\n  const [sortDirection, setSortDirection] = useState(true);\n\n  // pagination\n  const [page, setPage] = useState(1);\n  const [maxPage, setMaxPage] = useState(1);\n  useEffect(() => {\n    let extraPages = 1;\n    if (transactions.length % maxItems === 0) {\n      extraPages = 0;\n    }\n    setMaxPage(Math.floor(transactions.length / maxItems) + extraPages);\n  }, [maxItems, transactions]);\n\n  // filter on txn type\n  const [txFilter, setTxFilter] = useState(undefined);\n  const sortedTransactions = useMemo(() => {\n    return transactions ? transactions.slice().sort((a, b) => {\n      if (a && b) {\n        return a[sortField] > b[sortField] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1;\n      } else {\n        return -1;\n      }\n    }).filter(x => {\n      return txFilter === undefined || x.type === txFilter;\n    }).slice(maxItems * (page - 1), page * maxItems) : [];\n  }, [transactions, maxItems, page, sortField, sortDirection, txFilter]);\n  const handleSort = useCallback(newField => {\n    setSortField(newField);\n    setSortDirection(sortField !== newField ? true : !sortDirection);\n  }, [sortDirection, sortField]);\n  const arrow = useCallback(field => {\n    return sortField === field ? !sortDirection ? '↑' : '↓' : '';\n  }, [sortDirection, sortField]);\n  if (!transactions) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(ResponsiveGrid, {\n        children: [/*#__PURE__*/_jsxDEV(RowFixed, {\n          children: [/*#__PURE__*/_jsxDEV(SortText, {\n            onClick: () => {\n              setTxFilter(undefined);\n            },\n            active: txFilter === undefined,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SortText, {\n            onClick: () => {\n              setTxFilter(TransactionType.SWAP);\n            },\n            active: txFilter === TransactionType.SWAP,\n            children: \"Swaps\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SortText, {\n            onClick: () => {\n              setTxFilter(TransactionType.MINT);\n            },\n            active: txFilter === TransactionType.MINT,\n            children: \"Adds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SortText, {\n            onClick: () => {\n              setTxFilter(TransactionType.BURN);\n            },\n            active: txFilter === TransactionType.BURN,\n            children: \"Removes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n          color: theme.text2,\n          onClick: () => handleSort(SORT_FIELD.amountUSD),\n          end: 1,\n          children: [\"Total Value \", arrow(SORT_FIELD.amountUSD)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n          color: theme.text2,\n          end: 1,\n          onClick: () => handleSort(SORT_FIELD.amountToken0),\n          children: [\"Token Amount \", arrow(SORT_FIELD.amountToken0)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n          color: theme.text2,\n          end: 1,\n          onClick: () => handleSort(SORT_FIELD.amountToken1),\n          children: [\"Token Amount \", arrow(SORT_FIELD.amountToken1)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n          color: theme.text2,\n          end: 1,\n          onClick: () => handleSort(SORT_FIELD.sender),\n          children: [\"Account \", arrow(SORT_FIELD.sender)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ClickableText, {\n          color: theme.text2,\n          end: 1,\n          onClick: () => handleSort(SORT_FIELD.timestamp),\n          children: [\"Time \", arrow(SORT_FIELD.timestamp)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), sortedTransactions.map((t, i) => {\n        if (t) {\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(DataRow, {\n              transaction: t,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Break, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }, this);\n        }\n        return null;\n      }), sortedTransactions.length === 0 ? /*#__PURE__*/_jsxDEV(TYPE.main, {\n        children: \"No Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 44\n      }, this) : undefined, /*#__PURE__*/_jsxDEV(PageButtons, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setPage(page === 1 ? page : page - 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(Arrow, {\n            faded: page === 1 ? true : false,\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TYPE.body, {\n          children: 'Page ' + page + ' of ' + maxPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            setPage(page === maxPage ? page : page + 1);\n          },\n          children: /*#__PURE__*/_jsxDEV(Arrow, {\n            faded: page === maxPage ? true : false,\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n_s2(TransactionTable, \"3lzJv1Cn9a0FQhCAuOdEQdVxwJ0=\", false, function () {\n  return [useTheme];\n});\n_c2 = TransactionTable;\nvar _c, _c2;\n$RefreshReg$(_c, \"DataRow\");\n$RefreshReg$(_c2, \"TransactionTable\");","map":{"version":3,"names":["React","useCallback","useState","useMemo","useEffect","DarkGrayCard","Loader","AutoColumn","formatDollarAmount","formatAmount","shortenAddress","getEtherscanLink","Label","ClickableText","TransactionType","formatTime","RowFixed","ExternalLink","TYPE","PageButtons","Arrow","Break","useTheme","HoverInlineText","useActiveNetworkVersion","OptimismNetworkInfo","Wrapper","styled","ResponsiveGrid","div","SortText","button","active","theme","textPrimary","textSecondary","SORT_FIELD","amountUSD","timestamp","sender","amountToken0","amountToken1","DataRow","transaction","color","abs0","Math","abs","abs1","outputTokenSymbol","token0Symbol","token1Symbol","inputTokenSymbol","activeNetwork","hash","blue1","type","MINT","SWAP","TransactionTable","transactions","maxItems","sortField","setSortField","sortDirection","setSortDirection","page","setPage","maxPage","setMaxPage","extraPages","length","floor","txFilter","setTxFilter","undefined","sortedTransactions","slice","sort","a","b","filter","x","handleSort","newField","arrow","field","BURN","text2","map","t","i"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/TransactionsTable/index.tsx"],"sourcesContent":["import React, { useCallback, useState, useMemo, useEffect } from 'react'\nimport styled from 'styled-components/macro'\nimport { DarkGrayCard } from 'components/Card'\nimport Loader from 'components/Loader'\nimport { AutoColumn } from 'components/Column'\nimport { formatDollarAmount, formatAmount } from 'utils/numbers'\nimport { shortenAddress, getEtherscanLink } from 'utils'\nimport { Label, ClickableText } from 'components/Text'\nimport { Transaction, TransactionType } from 'types'\nimport { formatTime } from 'utils/date'\nimport { RowFixed } from 'components/Row'\nimport { ExternalLink, TYPE } from 'theme'\nimport { PageButtons, Arrow, Break } from 'components/shared'\nimport useTheme from 'hooks/useTheme'\nimport HoverInlineText from 'components/HoverInlineText'\nimport { useActiveNetworkVersion } from 'state/application/hooks'\nimport { OptimismNetworkInfo } from 'constants/networks'\n\nconst Wrapper = styled(DarkGrayCard)`\n  width: 100%;\n`\n\nconst ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n\n  grid-template-columns: 1.5fr repeat(5, 1fr);\n\n  @media screen and (max-width: 940px) {\n    grid-template-columns: 1.5fr repeat(4, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1.5fr repeat(2, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 1.5fr repeat(1, 1fr);\n    & > *:nth-child(5) {\n      display: none;\n    }\n    & > *:nth-child(3) {\n      display: none;\n    }\n    & > *:nth-child(4) {\n      display: none;\n    }\n    & > *:nth-child(2) {\n      display: none;\n    }\n  }\n`\n\nconst SortText = styled.button<{ active: boolean }>`\n  cursor: pointer;\n  font-weight: ${({ active }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.textPrimary : theme.textSecondary)};\n  outline: none;\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  amountUSD: 'amountUSD',\n  timestamp: 'timestamp',\n  sender: 'sender',\n  amountToken0: 'amountToken0',\n  amountToken1: 'amountToken1',\n}\n\nconst DataRow = ({ transaction, color }: { transaction: Transaction; color?: string }) => {\n  const abs0 = Math.abs(transaction.amountToken0)\n  const abs1 = Math.abs(transaction.amountToken1)\n  const outputTokenSymbol = transaction.amountToken0 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const inputTokenSymbol = transaction.amountToken1 < 0 ? transaction.token0Symbol : transaction.token1Symbol\n  const [activeNetwork] = useActiveNetworkVersion()\n  const theme = useTheme()\n\n  return (\n    <ResponsiveGrid>\n      <ExternalLink href={getEtherscanLink(1, transaction.hash, 'transaction', activeNetwork)}>\n        <Label color={color ?? theme.blue1} fontWeight={400}>\n          {transaction.type === TransactionType.MINT\n            ? `Add ${transaction.token0Symbol} and ${transaction.token1Symbol}`\n            : transaction.type === TransactionType.SWAP\n            ? `Swap ${inputTokenSymbol} for ${outputTokenSymbol}`\n            : `Remove ${transaction.token0Symbol} and ${transaction.token1Symbol}`}\n        </Label>\n      </ExternalLink>\n      <Label end={1} fontWeight={400}>\n        {formatDollarAmount(transaction.amountUSD)}\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs0)}  ${transaction.token0Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <HoverInlineText text={`${formatAmount(abs1)}  ${transaction.token1Symbol}`} maxCharacters={16} />\n      </Label>\n      <Label end={1} fontWeight={400}>\n        <ExternalLink\n          href={getEtherscanLink(1, transaction.sender, 'address', activeNetwork)}\n          style={{ color: color ?? theme.blue1 }}\n        >\n          {shortenAddress(transaction.sender)}\n        </ExternalLink>\n      </Label>\n      <Label end={1} fontWeight={400}>\n        {formatTime(transaction.timestamp, activeNetwork === OptimismNetworkInfo ? 8 : 0)}\n      </Label>\n    </ResponsiveGrid>\n  )\n}\n\nexport default function TransactionTable({\n  transactions,\n  maxItems = 10,\n  color,\n}: {\n  transactions: Transaction[]\n  maxItems?: number\n  color?: string\n}) {\n  // theming\n  const theme = useTheme()\n\n  // for sorting\n  const [sortField, setSortField] = useState(SORT_FIELD.timestamp)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  useEffect(() => {\n    let extraPages = 1\n    if (transactions.length % maxItems === 0) {\n      extraPages = 0\n    }\n    setMaxPage(Math.floor(transactions.length / maxItems) + extraPages)\n  }, [maxItems, transactions])\n\n  // filter on txn type\n  const [txFilter, setTxFilter] = useState<TransactionType | undefined>(undefined)\n\n  const sortedTransactions = useMemo(() => {\n    return transactions\n      ? transactions\n          .slice()\n          .sort((a, b) => {\n            if (a && b) {\n              return a[sortField as keyof Transaction] > b[sortField as keyof Transaction]\n                ? (sortDirection ? -1 : 1) * 1\n                : (sortDirection ? -1 : 1) * -1\n            } else {\n              return -1\n            }\n          })\n          .filter((x) => {\n            return txFilter === undefined || x.type === txFilter\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [transactions, maxItems, page, sortField, sortDirection, txFilter])\n\n  const handleSort = useCallback(\n    (newField: string) => {\n      setSortField(newField)\n      setSortDirection(sortField !== newField ? true : !sortDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: string) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  if (!transactions) {\n    return <Loader />\n  }\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"16px\">\n        <ResponsiveGrid>\n          <RowFixed>\n            <SortText\n              onClick={() => {\n                setTxFilter(undefined)\n              }}\n              active={txFilter === undefined}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.SWAP)\n              }}\n              active={txFilter === TransactionType.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.MINT)\n              }}\n              active={txFilter === TransactionType.MINT}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TransactionType.BURN)\n              }}\n              active={txFilter === TransactionType.BURN}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n          <ClickableText color={theme.text2} onClick={() => handleSort(SORT_FIELD.amountUSD)} end={1}>\n            Total Value {arrow(SORT_FIELD.amountUSD)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken0)}>\n            Token Amount {arrow(SORT_FIELD.amountToken0)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.amountToken1)}>\n            Token Amount {arrow(SORT_FIELD.amountToken1)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.sender)}>\n            Account {arrow(SORT_FIELD.sender)}\n          </ClickableText>\n          <ClickableText color={theme.text2} end={1} onClick={() => handleSort(SORT_FIELD.timestamp)}>\n            Time {arrow(SORT_FIELD.timestamp)}\n          </ClickableText>\n        </ResponsiveGrid>\n        <Break />\n\n        {sortedTransactions.map((t, i) => {\n          if (t) {\n            return (\n              <React.Fragment key={i}>\n                <DataRow transaction={t} color={color} />\n                <Break />\n              </React.Fragment>\n            )\n          }\n          return null\n        })}\n        {sortedTransactions.length === 0 ? <TYPE.main>No Transactions</TYPE.main> : undefined}\n        <PageButtons>\n          <div\n            onClick={() => {\n              setPage(page === 1 ? page : page - 1)\n            }}\n          >\n            <Arrow faded={page === 1 ? true : false}>←</Arrow>\n          </div>\n          <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n          <div\n            onClick={() => {\n              setPage(page === maxPage ? page : page + 1)\n            }}\n          >\n            <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n          </div>\n        </PageButtons>\n      </AutoColumn>\n    </Wrapper>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}