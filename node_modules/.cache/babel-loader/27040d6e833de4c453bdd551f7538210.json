{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"totalValueLockedETH\", \"totalValueLockedUSD\"];\nvar _SUBGRAPH_URL_BY_CHAI, _templateObject;\nimport retry from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId, log } from '../../util';\nexport var printV3SubgraphPool = function printV3SubgraphPool(s) {\n  return \"\".concat(s.token0.id, \"/\").concat(s.token1.id, \"/\").concat(s.feeTier);\n};\nexport var printV2SubgraphPool = function printV2SubgraphPool(s) {\n  return \"\".concat(s.token0.id, \"/\").concat(s.token1.id);\n};\nvar SUBGRAPH_URL_BY_CHAIN = (_SUBGRAPH_URL_BY_CHAI = {}, _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.MAINNET, 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.RINKEBY, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.OPTIMISM, 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.ARBITRUM_ONE, 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.POLYGON, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.CELO, 'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo'), _defineProperty(_SUBGRAPH_URL_BY_CHAI, ChainId.GÃ–RLI, 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-gorli'), _SUBGRAPH_URL_BY_CHAI);\nvar PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport var V3SubgraphProvider = /*#__PURE__*/function () {\n  function V3SubgraphProvider(chainId) {\n    var retries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n    var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 30000;\n    var rollback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    _classCallCheck(this, V3SubgraphProvider);\n    this.chainId = chainId;\n    this.retries = retries;\n    this.timeout = timeout;\n    this.rollback = rollback;\n    var subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n    if (!subgraphUrl) {\n      throw new Error(\"No subgraph url for chain id: \".concat(this.chainId));\n    }\n    this.client = new GraphQLClient(subgraphUrl);\n  }\n  _createClass(V3SubgraphProvider, [{\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_tokenIn, _tokenOut, providerConfig) {\n        var _this = this;\n        var blockNumber, query, pools, poolsSanitized;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)) {\n                  _context3.next = 6;\n                  break;\n                }\n                _context3.next = 3;\n                return providerConfig.blockNumber;\n              case 3:\n                _context3.t0 = _context3.sent;\n                _context3.next = 7;\n                break;\n              case 6:\n                _context3.t0 = undefined;\n              case 7:\n                blockNumber = _context3.t0;\n                query = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      query getPools($pageSize: Int!, $id: String) {\\n        pools(\\n          first: $pageSize\\n          \", \"\\n          where: { id_gt: $id }\\n        ) {\\n          id\\n          token0 {\\n            symbol\\n            id\\n          }\\n          token1 {\\n            symbol\\n            id\\n          }\\n          feeTier\\n          liquidity\\n          totalValueLockedUSD\\n          totalValueLockedETH\\n        }\\n      }\\n    \"])), blockNumber ? \"block: { number: \".concat(blockNumber, \" }\") : \"\");\n                pools = [];\n                log.info(\"Getting V3 pools from the subgraph with page size \".concat(PAGE_SIZE).concat((providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) ? \" as of block \".concat(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber) : '', \".\"));\n                _context3.next = 13;\n                return retry( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                  var timeout, getPools, getPoolsPromise, timerPromise;\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          timeout = new Timeout();\n                          getPools = /*#__PURE__*/function () {\n                            var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                              var lastId, pools, poolsPage, poolsResult;\n                              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                                while (1) {\n                                  switch (_context.prev = _context.next) {\n                                    case 0:\n                                      lastId = '';\n                                      pools = [];\n                                      poolsPage = [];\n                                    case 3:\n                                      _context.next = 5;\n                                      return _this.client.request(query, {\n                                        pageSize: PAGE_SIZE,\n                                        id: lastId\n                                      });\n                                    case 5:\n                                      poolsResult = _context.sent;\n                                      poolsPage = poolsResult.pools;\n                                      pools = pools.concat(poolsPage);\n                                      lastId = pools[pools.length - 1].id;\n                                    case 9:\n                                      if (poolsPage.length > 0) {\n                                        _context.next = 3;\n                                        break;\n                                      }\n                                    case 10:\n                                      return _context.abrupt(\"return\", pools);\n                                    case 11:\n                                    case \"end\":\n                                      return _context.stop();\n                                  }\n                                }\n                              }, _callee);\n                            }));\n                            return function getPools() {\n                              return _ref2.apply(this, arguments);\n                            };\n                          }();\n                          /* eslint-disable no-useless-catch */\n                          _context2.prev = 2;\n                          getPoolsPromise = getPools();\n                          timerPromise = timeout.set(_this.timeout).then(function () {\n                            throw new Error(\"Timed out getting pools from subgraph: \".concat(_this.timeout));\n                          });\n                          _context2.next = 7;\n                          return Promise.race([getPoolsPromise, timerPromise]);\n                        case 7:\n                          pools = _context2.sent;\n                          return _context2.abrupt(\"return\");\n                        case 11:\n                          _context2.prev = 11;\n                          _context2.t0 = _context2[\"catch\"](2);\n                          throw _context2.t0;\n                        case 14:\n                          _context2.prev = 14;\n                          timeout.clear();\n                          return _context2.finish(14);\n                        case 17:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2, null, [[2, 11, 14, 17]]);\n                })), {\n                  retries: this.retries,\n                  onRetry: function onRetry(err, retry) {\n                    if (_this.rollback && blockNumber && _.includes(err.message, 'indexed up to')) {\n                      blockNumber = blockNumber - 10;\n                      log.info(\"Detected subgraph indexing error. Rolled back block number to: \".concat(blockNumber));\n                    }\n                    pools = [];\n                    log.info({\n                      err: err\n                    }, \"Failed to get pools from subgraph. Retry attempt: \".concat(retry));\n                  }\n                });\n              case 13:\n                poolsSanitized = pools.filter(function (pool) {\n                  return parseInt(pool.liquidity) > 0;\n                }).map(function (pool) {\n                  var totalValueLockedETH = pool.totalValueLockedETH,\n                    totalValueLockedUSD = pool.totalValueLockedUSD,\n                    rest = _objectWithoutProperties(pool, _excluded);\n                  return _objectSpread(_objectSpread({}, rest), {}, {\n                    id: pool.id.toLowerCase(),\n                    token0: {\n                      id: pool.token0.id.toLowerCase()\n                    },\n                    token1: {\n                      id: pool.token1.id.toLowerCase()\n                    },\n                    tvlETH: parseFloat(totalValueLockedETH),\n                    tvlUSD: parseFloat(totalValueLockedUSD)\n                  });\n                });\n                log.info(\"Got \".concat(pools.length, \" V3 pools from the subgraph. \").concat(poolsSanitized.length, \" after filtering\"));\n                return _context3.abrupt(\"return\", poolsSanitized);\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function getPools(_x, _x2, _x3) {\n        return _getPools.apply(this, arguments);\n      }\n      return getPools;\n    }()\n  }]);\n  return V3SubgraphProvider;\n}();","map":{"version":3,"sources":["../../../../src/providers/v3/subgraph-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import retry from 'async-retry';\nimport Timeout from 'await-timeout';\nimport { gql, GraphQLClient } from 'graphql-request';\nimport _ from 'lodash';\nimport { ChainId, log } from '../../util';\nexport const printV3SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}/${s.feeTier}`;\nexport const printV2SubgraphPool = (s) => `${s.token0.id}/${s.token1.id}`;\nconst SUBGRAPH_URL_BY_CHAIN = {\n    [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n    [ChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-rinkeby',\n    [ChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',\n    [ChainId.ARBITRUM_ONE]: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal',\n    [ChainId.POLYGON]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',\n    [ChainId.CELO]: 'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo',\n    [ChainId.GÃ–RLI]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-gorli',\n};\nconst PAGE_SIZE = 1000; // 1k is max possible query size from subgraph.\nexport class V3SubgraphProvider {\n    constructor(chainId, retries = 2, timeout = 30000, rollback = true) {\n        this.chainId = chainId;\n        this.retries = retries;\n        this.timeout = timeout;\n        this.rollback = rollback;\n        const subgraphUrl = SUBGRAPH_URL_BY_CHAIN[this.chainId];\n        if (!subgraphUrl) {\n            throw new Error(`No subgraph url for chain id: ${this.chainId}`);\n        }\n        this.client = new GraphQLClient(subgraphUrl);\n    }\n    async getPools(_tokenIn, _tokenOut, providerConfig) {\n        let blockNumber = (providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? await providerConfig.blockNumber\n            : undefined;\n        const query = gql `\n      query getPools($pageSize: Int!, $id: String) {\n        pools(\n          first: $pageSize\n          ${blockNumber ? `block: { number: ${blockNumber} }` : ``}\n          where: { id_gt: $id }\n        ) {\n          id\n          token0 {\n            symbol\n            id\n          }\n          token1 {\n            symbol\n            id\n          }\n          feeTier\n          liquidity\n          totalValueLockedUSD\n          totalValueLockedETH\n        }\n      }\n    `;\n        let pools = [];\n        log.info(`Getting V3 pools from the subgraph with page size ${PAGE_SIZE}${(providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber)\n            ? ` as of block ${providerConfig === null || providerConfig === void 0 ? void 0 : providerConfig.blockNumber}`\n            : ''}.`);\n        await retry(async () => {\n            const timeout = new Timeout();\n            const getPools = async () => {\n                let lastId = '';\n                let pools = [];\n                let poolsPage = [];\n                do {\n                    const poolsResult = await this.client.request(query, {\n                        pageSize: PAGE_SIZE,\n                        id: lastId,\n                    });\n                    poolsPage = poolsResult.pools;\n                    pools = pools.concat(poolsPage);\n                    lastId = pools[pools.length - 1].id;\n                } while (poolsPage.length > 0);\n                return pools;\n            };\n            /* eslint-disable no-useless-catch */\n            try {\n                const getPoolsPromise = getPools();\n                const timerPromise = timeout.set(this.timeout).then(() => {\n                    throw new Error(`Timed out getting pools from subgraph: ${this.timeout}`);\n                });\n                pools = await Promise.race([getPoolsPromise, timerPromise]);\n                return;\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                timeout.clear();\n            }\n            /* eslint-enable no-useless-catch */\n        }, {\n            retries: this.retries,\n            onRetry: (err, retry) => {\n                if (this.rollback &&\n                    blockNumber &&\n                    _.includes(err.message, 'indexed up to')) {\n                    blockNumber = blockNumber - 10;\n                    log.info(`Detected subgraph indexing error. Rolled back block number to: ${blockNumber}`);\n                }\n                pools = [];\n                log.info({ err }, `Failed to get pools from subgraph. Retry attempt: ${retry}`);\n            },\n        });\n        const poolsSanitized = pools\n            .filter((pool) => parseInt(pool.liquidity) > 0)\n            .map((pool) => {\n            const { totalValueLockedETH, totalValueLockedUSD, ...rest } = pool;\n            return {\n                ...rest,\n                id: pool.id.toLowerCase(),\n                token0: {\n                    id: pool.token0.id.toLowerCase(),\n                },\n                token1: {\n                    id: pool.token1.id.toLowerCase(),\n                },\n                tvlETH: parseFloat(totalValueLockedETH),\n                tvlUSD: parseFloat(totalValueLockedUSD),\n            };\n        });\n        log.info(`Got ${pools.length} V3 pools from the subgraph. ${poolsSanitized.length} after filtering`);\n        return poolsSanitized;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvcHJvdmlkZXJzL3YzL3N1YmdyYXBoLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sS0FBSyxNQUFNLGFBQWEsQ0FBQztBQUNoQyxPQUFPLE9BQU8sTUFBTSxlQUFlLENBQUM7QUFDcEMsT0FBTyxFQUFFLEdBQUcsRUFBRSxhQUFhLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRCxPQUFPLENBQUMsTUFBTSxRQUFRLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFrQzFDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDO0FBRS9DLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsQ0FBaUIsRUFBRSxFQUFFLENBQ3ZELEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQztBQUVsQyxNQUFNLHFCQUFxQixHQUFzQztJQUMvRCxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDZiw0REFBNEQ7SUFDOUQsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQ2Ysc0VBQXNFO0lBQ3hFLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUNoQiwyRUFBMkU7SUFDN0UsQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLEVBQ3BCLG9FQUFvRTtJQUN0RSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFDZixzRUFBc0U7SUFDeEUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQ1os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"]},"metadata":{},"sourceType":"module"}