{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\nconst WalletSDKUI_1 = require(\"./provider/WalletSDKUI\");\nconst WalletSDKRelay_1 = require(\"./relay/WalletSDKRelay\");\nconst WalletSDKRelayEventManager_1 = require(\"./relay/WalletSDKRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst LINK_API_URL = process.env.LINK_API_URL || \"https://www.walletlink.org\";\nconst SDK_VERSION = process.env.SDK_VERSION || require(\"../package.json\").version || \"unknown\";\nclass CoinbaseWalletSDK {\n  /**\n   * Constructor\n   * @param options Coinbase Wallet SDK constructor options\n   */\n  constructor(options) {\n    var _a, _b, _c;\n    this._appName = \"\";\n    this._appLogoUrl = null;\n    this._relay = null;\n    this._relayEventManager = null;\n    const linkAPIUrl = options.linkAPIUrl || LINK_API_URL;\n    let uiConstructor;\n    if (!options.uiConstructor) {\n      uiConstructor = opts => new WalletSDKUI_1.WalletSDKUI(opts);\n    } else {\n      uiConstructor = options.uiConstructor;\n    }\n    if (typeof options.overrideIsMetaMask === \"undefined\") {\n      this._overrideIsMetaMask = false;\n    } else {\n      this._overrideIsMetaMask = options.overrideIsMetaMask;\n    }\n    this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    this._overrideIsCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    if (options.diagnosticLogger && options.eventListener) {\n      throw new Error(\"Can't have both eventListener and diagnosticLogger options, use only diagnosticLogger\");\n    }\n    if (options.eventListener) {\n      this._diagnosticLogger = {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        log: options.eventListener.onEvent\n      };\n    } else {\n      this._diagnosticLogger = options.diagnosticLogger;\n    }\n    this._reloadOnDisconnect = (_c = options.reloadOnDisconnect) !== null && _c !== void 0 ? _c : true;\n    const u = new URL(linkAPIUrl);\n    const origin = `${u.protocol}//${u.host}`;\n    this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${origin}`); // needs migration to preserve local states\n    this._storage.setItem(\"version\", CoinbaseWalletSDK.VERSION);\n    if (this.walletExtension) {\n      return;\n    }\n    this._relayEventManager = new WalletSDKRelayEventManager_1.WalletSDKRelayEventManager();\n    this._relay = new WalletSDKRelay_1.WalletSDKRelay({\n      linkAPIUrl,\n      version: SDK_VERSION,\n      darkMode: !!options.darkMode,\n      uiConstructor,\n      storage: this._storage,\n      relayEventManager: this._relayEventManager,\n      diagnosticLogger: this._diagnosticLogger\n    });\n    this.setAppInfo(options.appName, options.appLogoUrl);\n    if (!!options.headlessMode) return;\n    this._relay.attachUI();\n  }\n  /**\n   * Create a Web3 Provider object\n   * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n   * @param chainId Ethereum Chain ID (Default: 1)\n   * @returns A Web3 Provider\n   */\n  makeWeb3Provider() {\n    let jsonRpcUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    let chainId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    const extension = this.walletExtension;\n    if (extension) {\n      if (!this.isCipherProvider(extension)) {\n        extension.setProviderInfo(jsonRpcUrl, chainId);\n      }\n      if (this._reloadOnDisconnect === false && typeof extension.disableReloadOnDisconnect === \"function\") extension.disableReloadOnDisconnect();\n      return extension;\n    }\n    const relay = this._relay;\n    if (!relay || !this._relayEventManager || !this._storage) {\n      throw new Error(\"Relay not initialized, should never happen\");\n    }\n    if (!jsonRpcUrl) relay.setConnectDisabled(true);\n    return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n      relayProvider: () => Promise.resolve(relay),\n      relayEventManager: this._relayEventManager,\n      storage: this._storage,\n      jsonRpcUrl,\n      chainId,\n      qrUrl: this.getQrUrl(),\n      diagnosticLogger: this._diagnosticLogger,\n      overrideIsMetaMask: this._overrideIsMetaMask,\n      overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet,\n      overrideIsCoinbaseBrowser: this._overrideIsCoinbaseBrowser\n    });\n  }\n  /**\n   * Set application information\n   * @param appName Application name\n   * @param appLogoUrl Application logo image URL\n   */\n  setAppInfo(appName, appLogoUrl) {\n    var _a;\n    this._appName = appName || \"DApp\";\n    this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n    const extension = this.walletExtension;\n    if (extension) {\n      if (!this.isCipherProvider(extension)) {\n        extension.setAppInfo(this._appName, this._appLogoUrl);\n      }\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n    }\n  }\n  /**\n   * Disconnect. After disconnecting, this will reload the web page to ensure\n   * all potential stale state is cleared.\n   */\n  disconnect() {\n    var _a;\n    const extension = this.walletExtension;\n    if (extension) {\n      void extension.close();\n    } else {\n      (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n    }\n  }\n  /**\n   * Return QR URL for mobile wallet connection, will return null if extension is installed\n   */\n  getQrUrl() {\n    var _a, _b;\n    return (_b = (_a = this._relay) === null || _a === void 0 ? void 0 : _a.getQRCodeUrl()) !== null && _b !== void 0 ? _b : null;\n  }\n  /**\n   * Official Coinbase Wallet logo for developers to use on their frontend\n   * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n   * @param width Width of the logo (Optional)\n   * @returns SVG Data URI\n   */\n  getCoinbaseWalletLogo(type) {\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 240;\n    return (0, wallet_logo_1.walletLogo)(type, width);\n  }\n  get walletExtension() {\n    var _a;\n    return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n  }\n  isCipherProvider(provider) {\n    // @ts-expect-error isCipher walletlink property\n    return typeof provider.isCipher === \"boolean\" && provider.isCipher;\n  }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = SDK_VERSION;","map":{"version":3,"names":["Object","defineProperty","exports","value","CoinbaseWalletSDK","wallet_logo_1","require","ScopedLocalStorage_1","CoinbaseWalletProvider_1","WalletSDKUI_1","WalletSDKRelay_1","WalletSDKRelayEventManager_1","util_1","LINK_API_URL","process","env","SDK_VERSION","version","constructor","options","_a","_b","_c","_appName","_appLogoUrl","_relay","_relayEventManager","linkAPIUrl","uiConstructor","opts","WalletSDKUI","overrideIsMetaMask","_overrideIsMetaMask","_overrideIsCoinbaseWallet","overrideIsCoinbaseWallet","_overrideIsCoinbaseBrowser","overrideIsCoinbaseBrowser","diagnosticLogger","eventListener","Error","_diagnosticLogger","log","onEvent","_reloadOnDisconnect","reloadOnDisconnect","u","URL","origin","protocol","host","_storage","ScopedLocalStorage","setItem","VERSION","walletExtension","WalletSDKRelayEventManager","WalletSDKRelay","darkMode","storage","relayEventManager","setAppInfo","appName","appLogoUrl","headlessMode","attachUI","makeWeb3Provider","jsonRpcUrl","chainId","extension","isCipherProvider","setProviderInfo","disableReloadOnDisconnect","relay","setConnectDisabled","CoinbaseWalletProvider","relayProvider","Promise","resolve","qrUrl","getQrUrl","getFavicon","disconnect","close","resetAndReload","getQRCodeUrl","getCoinbaseWalletLogo","type","width","walletLogo","window","coinbaseWalletExtension","walletLinkExtension","provider","isCipher"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@coinbase/wallet-sdk/dist/CoinbaseWalletSDK.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletSDK = void 0;\nconst wallet_logo_1 = require(\"./assets/wallet-logo\");\nconst ScopedLocalStorage_1 = require(\"./lib/ScopedLocalStorage\");\nconst CoinbaseWalletProvider_1 = require(\"./provider/CoinbaseWalletProvider\");\nconst WalletSDKUI_1 = require(\"./provider/WalletSDKUI\");\nconst WalletSDKRelay_1 = require(\"./relay/WalletSDKRelay\");\nconst WalletSDKRelayEventManager_1 = require(\"./relay/WalletSDKRelayEventManager\");\nconst util_1 = require(\"./util\");\nconst LINK_API_URL = process.env.LINK_API_URL || \"https://www.walletlink.org\";\nconst SDK_VERSION = process.env.SDK_VERSION || require(\"../package.json\").version || \"unknown\";\nclass CoinbaseWalletSDK {\n    /**\n     * Constructor\n     * @param options Coinbase Wallet SDK constructor options\n     */\n    constructor(options) {\n        var _a, _b, _c;\n        this._appName = \"\";\n        this._appLogoUrl = null;\n        this._relay = null;\n        this._relayEventManager = null;\n        const linkAPIUrl = options.linkAPIUrl || LINK_API_URL;\n        let uiConstructor;\n        if (!options.uiConstructor) {\n            uiConstructor = opts => new WalletSDKUI_1.WalletSDKUI(opts);\n        }\n        else {\n            uiConstructor = options.uiConstructor;\n        }\n        if (typeof options.overrideIsMetaMask === \"undefined\") {\n            this._overrideIsMetaMask = false;\n        }\n        else {\n            this._overrideIsMetaMask = options.overrideIsMetaMask;\n        }\n        this._overrideIsCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this._overrideIsCoinbaseBrowser =\n            (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        if (options.diagnosticLogger && options.eventListener) {\n            throw new Error(\"Can't have both eventListener and diagnosticLogger options, use only diagnosticLogger\");\n        }\n        if (options.eventListener) {\n            this._diagnosticLogger = {\n                // eslint-disable-next-line @typescript-eslint/unbound-method\n                log: options.eventListener.onEvent,\n            };\n        }\n        else {\n            this._diagnosticLogger = options.diagnosticLogger;\n        }\n        this._reloadOnDisconnect = (_c = options.reloadOnDisconnect) !== null && _c !== void 0 ? _c : true;\n        const u = new URL(linkAPIUrl);\n        const origin = `${u.protocol}//${u.host}`;\n        this._storage = new ScopedLocalStorage_1.ScopedLocalStorage(`-walletlink:${origin}`); // needs migration to preserve local states\n        this._storage.setItem(\"version\", CoinbaseWalletSDK.VERSION);\n        if (this.walletExtension) {\n            return;\n        }\n        this._relayEventManager = new WalletSDKRelayEventManager_1.WalletSDKRelayEventManager();\n        this._relay = new WalletSDKRelay_1.WalletSDKRelay({\n            linkAPIUrl,\n            version: SDK_VERSION,\n            darkMode: !!options.darkMode,\n            uiConstructor,\n            storage: this._storage,\n            relayEventManager: this._relayEventManager,\n            diagnosticLogger: this._diagnosticLogger,\n        });\n        this.setAppInfo(options.appName, options.appLogoUrl);\n        if (!!options.headlessMode)\n            return;\n        this._relay.attachUI();\n    }\n    /**\n     * Create a Web3 Provider object\n     * @param jsonRpcUrl Ethereum JSON RPC URL (Default: \"\")\n     * @param chainId Ethereum Chain ID (Default: 1)\n     * @returns A Web3 Provider\n     */\n    makeWeb3Provider(jsonRpcUrl = \"\", chainId = 1) {\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setProviderInfo(jsonRpcUrl, chainId);\n            }\n            if (this._reloadOnDisconnect === false &&\n                typeof extension.disableReloadOnDisconnect === \"function\")\n                extension.disableReloadOnDisconnect();\n            return extension;\n        }\n        const relay = this._relay;\n        if (!relay || !this._relayEventManager || !this._storage) {\n            throw new Error(\"Relay not initialized, should never happen\");\n        }\n        if (!jsonRpcUrl)\n            relay.setConnectDisabled(true);\n        return new CoinbaseWalletProvider_1.CoinbaseWalletProvider({\n            relayProvider: () => Promise.resolve(relay),\n            relayEventManager: this._relayEventManager,\n            storage: this._storage,\n            jsonRpcUrl,\n            chainId,\n            qrUrl: this.getQrUrl(),\n            diagnosticLogger: this._diagnosticLogger,\n            overrideIsMetaMask: this._overrideIsMetaMask,\n            overrideIsCoinbaseWallet: this._overrideIsCoinbaseWallet,\n            overrideIsCoinbaseBrowser: this._overrideIsCoinbaseBrowser,\n        });\n    }\n    /**\n     * Set application information\n     * @param appName Application name\n     * @param appLogoUrl Application logo image URL\n     */\n    setAppInfo(appName, appLogoUrl) {\n        var _a;\n        this._appName = appName || \"DApp\";\n        this._appLogoUrl = appLogoUrl || (0, util_1.getFavicon)();\n        const extension = this.walletExtension;\n        if (extension) {\n            if (!this.isCipherProvider(extension)) {\n                extension.setAppInfo(this._appName, this._appLogoUrl);\n            }\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.setAppInfo(this._appName, this._appLogoUrl);\n        }\n    }\n    /**\n     * Disconnect. After disconnecting, this will reload the web page to ensure\n     * all potential stale state is cleared.\n     */\n    disconnect() {\n        var _a;\n        const extension = this.walletExtension;\n        if (extension) {\n            void extension.close();\n        }\n        else {\n            (_a = this._relay) === null || _a === void 0 ? void 0 : _a.resetAndReload();\n        }\n    }\n    /**\n     * Return QR URL for mobile wallet connection, will return null if extension is installed\n     */\n    getQrUrl() {\n        var _a, _b;\n        return (_b = (_a = this._relay) === null || _a === void 0 ? void 0 : _a.getQRCodeUrl()) !== null && _b !== void 0 ? _b : null;\n    }\n    /**\n     * Official Coinbase Wallet logo for developers to use on their frontend\n     * @param type Type of wallet logo: \"standard\" | \"circle\" | \"text\" | \"textWithLogo\" | \"textLight\" | \"textWithLogoLight\"\n     * @param width Width of the logo (Optional)\n     * @returns SVG Data URI\n     */\n    getCoinbaseWalletLogo(type, width = 240) {\n        return (0, wallet_logo_1.walletLogo)(type, width);\n    }\n    get walletExtension() {\n        var _a;\n        return (_a = window.coinbaseWalletExtension) !== null && _a !== void 0 ? _a : window.walletLinkExtension;\n    }\n    isCipherProvider(provider) {\n        // @ts-expect-error isCipher walletlink property\n        return typeof provider.isCipher === \"boolean\" && provider.isCipher;\n    }\n}\nexports.CoinbaseWalletSDK = CoinbaseWalletSDK;\nCoinbaseWalletSDK.VERSION = SDK_VERSION;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}