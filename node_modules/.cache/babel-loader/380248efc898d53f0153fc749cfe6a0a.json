{"ast":null,"code":"var _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar _get = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\nvar _getPrototypeOf = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _createSuper = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\nvar EthQuery = require('eth-query');\nvar pify = require('pify');\nvar SafeEventEmitter = require('safe-event-emitter');\nvar sec = 1000;\nvar calculateSum = function calculateSum(accumulator, currentValue) {\n  return accumulator + currentValue;\n};\nvar blockTrackerEvents = ['sync', 'latest'];\nvar BaseBlockTracker = /*#__PURE__*/function (_SafeEventEmitter) {\n  \"use strict\";\n\n  _inherits(BaseBlockTracker, _SafeEventEmitter);\n  var _super = _createSuper(BaseBlockTracker);\n  //\n  // public\n  //\n\n  function BaseBlockTracker() {\n    var _this;\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _classCallCheck(this, BaseBlockTracker);\n    _this = _super.call(this);\n    // config\n    _this._blockResetDuration = opts.blockResetDuration || 20 * sec;\n    // state\n    _this._blockResetTimeout;\n    _this._currentBlock = null;\n    _this._isRunning = false;\n    // bind functions for internal use\n    _this._onNewListener = _this._onNewListener.bind(_assertThisInitialized(_this));\n    _this._onRemoveListener = _this._onRemoveListener.bind(_assertThisInitialized(_this));\n    _this._resetCurrentBlock = _this._resetCurrentBlock.bind(_assertThisInitialized(_this));\n    // listen for handler changes\n    _this._setupInternalEvents();\n    return _this;\n  }\n  _createClass(BaseBlockTracker, [{\n    key: \"isRunning\",\n    value: function isRunning() {\n      return this._isRunning;\n    }\n  }, {\n    key: \"getCurrentBlock\",\n    value: function getCurrentBlock() {\n      return this._currentBlock;\n    }\n  }, {\n    key: \"getLatestBlock\",\n    value: function () {\n      var _getLatestBlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n        var latestBlock;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._currentBlock) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\", this._currentBlock);\n              case 2:\n                _context.next = 4;\n                return new Promise(function (resolve) {\n                  return _this2.once('latest', resolve);\n                });\n              case 4:\n                latestBlock = _context.sent;\n                return _context.abrupt(\"return\", latestBlock);\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getLatestBlock() {\n        return _getLatestBlock.apply(this, arguments);\n      }\n      return getLatestBlock;\n    }() // dont allow module consumer to remove our internal event listeners\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      // perform default behavior, preserve fn arity\n      if (eventName) {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this, eventName);\n      } else {\n        _get(_getPrototypeOf(BaseBlockTracker.prototype), \"removeAllListeners\", this).call(this);\n      }\n      // re-add internal events\n      this._setupInternalEvents();\n      // trigger stop check just in case\n      this._onRemoveListener();\n    }\n\n    //\n    // to be implemented in subclass\n    //\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      // default behavior is noop\n    }\n  }, {\n    key: \"_end\",\n    value: function _end() {\n      // default behavior is noop\n    }\n\n    //\n    // private\n    //\n  }, {\n    key: \"_setupInternalEvents\",\n    value: function _setupInternalEvents() {\n      // first remove listeners for idempotence\n      this.removeListener('newListener', this._onNewListener);\n      this.removeListener('removeListener', this._onRemoveListener);\n      // then add them\n      this.on('newListener', this._onNewListener);\n      this.on('removeListener', this._onRemoveListener);\n    }\n  }, {\n    key: \"_onNewListener\",\n    value: function _onNewListener(eventName, handler) {\n      // `newListener` is called *before* the listener is added\n      if (!blockTrackerEvents.includes(eventName)) return;\n      this._maybeStart();\n    }\n  }, {\n    key: \"_onRemoveListener\",\n    value: function _onRemoveListener(eventName, handler) {\n      // `removeListener` is called *after* the listener is removed\n      if (this._getBlockTrackerEventCount() > 0) return;\n      this._maybeEnd();\n    }\n  }, {\n    key: \"_maybeStart\",\n    value: function _maybeStart() {\n      if (this._isRunning) return;\n      this._isRunning = true;\n      // cancel setting latest block to stale\n      this._cancelBlockResetTimeout();\n      this._start();\n    }\n  }, {\n    key: \"_maybeEnd\",\n    value: function _maybeEnd() {\n      if (!this._isRunning) return;\n      this._isRunning = false;\n      this._setupBlockResetTimeout();\n      this._end();\n    }\n  }, {\n    key: \"_getBlockTrackerEventCount\",\n    value: function _getBlockTrackerEventCount() {\n      var _this3 = this;\n      return blockTrackerEvents.map(function (eventName) {\n        return _this3.listenerCount(eventName);\n      }).reduce(calculateSum);\n    }\n  }, {\n    key: \"_newPotentialLatest\",\n    value: function _newPotentialLatest(newBlock) {\n      var currentBlock = this._currentBlock;\n      // only update if blok number is higher\n      if (currentBlock && hexToInt(newBlock) <= hexToInt(currentBlock)) return;\n      this._setCurrentBlock(newBlock);\n    }\n  }, {\n    key: \"_setCurrentBlock\",\n    value: function _setCurrentBlock(newBlock) {\n      var oldBlock = this._currentBlock;\n      this._currentBlock = newBlock;\n      this.emit('latest', newBlock);\n      this.emit('sync', {\n        oldBlock: oldBlock,\n        newBlock: newBlock\n      });\n    }\n  }, {\n    key: \"_setupBlockResetTimeout\",\n    value: function _setupBlockResetTimeout() {\n      // clear any existing timeout\n      this._cancelBlockResetTimeout();\n      // clear latest block when stale\n      this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration);\n      // nodejs - dont hold process open\n      if (this._blockResetTimeout.unref) {\n        this._blockResetTimeout.unref();\n      }\n    }\n  }, {\n    key: \"_cancelBlockResetTimeout\",\n    value: function _cancelBlockResetTimeout() {\n      clearTimeout(this._blockResetTimeout);\n    }\n  }, {\n    key: \"_resetCurrentBlock\",\n    value: function _resetCurrentBlock() {\n      this._currentBlock = null;\n    }\n  }]);\n  return BaseBlockTracker;\n}(SafeEventEmitter);\nmodule.exports = BaseBlockTracker;\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16);\n}","map":{"version":3,"names":["EthQuery","require","pify","SafeEventEmitter","sec","calculateSum","accumulator","currentValue","blockTrackerEvents","BaseBlockTracker","opts","_blockResetDuration","blockResetDuration","_blockResetTimeout","_currentBlock","_isRunning","_onNewListener","bind","_onRemoveListener","_resetCurrentBlock","_setupInternalEvents","Promise","resolve","once","latestBlock","eventName","removeListener","on","handler","includes","_maybeStart","_getBlockTrackerEventCount","_maybeEnd","_cancelBlockResetTimeout","_start","_setupBlockResetTimeout","_end","map","listenerCount","reduce","newBlock","currentBlock","hexToInt","_setCurrentBlock","oldBlock","emit","setTimeout","unref","clearTimeout","module","exports","hexInt","Number","parseInt"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/eth-block-tracker/src/base.js"],"sourcesContent":["const EthQuery = require('eth-query')\nconst pify = require('pify')\nconst SafeEventEmitter = require('safe-event-emitter')\n\nconst sec = 1000\n\nconst calculateSum = (accumulator, currentValue) => accumulator + currentValue\nconst blockTrackerEvents = ['sync', 'latest']\n\nclass BaseBlockTracker extends SafeEventEmitter {\n\n  //\n  // public\n  //\n\n  constructor (opts = {}) {\n    super()\n    // config\n    this._blockResetDuration = opts.blockResetDuration || 20 * sec\n    // state\n    this._blockResetTimeout\n    this._currentBlock = null\n    this._isRunning = false\n    // bind functions for internal use\n    this._onNewListener = this._onNewListener.bind(this)\n    this._onRemoveListener = this._onRemoveListener.bind(this)\n    this._resetCurrentBlock = this._resetCurrentBlock.bind(this)\n    // listen for handler changes\n    this._setupInternalEvents()\n  }\n\n  isRunning () {\n    return this._isRunning\n  }\n\n  getCurrentBlock () {\n    return this._currentBlock\n  }\n\n  async getLatestBlock () {\n    // return if available\n    if (this._currentBlock) return this._currentBlock\n    // wait for a new latest block\n    const latestBlock = await new Promise(resolve => this.once('latest', resolve))\n    // return newly set current block\n    return latestBlock\n  }\n\n  // dont allow module consumer to remove our internal event listeners\n  removeAllListeners (eventName) {\n    // perform default behavior, preserve fn arity\n    if (eventName) {\n      super.removeAllListeners(eventName)\n    } else {\n      super.removeAllListeners()\n    }\n    // re-add internal events\n    this._setupInternalEvents()\n    // trigger stop check just in case\n    this._onRemoveListener()\n  }\n\n  //\n  // to be implemented in subclass\n  //\n\n  _start () {\n    // default behavior is noop\n  }\n\n  _end () {\n    // default behavior is noop\n  }\n\n  //\n  // private\n  //\n\n  _setupInternalEvents () {\n    // first remove listeners for idempotence\n    this.removeListener('newListener', this._onNewListener)\n    this.removeListener('removeListener', this._onRemoveListener)\n    // then add them\n    this.on('newListener', this._onNewListener)\n    this.on('removeListener', this._onRemoveListener)\n  }\n\n  _onNewListener (eventName, handler) {\n    // `newListener` is called *before* the listener is added\n    if (!blockTrackerEvents.includes(eventName)) return\n    this._maybeStart()\n  }\n\n  _onRemoveListener (eventName, handler) {\n    // `removeListener` is called *after* the listener is removed\n    if (this._getBlockTrackerEventCount() > 0) return\n    this._maybeEnd()\n  }\n\n  _maybeStart () {\n    if (this._isRunning) return\n    this._isRunning = true\n    // cancel setting latest block to stale\n    this._cancelBlockResetTimeout()\n    this._start()\n  }\n\n  _maybeEnd () {\n    if (!this._isRunning) return\n    this._isRunning = false\n    this._setupBlockResetTimeout()\n    this._end()\n  }\n\n  _getBlockTrackerEventCount () {\n    return blockTrackerEvents\n      .map(eventName => this.listenerCount(eventName))\n      .reduce(calculateSum)\n  }\n\n  _newPotentialLatest (newBlock) {\n    const currentBlock = this._currentBlock\n    // only update if blok number is higher\n    if (currentBlock && (hexToInt(newBlock) <= hexToInt(currentBlock))) return\n    this._setCurrentBlock(newBlock)\n  }\n\n  _setCurrentBlock (newBlock) {\n    const oldBlock = this._currentBlock\n    this._currentBlock = newBlock\n    this.emit('latest', newBlock)\n    this.emit('sync', { oldBlock, newBlock })\n  }\n\n  _setupBlockResetTimeout () {\n    // clear any existing timeout\n    this._cancelBlockResetTimeout()\n    // clear latest block when stale\n    this._blockResetTimeout = setTimeout(this._resetCurrentBlock, this._blockResetDuration)\n    // nodejs - dont hold process open\n    if (this._blockResetTimeout.unref) {\n      this._blockResetTimeout.unref()\n    }\n  }\n\n  _cancelBlockResetTimeout () {\n    clearTimeout(this._blockResetTimeout)\n  }\n\n  _resetCurrentBlock () {\n    this._currentBlock = null\n  }\n\n}\n\nmodule.exports = BaseBlockTracker\n\nfunction hexToInt(hexInt) {\n  return Number.parseInt(hexInt, 16)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}