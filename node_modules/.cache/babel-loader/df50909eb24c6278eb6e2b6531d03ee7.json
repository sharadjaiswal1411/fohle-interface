{"ast":null,"code":"import{useWeb3React,Web3ReactProvider}from'@web3-react/core';import{ConnectionType,setMetMaskErrorHandler}from'connection';import{getConnectionName}from'connection/utils';import{isSupportedChain}from'constants/chains';import{RPC_PROVIDERS}from'constants/providers';import{TraceJsonRpcVariant,useTraceJsonRpcFlag}from'featureFlags/flags/traceJsonRpc';import useEagerlyConnect from'hooks/useEagerlyConnect';import useOrderedConnections from'hooks/useOrderedConnections';import{useEffect,useMemo}from'react';import{updateConnectionError}from'state/connection/reducer';import{useAppDispatch}from'state/hooks';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Web3Provider(_ref){var children=_ref.children;var dispatch=useAppDispatch();// Set metamask error handler for metamask disconnection warning modal.\nuseEffect(function(){setMetMaskErrorHandler(function(error){return dispatch(updateConnectionError({connectionType:ConnectionType.INJECTED,error:error.message}));});},[dispatch]);useEagerlyConnect();var connections=useOrderedConnections();var connectors=connections.map(function(_ref2){var hooks=_ref2.hooks,connector=_ref2.connector;return[connector,hooks];});var key=useMemo(function(){return connections.map(function(_ref3){var type=_ref3.type;return getConnectionName(type);}).join('-');},[connections]);return/*#__PURE__*/_jsxs(Web3ReactProvider,{connectors:connectors,children:[/*#__PURE__*/_jsx(Tracer,{}),children]},key);}function Tracer(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId,provider=_useWeb3React.provider;var networkProvider=isSupportedChain(chainId)?RPC_PROVIDERS[chainId]:undefined;var shouldTrace=useTraceJsonRpcFlag()===TraceJsonRpcVariant.Enabled;useEffect(function(){if(shouldTrace){provider===null||provider===void 0?void 0:provider.on('debug',trace);if(provider!==networkProvider){networkProvider===null||networkProvider===void 0?void 0:networkProvider.on('debug',trace);}}return function(){provider===null||provider===void 0?void 0:provider.off('debug',trace);networkProvider===null||networkProvider===void 0?void 0:networkProvider.off('debug',trace);};},[networkProvider,provider,shouldTrace]);return null;}function trace(event){if(event.action!=='request')return;var _event$request=event.request,method=_event$request.method,id=_event$request.id,params=_event$request.params;console.groupCollapsed(method,id);console.debug(params);console.groupEnd();}","map":{"version":3,"names":["useWeb3React","Web3ReactProvider","ConnectionType","setMetMaskErrorHandler","getConnectionName","isSupportedChain","RPC_PROVIDERS","TraceJsonRpcVariant","useTraceJsonRpcFlag","useEagerlyConnect","useOrderedConnections","useEffect","useMemo","updateConnectionError","useAppDispatch","Web3Provider","children","dispatch","error","connectionType","INJECTED","message","connections","connectors","map","hooks","connector","key","type","join","Tracer","chainId","provider","networkProvider","undefined","shouldTrace","Enabled","on","trace","off","event","action","request","method","id","params","console","groupCollapsed","debug","groupEnd"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Web3Provider/index.tsx"],"sourcesContent":["import { useWeb3React, Web3ReactHooks, Web3ReactProvider } from '@web3-react/core'\nimport { Connector } from '@web3-react/types'\nimport { Connection } from 'connection'\nimport { ConnectionType, setMetMaskErrorHandler } from 'connection'\nimport { getConnectionName } from 'connection/utils'\nimport { isSupportedChain } from 'constants/chains'\nimport { RPC_PROVIDERS } from 'constants/providers'\nimport { TraceJsonRpcVariant, useTraceJsonRpcFlag } from 'featureFlags/flags/traceJsonRpc'\nimport useEagerlyConnect from 'hooks/useEagerlyConnect'\nimport useOrderedConnections from 'hooks/useOrderedConnections'\nimport { ReactNode, useEffect, useMemo } from 'react'\nimport { updateConnectionError } from 'state/connection/reducer'\nimport { useAppDispatch } from 'state/hooks'\n\nexport default function Web3Provider({ children }: { children: ReactNode }) {\n  const dispatch = useAppDispatch()\n\n  // Set metamask error handler for metamask disconnection warning modal.\n  useEffect(() => {\n    setMetMaskErrorHandler((error: Error) =>\n      dispatch(updateConnectionError({ connectionType: ConnectionType.INJECTED, error: error.message }))\n    )\n  }, [dispatch])\n\n  useEagerlyConnect()\n  const connections = useOrderedConnections()\n  const connectors: [Connector, Web3ReactHooks][] = connections.map(({ hooks, connector }) => [connector, hooks])\n\n  const key = useMemo(() => connections.map(({ type }: Connection) => getConnectionName(type)).join('-'), [connections])\n\n  return (\n    <Web3ReactProvider connectors={connectors} key={key}>\n      <Tracer />\n      {children}\n    </Web3ReactProvider>\n  )\n}\n\nfunction Tracer() {\n  const { chainId, provider } = useWeb3React()\n  const networkProvider = isSupportedChain(chainId) ? RPC_PROVIDERS[chainId] : undefined\n  const shouldTrace = useTraceJsonRpcFlag() === TraceJsonRpcVariant.Enabled\n\n  useEffect(() => {\n    if (shouldTrace) {\n      provider?.on('debug', trace)\n      if (provider !== networkProvider) {\n        networkProvider?.on('debug', trace)\n      }\n    }\n    return () => {\n      provider?.off('debug', trace)\n      networkProvider?.off('debug', trace)\n    }\n  }, [networkProvider, provider, shouldTrace])\n\n  return null\n}\n\nfunction trace(event: any) {\n  if (event.action !== 'request') return\n  const { method, id, params } = event.request\n  console.groupCollapsed(method, id)\n  console.debug(params)\n  console.groupEnd()\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}