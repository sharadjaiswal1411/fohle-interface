{"ast":null,"code":"import { css as _css } from \"styled-components\";\nimport { keyframes as _keyframes } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Loader/index.tsx\";\nimport v3 from \"../../assets/images/whitev3.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rotate = _keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst pulse = _keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`;\nconst AnimatedImg = _styled.div.withConfig({\n  displayName: \"Loader__AnimatedImg\",\n  componentId: \"sc-x3cipg-0\"\n})([\"animation:\", \" 800ms linear infinite;& > *{width:72px;}\"], pulse);\nconst loadingAnimation = _keyframes`\n  0% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`;\nexport const LoadingRows = _styled.div.withConfig({\n  displayName: \"Loader__LoadingRows\",\n  componentId: \"sc-x3cipg-1\"\n})([\"display:grid;min-width:75%;max-width:100%;grid-column-gap:0.5em;grid-row-gap:0.8em;grid-template-columns:repeat(1,1fr);& > div{animation:\", \" 1.5s infinite;animation-fill-mode:both;background:linear-gradient( to left,\", \" 25%,\", \" 50%,\", \" 75% );background-size:400%;border-radius:12px;height:2.4em;will-change:background-position;}& > div:nth-child(4n + 1){grid-column:1 / 3;}& > div:nth-child(4n){grid-column:3 / 4;margin-bottom:2em;}\"], loadingAnimation, _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.bg1;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.bg2;\n}, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.bg1;\n});\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"Loader__Wrapper\",\n  componentId: \"sc-x3cipg-2\"\n})([\"pointer-events:none;display:flex;align-items:center;justify-content:center;background-color:\", \";height:100%;width:100%;\", \"\"], _ref4 => {\n  let {\n    theme,\n    fill\n  } = _ref4;\n  return fill ? 'black' : theme.deprecated_bg1;\n}, props => props.fill && !props.height ? _css`\n          height: 100vh;\n        ` : _css`\n          height: 180px;\n        `);\nexport const LocalLoader = _ref5 => {\n  let {\n    fill\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    fill: fill ? 1 : 0,\n    children: /*#__PURE__*/_jsxDEV(AnimatedImg, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: v3,\n        alt: \"loading-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c = LocalLoader;\nconst StyledSVG = _styled.svg.withConfig({\n  displayName: \"Loader__StyledSVG\",\n  componentId: \"sc-x3cipg-3\"\n})([\"animation:2s \", \" linear infinite;height:\", \";width:\", \";path{stroke:\", \";}\"], rotate, _ref6 => {\n  let {\n    size\n  } = _ref6;\n  return size;\n}, _ref7 => {\n  let {\n    size\n  } = _ref7;\n  return size;\n}, _ref8 => {\n  let {\n    stroke,\n    theme\n  } = _ref8;\n  return stroke !== null && stroke !== void 0 ? stroke : theme.accentActive;\n});\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader(_ref9) {\n  let {\n    size = '16px',\n    stroke,\n    strokeWidth,\n    ...rest\n  } = _ref9;\n  return /*#__PURE__*/_jsxDEV(StyledSVG, {\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    size: size,\n    stroke: stroke,\n    ...rest,\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\",\n      strokeWidth: strokeWidth !== null && strokeWidth !== void 0 ? strokeWidth : '2.5',\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Loader;\nvar _c, _c2;\n$RefreshReg$(_c, \"LocalLoader\");\n$RefreshReg$(_c2, \"Loader\");","map":{"version":3,"names":["rotate","keyframes","pulse","AnimatedImg","styled","div","loadingAnimation","LoadingRows","theme","bg1","bg2","Wrapper","fill","deprecated_bg1","props","height","css","LocalLoader","v3","StyledSVG","svg","size","stroke","accentActive","Loader","strokeWidth","rest"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Loader/index.tsx"],"sourcesContent":["import styled, { keyframes,css } from 'styled-components/macro'\nimport v3 from '../../assets/images/whitev3.svg'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\nconst pulse = keyframes`\n  0% { transform: scale(1); }\n  60% { transform: scale(1.1); }\n  100% { transform: scale(1); }\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${pulse} 800ms linear infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nconst loadingAnimation = keyframes`\n  0% {\n    background-position: 100% 50%;\n  }\n  100% {\n    background-position: 0% 50%;\n  }\n`\n\nexport const LoadingRows = styled.div`\n  display: grid;\n  min-width: 75%;\n  max-width: 100%;\n  grid-column-gap: 0.5em;\n  grid-row-gap: 0.8em;\n  grid-template-columns: repeat(1, 1fr);\n  & > div {\n    animation: ${loadingAnimation} 1.5s infinite;\n    animation-fill-mode: both;\n    background: linear-gradient(\n      to left,\n      ${({ theme }) => theme.bg1} 25%,\n      ${({ theme }) => theme.bg2} 50%,\n      ${({ theme }) => theme.bg1} 75%\n    );\n    background-size: 400%;\n    border-radius: 12px;\n    height: 2.4em;\n    will-change: background-position;\n  }\n  & > div:nth-child(4n + 1) {\n    grid-column: 1 / 3;\n  }\n  & > div:nth-child(4n) {\n    grid-column: 3 / 4;\n    margin-bottom: 2em;\n  }\n`\n\nconst Wrapper = styled.div<{ fill: number; height?: string }>`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${({ theme, fill }) => (fill ? 'black' : theme.deprecated_bg1)};\n  height: 100%;\n  width: 100%;\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nexport const LocalLoader = ({ fill }: { fill: boolean }) => {\n  return (\n    <Wrapper fill={fill ? 1 : 0}>\n      <AnimatedImg>\n        <img src={v3} alt=\"loading-icon\" />\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.accentActive};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function Loader({\n  size = '16px',\n  stroke,\n  strokeWidth,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  strokeWidth?: number\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth={strokeWidth ?? '2.5'}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n"],"mappings":";;;;;;AAGA,MAAMA,MAAM,GAAGC,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,MAAMC,KAAK,GAAGD,UAAU;AACxB;AACA;AACA;AACA,CAAC;AAED,MAAME,WAAW,GAAGC,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,gEACfH,KAAK,CAInB;AAED,MAAMI,gBAAgB,GAAGL,UAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMM,WAAW,GAAGH,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,6bAQpBC,gBAAgB,EAIzB;EAAA,IAAC;IAAEE;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,GAAG;AAAA,GACxB;EAAA,IAAC;IAAED;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACE,GAAG;AAAA,GACxB;EAAA,IAAC;IAAEF;EAAM,CAAC;EAAA,OAAKA,KAAK,CAACC,GAAG;AAAA,EAc/B;AAED,MAAME,OAAO,GAAGP,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,qIAKJ;EAAA,IAAC;IAAEG,KAAK;IAAEI;EAAK,CAAC;EAAA,OAAMA,IAAI,GAAG,OAAO,GAAGJ,KAAK,CAACK,cAAc;AAAA,CAAC,EAG7EC,KAAK,IACNA,KAAK,CAACF,IAAI,IAAI,CAACE,KAAK,CAACC,MAAM,GACvBC,IAAI;AACZ;AACA,SAAS,GACDA,IAAI;AACZ;AACA,SAAS,CACR;AAED,OAAO,MAAMC,WAAW,GAAG,SAAiC;EAAA,IAAhC;IAAEL;EAAwB,CAAC;EACrD,oBACE,QAAC,OAAO;IAAC,IAAI,EAAEA,IAAI,GAAG,CAAC,GAAG,CAAE;IAAA,uBAC1B,QAAC,WAAW;MAAA,uBACV;QAAK,GAAG,EAAEM,EAAG;QAAC,GAAG,EAAC;MAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EACvB;IAAA;IAAA;IAAA;EAAA,QACN;AAEd,CAAC;AAAA,KARYD,WAAW;AAUxB,MAAME,SAAS,GAAGf,OAAM,CAACgB,GAAG;EAAA;EAAA;AAAA,oFACVpB,MAAM,EACZ;EAAA,IAAC;IAAEqB;EAAK,CAAC;EAAA,OAAKA,IAAI;AAAA,GACnB;EAAA,IAAC;IAAEA;EAAK,CAAC;EAAA,OAAKA,IAAI;AAAA,GAEf;EAAA,IAAC;IAAEC,MAAM;IAAEd;EAAM,CAAC;EAAA,OAAKc,MAAM,aAANA,MAAM,cAANA,MAAM,GAAId,KAAK,CAACe,YAAY;AAAA,EAEhE;;AAED;AACA;AACA;AACA;AACA,eAAe,SAASC,MAAM,QAU3B;EAAA,IAV4B;IAC7BH,IAAI,GAAG,MAAM;IACbC,MAAM;IACNG,WAAW;IACX,GAAGC;EAML,CAAC;EACC,oBACE,QAAC,SAAS;IAAC,OAAO,EAAC,WAAW;IAAC,IAAI,EAAC,MAAM;IAAC,KAAK,EAAC,4BAA4B;IAAC,IAAI,EAAEL,IAAK;IAAC,MAAM,EAAEC,MAAO;IAAA,GAAKI,IAAI;IAAA,uBAChH;MACE,CAAC,EAAC,4HAA4H;MAC9H,WAAW,EAAED,WAAW,aAAXA,WAAW,cAAXA,WAAW,GAAI,KAAM;MAClC,aAAa,EAAC,OAAO;MACrB,cAAc,EAAC;IAAO;MAAA;MAAA;MAAA;IAAA;EACtB;IAAA;IAAA;IAAA;EAAA,QACQ;AAEhB;AAAC,MArBuBD,MAAM;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}