{"ast":null,"code":"import{ApolloClient,InMemoryCache}from'@apollo/client';export var blockClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',cache:new InMemoryCache(),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'no-cache'},query:{fetchPolicy:'no-cache',errorPolicy:'all'}}});export var client=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',cache:new InMemoryCache({typePolicies:{Token:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false},Pool:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false}}}),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'no-cache'},query:{fetchPolicy:'no-cache',errorPolicy:'all'}}});export var arbitrumClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-arbitrum-one',cache:new InMemoryCache({typePolicies:{Token:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false},Pool:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false}}}),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'cache-first'},query:{fetchPolicy:'cache-first',errorPolicy:'all'}}});export var arbitrumBlockClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks',cache:new InMemoryCache(),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'cache-first'},query:{fetchPolicy:'cache-first',errorPolicy:'all'}}});export var optimismClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',cache:new InMemoryCache({typePolicies:{Token:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false},Pool:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false}}}),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'no-cache'},query:{fetchPolicy:'no-cache',errorPolicy:'all'}}});export var optimismBlockClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/uni-testing-subgraph',cache:new InMemoryCache(),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'cache-first'},query:{fetchPolicy:'cache-first',errorPolicy:'all'}}});export var polygonClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',cache:new InMemoryCache({typePolicies:{Token:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false},Pool:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false}}}),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'no-cache'},query:{fetchPolicy:'no-cache',errorPolicy:'all'}}});export var polygonBlockClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks',cache:new InMemoryCache(),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'cache-first'},query:{fetchPolicy:'cache-first',errorPolicy:'all'}}});export var celoClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo',cache:new InMemoryCache({typePolicies:{Token:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false},Pool:{// Singleton types that have no identifying field can use an empty\n// array for their keyFields.\nkeyFields:false}}}),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'no-cache'},query:{fetchPolicy:'no-cache',errorPolicy:'all'}}});export var celoBlockClient=new ApolloClient({uri:'https://api.thegraph.com/subgraphs/name/jesse-sawa/celo-blocks',cache:new InMemoryCache(),queryDeduplication:true,defaultOptions:{watchQuery:{fetchPolicy:'cache-first'},query:{fetchPolicy:'cache-first',errorPolicy:'all'}}});","map":{"version":3,"names":["ApolloClient","InMemoryCache","blockClient","uri","cache","queryDeduplication","defaultOptions","watchQuery","fetchPolicy","query","errorPolicy","client","typePolicies","Token","keyFields","Pool","arbitrumClient","arbitrumBlockClient","optimismClient","optimismBlockClient","polygonClient","polygonBlockClient","celoClient","celoBlockClient"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/apollo/client.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client'\n\nexport const blockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const client = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Token: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n      Pool: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n    },\n  }),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const arbitrumClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-arbitrum-one',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Token: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n      Pool: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n    },\n  }),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-first',\n    },\n    query: {\n      fetchPolicy: 'cache-first',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const arbitrumBlockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-first',\n    },\n    query: {\n      fetchPolicy: 'cache-first',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const optimismClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Token: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n      Pool: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n    },\n  }),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const optimismBlockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uni-testing-subgraph',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-first',\n    },\n    query: {\n      fetchPolicy: 'cache-first',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const polygonClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Token: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n      Pool: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n    },\n  }),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const polygonBlockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-first',\n    },\n    query: {\n      fetchPolicy: 'cache-first',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const celoClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo',\n  cache: new InMemoryCache({\n    typePolicies: {\n      Token: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n      Pool: {\n        // Singleton types that have no identifying field can use an empty\n        // array for their keyFields.\n        keyFields: false,\n      },\n    },\n  }),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport const celoBlockClient = new ApolloClient({\n  uri: 'https://api.thegraph.com/subgraphs/name/jesse-sawa/celo-blocks',\n  cache: new InMemoryCache(),\n  queryDeduplication: true,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'cache-first',\n    },\n    query: {\n      fetchPolicy: 'cache-first',\n      errorPolicy: 'all',\n    },\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}