{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { MaxUint256 } from '@ethersproject/constants';\nimport { sendAnalyticsEvent } from '@uniswap/analytics';\nimport { EventName } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { useTokenContract } from 'hooks/useContract';\nimport { useTokenAllowance } from 'hooks/useTokenAllowance';\nimport { getTokenAddress } from 'lib/utils/analytics';\nimport { useCallback, useMemo } from 'react';\nimport { calculateGasMargin } from 'utils/calculateGasMargin';\nexport let ApprovalState;\n(function (ApprovalState) {\n  ApprovalState[\"UNKNOWN\"] = \"UNKNOWN\";\n  ApprovalState[\"NOT_APPROVED\"] = \"NOT_APPROVED\";\n  ApprovalState[\"PENDING\"] = \"PENDING\";\n  ApprovalState[\"APPROVED\"] = \"APPROVED\";\n})(ApprovalState || (ApprovalState = {}));\nfunction useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval) {\n  _s();\n  var _amountToApprove$curr;\n  const {\n    account\n  } = useWeb3React();\n  const token = (amountToApprove === null || amountToApprove === void 0 ? void 0 : (_amountToApprove$curr = amountToApprove.currency) === null || _amountToApprove$curr === void 0 ? void 0 : _amountToApprove$curr.isToken) ? amountToApprove.currency : undefined;\n  const {\n    tokenAllowance\n  } = useTokenAllowance(token, account !== null && account !== void 0 ? account : undefined, spender);\n  const pendingApproval = useIsPendingApproval(token, spender);\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN;\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED;\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN;\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove) ? pendingApproval ? ApprovalState.PENDING : ApprovalState.NOT_APPROVED : ApprovalState.APPROVED;\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance]);\n}\n_s(useApprovalStateForSpender, \"XmpoqGT3S09nSXMKhm5HLDa8PyM=\", false, function () {\n  return [useWeb3React, useTokenAllowance, useIsPendingApproval];\n});\nexport function useApproval(amountToApprove, spender, useIsPendingApproval) {\n  _s2();\n  var _amountToApprove$curr2;\n  const {\n    chainId\n  } = useWeb3React();\n  const token = (amountToApprove === null || amountToApprove === void 0 ? void 0 : (_amountToApprove$curr2 = amountToApprove.currency) === null || _amountToApprove$curr2 === void 0 ? void 0 : _amountToApprove$curr2.isToken) ? amountToApprove.currency : undefined;\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval);\n  const tokenContract = useTokenContract(token === null || token === void 0 ? void 0 : token.address);\n  const approve = useCallback(async () => {\n    function logFailure(error) {\n      console.warn(`${(token === null || token === void 0 ? void 0 : token.symbol) || 'Token'} approval failed:`, error);\n      return;\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily');\n    } else if (!chainId) {\n      return logFailure('no chainId');\n    } else if (!token) {\n      return logFailure('no token');\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null');\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve');\n    } else if (!spender) {\n      return logFailure('no spender');\n    }\n    let useExact = false;\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true;\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString());\n    });\n    return tokenContract.approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n      gasLimit: calculateGasMargin(estimatedGas)\n    }).then(response => {\n      const eventProperties = {\n        chain_id: chainId,\n        token_symbol: token === null || token === void 0 ? void 0 : token.symbol,\n        token_address: getTokenAddress(token)\n      };\n      sendAnalyticsEvent(EventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties);\n      return {\n        response,\n        tokenAddress: token.address,\n        spenderAddress: spender\n      };\n    }).catch(error => {\n      logFailure(error);\n      throw error;\n    });\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId]);\n  return [approvalState, approve];\n}\n_s2(useApproval, \"0q8lZ7sjY72sMB/KQPBoHG6qqTs=\", false, function () {\n  return [useWeb3React, useApprovalStateForSpender, useTokenContract];\n});","map":{"version":3,"names":["MaxUint256","sendAnalyticsEvent","EventName","useWeb3React","useTokenContract","useTokenAllowance","getTokenAddress","useCallback","useMemo","calculateGasMargin","ApprovalState","useApprovalStateForSpender","amountToApprove","spender","useIsPendingApproval","account","token","currency","isToken","undefined","tokenAllowance","pendingApproval","UNKNOWN","isNative","APPROVED","lessThan","PENDING","NOT_APPROVED","useApproval","chainId","approvalState","tokenContract","address","approve","logFailure","error","console","warn","symbol","useExact","estimatedGas","estimateGas","catch","quotient","toString","gasLimit","then","response","eventProperties","chain_id","token_symbol","token_address","APPROVE_TOKEN_TXN_SUBMITTED","tokenAddress","spenderAddress"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useApproval.ts"],"sourcesContent":["import { MaxUint256 } from '@ethersproject/constants'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { sendAnalyticsEvent } from '@uniswap/analytics'\nimport { EventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTokenContract } from 'hooks/useContract'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { getTokenAddress } from 'lib/utils/analytics'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nexport enum ApprovalState {\n  UNKNOWN = 'UNKNOWN',\n  NOT_APPROVED = 'NOT_APPROVED',\n  PENDING = 'PENDING',\n  APPROVED = 'APPROVED',\n}\n\nfunction useApprovalStateForSpender(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): ApprovalState {\n  const { account } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  const { tokenAllowance } = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useIsPendingApproval(token, spender)\n\n  return useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency.isNative) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!tokenAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if tokenAllowance is\n    return tokenAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, pendingApproval, spender, tokenAllowance])\n}\n\nexport function useApproval(\n  amountToApprove: CurrencyAmount<Currency> | undefined,\n  spender: string | undefined,\n  useIsPendingApproval: (token?: Token, spender?: string) => boolean\n): [\n  ApprovalState,\n  () => Promise<{ response: TransactionResponse; tokenAddress: string; spenderAddress: string } | undefined>\n] {\n  const { chainId } = useWeb3React()\n  const token = amountToApprove?.currency?.isToken ? amountToApprove.currency : undefined\n\n  // check the current approval status\n  const approvalState = useApprovalStateForSpender(amountToApprove, spender, useIsPendingApproval)\n\n  const tokenContract = useTokenContract(token?.address)\n\n  const approve = useCallback(async () => {\n    function logFailure(error: Error | string): undefined {\n      console.warn(`${token?.symbol || 'Token'} approval failed:`, error)\n      return\n    }\n\n    // Bail early if there is an issue.\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      return logFailure('approve was called unnecessarily')\n    } else if (!chainId) {\n      return logFailure('no chainId')\n    } else if (!token) {\n      return logFailure('no token')\n    } else if (!tokenContract) {\n      return logFailure('tokenContract is null')\n    } else if (!amountToApprove) {\n      return logFailure('missing amount to approve')\n    } else if (!spender) {\n      return logFailure('no spender')\n    }\n\n    let useExact = false\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens which restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.quotient.toString())\n    })\n\n    return tokenContract\n      .approve(spender, useExact ? amountToApprove.quotient.toString() : MaxUint256, {\n        gasLimit: calculateGasMargin(estimatedGas),\n      })\n      .then((response) => {\n        const eventProperties = {\n          chain_id: chainId,\n          token_symbol: token?.symbol,\n          token_address: getTokenAddress(token),\n        }\n        sendAnalyticsEvent(EventName.APPROVE_TOKEN_TXN_SUBMITTED, eventProperties)\n        return {\n          response,\n          tokenAddress: token.address,\n          spenderAddress: spender,\n        }\n      })\n      .catch((error: Error) => {\n        logFailure(error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, chainId])\n\n  return [approvalState, approve]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}