{"ast":null,"code":"/**\n * Source: [jed's gist]{@link https://gist.github.com/982883}.\n * Returns a random v4 UUID of the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx,\n * where each x is replaced with a random hexadecimal digit from 0 to f, and\n * y is replaced with a random hexadecimal digit from 8 to b.\n * Used to generate UUIDs for deviceIds.\n * @private\n */\nexport var UUID = function (a) {\n  return a // if the placeholder was passed, return\n  ?\n  // a random number from 0 to 15\n  (a ^\n  // unless b is 8,\n  Math.random() *\n  // in which case\n  16 >>\n  // a random number from\n  a / 4 // 8 to 11\n  ).toString(16) // in hexadecimal\n  :\n  // or otherwise a concatenated string:\n  (String(1e7) +\n  // 10000000 +\n  String(-1e3) +\n  // -1000 +\n  String(-4e3) +\n  // -4000 +\n  String(-8e3) +\n  // -80000000 +\n  String(-1e11) // -100000000000,\n  ).replace(\n  // replacing\n  /[018]/g,\n  // zeroes, ones, and eights with\n  UUID);\n};","map":{"version":3,"sources":["../../../src/utils/uuid.ts"],"names":[],"mappings":"AAAA;;;;;;;AAOG;AACH,OAAO,IAAM,IAAI,GAAG,UAAU,CAAO,EAAA;EACnC,OAAO,CAAC,CAAC;EAAA;EACL;EACA,CACE,CAAC;EAAG;EACF,IAAI,CAAC,MAAM,EAAE;EAAG;EAChB,EAAE;EAAK;EACN,CAAC,GAAG,CAAG,CACV;EAAA,EACC,QAAQ,CAAC,EAAE,CAAC,CAAC;EAAA;EAChB;EACA,CACE,MAAM,CAAC,GAAG,CAAC;EAAG;EACd,MAAM,CAAC,CAAC,GAAG,CAAC;EAAG;EACf,MAAM,CAAC,CAAC,GAAG,CAAC;EAAG;EACf,MAAM,CAAC,CAAC,GAAG,CAAC;EAAG;EACf,MAAM,CAAC,CAAC,IAAI,CAAC,CACb;EAAA,EACC,OAAO;EACN;EACA,QAAQ;EAAE;EACV,IAAI,CACL;AACT,CAAC","sourcesContent":["/**\n * Source: [jed's gist]{@link https://gist.github.com/982883}.\n * Returns a random v4 UUID of the form xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx,\n * where each x is replaced with a random hexadecimal digit from 0 to f, and\n * y is replaced with a random hexadecimal digit from 8 to b.\n * Used to generate UUIDs for deviceIds.\n * @private\n */\nexport const UUID = function (a?: any): string {\n  return a // if the placeholder was passed, return\n    ? // a random number from 0 to 15\n      (\n        a ^ // unless b is 8,\n        ((Math.random() * // in which case\n          16) >> // a random number from\n          (a / 4))\n      ) // 8 to 11\n        .toString(16) // in hexadecimal\n    : // or otherwise a concatenated string:\n      (\n        String(1e7) + // 10000000 +\n        String(-1e3) + // -1000 +\n        String(-4e3) + // -4000 +\n        String(-8e3) + // -80000000 +\n        String(-1e11)\n      ) // -100000000000,\n        .replace(\n          // replacing\n          /[018]/g, // zeroes, ones, and eights with\n          UUID, // random hex digits\n        );\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}