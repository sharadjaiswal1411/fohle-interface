{"ast":null,"code":"import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{filterStringAtom,filterTimeAtom,sortAscendingAtom,sortMethodAtom,TokenSortMethod}from'components/Tokens/state';import gql from'graphql-tag';import{useAtomValue}from'jotai/utils';import{useMemo}from'react';import{useTopTokens100Query,useTopTokensSparklineQuery}from'./__generated__/types-and-hooks';import{CHAIN_NAME_TO_CHAIN_ID,isPricePoint,toHistoryDuration,unwrapToken}from'./util';gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query TopTokens100($duration: HistoryDuration!, $chain: Chain!) {\\n    topTokens(pageSize: 100, page: 1, chain: $chain) {\\n      id\\n      name\\n      chain\\n      address\\n      symbol\\n      market(currency: USD) {\\n        totalValueLocked {\\n          value\\n          currency\\n        }\\n        price {\\n          value\\n          currency\\n        }\\n        pricePercentChange(duration: $duration) {\\n          currency\\n          value\\n        }\\n        volume(duration: $duration) {\\n          value\\n          currency\\n        }\\n      }\\n      project {\\n        logoUrl\\n      }\\n    }\\n  }\\n\"])));gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  query TopTokensSparkline($duration: HistoryDuration!, $chain: Chain!) {\\n    topTokens(pageSize: 100, page: 1, chain: $chain) {\\n      address\\n      market(currency: USD) {\\n        priceHistory(duration: $duration) {\\n          timestamp\\n          value\\n        }\\n      }\\n    }\\n  }\\n\"])));function useSortedTokens(tokens){var sortMethod=useAtomValue(sortMethodAtom);var sortAscending=useAtomValue(sortAscendingAtom);return useMemo(function(){var tokenArray=Array.from(tokens);switch(sortMethod){case TokenSortMethod.PRICE:tokenArray=tokenArray.sort(function(a,b){var _b$market$price$value,_b$market,_b$market$price,_a$market$price$value,_a$market,_a$market$price;return((_b$market$price$value=b===null||b===void 0?void 0:(_b$market=b.market)===null||_b$market===void 0?void 0:(_b$market$price=_b$market.price)===null||_b$market$price===void 0?void 0:_b$market$price.value)!==null&&_b$market$price$value!==void 0?_b$market$price$value:0)-((_a$market$price$value=a===null||a===void 0?void 0:(_a$market=a.market)===null||_a$market===void 0?void 0:(_a$market$price=_a$market.price)===null||_a$market$price===void 0?void 0:_a$market$price.value)!==null&&_a$market$price$value!==void 0?_a$market$price$value:0);});break;case TokenSortMethod.PERCENT_CHANGE:tokenArray=tokenArray.sort(function(a,b){var _b$market$pricePercen,_b$market2,_b$market2$pricePerce,_a$market$pricePercen,_a$market2,_a$market2$pricePerce;return((_b$market$pricePercen=b===null||b===void 0?void 0:(_b$market2=b.market)===null||_b$market2===void 0?void 0:(_b$market2$pricePerce=_b$market2.pricePercentChange)===null||_b$market2$pricePerce===void 0?void 0:_b$market2$pricePerce.value)!==null&&_b$market$pricePercen!==void 0?_b$market$pricePercen:0)-((_a$market$pricePercen=a===null||a===void 0?void 0:(_a$market2=a.market)===null||_a$market2===void 0?void 0:(_a$market2$pricePerce=_a$market2.pricePercentChange)===null||_a$market2$pricePerce===void 0?void 0:_a$market2$pricePerce.value)!==null&&_a$market$pricePercen!==void 0?_a$market$pricePercen:0);});break;case TokenSortMethod.TOTAL_VALUE_LOCKED:tokenArray=tokenArray.sort(function(a,b){var _b$market$totalValueL,_b$market3,_b$market3$totalValue,_a$market$totalValueL,_a$market3,_a$market3$totalValue;return((_b$market$totalValueL=b===null||b===void 0?void 0:(_b$market3=b.market)===null||_b$market3===void 0?void 0:(_b$market3$totalValue=_b$market3.totalValueLocked)===null||_b$market3$totalValue===void 0?void 0:_b$market3$totalValue.value)!==null&&_b$market$totalValueL!==void 0?_b$market$totalValueL:0)-((_a$market$totalValueL=a===null||a===void 0?void 0:(_a$market3=a.market)===null||_a$market3===void 0?void 0:(_a$market3$totalValue=_a$market3.totalValueLocked)===null||_a$market3$totalValue===void 0?void 0:_a$market3$totalValue.value)!==null&&_a$market$totalValueL!==void 0?_a$market$totalValueL:0);});break;case TokenSortMethod.VOLUME:tokenArray=tokenArray.sort(function(a,b){var _b$market$volume$valu,_b$market4,_b$market4$volume,_a$market$volume$valu,_a$market4,_a$market4$volume;return((_b$market$volume$valu=b===null||b===void 0?void 0:(_b$market4=b.market)===null||_b$market4===void 0?void 0:(_b$market4$volume=_b$market4.volume)===null||_b$market4$volume===void 0?void 0:_b$market4$volume.value)!==null&&_b$market$volume$valu!==void 0?_b$market$volume$valu:0)-((_a$market$volume$valu=a===null||a===void 0?void 0:(_a$market4=a.market)===null||_a$market4===void 0?void 0:(_a$market4$volume=_a$market4.volume)===null||_a$market4$volume===void 0?void 0:_a$market4$volume.value)!==null&&_a$market$volume$valu!==void 0?_a$market$volume$valu:0);});break;}return sortAscending?tokenArray.reverse():tokenArray;},[tokens,sortMethod,sortAscending]);}function useFilteredTokens(tokens){var filterString=useAtomValue(filterStringAtom);var lowercaseFilterString=useMemo(function(){return filterString.toLowerCase();},[filterString]);return useMemo(function(){var returnTokens=tokens;if(lowercaseFilterString){var _returnTokens;returnTokens=(_returnTokens=returnTokens)===null||_returnTokens===void 0?void 0:_returnTokens.filter(function(token){var _token$address,_token$name,_token$symbol;var addressIncludesFilterString=token===null||token===void 0?void 0:(_token$address=token.address)===null||_token$address===void 0?void 0:_token$address.toLowerCase().includes(lowercaseFilterString);var nameIncludesFilterString=token===null||token===void 0?void 0:(_token$name=token.name)===null||_token$name===void 0?void 0:_token$name.toLowerCase().includes(lowercaseFilterString);var symbolIncludesFilterString=token===null||token===void 0?void 0:(_token$symbol=token.symbol)===null||_token$symbol===void 0?void 0:_token$symbol.toLowerCase().includes(lowercaseFilterString);return nameIncludesFilterString||symbolIncludesFilterString||addressIncludesFilterString;});}return returnTokens;},[tokens,lowercaseFilterString]);}// Number of items to render in each fetch in infinite scroll.\nexport var PAGE_SIZE=20;export function useTopTokens(chain){var chainId=CHAIN_NAME_TO_CHAIN_ID[chain];var duration=toHistoryDuration(useAtomValue(filterTimeAtom));var _useTopTokensSparklin=useTopTokensSparklineQuery({variables:{duration:duration,chain:chain}}),sparklineQuery=_useTopTokensSparklin.data;var sparklines=useMemo(function(){var _sparklineQuery$topTo;var unwrappedTokens=sparklineQuery===null||sparklineQuery===void 0?void 0:(_sparklineQuery$topTo=sparklineQuery.topTokens)===null||_sparklineQuery$topTo===void 0?void 0:_sparklineQuery$topTo.map(function(topToken){return unwrapToken(chainId,topToken);});var map={};unwrappedTokens===null||unwrappedTokens===void 0?void 0:unwrappedTokens.forEach(function(current){var _current$market,_current$market$price;return(current===null||current===void 0?void 0:current.address)&&(map[current.address]=current===null||current===void 0?void 0:(_current$market=current.market)===null||_current$market===void 0?void 0:(_current$market$price=_current$market.priceHistory)===null||_current$market$price===void 0?void 0:_current$market$price.filter(isPricePoint));});return map;},[chainId,sparklineQuery===null||sparklineQuery===void 0?void 0:sparklineQuery.topTokens]);var _useTopTokens100Query=useTopTokens100Query({variables:{duration:duration,chain:chain}}),data=_useTopTokens100Query.data,loadingTokens=_useTopTokens100Query.loading;var mappedTokens=useMemo(function(){var _data$topTokens$map,_data$topTokens;return(_data$topTokens$map=data===null||data===void 0?void 0:(_data$topTokens=data.topTokens)===null||_data$topTokens===void 0?void 0:_data$topTokens.map(function(token){return unwrapToken(chainId,token);}))!==null&&_data$topTokens$map!==void 0?_data$topTokens$map:[];},[chainId,data]);var filteredTokens=useFilteredTokens(mappedTokens);var sortedTokens=useSortedTokens(filteredTokens);return useMemo(function(){return{tokens:sortedTokens,loadingTokens:loadingTokens,sparklines:sparklines};},[loadingTokens,sortedTokens,sparklines]);}","map":{"version":3,"names":["filterStringAtom","filterTimeAtom","sortAscendingAtom","sortMethodAtom","TokenSortMethod","gql","useAtomValue","useMemo","useTopTokens100Query","useTopTokensSparklineQuery","CHAIN_NAME_TO_CHAIN_ID","isPricePoint","toHistoryDuration","unwrapToken","useSortedTokens","tokens","sortMethod","sortAscending","tokenArray","Array","from","PRICE","sort","a","b","market","price","value","PERCENT_CHANGE","pricePercentChange","TOTAL_VALUE_LOCKED","totalValueLocked","VOLUME","volume","reverse","useFilteredTokens","filterString","lowercaseFilterString","toLowerCase","returnTokens","filter","token","addressIncludesFilterString","address","includes","nameIncludesFilterString","name","symbolIncludesFilterString","symbol","PAGE_SIZE","useTopTokens","chain","chainId","duration","variables","sparklineQuery","data","sparklines","unwrappedTokens","topTokens","map","topToken","forEach","current","priceHistory","loadingTokens","loading","mappedTokens","filteredTokens","sortedTokens"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/data/TopTokens.ts"],"sourcesContent":["import {\n  filterStringAtom,\n  filterTimeAtom,\n  sortAscendingAtom,\n  sortMethodAtom,\n  TokenSortMethod,\n} from 'components/Tokens/state'\nimport gql from 'graphql-tag'\nimport { useAtomValue } from 'jotai/utils'\nimport { useMemo } from 'react'\n\nimport {\n  Chain,\n  TopTokens100Query,\n  useTopTokens100Query,\n  useTopTokensSparklineQuery,\n} from './__generated__/types-and-hooks'\nimport { CHAIN_NAME_TO_CHAIN_ID, isPricePoint, PricePoint, toHistoryDuration, unwrapToken } from './util'\n\ngql`\n  query TopTokens100($duration: HistoryDuration!, $chain: Chain!) {\n    topTokens(pageSize: 100, page: 1, chain: $chain) {\n      id\n      name\n      chain\n      address\n      symbol\n      market(currency: USD) {\n        totalValueLocked {\n          value\n          currency\n        }\n        price {\n          value\n          currency\n        }\n        pricePercentChange(duration: $duration) {\n          currency\n          value\n        }\n        volume(duration: $duration) {\n          value\n          currency\n        }\n      }\n      project {\n        logoUrl\n      }\n    }\n  }\n`\n\ngql`\n  query TopTokensSparkline($duration: HistoryDuration!, $chain: Chain!) {\n    topTokens(pageSize: 100, page: 1, chain: $chain) {\n      address\n      market(currency: USD) {\n        priceHistory(duration: $duration) {\n          timestamp\n          value\n        }\n      }\n    }\n  }\n`\n\nfunction useSortedTokens(tokens: NonNullable<TopTokens100Query['topTokens']>) {\n  const sortMethod = useAtomValue(sortMethodAtom)\n  const sortAscending = useAtomValue(sortAscendingAtom)\n\n  return useMemo(() => {\n    let tokenArray = Array.from(tokens)\n    switch (sortMethod) {\n      case TokenSortMethod.PRICE:\n        tokenArray = tokenArray.sort((a, b) => (b?.market?.price?.value ?? 0) - (a?.market?.price?.value ?? 0))\n        break\n      case TokenSortMethod.PERCENT_CHANGE:\n        tokenArray = tokenArray.sort(\n          (a, b) => (b?.market?.pricePercentChange?.value ?? 0) - (a?.market?.pricePercentChange?.value ?? 0)\n        )\n        break\n      case TokenSortMethod.TOTAL_VALUE_LOCKED:\n        tokenArray = tokenArray.sort(\n          (a, b) => (b?.market?.totalValueLocked?.value ?? 0) - (a?.market?.totalValueLocked?.value ?? 0)\n        )\n        break\n      case TokenSortMethod.VOLUME:\n        tokenArray = tokenArray.sort((a, b) => (b?.market?.volume?.value ?? 0) - (a?.market?.volume?.value ?? 0))\n        break\n    }\n\n    return sortAscending ? tokenArray.reverse() : tokenArray\n  }, [tokens, sortMethod, sortAscending])\n}\n\nfunction useFilteredTokens(tokens: NonNullable<TopTokens100Query['topTokens']>) {\n  const filterString = useAtomValue(filterStringAtom)\n\n  const lowercaseFilterString = useMemo(() => filterString.toLowerCase(), [filterString])\n\n  return useMemo(() => {\n    let returnTokens = tokens\n    if (lowercaseFilterString) {\n      returnTokens = returnTokens?.filter((token) => {\n        const addressIncludesFilterString = token?.address?.toLowerCase().includes(lowercaseFilterString)\n        const nameIncludesFilterString = token?.name?.toLowerCase().includes(lowercaseFilterString)\n        const symbolIncludesFilterString = token?.symbol?.toLowerCase().includes(lowercaseFilterString)\n        return nameIncludesFilterString || symbolIncludesFilterString || addressIncludesFilterString\n      })\n    }\n    return returnTokens\n  }, [tokens, lowercaseFilterString])\n}\n\n// Number of items to render in each fetch in infinite scroll.\nexport const PAGE_SIZE = 20\nexport type SparklineMap = { [key: string]: PricePoint[] | undefined }\nexport type TopToken = NonNullable<NonNullable<TopTokens100Query>['topTokens']>[number]\n\ninterface UseTopTokensReturnValue {\n  tokens: TopToken[] | undefined\n  loadingTokens: boolean\n  sparklines: SparklineMap\n}\n\nexport function useTopTokens(chain: Chain): UseTopTokensReturnValue {\n  const chainId = CHAIN_NAME_TO_CHAIN_ID[chain]\n  const duration = toHistoryDuration(useAtomValue(filterTimeAtom))\n\n  const { data: sparklineQuery } = useTopTokensSparklineQuery({\n    variables: { duration, chain },\n  })\n\n  const sparklines = useMemo(() => {\n    const unwrappedTokens = sparklineQuery?.topTokens?.map((topToken) => unwrapToken(chainId, topToken))\n    const map: SparklineMap = {}\n    unwrappedTokens?.forEach(\n      (current) => current?.address && (map[current.address] = current?.market?.priceHistory?.filter(isPricePoint))\n    )\n    return map\n  }, [chainId, sparklineQuery?.topTokens])\n\n  const { data, loading: loadingTokens } = useTopTokens100Query({\n    variables: { duration, chain },\n  })\n  const mappedTokens = useMemo(\n    () => data?.topTokens?.map((token) => unwrapToken(chainId, token)) ?? [],\n    [chainId, data]\n  )\n  const filteredTokens = useFilteredTokens(mappedTokens)\n  const sortedTokens = useSortedTokens(filteredTokens)\n  return useMemo(() => ({ tokens: sortedTokens, loadingTokens, sparklines }), [loadingTokens, sortedTokens, sparklines])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}