{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { useUnsupportedTokens } from './Tokens';\n\n/**\n * Returns true if the input currency or output currency cannot be traded in the interface\n * @param currencyIn the input currency to check\n * @param currencyOut the output currency to check\n */\nexport function useIsSwapUnsupported(currencyIn, currencyOut) {\n  _s();\n  const unsupportedTokens = useUnsupportedTokens();\n  return useMemo(() => {\n    if (!unsupportedTokens) {\n      return false;\n    }\n    const currencyInUnsupported = Boolean((currencyIn === null || currencyIn === void 0 ? void 0 : currencyIn.isToken) && unsupportedTokens[currencyIn.address]);\n    const currencyOutUnsupported = Boolean((currencyOut === null || currencyOut === void 0 ? void 0 : currencyOut.isToken) && unsupportedTokens[currencyOut.address]);\n    return currencyInUnsupported || currencyOutUnsupported;\n  }, [currencyIn, currencyOut, unsupportedTokens]);\n}\n_s(useIsSwapUnsupported, \"c6jsqzEiMtNuP2/3kRit75pPYgk=\", false, function () {\n  return [useUnsupportedTokens];\n});","map":{"version":3,"names":["useMemo","useUnsupportedTokens","useIsSwapUnsupported","currencyIn","currencyOut","unsupportedTokens","currencyInUnsupported","Boolean","isToken","address","currencyOutUnsupported"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useIsSwapUnsupported.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\n\nimport { useUnsupportedTokens } from './Tokens'\n\n/**\n * Returns true if the input currency or output currency cannot be traded in the interface\n * @param currencyIn the input currency to check\n * @param currencyOut the output currency to check\n */\nexport function useIsSwapUnsupported(currencyIn?: Currency | null, currencyOut?: Currency | null): boolean {\n  const unsupportedTokens = useUnsupportedTokens()\n  return useMemo(() => {\n    if (!unsupportedTokens) {\n      return false\n    }\n    const currencyInUnsupported = Boolean(currencyIn?.isToken && unsupportedTokens[currencyIn.address])\n    const currencyOutUnsupported = Boolean(currencyOut?.isToken && unsupportedTokens[currencyOut.address])\n    return currencyInUnsupported || currencyOutUnsupported\n  }, [currencyIn, currencyOut, unsupportedTokens])\n}\n"],"mappings":";AACA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,oBAAoB,QAAQ,UAAU;;AAE/C;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoB,CAACC,UAA4B,EAAEC,WAA6B,EAAW;EAAA;EACzG,MAAMC,iBAAiB,GAAGJ,oBAAoB,EAAE;EAChD,OAAOD,OAAO,CAAC,MAAM;IACnB,IAAI,CAACK,iBAAiB,EAAE;MACtB,OAAO,KAAK;IACd;IACA,MAAMC,qBAAqB,GAAGC,OAAO,CAAC,CAAAJ,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEK,OAAO,KAAIH,iBAAiB,CAACF,UAAU,CAACM,OAAO,CAAC,CAAC;IACnG,MAAMC,sBAAsB,GAAGH,OAAO,CAAC,CAAAH,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEI,OAAO,KAAIH,iBAAiB,CAACD,WAAW,CAACK,OAAO,CAAC,CAAC;IACtG,OAAOH,qBAAqB,IAAII,sBAAsB;EACxD,CAAC,EAAE,CAACP,UAAU,EAAEC,WAAW,EAAEC,iBAAiB,CAAC,CAAC;AAClD;AAAC,GAVeH,oBAAoB;EAAA,QACRD,oBAAoB;AAAA"},"metadata":{},"sourceType":"module"}