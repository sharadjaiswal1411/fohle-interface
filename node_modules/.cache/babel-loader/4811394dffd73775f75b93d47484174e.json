{"ast":null,"code":"import _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _networks;\nimport { urlClean, logger } from '@0xsequence/utils';\nimport { ethers } from 'ethers';\nimport { JsonRpcProvider } from '@ethersproject/providers';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction isNetworkConfig(cand) {\n  return cand && cand.chainId !== undefined && cand.name !== undefined && cand.rpcUrl !== undefined && cand.relayer !== undefined;\n}\nvar getChainId = function getChainId(chainId) {\n  if (typeof chainId === 'number') {\n    return chainId;\n  }\n  if (chainId.chainId) {\n    return chainId.chainId;\n  }\n  return ethers.BigNumber.from(chainId).toNumber();\n};\nvar maybeChainId = function maybeChainId(chainId) {\n  if (!chainId) return undefined;\n  return getChainId(chainId);\n};\nvar getAuthNetwork = function getAuthNetwork(networks) {\n  return networks.find(function (network) {\n    return network.isAuthChain;\n  });\n};\nvar isValidNetworkConfig = function isValidNetworkConfig(networkConfig) {\n  var raise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var skipRelayerCheck = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (!networkConfig) throw new Error(\"invalid network config: empty config\");\n  var configs = [];\n  if (Array.isArray(networkConfig)) {\n    configs.push.apply(configs, _toConsumableArray(networkConfig));\n  } else {\n    configs.push(networkConfig);\n  }\n  if (configs.length === 0) {\n    if (raise) throw new Error(\"invalid network config: empty config\");\n    return false;\n  } // Ensure distinct chainId configs\n\n  var chainIds = configs.map(function (c) {\n    return c.chainId;\n  }).sort();\n  var dupes = chainIds.filter(function (c, i) {\n    return chainIds.indexOf(c) !== i;\n  });\n  if (dupes.length > 0) {\n    if (raise) throw new Error(\"invalid network config: duplicate chainIds \".concat(dupes));\n    return false;\n  } // Downcase all network names\n\n  configs.forEach(function (c) {\n    return c.name = c.name.toLowerCase();\n  }); // Ensure distinct network names\n\n  var names = configs.map(function (c) {\n    return c.name;\n  }).sort();\n  var nameDupes = names.filter(function (c, i) {\n    return names.indexOf(c) !== i;\n  });\n  if (nameDupes.length > 0) {\n    if (raise) throw new Error(\"invalid network config: duplicate network names \".concat(nameDupes));\n    return false;\n  } // Ensure rpcUrl or provider is specified\n  // Ensure relayerUrl or relayer is specified\n  // Ensure one default chain\n  // Ensure one auth chain\n\n  var defaultChain = false;\n  var authChain = false;\n  for (var i = 0; i < configs.length; i++) {\n    var c = configs[i];\n    if ((!c.rpcUrl || c.rpcUrl === '') && !c.provider) {\n      if (raise) throw new Error(\"invalid network config for chainId \".concat(c.chainId, \": rpcUrl or provider must be provided\"));\n      return false;\n    }\n    if (!skipRelayerCheck) {\n      if (!c.relayer) {\n        if (raise) throw new Error(\"invalid network config for chainId \".concat(c.chainId, \": relayer must be provided\"));\n        return false;\n      }\n    }\n    if (c.isDefaultChain) {\n      if (defaultChain) {\n        if (raise) throw new Error(\"invalid network config for chainId \".concat(c.chainId, \": DefaultChain is already set by another config\"));\n        return false;\n      }\n      defaultChain = true;\n    }\n    if (c.isAuthChain) {\n      if (authChain) {\n        if (raise) throw new Error(\"invalid network config for chainId \".concat(c.chainId, \": AuthChain is already set by another config\"));\n      }\n      authChain = true;\n    }\n  }\n  if (!defaultChain) {\n    if (raise) throw new Error(\"invalid network config: DefaultChain must be set\");\n    return false;\n  }\n  if (!authChain) {\n    if (raise) throw new Error(\"invalid network config: AuthChain must be set\");\n    return false;\n  }\n  return true;\n};\nvar ensureValidNetworks = function ensureValidNetworks(networks) {\n  var skipRelayerCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  isValidNetworkConfig(networks, true, skipRelayerCheck);\n  return networks;\n};\nvar ensureUniqueNetworks = function ensureUniqueNetworks(networks) {\n  var raise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var chainIds = networks.map(function (c) {\n    return c.chainId;\n  }).sort();\n  var dupes = chainIds.filter(function (c, i) {\n    return chainIds.indexOf(c) !== i;\n  });\n  if (dupes.length > 0) {\n    if (raise) throw new Error(\"invalid network config: duplicate chainIds \".concat(dupes));\n    return false;\n  }\n  return true;\n};\nvar updateNetworkConfig = function updateNetworkConfig(src, dest) {\n  if (!src || !dest) return;\n  if (!src.chainId && !src.name) {\n    throw new Error('failed to update network config: source config is missing chainId or name');\n  }\n  if (src.chainId !== dest.chainId && src.name !== dest.name) {\n    throw new Error('failed to update network config: one of chainId or name must match');\n  }\n  if (src.rpcUrl) {\n    dest.rpcUrl = src.rpcUrl;\n    dest.provider = undefined;\n  }\n  if (src.provider) {\n    dest.provider = src.provider;\n  }\n  if (src.relayer) {\n    dest.relayer = src.relayer;\n  }\n  if (src.ensAddress) {\n    dest.ensAddress = src.ensAddress;\n  } // NOTE: we do not set default or auth chain from here\n  // if (src.isDefaultChain) {\n  //   dest.isDefaultChain = src.isDefaultChain\n  // }\n  // if (src.isAuthChain) {\n  //   dest.isAuthChain = src.isAuthChain\n  // }\n};\n\nvar createNetworkConfig = function createNetworkConfig(networks, defaultChainId, vars) {\n  var config = [];\n  if (typeof networks === 'function' && vars) {\n    config = networks(vars);\n  } else {\n    config = networks;\n  }\n  if (defaultChainId) {\n    config.forEach(function (n) {\n      return n.isDefaultChain = false;\n    });\n    var mainNetwork = config.filter(function (n) {\n      return n.chainId === defaultChainId;\n    });\n    if (!mainNetwork || mainNetwork.length === 0) {\n      throw new Error(\"defaultChainId \".concat(defaultChainId, \" cannot be found in network list\"));\n    } else {\n      mainNetwork[0].isDefaultChain = true;\n    }\n  }\n  return ensureValidNetworks(sortNetworks(config));\n};\nvar findNetworkConfig = function findNetworkConfig(networks, chainId) {\n  if (typeof chainId === 'string') {\n    if (chainId.startsWith('0x')) {\n      var id = ethers.BigNumber.from(chainId).toNumber();\n      return networks.find(function (n) {\n        return n.chainId === id;\n      });\n    } else {\n      return networks.find(function (n) {\n        return n.name === chainId;\n      });\n    }\n  } else if (typeof chainId === 'number') {\n    return networks.find(function (n) {\n      return n.chainId === chainId;\n    });\n  } else if (chainId.chainId) {\n    return networks.find(function (n) {\n      return n.chainId === chainId.chainId;\n    });\n  } else {\n    return undefined;\n  }\n};\nvar checkNetworkConfig = function checkNetworkConfig(network, chainId) {\n  if (!network) return false;\n  if (network.name === chainId) return true;\n  if (network.chainId === chainId) return true;\n  return false;\n};\nvar networksIndex = function networksIndex(networks) {\n  var index = {};\n  for (var i = 0; i < networks.length; i++) {\n    index[networks[i].name] = networks[i];\n  }\n  return index;\n}; // TODO: we should remove sortNetworks in the future but this is a breaking change for dapp integrations on older versions <-> wallet\n// sortNetworks orders the network config list by: defaultChain, authChain, ..rest by chainId ascending numbers\n\nvar sortNetworks = function sortNetworks(networks) {\n  if (!networks) {\n    return [];\n  }\n  var config = networks.sort(function (a, b) {\n    if (a.chainId === b.chainId) return 0;\n    return a.chainId < b.chainId ? -1 : 1;\n  }); // DefaultChain goes first\n\n  var defaultConfigIdx = config.findIndex(function (c) {\n    return c.isDefaultChain;\n  });\n  if (defaultConfigIdx > 0) config.splice(0, 0, config.splice(defaultConfigIdx, 1)[0]); // AuthChain goes second\n\n  var authConfigIdx = config.findIndex(function (c) {\n    return c.isAuthChain && c.isDefaultChain !== true;\n  });\n  if (authConfigIdx > 0) config.splice(1, 0, config.splice(authConfigIdx, 1)[0]);\n  return config;\n};\nvar ChainId;\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 1] = \"MAINNET\";\n  ChainId[ChainId[\"ROPSTEN\"] = 3] = \"ROPSTEN\";\n  ChainId[ChainId[\"RINKEBY\"] = 4] = \"RINKEBY\";\n  ChainId[ChainId[\"GOERLI\"] = 5] = \"GOERLI\";\n  ChainId[ChainId[\"KOVAN\"] = 42] = \"KOVAN\";\n  ChainId[ChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n  ChainId[ChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n  ChainId[ChainId[\"BSC\"] = 56] = \"BSC\";\n  ChainId[ChainId[\"BSC_TESTNET\"] = 97] = \"BSC_TESTNET\";\n  ChainId[ChainId[\"OPTIMISM\"] = 10] = \"OPTIMISM\";\n  ChainId[ChainId[\"OPTIMISM_TESTNET\"] = 69] = \"OPTIMISM_TESTNET\";\n  ChainId[ChainId[\"ARBITRUM\"] = 42161] = \"ARBITRUM\";\n  ChainId[ChainId[\"ARBITRUM_TESTNET\"] = 421611] = \"ARBITRUM_TESTNET\";\n  ChainId[ChainId[\"AVALANCHE\"] = 43114] = \"AVALANCHE\";\n  ChainId[ChainId[\"AVALANCHE_TESTNET\"] = 43113] = \"AVALANCHE_TESTNET\";\n  ChainId[ChainId[\"FANTOM\"] = 250] = \"FANTOM\";\n  ChainId[ChainId[\"FANTOM_TESTNET\"] = 4002] = \"FANTOM_TESTNET\";\n  ChainId[ChainId[\"GNOSIS\"] = 100] = \"GNOSIS\";\n  ChainId[ChainId[\"AURORA\"] = 1313161554] = \"AURORA\";\n  ChainId[ChainId[\"AURORA_TESTNET\"] = 1313161556] = \"AURORA_TESTNET\";\n})(ChainId || (ChainId = {}));\nvar networks = (_networks = {}, _defineProperty(_networks, ChainId.MAINNET, {\n  chainId: ChainId.MAINNET,\n  name: 'mainnet',\n  title: 'Ethereum',\n  blockExplorer: {\n    name: 'Etherscan',\n    rootUrl: 'https://etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.ROPSTEN, {\n  chainId: ChainId.ROPSTEN,\n  name: 'ropsten',\n  title: 'Ropsten',\n  testnet: true,\n  blockExplorer: {\n    name: 'Etherscan (Ropsten)',\n    rootUrl: 'https://ropsten.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.RINKEBY, {\n  chainId: ChainId.RINKEBY,\n  name: 'rinkeby',\n  title: 'Rinkeby',\n  testnet: true,\n  blockExplorer: {\n    name: 'Etherscan (Rinkeby)',\n    rootUrl: 'https://rinkeby.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.GOERLI, {\n  chainId: ChainId.GOERLI,\n  name: 'goerli',\n  title: 'Goerli',\n  testnet: true,\n  blockExplorer: {\n    name: 'Etherscan (Goerli)',\n    rootUrl: 'https://goerli.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.KOVAN, {\n  chainId: ChainId.KOVAN,\n  name: 'kovan',\n  title: 'Kovan',\n  testnet: true,\n  blockExplorer: {\n    name: 'Etherscan (Kovan)',\n    rootUrl: 'https://kovan.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.POLYGON, {\n  chainId: ChainId.POLYGON,\n  name: 'polygon',\n  title: 'Polygon',\n  blockExplorer: {\n    name: 'Polygonscan',\n    rootUrl: 'https://polygonscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.POLYGON_MUMBAI, {\n  chainId: ChainId.POLYGON_MUMBAI,\n  name: 'mumbai',\n  title: 'Polygon Mumbai',\n  testnet: true,\n  blockExplorer: {\n    name: 'Polygonscan (Mumbai)',\n    rootUrl: 'https://mumbai.polygonscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.BSC, {\n  chainId: ChainId.BSC,\n  name: 'bsc',\n  title: 'BNB Smart Chain',\n  blockExplorer: {\n    name: 'BSCScan',\n    rootUrl: 'https://bscscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.BSC_TESTNET, {\n  chainId: ChainId.BSC_TESTNET,\n  name: 'bsc-testnet',\n  title: 'BNB Smart Chain Testnet',\n  testnet: true,\n  blockExplorer: {\n    name: 'BSCScan (Testnet)',\n    rootUrl: 'https://testnet.bscscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.OPTIMISM, {\n  chainId: ChainId.OPTIMISM,\n  name: 'optimism',\n  title: 'Optimism',\n  blockExplorer: {\n    name: 'Etherscan (Optimism)',\n    rootUrl: 'https://optimistic.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.OPTIMISM_TESTNET, {\n  chainId: ChainId.OPTIMISM_TESTNET,\n  name: 'optimism-testnet',\n  title: 'Optimistic Kovan',\n  testnet: true,\n  blockExplorer: {\n    name: 'Etherscan (Optimism Testnet)',\n    rootUrl: 'https://kovan-optimistic.etherscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.ARBITRUM, {\n  chainId: ChainId.ARBITRUM,\n  name: 'arbitrum',\n  title: 'Arbitrum',\n  blockExplorer: {\n    name: 'Arbiscan',\n    rootUrl: 'https://arbiscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.ARBITRUM_TESTNET, {\n  chainId: ChainId.ARBITRUM_TESTNET,\n  name: 'arbitrum-testnet',\n  title: 'Arbitrum Testnet',\n  testnet: true,\n  blockExplorer: {\n    name: 'Arbiscan (Testnet)',\n    rootUrl: 'https://testnet.arbiscan.io/'\n  }\n}), _defineProperty(_networks, ChainId.AVALANCHE, {\n  chainId: ChainId.AVALANCHE,\n  name: 'avalanche',\n  title: 'Avalanche',\n  blockExplorer: {\n    name: 'Snowtrace',\n    rootUrl: 'https://snowtrace.io/'\n  }\n}), _defineProperty(_networks, ChainId.AVALANCHE_TESTNET, {\n  chainId: ChainId.AVALANCHE_TESTNET,\n  name: 'avalanche-testnet',\n  title: 'Avalanche Testnet',\n  testnet: true,\n  blockExplorer: {\n    name: 'Snowtrace (Testnet)',\n    rootUrl: 'https://testnet.snowtrace.io/'\n  }\n}), _defineProperty(_networks, ChainId.FANTOM, {\n  chainId: ChainId.FANTOM,\n  name: 'fantom',\n  title: 'Fantom',\n  blockExplorer: {\n    name: 'FTMScan',\n    rootUrl: 'https://ftmscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.FANTOM_TESTNET, {\n  chainId: ChainId.FANTOM_TESTNET,\n  name: 'fantom-testnet',\n  title: 'Fantom Testnet',\n  testnet: true,\n  blockExplorer: {\n    name: 'FTMScan (Testnet)',\n    rootUrl: 'https://testnet.ftmscan.com/'\n  }\n}), _defineProperty(_networks, ChainId.GNOSIS, {\n  chainId: ChainId.GNOSIS,\n  name: 'gnosis',\n  title: 'Gnosis Chain',\n  blockExplorer: {\n    name: 'Gnosis Chain Explorer',\n    rootUrl: 'https://blockscout.com/xdai/mainnet/'\n  }\n}), _defineProperty(_networks, ChainId.AURORA, {\n  chainId: ChainId.AURORA,\n  name: 'aurora',\n  title: 'Aurora',\n  blockExplorer: {\n    name: 'Aurora Explorer',\n    rootUrl: 'https://aurorascan.dev/'\n  }\n}), _defineProperty(_networks, ChainId.AURORA_TESTNET, {\n  chainId: ChainId.AURORA_TESTNET,\n  name: 'aurora-testnet',\n  title: 'Aurora Testnet',\n  blockExplorer: {\n    name: 'Aurora Explorer (Testnet)',\n    rootUrl: 'https://testnet.aurorascan.dev/'\n  }\n}), _networks);\nvar mainnetNetworks = createNetworkConfig(function (vars) {\n  return [_extends({}, networks[ChainId.MAINNET], {\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    rpcUrl: urlClean(\"\".concat(vars.baseRpcUrl, \"/mainnet\")),\n    relayer: {\n      url: urlClean(\"\".concat(vars.baseRelayerUrl, \"/mainnet\"))\n    },\n    isDefaultChain: true\n  }), _extends({}, networks[ChainId.POLYGON], {\n    rpcUrl: 'https://rpc-mainnet.matic.network',\n    relayer: {\n      url: urlClean(\"\".concat(vars.baseRelayerUrl, \"/matic\"))\n    },\n    isAuthChain: true\n  })];\n}, 1, {\n  baseRpcUrl: 'https://nodes.sequence.app',\n  baseRelayerUrl: 'https://relayers.sequence.app'\n});\nvar testnetNetworks = createNetworkConfig(function (vars) {\n  return [_extends({}, networks[ChainId.RINKEBY], {\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    rpcUrl: urlClean(\"\".concat(vars.baseRpcUrl, \"/rinkeby\")),\n    relayer: {\n      url: urlClean(\"\".concat(vars.baseRelayerUrl, \"/rinkeby\"))\n    },\n    isDefaultChain: true\n  }), _extends({}, networks[ChainId.GOERLI], {\n    ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n    rpcUrl: urlClean(\"\".concat(vars.baseRpcUrl, \"/goerli\")),\n    relayer: {\n      url: urlClean(\"\".concat(vars.baseRelayerUrl, \"/goerli\"))\n    },\n    isAuthChain: true\n  })];\n}, undefined, {\n  baseRpcUrl: 'https://nodes.sequence.app',\n  baseRelayerUrl: 'https://relayers.sequence.app'\n});\n\n// WalletContext is the module addresses deployed on a network, aka the context / environment\n// of the Sequence Smart Wallet system on Ethereum.\n// sequenceContext are the deployed addresses of modules available on public networks.\nvar sequenceContext = {\n  factory: '0xf9D09D634Fb818b05149329C1dcCFAeA53639d96',\n  mainModule: '0xd01F11855bCcb95f88D7A48492F66410d4637313',\n  mainModuleUpgradable: '0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118',\n  guestModule: '0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7',\n  sequenceUtils: '0xd130B43062D875a4B7aF3f8fc036Bc6e9D3E1B3E',\n  libs: {\n    requireFreshSigner: '0xE6B9B21C077F382333220a072e4c44280b873907'\n  }\n};\nvar JsonRpcVersion = '2.0';\nvar JsonRpcRouter = /*#__PURE__*/function () {\n  function JsonRpcRouter(middlewares, sender) {\n    _classCallCheck(this, JsonRpcRouter);\n    this.sender = void 0;\n    this.handler = void 0;\n    this.sender = sender;\n    if (middlewares) {\n      this.setMiddleware(middlewares);\n    }\n  }\n  _createClass(JsonRpcRouter, [{\n    key: \"setMiddleware\",\n    value: function setMiddleware(middlewares) {\n      this.handler = createJsonRpcMiddlewareStack(middlewares, this.sender.sendAsync);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function sendAsync(request, callback, chainId) {\n      try {\n        this.handler(request, callback, chainId);\n      } catch (err) {\n        callback(err, undefined);\n      }\n    } // createWeb3Provider(network?: Networkish): EthersWeb3Provider {\n    //   return new EthersWeb3Provider(this.sender, network)\n    // }\n  }]);\n  return JsonRpcRouter;\n}();\nvar createJsonRpcMiddlewareStack = function createJsonRpcMiddlewareStack(middlewares, handler) {\n  if (middlewares.length === 0) return handler;\n  var toMiddleware = function toMiddleware(v) {\n    if (v.sendAsyncMiddleware) {\n      return v.sendAsyncMiddleware;\n    } else {\n      return v;\n    }\n  };\n  var chain;\n  chain = toMiddleware(middlewares[middlewares.length - 1])(handler);\n  for (var i = middlewares.length - 2; i >= 0; i--) {\n    chain = toMiddleware(middlewares[i])(chain);\n  }\n  return chain;\n};\nfunction isJsonRpcProvider(cand) {\n  return cand !== undefined && cand.send !== undefined && cand.constructor.defaultUrl !== undefined && cand.detectNetwork !== undefined && cand.getSigner !== undefined && cand.perform !== undefined;\n}\nfunction isJsonRpcHandler(cand) {\n  return cand !== undefined && cand.sendAsync !== undefined;\n}\nvar _nextId = 0;\nvar JsonRpcSender = /*#__PURE__*/_createClass(function JsonRpcSender(provider, defaultChainId) {\n  var _this = this;\n  _classCallCheck(this, JsonRpcSender);\n  this.send = void 0;\n  this.request = void 0;\n  this.defaultChainId = void 0;\n  this.sendAsync = function (request, callback, chainId) {\n    _this.send(request.method, request.params, chainId || _this.defaultChainId).then(function (r) {\n      callback(undefined, {\n        jsonrpc: '2.0',\n        id: request.id,\n        result: r\n      });\n    }).catch(function (e) {\n      callback(e, undefined);\n    });\n  };\n  this.defaultChainId = defaultChainId;\n  if (isJsonRpcProvider(provider)) {\n    // we can ignore defaultChainId for JsonRpcProviders as they are already chain-bound\n    this.send = provider.send.bind(provider);\n  } else if (isJsonRpcHandler(provider)) {\n    this.send = function (method, params, chainId) {\n      return new Promise(function (resolve, reject) {\n        provider.sendAsync({\n          // TODO: really shouldn't have to set these here?\n          jsonrpc: JsonRpcVersion,\n          id: ++_nextId,\n          method: method,\n          params: params\n        }, function (error, response) {\n          if (error) {\n            reject(error);\n          } else if (response) {\n            resolve(response.result);\n          } else {\n            resolve(undefined);\n          }\n        }, chainId || _this.defaultChainId);\n      });\n    };\n  } else {\n    this.send = provider;\n  }\n  this.request = function (request, chainId) {\n    return _this.send(request.method, request.params, chainId);\n  };\n});\nvar JsonRpcExternalProvider = /*#__PURE__*/_createClass(function JsonRpcExternalProvider(provider) {\n  var _this2 = this;\n  _classCallCheck(this, JsonRpcExternalProvider);\n  this.provider = provider;\n  this.sendAsync = function (request, callback) {\n    _this2.provider.send(request.method, request.params).then(function (r) {\n      callback(undefined, {\n        jsonrpc: '2.0',\n        id: request.id,\n        result: r\n      });\n    }).catch(function (e) {\n      callback(e, undefined);\n    });\n  };\n  this.send = this.sendAsync;\n});\nvar AllowProvider = /*#__PURE__*/function () {\n  function AllowProvider(isAllowedFunc) {\n    _classCallCheck(this, AllowProvider);\n    this.sendAsyncMiddleware = void 0;\n    this.isAllowedFunc = void 0;\n    if (isAllowedFunc) {\n      this.isAllowedFunc = isAllowedFunc;\n    } else {\n      this.isAllowedFunc = function (request) {\n        return true;\n      };\n    }\n    this.sendAsyncMiddleware = allowProviderMiddleware(this.isAllowedFunc);\n  }\n  _createClass(AllowProvider, [{\n    key: \"setIsAllowedFunc\",\n    value: function setIsAllowedFunc(fn) {\n      this.isAllowedFunc = fn;\n      this.sendAsyncMiddleware = allowProviderMiddleware(this.isAllowedFunc);\n    }\n  }]);\n  return AllowProvider;\n}();\nvar allowProviderMiddleware = function allowProviderMiddleware(isAllowed) {\n  return function (next) {\n    return function (request, callback, chainId) {\n      // ensure precondition is met or do not allow the request to continue\n      if (!isAllowed(request)) {\n        throw new Error('allowProvider middleware precondition is unmet.');\n      } // request is allowed. keep going..\n\n      next(request, callback, chainId);\n    };\n  };\n};\nvar CachedProvider = /*#__PURE__*/function () {\n  function CachedProvider(defaultChainId) {\n    var _this3 = this;\n    _classCallCheck(this, CachedProvider);\n    this.cachableJsonRpcMethods = ['net_version', 'eth_chainId', 'eth_accounts', 'sequence_getWalletContext', 'sequence_getNetworks'];\n    this.cache = void 0;\n    this.onUpdateCallback = void 0;\n    this.defaultChainId = void 0;\n    this.sendAsyncMiddleware = function (next) {\n      return function (request, callback, chainId) {\n        // Respond early with cached result\n        if (_this3.cachableJsonRpcMethods.includes(request.method)) {\n          var key = _this3.cacheKey(request.method, request.params, chainId || _this3.defaultChainId);\n          var result = _this3.getCacheValue(key);\n          if (result && result !== '') {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: request.id,\n              result: result\n            });\n            return;\n          }\n        } // Continue down the handler chain\n\n        next(request, function (error, response, chainId) {\n          // Store result in cache and continue\n          if (_this3.cachableJsonRpcMethods.includes(request.method)) {\n            if (response && response.result) {\n              var _key = _this3.cacheKey(request.method, request.params, chainId || _this3.defaultChainId);\n              _this3.setCacheValue(_key, response.result);\n            }\n          } // Exec next handler\n\n          callback(error, response);\n        }, chainId || _this3.defaultChainId);\n      };\n    };\n    this.cacheKey = function (method, params, chainId) {\n      var key = '';\n      if (chainId) {\n        key = \"\".concat(chainId, \":\").concat(method, \":\");\n      } else {\n        key = \":\".concat(method, \":\");\n      }\n      if (!params || params.length === 0) {\n        return key + '[]';\n      }\n      return key + JSON.stringify(params);\n    };\n    this.getCache = function () {\n      return _this3.cache;\n    };\n    this.setCache = function (cache) {\n      _this3.cache = cache;\n      if (_this3.onUpdateCallback) {\n        _this3.onUpdateCallback();\n      }\n    };\n    this.getCacheValue = function (key) {\n      return _this3.cache[key];\n    };\n    this.setCacheValue = function (key, value) {\n      _this3.cache[key] = value;\n      if (_this3.onUpdateCallback) {\n        _this3.onUpdateCallback(key, value);\n      }\n    };\n    this.clearCache = function () {\n      _this3.cache = {};\n    };\n    this.cache = {};\n    this.defaultChainId = defaultChainId;\n  }\n  _createClass(CachedProvider, [{\n    key: \"onUpdate\",\n    value: function onUpdate(callback) {\n      this.onUpdateCallback = callback;\n    }\n  }]);\n  return CachedProvider;\n}();\nvar EagerProvider = /*#__PURE__*/_createClass(function EagerProvider(props) {\n  var _this4 = this;\n  _classCallCheck(this, EagerProvider);\n  this.props = void 0;\n  this.sendAsyncMiddleware = function (next) {\n    return function (request, callback, chainId) {\n      var id = request.id,\n        method = request.method;\n      switch (method) {\n        case 'net_version':\n          if (_this4.props.chainId) {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: id,\n              result: \"\".concat(_this4.props.chainId)\n            });\n            return;\n          }\n          break;\n        case 'eth_chainId':\n          if (_this4.props.chainId) {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: id,\n              result: ethers.utils.hexlify(_this4.props.chainId)\n            });\n            return;\n          }\n          break;\n        case 'eth_accounts':\n          if (_this4.props.accountAddress) {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: id,\n              result: [ethers.utils.getAddress(_this4.props.accountAddress)]\n            });\n            return;\n          }\n          break;\n        case 'sequence_getWalletContext':\n          if (_this4.props.walletContext) {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: id,\n              result: _this4.props.walletContext\n            });\n            return;\n          }\n          break;\n      }\n      next(request, callback, chainId);\n    };\n  };\n  this.props = props;\n});\nvar exceptionProviderMiddleware = function exceptionProviderMiddleware(next) {\n  return function (request, callback, chainId) {\n    next(request, function (error, response) {\n      if (!error && response && response.error) {\n        if (typeof response.error === 'string') {\n          throw new Error(response.error);\n        } else {\n          throw new Error(response.error.message);\n        }\n      }\n      callback(error, response);\n    }, chainId);\n  };\n};\nvar loggingProviderMiddleware = function loggingProviderMiddleware(next) {\n  return function (request, callback, chainId) {\n    var chainIdLabel = chainId ? \" chainId:\".concat(chainId) : '';\n    logger.info(\"[provider request]\".concat(chainIdLabel, \" id:\").concat(request.id, \" method:\").concat(request.method, \" params:\"), request.params);\n    next(request, function (error, response) {\n      if (error) {\n        logger.warn(\"[provider response]\".concat(chainIdLabel, \" id:\").concat(request.id, \" method:\").concat(request.method, \" params:\"), request.params, \"error:\", error);\n      } else {\n        logger.info(\"[provider response]\".concat(chainIdLabel, \" id:\").concat(request.id, \" method:\").concat(request.method, \" params:\"), request.params, \"response:\", response);\n      }\n      callback(error, response);\n    }, chainId);\n  };\n};\nvar networkProviderMiddleware = function networkProviderMiddleware(getChainId) {\n  return function (next) {\n    return function (request, callback, chainId) {\n      var networkChainId = getChainId(request);\n      var id = request.id,\n        method = request.method;\n      switch (method) {\n        case 'net_version':\n          callback(undefined, {\n            jsonrpc: '2.0',\n            id: id,\n            result: \"\".concat(networkChainId)\n          });\n          return;\n        case 'eth_chainId':\n          callback(undefined, {\n            jsonrpc: '2.0',\n            id: id,\n            result: ethers.utils.hexlify(networkChainId)\n          });\n          return;\n      } // request is allowed. keep going..\n\n      next(request, callback, chainId);\n    };\n  };\n};\nvar SignerJsonRpcMethods = ['personal_sign', 'eth_sign', 'eth_signTypedData', 'eth_signTypedData_v4', 'eth_sendTransaction', 'eth_sendRawTransaction', 'sequence_getWalletContext', 'sequence_getWalletConfig', 'sequence_getWalletState', 'sequence_getNetworks', 'sequence_updateConfig', 'sequence_publishConfig', 'sequence_estimateGasLimits', 'sequence_gasRefundOptions', 'sequence_getNonce', 'sequence_relay', 'eth_decrypt', 'eth_getEncryptionPublicKey', 'wallet_addEthereumChain', 'wallet_switchEthereumChain', 'wallet_registerOnboarding', 'wallet_watchAsset', 'wallet_scanQRCode'];\nvar SigningProvider = /*#__PURE__*/_createClass(function SigningProvider(provider) {\n  var _this5 = this;\n  _classCallCheck(this, SigningProvider);\n  this.provider = void 0;\n  this.sendAsyncMiddleware = function (next) {\n    return function (request, callback, chainId) {\n      // Forward signing requests to the signing provider\n      if (SignerJsonRpcMethods.includes(request.method)) {\n        _this5.provider.sendAsync(request, callback, chainId);\n        return;\n      } // Continue to next handler\n\n      next(request, callback, chainId);\n    };\n  };\n  this.provider = provider;\n});\nvar PublicProvider = /*#__PURE__*/function () {\n  function PublicProvider(rpcUrl) {\n    var _this6 = this;\n    _classCallCheck(this, PublicProvider);\n    this.privateJsonRpcMethods = ['net_version', 'eth_chainId', 'eth_accounts'].concat(SignerJsonRpcMethods);\n    this.provider = void 0;\n    this.rpcUrl = void 0;\n    this.sendAsyncMiddleware = function (next) {\n      return function (request, callback) {\n        // When provider is configured, send non-private methods to our local public provider\n        if (_this6.provider && !_this6.privateJsonRpcMethods.includes(request.method)) {\n          _this6.provider.send(request.method, request.params).then(function (r) {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: request.id,\n              result: r\n            });\n          }).catch(function (e) {\n            return callback(e);\n          });\n          return;\n        } // Continue to next handler\n\n        logger.debug('[public-provider] sending request to signer window', request.method);\n        next(request, callback);\n      };\n    };\n    if (rpcUrl) {\n      this.setRpcUrl(rpcUrl);\n    }\n  }\n  _createClass(PublicProvider, [{\n    key: \"getRpcUrl\",\n    value: function getRpcUrl() {\n      return this.rpcUrl;\n    }\n  }, {\n    key: \"setRpcUrl\",\n    value: function setRpcUrl(rpcUrl) {\n      if (!rpcUrl || rpcUrl === '') {\n        this.rpcUrl = undefined;\n        this.provider = undefined;\n      } else {\n        this.rpcUrl = rpcUrl;\n        this.provider = new JsonRpcProvider(rpcUrl);\n      }\n    }\n  }]);\n  return PublicProvider;\n}();\nexport { AllowProvider, CachedProvider, ChainId, EagerProvider, JsonRpcExternalProvider, JsonRpcRouter, JsonRpcSender, JsonRpcVersion, PublicProvider, SigningProvider, allowProviderMiddleware, checkNetworkConfig, createJsonRpcMiddlewareStack, createNetworkConfig, ensureUniqueNetworks, ensureValidNetworks, exceptionProviderMiddleware, findNetworkConfig, getAuthNetwork, getChainId, isJsonRpcHandler, isJsonRpcProvider, isNetworkConfig, isValidNetworkConfig, loggingProviderMiddleware, mainnetNetworks, maybeChainId, networkProviderMiddleware, networks, networksIndex, sequenceContext, sortNetworks, testnetNetworks, updateNetworkConfig };","map":{"version":3,"names":["urlClean","logger","ethers","JsonRpcProvider","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","isNetworkConfig","cand","chainId","undefined","name","rpcUrl","relayer","getChainId","BigNumber","from","toNumber","maybeChainId","getAuthNetwork","networks","find","network","isAuthChain","isValidNetworkConfig","networkConfig","raise","skipRelayerCheck","Error","configs","Array","isArray","push","chainIds","map","c","sort","dupes","filter","indexOf","forEach","toLowerCase","names","nameDupes","defaultChain","authChain","provider","isDefaultChain","ensureValidNetworks","ensureUniqueNetworks","updateNetworkConfig","src","dest","ensAddress","createNetworkConfig","defaultChainId","vars","config","n","mainNetwork","sortNetworks","findNetworkConfig","startsWith","id","checkNetworkConfig","networksIndex","index","a","b","defaultConfigIdx","findIndex","splice","authConfigIdx","ChainId","MAINNET","title","blockExplorer","rootUrl","ROPSTEN","testnet","RINKEBY","GOERLI","KOVAN","POLYGON","POLYGON_MUMBAI","BSC","BSC_TESTNET","OPTIMISM","OPTIMISM_TESTNET","ARBITRUM","ARBITRUM_TESTNET","AVALANCHE","AVALANCHE_TESTNET","FANTOM","FANTOM_TESTNET","GNOSIS","AURORA","AURORA_TESTNET","mainnetNetworks","baseRpcUrl","url","baseRelayerUrl","testnetNetworks","sequenceContext","factory","mainModule","mainModuleUpgradable","guestModule","sequenceUtils","libs","requireFreshSigner","JsonRpcVersion","JsonRpcRouter","middlewares","sender","handler","setMiddleware","createJsonRpcMiddlewareStack","sendAsync","request","callback","err","toMiddleware","v","sendAsyncMiddleware","chain","isJsonRpcProvider","send","constructor","defaultUrl","detectNetwork","getSigner","perform","isJsonRpcHandler","_nextId","JsonRpcSender","method","params","then","r","jsonrpc","result","catch","e","bind","Promise","resolve","reject","error","response","JsonRpcExternalProvider","AllowProvider","isAllowedFunc","allowProviderMiddleware","fn","isAllowed","next","CachedProvider","cachableJsonRpcMethods","cache","onUpdateCallback","includes","cacheKey","getCacheValue","setCacheValue","JSON","stringify","getCache","setCache","value","clearCache","EagerProvider","props","utils","hexlify","accountAddress","getAddress","walletContext","exceptionProviderMiddleware","message","loggingProviderMiddleware","chainIdLabel","info","warn","networkProviderMiddleware","networkChainId","SignerJsonRpcMethods","SigningProvider","PublicProvider","privateJsonRpcMethods","debug","setRpcUrl"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@0xsequence/network/dist/0xsequence-network.esm.js"],"sourcesContent":["import { urlClean, logger } from '@0xsequence/utils';\nimport { ethers } from 'ethers';\nimport { JsonRpcProvider } from '@ethersproject/providers';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction isNetworkConfig(cand) {\n  return cand && cand.chainId !== undefined && cand.name !== undefined && cand.rpcUrl !== undefined && cand.relayer !== undefined;\n}\nconst getChainId = chainId => {\n  if (typeof chainId === 'number') {\n    return chainId;\n  }\n\n  if (chainId.chainId) {\n    return chainId.chainId;\n  }\n\n  return ethers.BigNumber.from(chainId).toNumber();\n};\nconst maybeChainId = chainId => {\n  if (!chainId) return undefined;\n  return getChainId(chainId);\n};\nconst getAuthNetwork = networks => {\n  return networks.find(network => network.isAuthChain);\n};\nconst isValidNetworkConfig = (networkConfig, raise = false, skipRelayerCheck = false) => {\n  if (!networkConfig) throw new Error(`invalid network config: empty config`);\n  const configs = [];\n\n  if (Array.isArray(networkConfig)) {\n    configs.push(...networkConfig);\n  } else {\n    configs.push(networkConfig);\n  }\n\n  if (configs.length === 0) {\n    if (raise) throw new Error(`invalid network config: empty config`);\n    return false;\n  } // Ensure distinct chainId configs\n\n\n  const chainIds = configs.map(c => c.chainId).sort();\n  const dupes = chainIds.filter((c, i) => chainIds.indexOf(c) !== i);\n\n  if (dupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate chainIds ${dupes}`);\n    return false;\n  } // Downcase all network names\n\n\n  configs.forEach(c => c.name = c.name.toLowerCase()); // Ensure distinct network names\n\n  const names = configs.map(c => c.name).sort();\n  const nameDupes = names.filter((c, i) => names.indexOf(c) !== i);\n\n  if (nameDupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate network names ${nameDupes}`);\n    return false;\n  } // Ensure rpcUrl or provider is specified\n  // Ensure relayerUrl or relayer is specified\n  // Ensure one default chain\n  // Ensure one auth chain\n\n\n  let defaultChain = false;\n  let authChain = false;\n\n  for (let i = 0; i < configs.length; i++) {\n    const c = configs[i];\n\n    if ((!c.rpcUrl || c.rpcUrl === '') && !c.provider) {\n      if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: rpcUrl or provider must be provided`);\n      return false;\n    }\n\n    if (!skipRelayerCheck) {\n      if (!c.relayer) {\n        if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: relayer must be provided`);\n        return false;\n      }\n    }\n\n    if (c.isDefaultChain) {\n      if (defaultChain) {\n        if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: DefaultChain is already set by another config`);\n        return false;\n      }\n\n      defaultChain = true;\n    }\n\n    if (c.isAuthChain) {\n      if (authChain) {\n        if (raise) throw new Error(`invalid network config for chainId ${c.chainId}: AuthChain is already set by another config`);\n      }\n\n      authChain = true;\n    }\n  }\n\n  if (!defaultChain) {\n    if (raise) throw new Error(`invalid network config: DefaultChain must be set`);\n    return false;\n  }\n\n  if (!authChain) {\n    if (raise) throw new Error(`invalid network config: AuthChain must be set`);\n    return false;\n  }\n\n  return true;\n};\nconst ensureValidNetworks = (networks, skipRelayerCheck = false) => {\n  isValidNetworkConfig(networks, true, skipRelayerCheck);\n  return networks;\n};\nconst ensureUniqueNetworks = (networks, raise = true) => {\n  const chainIds = networks.map(c => c.chainId).sort();\n  const dupes = chainIds.filter((c, i) => chainIds.indexOf(c) !== i);\n\n  if (dupes.length > 0) {\n    if (raise) throw new Error(`invalid network config: duplicate chainIds ${dupes}`);\n    return false;\n  }\n\n  return true;\n};\nconst updateNetworkConfig = (src, dest) => {\n  if (!src || !dest) return;\n\n  if (!src.chainId && !src.name) {\n    throw new Error('failed to update network config: source config is missing chainId or name');\n  }\n\n  if (src.chainId !== dest.chainId && src.name !== dest.name) {\n    throw new Error('failed to update network config: one of chainId or name must match');\n  }\n\n  if (src.rpcUrl) {\n    dest.rpcUrl = src.rpcUrl;\n    dest.provider = undefined;\n  }\n\n  if (src.provider) {\n    dest.provider = src.provider;\n  }\n\n  if (src.relayer) {\n    dest.relayer = src.relayer;\n  }\n\n  if (src.ensAddress) {\n    dest.ensAddress = src.ensAddress;\n  } // NOTE: we do not set default or auth chain from here\n  // if (src.isDefaultChain) {\n  //   dest.isDefaultChain = src.isDefaultChain\n  // }\n  // if (src.isAuthChain) {\n  //   dest.isAuthChain = src.isAuthChain\n  // }\n\n};\nconst createNetworkConfig = (networks, defaultChainId, vars) => {\n  let config = [];\n\n  if (typeof networks === 'function' && vars) {\n    config = networks(vars);\n  } else {\n    config = networks;\n  }\n\n  if (defaultChainId) {\n    config.forEach(n => n.isDefaultChain = false);\n    const mainNetwork = config.filter(n => n.chainId === defaultChainId);\n\n    if (!mainNetwork || mainNetwork.length === 0) {\n      throw new Error(`defaultChainId ${defaultChainId} cannot be found in network list`);\n    } else {\n      mainNetwork[0].isDefaultChain = true;\n    }\n  }\n\n  return ensureValidNetworks(sortNetworks(config));\n};\nconst findNetworkConfig = (networks, chainId) => {\n  if (typeof chainId === 'string') {\n    if (chainId.startsWith('0x')) {\n      const id = ethers.BigNumber.from(chainId).toNumber();\n      return networks.find(n => n.chainId === id);\n    } else {\n      return networks.find(n => n.name === chainId);\n    }\n  } else if (typeof chainId === 'number') {\n    return networks.find(n => n.chainId === chainId);\n  } else if (chainId.chainId) {\n    return networks.find(n => n.chainId === chainId.chainId);\n  } else {\n    return undefined;\n  }\n};\nconst checkNetworkConfig = (network, chainId) => {\n  if (!network) return false;\n  if (network.name === chainId) return true;\n  if (network.chainId === chainId) return true;\n  return false;\n};\nconst networksIndex = networks => {\n  const index = {};\n\n  for (let i = 0; i < networks.length; i++) {\n    index[networks[i].name] = networks[i];\n  }\n\n  return index;\n}; // TODO: we should remove sortNetworks in the future but this is a breaking change for dapp integrations on older versions <-> wallet\n// sortNetworks orders the network config list by: defaultChain, authChain, ..rest by chainId ascending numbers\n\nconst sortNetworks = networks => {\n  if (!networks) {\n    return [];\n  }\n\n  const config = networks.sort((a, b) => {\n    if (a.chainId === b.chainId) return 0;\n    return a.chainId < b.chainId ? -1 : 1;\n  }); // DefaultChain goes first\n\n  const defaultConfigIdx = config.findIndex(c => c.isDefaultChain);\n  if (defaultConfigIdx > 0) config.splice(0, 0, config.splice(defaultConfigIdx, 1)[0]); // AuthChain goes second\n\n  const authConfigIdx = config.findIndex(c => c.isAuthChain && c.isDefaultChain !== true);\n  if (authConfigIdx > 0) config.splice(1, 0, config.splice(authConfigIdx, 1)[0]);\n  return config;\n};\n\nlet ChainId;\n\n(function (ChainId) {\n  ChainId[ChainId[\"MAINNET\"] = 1] = \"MAINNET\";\n  ChainId[ChainId[\"ROPSTEN\"] = 3] = \"ROPSTEN\";\n  ChainId[ChainId[\"RINKEBY\"] = 4] = \"RINKEBY\";\n  ChainId[ChainId[\"GOERLI\"] = 5] = \"GOERLI\";\n  ChainId[ChainId[\"KOVAN\"] = 42] = \"KOVAN\";\n  ChainId[ChainId[\"POLYGON\"] = 137] = \"POLYGON\";\n  ChainId[ChainId[\"POLYGON_MUMBAI\"] = 80001] = \"POLYGON_MUMBAI\";\n  ChainId[ChainId[\"BSC\"] = 56] = \"BSC\";\n  ChainId[ChainId[\"BSC_TESTNET\"] = 97] = \"BSC_TESTNET\";\n  ChainId[ChainId[\"OPTIMISM\"] = 10] = \"OPTIMISM\";\n  ChainId[ChainId[\"OPTIMISM_TESTNET\"] = 69] = \"OPTIMISM_TESTNET\";\n  ChainId[ChainId[\"ARBITRUM\"] = 42161] = \"ARBITRUM\";\n  ChainId[ChainId[\"ARBITRUM_TESTNET\"] = 421611] = \"ARBITRUM_TESTNET\";\n  ChainId[ChainId[\"AVALANCHE\"] = 43114] = \"AVALANCHE\";\n  ChainId[ChainId[\"AVALANCHE_TESTNET\"] = 43113] = \"AVALANCHE_TESTNET\";\n  ChainId[ChainId[\"FANTOM\"] = 250] = \"FANTOM\";\n  ChainId[ChainId[\"FANTOM_TESTNET\"] = 4002] = \"FANTOM_TESTNET\";\n  ChainId[ChainId[\"GNOSIS\"] = 100] = \"GNOSIS\";\n  ChainId[ChainId[\"AURORA\"] = 1313161554] = \"AURORA\";\n  ChainId[ChainId[\"AURORA_TESTNET\"] = 1313161556] = \"AURORA_TESTNET\";\n})(ChainId || (ChainId = {}));\n\nconst networks = {\n  [ChainId.MAINNET]: {\n    chainId: ChainId.MAINNET,\n    name: 'mainnet',\n    title: 'Ethereum',\n    blockExplorer: {\n      name: 'Etherscan',\n      rootUrl: 'https://etherscan.io/'\n    }\n  },\n  [ChainId.ROPSTEN]: {\n    chainId: ChainId.ROPSTEN,\n    name: 'ropsten',\n    title: 'Ropsten',\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Ropsten)',\n      rootUrl: 'https://ropsten.etherscan.io/'\n    }\n  },\n  [ChainId.RINKEBY]: {\n    chainId: ChainId.RINKEBY,\n    name: 'rinkeby',\n    title: 'Rinkeby',\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Rinkeby)',\n      rootUrl: 'https://rinkeby.etherscan.io/'\n    }\n  },\n  [ChainId.GOERLI]: {\n    chainId: ChainId.GOERLI,\n    name: 'goerli',\n    title: 'Goerli',\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Goerli)',\n      rootUrl: 'https://goerli.etherscan.io/'\n    }\n  },\n  [ChainId.KOVAN]: {\n    chainId: ChainId.KOVAN,\n    name: 'kovan',\n    title: 'Kovan',\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Kovan)',\n      rootUrl: 'https://kovan.etherscan.io/'\n    }\n  },\n  [ChainId.POLYGON]: {\n    chainId: ChainId.POLYGON,\n    name: 'polygon',\n    title: 'Polygon',\n    blockExplorer: {\n      name: 'Polygonscan',\n      rootUrl: 'https://polygonscan.com/'\n    }\n  },\n  [ChainId.POLYGON_MUMBAI]: {\n    chainId: ChainId.POLYGON_MUMBAI,\n    name: 'mumbai',\n    title: 'Polygon Mumbai',\n    testnet: true,\n    blockExplorer: {\n      name: 'Polygonscan (Mumbai)',\n      rootUrl: 'https://mumbai.polygonscan.com/'\n    }\n  },\n  [ChainId.BSC]: {\n    chainId: ChainId.BSC,\n    name: 'bsc',\n    title: 'BNB Smart Chain',\n    blockExplorer: {\n      name: 'BSCScan',\n      rootUrl: 'https://bscscan.com/'\n    }\n  },\n  [ChainId.BSC_TESTNET]: {\n    chainId: ChainId.BSC_TESTNET,\n    name: 'bsc-testnet',\n    title: 'BNB Smart Chain Testnet',\n    testnet: true,\n    blockExplorer: {\n      name: 'BSCScan (Testnet)',\n      rootUrl: 'https://testnet.bscscan.com/'\n    }\n  },\n  [ChainId.OPTIMISM]: {\n    chainId: ChainId.OPTIMISM,\n    name: 'optimism',\n    title: 'Optimism',\n    blockExplorer: {\n      name: 'Etherscan (Optimism)',\n      rootUrl: 'https://optimistic.etherscan.io/'\n    }\n  },\n  [ChainId.OPTIMISM_TESTNET]: {\n    chainId: ChainId.OPTIMISM_TESTNET,\n    name: 'optimism-testnet',\n    title: 'Optimistic Kovan',\n    testnet: true,\n    blockExplorer: {\n      name: 'Etherscan (Optimism Testnet)',\n      rootUrl: 'https://kovan-optimistic.etherscan.io/'\n    }\n  },\n  [ChainId.ARBITRUM]: {\n    chainId: ChainId.ARBITRUM,\n    name: 'arbitrum',\n    title: 'Arbitrum',\n    blockExplorer: {\n      name: 'Arbiscan',\n      rootUrl: 'https://arbiscan.io/'\n    }\n  },\n  [ChainId.ARBITRUM_TESTNET]: {\n    chainId: ChainId.ARBITRUM_TESTNET,\n    name: 'arbitrum-testnet',\n    title: 'Arbitrum Testnet',\n    testnet: true,\n    blockExplorer: {\n      name: 'Arbiscan (Testnet)',\n      rootUrl: 'https://testnet.arbiscan.io/'\n    }\n  },\n  [ChainId.AVALANCHE]: {\n    chainId: ChainId.AVALANCHE,\n    name: 'avalanche',\n    title: 'Avalanche',\n    blockExplorer: {\n      name: 'Snowtrace',\n      rootUrl: 'https://snowtrace.io/'\n    }\n  },\n  [ChainId.AVALANCHE_TESTNET]: {\n    chainId: ChainId.AVALANCHE_TESTNET,\n    name: 'avalanche-testnet',\n    title: 'Avalanche Testnet',\n    testnet: true,\n    blockExplorer: {\n      name: 'Snowtrace (Testnet)',\n      rootUrl: 'https://testnet.snowtrace.io/'\n    }\n  },\n  [ChainId.FANTOM]: {\n    chainId: ChainId.FANTOM,\n    name: 'fantom',\n    title: 'Fantom',\n    blockExplorer: {\n      name: 'FTMScan',\n      rootUrl: 'https://ftmscan.com/'\n    }\n  },\n  [ChainId.FANTOM_TESTNET]: {\n    chainId: ChainId.FANTOM_TESTNET,\n    name: 'fantom-testnet',\n    title: 'Fantom Testnet',\n    testnet: true,\n    blockExplorer: {\n      name: 'FTMScan (Testnet)',\n      rootUrl: 'https://testnet.ftmscan.com/'\n    }\n  },\n  [ChainId.GNOSIS]: {\n    chainId: ChainId.GNOSIS,\n    name: 'gnosis',\n    title: 'Gnosis Chain',\n    blockExplorer: {\n      name: 'Gnosis Chain Explorer',\n      rootUrl: 'https://blockscout.com/xdai/mainnet/'\n    }\n  },\n  [ChainId.AURORA]: {\n    chainId: ChainId.AURORA,\n    name: 'aurora',\n    title: 'Aurora',\n    blockExplorer: {\n      name: 'Aurora Explorer',\n      rootUrl: 'https://aurorascan.dev/'\n    }\n  },\n  [ChainId.AURORA_TESTNET]: {\n    chainId: ChainId.AURORA_TESTNET,\n    name: 'aurora-testnet',\n    title: 'Aurora Testnet',\n    blockExplorer: {\n      name: 'Aurora Explorer (Testnet)',\n      rootUrl: 'https://testnet.aurorascan.dev/'\n    }\n  }\n};\nconst mainnetNetworks = createNetworkConfig(vars => [_extends({}, networks[ChainId.MAINNET], {\n  ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  rpcUrl: urlClean(`${vars.baseRpcUrl}/mainnet`),\n  relayer: {\n    url: urlClean(`${vars.baseRelayerUrl}/mainnet`)\n  },\n  isDefaultChain: true\n}), _extends({}, networks[ChainId.POLYGON], {\n  rpcUrl: 'https://rpc-mainnet.matic.network',\n  relayer: {\n    url: urlClean(`${vars.baseRelayerUrl}/matic`)\n  },\n  isAuthChain: true\n})], 1, {\n  baseRpcUrl: 'https://nodes.sequence.app',\n  baseRelayerUrl: 'https://relayers.sequence.app'\n});\nconst testnetNetworks = createNetworkConfig(vars => [_extends({}, networks[ChainId.RINKEBY], {\n  ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  rpcUrl: urlClean(`${vars.baseRpcUrl}/rinkeby`),\n  relayer: {\n    url: urlClean(`${vars.baseRelayerUrl}/rinkeby`)\n  },\n  isDefaultChain: true\n}), _extends({}, networks[ChainId.GOERLI], {\n  ensAddress: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  rpcUrl: urlClean(`${vars.baseRpcUrl}/goerli`),\n  relayer: {\n    url: urlClean(`${vars.baseRelayerUrl}/goerli`)\n  },\n  isAuthChain: true\n})], undefined, {\n  baseRpcUrl: 'https://nodes.sequence.app',\n  baseRelayerUrl: 'https://relayers.sequence.app'\n});\n\n// WalletContext is the module addresses deployed on a network, aka the context / environment\n// of the Sequence Smart Wallet system on Ethereum.\n// sequenceContext are the deployed addresses of modules available on public networks.\nconst sequenceContext = {\n  factory: '0xf9D09D634Fb818b05149329C1dcCFAeA53639d96',\n  mainModule: '0xd01F11855bCcb95f88D7A48492F66410d4637313',\n  mainModuleUpgradable: '0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118',\n  guestModule: '0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7',\n  sequenceUtils: '0xd130B43062D875a4B7aF3f8fc036Bc6e9D3E1B3E',\n  libs: {\n    requireFreshSigner: '0xE6B9B21C077F382333220a072e4c44280b873907'\n  }\n};\n\nconst JsonRpcVersion = '2.0';\n\nclass JsonRpcRouter {\n  constructor(middlewares, sender) {\n    this.sender = void 0;\n    this.handler = void 0;\n    this.sender = sender;\n\n    if (middlewares) {\n      this.setMiddleware(middlewares);\n    }\n  }\n\n  setMiddleware(middlewares) {\n    this.handler = createJsonRpcMiddlewareStack(middlewares, this.sender.sendAsync);\n  }\n\n  sendAsync(request, callback, chainId) {\n    try {\n      this.handler(request, callback, chainId);\n    } catch (err) {\n      callback(err, undefined);\n    }\n  } // createWeb3Provider(network?: Networkish): EthersWeb3Provider {\n  //   return new EthersWeb3Provider(this.sender, network)\n  // }\n\n\n}\nconst createJsonRpcMiddlewareStack = (middlewares, handler) => {\n  if (middlewares.length === 0) return handler;\n\n  const toMiddleware = v => {\n    if (v.sendAsyncMiddleware) {\n      return v.sendAsyncMiddleware;\n    } else {\n      return v;\n    }\n  };\n\n  let chain;\n  chain = toMiddleware(middlewares[middlewares.length - 1])(handler);\n\n  for (let i = middlewares.length - 2; i >= 0; i--) {\n    chain = toMiddleware(middlewares[i])(chain);\n  }\n\n  return chain;\n};\n\nfunction isJsonRpcProvider(cand) {\n  return cand !== undefined && cand.send !== undefined && cand.constructor.defaultUrl !== undefined && cand.detectNetwork !== undefined && cand.getSigner !== undefined && cand.perform !== undefined;\n}\nfunction isJsonRpcHandler(cand) {\n  return cand !== undefined && cand.sendAsync !== undefined;\n}\n\nlet _nextId = 0;\nclass JsonRpcSender {\n  constructor(provider, defaultChainId) {\n    this.send = void 0;\n    this.request = void 0;\n    this.defaultChainId = void 0;\n\n    this.sendAsync = (request, callback, chainId) => {\n      this.send(request.method, request.params, chainId || this.defaultChainId).then(r => {\n        callback(undefined, {\n          jsonrpc: '2.0',\n          id: request.id,\n          result: r\n        });\n      }).catch(e => {\n        callback(e, undefined);\n      });\n    };\n\n    this.defaultChainId = defaultChainId;\n\n    if (isJsonRpcProvider(provider)) {\n      // we can ignore defaultChainId for JsonRpcProviders as they are already chain-bound\n      this.send = provider.send.bind(provider);\n    } else if (isJsonRpcHandler(provider)) {\n      this.send = (method, params, chainId) => {\n        return new Promise((resolve, reject) => {\n          provider.sendAsync({\n            // TODO: really shouldn't have to set these here?\n            jsonrpc: JsonRpcVersion,\n            id: ++_nextId,\n            method,\n            params\n          }, (error, response) => {\n            if (error) {\n              reject(error);\n            } else if (response) {\n              resolve(response.result);\n            } else {\n              resolve(undefined);\n            }\n          }, chainId || this.defaultChainId);\n        });\n      };\n    } else {\n      this.send = provider;\n    }\n\n    this.request = (request, chainId) => {\n      return this.send(request.method, request.params, chainId);\n    };\n  }\n\n}\nclass JsonRpcExternalProvider {\n  constructor(provider) {\n    this.provider = provider;\n\n    this.sendAsync = (request, callback) => {\n      this.provider.send(request.method, request.params).then(r => {\n        callback(undefined, {\n          jsonrpc: '2.0',\n          id: request.id,\n          result: r\n        });\n      }).catch(e => {\n        callback(e, undefined);\n      });\n    };\n\n    this.send = this.sendAsync;\n  }\n\n}\n\nclass AllowProvider {\n  constructor(isAllowedFunc) {\n    this.sendAsyncMiddleware = void 0;\n    this.isAllowedFunc = void 0;\n\n    if (isAllowedFunc) {\n      this.isAllowedFunc = isAllowedFunc;\n    } else {\n      this.isAllowedFunc = request => true;\n    }\n\n    this.sendAsyncMiddleware = allowProviderMiddleware(this.isAllowedFunc);\n  }\n\n  setIsAllowedFunc(fn) {\n    this.isAllowedFunc = fn;\n    this.sendAsyncMiddleware = allowProviderMiddleware(this.isAllowedFunc);\n  }\n\n}\nconst allowProviderMiddleware = isAllowed => next => {\n  return (request, callback, chainId) => {\n    // ensure precondition is met or do not allow the request to continue\n    if (!isAllowed(request)) {\n      throw new Error('allowProvider middleware precondition is unmet.');\n    } // request is allowed. keep going..\n\n\n    next(request, callback, chainId);\n  };\n};\n\nclass CachedProvider {\n  constructor(defaultChainId) {\n    this.cachableJsonRpcMethods = ['net_version', 'eth_chainId', 'eth_accounts', 'sequence_getWalletContext', 'sequence_getNetworks'];\n    this.cache = void 0;\n    this.onUpdateCallback = void 0;\n    this.defaultChainId = void 0;\n\n    this.sendAsyncMiddleware = next => {\n      return (request, callback, chainId) => {\n        // Respond early with cached result\n        if (this.cachableJsonRpcMethods.includes(request.method)) {\n          const key = this.cacheKey(request.method, request.params, chainId || this.defaultChainId);\n          const result = this.getCacheValue(key);\n\n          if (result && result !== '') {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: request.id,\n              result: result\n            });\n            return;\n          }\n        } // Continue down the handler chain\n\n\n        next(request, (error, response, chainId) => {\n          // Store result in cache and continue\n          if (this.cachableJsonRpcMethods.includes(request.method)) {\n            if (response && response.result) {\n              const key = this.cacheKey(request.method, request.params, chainId || this.defaultChainId);\n              this.setCacheValue(key, response.result);\n            }\n          } // Exec next handler\n\n\n          callback(error, response);\n        }, chainId || this.defaultChainId);\n      };\n    };\n\n    this.cacheKey = (method, params, chainId) => {\n      let key = '';\n\n      if (chainId) {\n        key = `${chainId}:${method}:`;\n      } else {\n        key = `:${method}:`;\n      }\n\n      if (!params || params.length === 0) {\n        return key + '[]';\n      }\n\n      return key + JSON.stringify(params);\n    };\n\n    this.getCache = () => this.cache;\n\n    this.setCache = cache => {\n      this.cache = cache;\n\n      if (this.onUpdateCallback) {\n        this.onUpdateCallback();\n      }\n    };\n\n    this.getCacheValue = key => {\n      return this.cache[key];\n    };\n\n    this.setCacheValue = (key, value) => {\n      this.cache[key] = value;\n\n      if (this.onUpdateCallback) {\n        this.onUpdateCallback(key, value);\n      }\n    };\n\n    this.clearCache = () => {\n      this.cache = {};\n    };\n\n    this.cache = {};\n    this.defaultChainId = defaultChainId;\n  }\n\n  onUpdate(callback) {\n    this.onUpdateCallback = callback;\n  }\n\n}\n\nclass EagerProvider {\n  constructor(props) {\n    this.props = void 0;\n\n    this.sendAsyncMiddleware = next => {\n      return (request, callback, chainId) => {\n        const {\n          id,\n          method\n        } = request;\n\n        switch (method) {\n          case 'net_version':\n            if (this.props.chainId) {\n              callback(undefined, {\n                jsonrpc: '2.0',\n                id: id,\n                result: `${this.props.chainId}`\n              });\n              return;\n            }\n\n            break;\n\n          case 'eth_chainId':\n            if (this.props.chainId) {\n              callback(undefined, {\n                jsonrpc: '2.0',\n                id: id,\n                result: ethers.utils.hexlify(this.props.chainId)\n              });\n              return;\n            }\n\n            break;\n\n          case 'eth_accounts':\n            if (this.props.accountAddress) {\n              callback(undefined, {\n                jsonrpc: '2.0',\n                id: id,\n                result: [ethers.utils.getAddress(this.props.accountAddress)]\n              });\n              return;\n            }\n\n            break;\n\n          case 'sequence_getWalletContext':\n            if (this.props.walletContext) {\n              callback(undefined, {\n                jsonrpc: '2.0',\n                id: id,\n                result: this.props.walletContext\n              });\n              return;\n            }\n\n            break;\n        }\n\n        next(request, callback, chainId);\n      };\n    };\n\n    this.props = props;\n  }\n\n}\n\nconst exceptionProviderMiddleware = next => {\n  return (request, callback, chainId) => {\n    next(request, (error, response) => {\n      if (!error && response && response.error) {\n        if (typeof response.error === 'string') {\n          throw new Error(response.error);\n        } else {\n          throw new Error(response.error.message);\n        }\n      }\n\n      callback(error, response);\n    }, chainId);\n  };\n};\n\nconst loggingProviderMiddleware = next => {\n  return (request, callback, chainId) => {\n    const chainIdLabel = chainId ? ` chainId:${chainId}` : '';\n    logger.info(`[provider request]${chainIdLabel} id:${request.id} method:${request.method} params:`, request.params);\n    next(request, (error, response) => {\n      if (error) {\n        logger.warn(`[provider response]${chainIdLabel} id:${request.id} method:${request.method} params:`, request.params, `error:`, error);\n      } else {\n        logger.info(`[provider response]${chainIdLabel} id:${request.id} method:${request.method} params:`, request.params, `response:`, response);\n      }\n\n      callback(error, response);\n    }, chainId);\n  };\n};\n\nconst networkProviderMiddleware = getChainId => next => {\n  return (request, callback, chainId) => {\n    const networkChainId = getChainId(request);\n    const {\n      id,\n      method\n    } = request;\n\n    switch (method) {\n      case 'net_version':\n        callback(undefined, {\n          jsonrpc: '2.0',\n          id: id,\n          result: `${networkChainId}`\n        });\n        return;\n\n      case 'eth_chainId':\n        callback(undefined, {\n          jsonrpc: '2.0',\n          id: id,\n          result: ethers.utils.hexlify(networkChainId)\n        });\n        return;\n    } // request is allowed. keep going..\n\n\n    next(request, callback, chainId);\n  };\n};\n\nconst SignerJsonRpcMethods = ['personal_sign', 'eth_sign', 'eth_signTypedData', 'eth_signTypedData_v4', 'eth_sendTransaction', 'eth_sendRawTransaction', 'sequence_getWalletContext', 'sequence_getWalletConfig', 'sequence_getWalletState', 'sequence_getNetworks', 'sequence_updateConfig', 'sequence_publishConfig', 'sequence_estimateGasLimits', 'sequence_gasRefundOptions', 'sequence_getNonce', 'sequence_relay', 'eth_decrypt', 'eth_getEncryptionPublicKey', 'wallet_addEthereumChain', 'wallet_switchEthereumChain', 'wallet_registerOnboarding', 'wallet_watchAsset', 'wallet_scanQRCode'];\nclass SigningProvider {\n  constructor(provider) {\n    this.provider = void 0;\n\n    this.sendAsyncMiddleware = next => {\n      return (request, callback, chainId) => {\n        // Forward signing requests to the signing provider\n        if (SignerJsonRpcMethods.includes(request.method)) {\n          this.provider.sendAsync(request, callback, chainId);\n          return;\n        } // Continue to next handler\n\n\n        next(request, callback, chainId);\n      };\n    };\n\n    this.provider = provider;\n  }\n\n}\n\nclass PublicProvider {\n  constructor(rpcUrl) {\n    this.privateJsonRpcMethods = ['net_version', 'eth_chainId', 'eth_accounts', ...SignerJsonRpcMethods];\n    this.provider = void 0;\n    this.rpcUrl = void 0;\n\n    this.sendAsyncMiddleware = next => {\n      return (request, callback) => {\n        // When provider is configured, send non-private methods to our local public provider\n        if (this.provider && !this.privateJsonRpcMethods.includes(request.method)) {\n          this.provider.send(request.method, request.params).then(r => {\n            callback(undefined, {\n              jsonrpc: '2.0',\n              id: request.id,\n              result: r\n            });\n          }).catch(e => callback(e));\n          return;\n        } // Continue to next handler\n\n\n        logger.debug('[public-provider] sending request to signer window', request.method);\n        next(request, callback);\n      };\n    };\n\n    if (rpcUrl) {\n      this.setRpcUrl(rpcUrl);\n    }\n  }\n\n  getRpcUrl() {\n    return this.rpcUrl;\n  }\n\n  setRpcUrl(rpcUrl) {\n    if (!rpcUrl || rpcUrl === '') {\n      this.rpcUrl = undefined;\n      this.provider = undefined;\n    } else {\n      this.rpcUrl = rpcUrl;\n      this.provider = new JsonRpcProvider(rpcUrl);\n    }\n  }\n\n}\n\nexport { AllowProvider, CachedProvider, ChainId, EagerProvider, JsonRpcExternalProvider, JsonRpcRouter, JsonRpcSender, JsonRpcVersion, PublicProvider, SigningProvider, allowProviderMiddleware, checkNetworkConfig, createJsonRpcMiddlewareStack, createNetworkConfig, ensureUniqueNetworks, ensureValidNetworks, exceptionProviderMiddleware, findNetworkConfig, getAuthNetwork, getChainId, isJsonRpcHandler, isJsonRpcProvider, isNetworkConfig, isValidNetworkConfig, loggingProviderMiddleware, mainnetNetworks, maybeChainId, networkProviderMiddleware, networks, networksIndex, sequenceContext, sortNetworks, testnetNetworks, updateNetworkConfig };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}