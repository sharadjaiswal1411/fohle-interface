{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { log } from '../util/log';\n/**\n * Provider for getting gas price, with functionality for caching the results.\n *\n * @export\n * @class CachingV3SubgraphProvider\n */\nexport var CachingGasStationProvider = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of CachingGasStationProvider.\n   * @param chainId The chain id to use.\n   * @param gasPriceProvider The provider to use to get the gas price when not in the cache.\n   * @param cache Cache instance to hold cached pools.\n   */\n  function CachingGasStationProvider(chainId, gasPriceProvider, cache) {\n    _classCallCheck(this, CachingGasStationProvider);\n    this.chainId = chainId;\n    this.gasPriceProvider = gasPriceProvider;\n    this.cache = cache;\n    this.GAS_KEY = function (chainId) {\n      return \"gasPrice-\".concat(chainId);\n    };\n  }\n  _createClass(CachingGasStationProvider, [{\n    key: \"getGasPrice\",\n    value: function () {\n      var _getGasPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var cachedGasPrice, gasPrice;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.cache.get(this.GAS_KEY(this.chainId));\n              case 2:\n                cachedGasPrice = _context.sent;\n                if (!cachedGasPrice) {\n                  _context.next = 6;\n                  break;\n                }\n                log.info({\n                  cachedGasPrice: cachedGasPrice\n                }, \"Got gas station price from local cache: \".concat(cachedGasPrice.gasPriceWei, \".\"));\n                return _context.abrupt(\"return\", cachedGasPrice);\n              case 6:\n                log.info('Gas station price local cache miss.');\n                _context.next = 9;\n                return this.gasPriceProvider.getGasPrice();\n              case 9:\n                gasPrice = _context.sent;\n                _context.next = 12;\n                return this.cache.set(this.GAS_KEY(this.chainId), gasPrice);\n              case 12:\n                return _context.abrupt(\"return\", gasPrice);\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getGasPrice() {\n        return _getGasPrice.apply(this, arguments);\n      }\n      return getGasPrice;\n    }()\n  }]);\n  return CachingGasStationProvider;\n}();","map":{"version":3,"sources":["../../../src/providers/caching-gas-provider.ts"],"names":[],"mappings":";;;;AACA,SAAS,GAAG,QAAQ,aAAa;AAKjC;;;;;AAKG;AACH,WAAa,yBAAyB;EAGpC;;;;;AAKG;EACH,mCACY,OAAgB,EAClB,gBAAmC,EACnC,KAAuB,EAAA;IAAA;IAFrB,IAAA,CAAA,OAAO,GAAP,OAAO;IACT,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB;IAChB,IAAA,CAAA,KAAK,GAAL,KAAK;IAXP,IAAA,CAAA,OAAO,GAAG,UAAC,OAAgB;MAAA,0BAAiB,OAAO;IAAA,CAAE;EAY1D;EAAC;IAAA;IAAA;MAAA,4EAEG;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACwB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;cAAA;gBAAjE,cAAc;gBAAA,KAEhB,cAAc;kBAAA;kBAAA;gBAAA;gBAChB,GAAG,CAAC,IAAI,CACN;kBAAE,cAAc,EAAd;gBAAc,CAAE,oDACyB,cAAc,CAAC,WAAW,OACtE;gBAAC,iCAEK,cAAc;cAAA;gBAGvB,GAAG,CAAC,IAAI,CAAC,qCAAqC,CAAC;gBAAC;gBAAA,OACzB,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;cAAA;gBAApD,QAAQ;gBAAA;gBAAA,OACR,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC;cAAA;gBAAA,iCAEnD,QAAQ;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAChB;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;EAAA;AAAA","sourceRoot":"","sourcesContent":["import { log } from '../util/log';\n/**\n * Provider for getting gas price, with functionality for caching the results.\n *\n * @export\n * @class CachingV3SubgraphProvider\n */\nexport class CachingGasStationProvider {\n    /**\n     * Creates an instance of CachingGasStationProvider.\n     * @param chainId The chain id to use.\n     * @param gasPriceProvider The provider to use to get the gas price when not in the cache.\n     * @param cache Cache instance to hold cached pools.\n     */\n    constructor(chainId, gasPriceProvider, cache) {\n        this.chainId = chainId;\n        this.gasPriceProvider = gasPriceProvider;\n        this.cache = cache;\n        this.GAS_KEY = (chainId) => `gasPrice-${chainId}`;\n    }\n    async getGasPrice() {\n        const cachedGasPrice = await this.cache.get(this.GAS_KEY(this.chainId));\n        if (cachedGasPrice) {\n            log.info({ cachedGasPrice }, `Got gas station price from local cache: ${cachedGasPrice.gasPriceWei}.`);\n            return cachedGasPrice;\n        }\n        log.info('Gas station price local cache miss.');\n        const gasPrice = await this.gasPriceProvider.getGasPrice();\n        await this.cache.set(this.GAS_KEY(this.chainId), gasPrice);\n        return gasPrice;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1nYXMtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2NhY2hpbmctZ2FzLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFLbEM7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQXlCO0lBR3BDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNsQixnQkFBbUMsRUFDbkMsS0FBdUI7UUFGckIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNsQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQW1CO1FBQ25DLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBWHpCLFlBQU8sR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRSxDQUFDLFlBQVksT0FBTyxFQUFFLENBQUM7SUFZM0QsQ0FBQztJQUVHLEtBQUssQ0FBQyxXQUFXO1FBQ3RCLE1BQU0sY0FBYyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUV4RSxJQUFJLGNBQWMsRUFBRTtZQUNsQixHQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsY0FBYyxFQUFFLEVBQ2xCLDJDQUEyQyxjQUFjLENBQUMsV0FBVyxHQUFHLENBQ3pFLENBQUM7WUFFRixPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUNoRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzRCxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRTNELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}