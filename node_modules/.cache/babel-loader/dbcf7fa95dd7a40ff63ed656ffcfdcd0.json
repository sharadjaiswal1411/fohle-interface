{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$(),\n  _s18 = $RefreshSig$(),\n  _s19 = $RefreshSig$();\nimport { i18n } from \"@lingui/core\";\nimport { defaultAbiCoder, Interface } from '@ethersproject/abi';\nimport { isAddress } from '@ethersproject/address';\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings';\n// eslint-disable-next-line no-restricted-imports\n\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json';\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json';\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport { useWeb3React } from '@web3-react/core';\nimport GOVERNOR_BRAVO_ABI from 'abis/governor-bravo.json';\nimport { GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_BRAVO_ADDRESSES } from 'constants/addresses';\nimport { LATEST_GOVERNOR_INDEX } from 'constants/governance';\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title';\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description';\nimport { useContract } from 'hooks/useContract';\nimport { useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall';\nimport { useCallback, useMemo } from 'react';\nimport { calculateGasMargin } from 'utils/calculateGasMargin';\nimport { SupportedChainId } from '../../constants/chains';\nimport { BRAVO_START_BLOCK, MOONBEAN_START_BLOCK, ONE_BIP_START_BLOCK, POLYGON_START_BLOCK, UNISWAP_GRANTS_START_BLOCK } from '../../constants/proposals';\nimport { UNI } from '../../constants/tokens';\nimport { useLogs } from '../logs/hooks';\nimport { useTransactionAdder } from '../transactions/hooks';\nimport { TransactionType } from '../transactions/types';\nimport { VoteOption } from './types';\nfunction useGovernanceV0Contract() {\n  _s();\n  return useContract(GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ABI, false);\n}\n_s(useGovernanceV0Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\nfunction useGovernanceV1Contract() {\n  _s2();\n  return useContract(GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_ABI, false);\n}\n_s2(useGovernanceV1Contract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\nfunction useGovernanceBravoContract() {\n  _s3();\n  return useContract(GOVERNANCE_BRAVO_ADDRESSES, GOVERNOR_BRAVO_ABI, true);\n}\n_s3(useGovernanceBravoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\nconst useLatestGovernanceContract = useGovernanceBravoContract;\nfunction useUniContract() {\n  _s4();\n  const {\n    chainId\n  } = useWeb3React();\n  const uniAddress = useMemo(() => {\n    var _UNI$chainId;\n    return chainId ? (_UNI$chainId = UNI[chainId]) === null || _UNI$chainId === void 0 ? void 0 : _UNI$chainId.address : undefined;\n  }, [chainId]);\n  return useContract(uniAddress, UNI_ABI, true);\n}\n_s4(useUniContract, \"LMY8NTf2Vaa4FK7v/fcXNh/eQbE=\", false, function () {\n  return [useWeb3React, useContract];\n});\nexport let ProposalState;\n(function (ProposalState) {\n  ProposalState[ProposalState[\"UNDETERMINED\"] = -1] = \"UNDETERMINED\";\n  ProposalState[ProposalState[\"PENDING\"] = 0] = \"PENDING\";\n  ProposalState[ProposalState[\"ACTIVE\"] = 1] = \"ACTIVE\";\n  ProposalState[ProposalState[\"CANCELED\"] = 2] = \"CANCELED\";\n  ProposalState[ProposalState[\"DEFEATED\"] = 3] = \"DEFEATED\";\n  ProposalState[ProposalState[\"SUCCEEDED\"] = 4] = \"SUCCEEDED\";\n  ProposalState[ProposalState[\"QUEUED\"] = 5] = \"QUEUED\";\n  ProposalState[ProposalState[\"EXPIRED\"] = 6] = \"EXPIRED\";\n  ProposalState[ProposalState[\"EXECUTED\"] = 7] = \"EXECUTED\";\n})(ProposalState || (ProposalState = {}));\nconst GovernanceInterface = new Interface(GOVERNANCE_ABI);\n\n// get count of all proposals made in the latest governor contract\nfunction useProposalCount(contract) {\n  _s5();\n  var _result$;\n  const {\n    result\n  } = useSingleCallResult(contract, 'proposalCount');\n  return result === null || result === void 0 ? void 0 : (_result$ = result[0]) === null || _result$ === void 0 ? void 0 : _result$.toNumber();\n}\n_s5(useProposalCount, \"NTxwZxkjXTi1EZcYu00rh8WMff0=\", false, function () {\n  return [useSingleCallResult];\n});\nconst FOUR_BYTES_DIR = {\n  '0x5ef2c7f0': 'setSubnodeRecord(bytes32,bytes32,address,address,uint64)',\n  '0x10f13a8c': 'setText(bytes32,string,string)',\n  '0xb4720477': 'sendMessageToChild(address,bytes)',\n  '0xa9059cbb': 'transfer(address,uint256)',\n  '0x095ea7b3': 'approve(address,uint256)',\n  '0x7b1837de': 'fund(address,uint256)'\n};\n\n/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */\nfunction useFormattedProposalCreatedLogs(contract, indices, fromBlock, toBlock) {\n  _s6();\n  // create filters for ProposalCreated events\n  const filter = useMemo(() => {\n    var _contract$filters;\n    const filter = contract === null || contract === void 0 ? void 0 : (_contract$filters = contract.filters) === null || _contract$filters === void 0 ? void 0 : _contract$filters.ProposalCreated();\n    if (!filter) return undefined;\n    return {\n      ...filter,\n      fromBlock,\n      toBlock\n    };\n  }, [contract, fromBlock, toBlock]);\n  const useLogsResult = useLogs(filter);\n  return useMemo(() => {\n    var _useLogsResult$logs, _useLogsResult$logs$m, _useLogsResult$logs$m2;\n    return useLogsResult === null || useLogsResult === void 0 ? void 0 : (_useLogsResult$logs = useLogsResult.logs) === null || _useLogsResult$logs === void 0 ? void 0 : (_useLogsResult$logs$m = _useLogsResult$logs.map(log => {\n      const parsed = GovernanceInterface.parseLog(log).args;\n      return parsed;\n    })) === null || _useLogsResult$logs$m === void 0 ? void 0 : (_useLogsResult$logs$m2 = _useLogsResult$logs$m.filter(parsed => indices.flat().some(i => i === parsed.id.toNumber()))) === null || _useLogsResult$logs$m2 === void 0 ? void 0 : _useLogsResult$logs$m2.map(parsed => {\n      var _parsed$startBlock;\n      let description;\n      const startBlock = parseInt((_parsed$startBlock = parsed.startBlock) === null || _parsed$startBlock === void 0 ? void 0 : _parsed$startBlock.toString());\n      try {\n        description = parsed.description;\n      } catch (error) {\n        // replace invalid UTF-8 in the description with replacement characters\n        let onError = Utf8ErrorFuncs.replace;\n\n        // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\n        if (startBlock === BRAVO_START_BLOCK) {\n          const U2018 = [0xe2, 0x80, 0x98].toString();\n          const U2026 = [0xe2, 0x80, 0xa6].toString();\n          onError = (reason, offset, bytes, output) => {\n            if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n              const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString();\n              if (charCode === U2018) {\n                output.push(0x2018);\n                return 2;\n              } else if (charCode === U2026) {\n                output.push(0x2026);\n                return 2;\n              }\n            }\n            return Utf8ErrorFuncs.replace(reason, offset, bytes, output);\n          };\n        }\n        description = JSON.parse(toUtf8String(error.error.value, onError)) || '';\n      }\n\n      // some proposals omit newlines\n      if (startBlock === BRAVO_START_BLOCK || startBlock === ONE_BIP_START_BLOCK || startBlock === MOONBEAN_START_BLOCK) {\n        description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&');\n      }\n      return {\n        description,\n        details: parsed.targets.map((target, i) => {\n          const signature = parsed.signatures[i];\n          let calldata = parsed.calldatas[i];\n          let name;\n          let types;\n          if (signature === '') {\n            var _FOUR_BYTES_DIR$fourb;\n            const fourbyte = calldata.slice(0, 10);\n            const sig = (_FOUR_BYTES_DIR$fourb = FOUR_BYTES_DIR[fourbyte]) !== null && _FOUR_BYTES_DIR$fourb !== void 0 ? _FOUR_BYTES_DIR$fourb : 'UNKNOWN()';\n            if (!sig) throw new Error('Missing four byte sig');\n            [name, types] = sig.substring(0, sig.length - 1).split('(');\n            calldata = `0x${calldata.slice(10)}`;\n          } else {\n            ;\n            [name, types] = signature.substring(0, signature.length - 1).split('(');\n          }\n          const decoded = defaultAbiCoder.decode(types.split(','), calldata);\n          return {\n            target,\n            functionSig: name,\n            callData: decoded.join(', ')\n          };\n        })\n      };\n    });\n  }, [indices, useLogsResult]);\n}\n_s6(useFormattedProposalCreatedLogs, \"87VzP9ENkLkhHlnTplROMDmpLUQ=\", false, function () {\n  return [useLogs];\n});\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]];\nconst V1_PROPOSAL_IDS = [[1], [2], [3]];\nfunction countToIndices(count) {\n  let skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : [];\n}\n\n// get data for all past and active proposals\nexport function useAllProposalData() {\n  _s7();\n  const {\n    chainId\n  } = useWeb3React();\n  const gov0 = useGovernanceV0Contract();\n  const gov1 = useGovernanceV1Contract();\n  const gov2 = useGovernanceBravoContract();\n  const proposalCount0 = useProposalCount(gov0);\n  const proposalCount1 = useProposalCount(gov1);\n  const proposalCount2 = useProposalCount(gov2);\n  const gov0ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0);\n  }, [chainId, proposalCount0]);\n  const gov1ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1);\n  }, [chainId, proposalCount1]);\n  const gov2ProposalIndexes = useMemo(() => {\n    return countToIndices(proposalCount2, 8);\n  }, [proposalCount2]);\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes);\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes);\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes);\n\n  // get all proposal states\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes);\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes);\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes);\n\n  // get metadata from past events\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes, 11042287, 12563484);\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes, 12686656, 13059343);\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes, 13538153);\n  const uni = useMemo(() => chainId ? UNI[chainId] : undefined, [chainId]);\n\n  // early return until events are fetched\n  return useMemo(() => {\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2];\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2];\n    const formattedLogs = [...(formattedLogsV0 !== null && formattedLogsV0 !== void 0 ? formattedLogsV0 : []), ...(formattedLogsV1 !== null && formattedLogsV1 !== void 0 ? formattedLogsV1 : []), ...(formattedLogsV2 !== null && formattedLogsV2 !== void 0 ? formattedLogsV2 : [])];\n    if (!uni || proposalsCallData.some(p => p.loading) || proposalStatesCallData.some(p => p.loading) || gov0 && !formattedLogsV0 || gov1 && !formattedLogsV1 || gov2 && !formattedLogsV2) {\n      return {\n        data: [],\n        loading: true\n      };\n    }\n    return {\n      data: proposalsCallData.map((proposal, i) => {\n        var _proposal$result, _proposal$result$star, _formattedLogs$i$desc, _formattedLogs$i, _description, _proposal$result2, _title, _description2, _proposal$result3, _proposalStatesCallDa, _proposalStatesCallDa2, _proposalStatesCallDa3, _proposal$result4, _proposal$result5, _proposal$result6, _proposal$result6$end, _proposal$result7, _formattedLogs$i2;\n        const startBlock = parseInt(proposal === null || proposal === void 0 ? void 0 : (_proposal$result = proposal.result) === null || _proposal$result === void 0 ? void 0 : (_proposal$result$star = _proposal$result.startBlock) === null || _proposal$result$star === void 0 ? void 0 : _proposal$result$star.toString());\n        let description = (_formattedLogs$i$desc = (_formattedLogs$i = formattedLogs[i]) === null || _formattedLogs$i === void 0 ? void 0 : _formattedLogs$i.description) !== null && _formattedLogs$i$desc !== void 0 ? _formattedLogs$i$desc : '';\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION;\n        }\n        let title = (_description = description) === null || _description === void 0 ? void 0 : _description.split(/#+\\s|\\n/g)[1];\n        if (startBlock === POLYGON_START_BLOCK) {\n          title = POLYGON_PROPOSAL_TITLE;\n        }\n        return {\n          id: proposal === null || proposal === void 0 ? void 0 : (_proposal$result2 = proposal.result) === null || _proposal$result2 === void 0 ? void 0 : _proposal$result2.id.toString(),\n          title: (_title = title) !== null && _title !== void 0 ? _title : /*i18n*/i18n._(\"Untitled\"),\n          description: (_description2 = description) !== null && _description2 !== void 0 ? _description2 : /*i18n*/i18n._(\"No description.\"),\n          proposer: proposal === null || proposal === void 0 ? void 0 : (_proposal$result3 = proposal.result) === null || _proposal$result3 === void 0 ? void 0 : _proposal$result3.proposer,\n          status: (_proposalStatesCallDa = (_proposalStatesCallDa2 = proposalStatesCallData[i]) === null || _proposalStatesCallDa2 === void 0 ? void 0 : (_proposalStatesCallDa3 = _proposalStatesCallDa2.result) === null || _proposalStatesCallDa3 === void 0 ? void 0 : _proposalStatesCallDa3[0]) !== null && _proposalStatesCallDa !== void 0 ? _proposalStatesCallDa : ProposalState.UNDETERMINED,\n          forCount: CurrencyAmount.fromRawAmount(uni, proposal === null || proposal === void 0 ? void 0 : (_proposal$result4 = proposal.result) === null || _proposal$result4 === void 0 ? void 0 : _proposal$result4.forVotes),\n          againstCount: CurrencyAmount.fromRawAmount(uni, proposal === null || proposal === void 0 ? void 0 : (_proposal$result5 = proposal.result) === null || _proposal$result5 === void 0 ? void 0 : _proposal$result5.againstVotes),\n          startBlock,\n          endBlock: parseInt(proposal === null || proposal === void 0 ? void 0 : (_proposal$result6 = proposal.result) === null || _proposal$result6 === void 0 ? void 0 : (_proposal$result6$end = _proposal$result6.endBlock) === null || _proposal$result6$end === void 0 ? void 0 : _proposal$result6$end.toString()),\n          eta: proposal === null || proposal === void 0 ? void 0 : (_proposal$result7 = proposal.result) === null || _proposal$result7 === void 0 ? void 0 : _proposal$result7.eta,\n          details: (_formattedLogs$i2 = formattedLogs[i]) === null || _formattedLogs$i2 === void 0 ? void 0 : _formattedLogs$i2.details,\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0\n        };\n      }),\n      loading: false\n    };\n  }, [formattedLogsV0, formattedLogsV1, formattedLogsV2, gov0, gov1, gov2, proposalStatesV0, proposalStatesV1, proposalStatesV2, proposalsV0, proposalsV1, proposalsV2, uni]);\n}\n_s7(useAllProposalData, \"YR+T9eMqkaOTC+L+brfjMaAnPo4=\", false, function () {\n  return [useWeb3React, useGovernanceV0Contract, useGovernanceV1Contract, useGovernanceBravoContract, useProposalCount, useProposalCount, useProposalCount, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useSingleContractMultipleData, useFormattedProposalCreatedLogs, useFormattedProposalCreatedLogs, useFormattedProposalCreatedLogs];\n});\nexport function useProposalData(governorIndex, id) {\n  _s8();\n  var _data$filter;\n  const {\n    data\n  } = useAllProposalData();\n  return (_data$filter = data.filter(p => p.governorIndex === governorIndex)) === null || _data$filter === void 0 ? void 0 : _data$filter.find(p => p.id === id);\n}\n_s8(useProposalData, \"2T3Fjp+LBa2ObShRgnDSChorH98=\", false, function () {\n  return [useAllProposalData];\n});\nexport function useQuorum(governorIndex) {\n  _s9();\n  var _useSingleCallResult, _useSingleCallResult$;\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const quorumVotes = (_useSingleCallResult = useSingleCallResult(latestGovernanceContract, 'quorumVotes')) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : _useSingleCallResult$[0];\n  const {\n    chainId\n  } = useWeb3React();\n  const uni = useMemo(() => chainId ? UNI[chainId] : undefined, [chainId]);\n  if (!latestGovernanceContract || !quorumVotes || chainId !== SupportedChainId.MAINNET || !uni || governorIndex !== LATEST_GOVERNOR_INDEX) return undefined;\n  return CurrencyAmount.fromRawAmount(uni, quorumVotes);\n}\n\n// get the users delegatee if it exists\n_s9(useQuorum, \"9Mtyljm2qMx3o0YSV6f6QbNh5RY=\", false, function () {\n  return [useLatestGovernanceContract, useSingleCallResult, useWeb3React];\n});\nexport function useUserDelegatee() {\n  _s10();\n  var _result$2;\n  const {\n    account\n  } = useWeb3React();\n  const uniContract = useUniContract();\n  const {\n    result\n  } = useSingleCallResult(uniContract, 'delegates', [account !== null && account !== void 0 ? account : undefined]);\n  return (_result$2 = result === null || result === void 0 ? void 0 : result[0]) !== null && _result$2 !== void 0 ? _result$2 : undefined;\n}\n\n// gets the users current votes\n_s10(useUserDelegatee, \"Sg7U225PB3Fm95Mkz1y5EZrbwcA=\", false, function () {\n  return [useWeb3React, useUniContract, useSingleCallResult];\n});\nexport function useUserVotes() {\n  _s11();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const uniContract = useUniContract();\n\n  // check for available votes\n  const {\n    result,\n    loading\n  } = useSingleCallResult(uniContract, 'getCurrentVotes', [account !== null && account !== void 0 ? account : undefined]);\n  return useMemo(() => {\n    const uni = chainId ? UNI[chainId] : undefined;\n    return {\n      loading,\n      votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result === null || result === void 0 ? void 0 : result[0]) : undefined\n    };\n  }, [chainId, loading, result]);\n}\n\n// fetch available votes as of block (usually proposal start block)\n_s11(useUserVotes, \"/8HHN40DuB+fBLy4m6WTWFrHPKY=\", false, function () {\n  return [useWeb3React, useUniContract, useSingleCallResult];\n});\nexport function useUserVotesAsOfBlock(block) {\n  _s12();\n  var _useSingleCallResult2, _useSingleCallResult3;\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const uniContract = useUniContract();\n\n  // check for available votes\n  const uni = useMemo(() => chainId ? UNI[chainId] : undefined, [chainId]);\n  const votes = (_useSingleCallResult2 = useSingleCallResult(uniContract, 'getPriorVotes', [account !== null && account !== void 0 ? account : undefined, block !== null && block !== void 0 ? block : undefined])) === null || _useSingleCallResult2 === void 0 ? void 0 : (_useSingleCallResult3 = _useSingleCallResult2.result) === null || _useSingleCallResult3 === void 0 ? void 0 : _useSingleCallResult3[0];\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined;\n}\n_s12(useUserVotesAsOfBlock, \"zxSftl3Tvte8ZywFllARwTg1rRs=\", false, function () {\n  return [useWeb3React, useUniContract, useSingleCallResult];\n});\nexport function useDelegateCallback() {\n  _s13();\n  const {\n    account,\n    chainId,\n    provider\n  } = useWeb3React();\n  const addTransaction = useTransactionAdder();\n  const uniContract = useUniContract();\n  return useCallback(delegatee => {\n    if (!provider || !chainId || !account || !delegatee || !isAddress(delegatee !== null && delegatee !== void 0 ? delegatee : '')) return undefined;\n    const args = [delegatee];\n    if (!uniContract) throw new Error('No UNI Contract!');\n    return uniContract.estimateGas.delegate(...args, {}).then(estimatedGasLimit => {\n      return uniContract.delegate(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.DELEGATE,\n          delegatee\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, chainId, provider, uniContract]);\n}\n_s13(useDelegateCallback, \"+Wfnxsqy2cCPoCIKyl4zyWfDSiw=\", false, function () {\n  return [useWeb3React, useTransactionAdder, useUniContract];\n});\nexport function useVoteCallback() {\n  _s14();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  return useCallback((proposalId, voteOption) => {\n    if (!account || !latestGovernanceContract || !proposalId || !chainId) return;\n    const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2];\n    return latestGovernanceContract.estimateGas.castVote(...args, {}).then(estimatedGasLimit => {\n      return latestGovernanceContract.castVote(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.VOTE,\n          decision: voteOption,\n          governorAddress: latestGovernanceContract.address,\n          proposalId: parseInt(proposalId),\n          reason: ''\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n}\n_s14(useVoteCallback, \"lPujC++mzOVbjOwZsd65BjpPTTA=\", false, function () {\n  return [useWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\nexport function useQueueCallback() {\n  _s15();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  return useCallback(proposalId => {\n    if (!account || !latestGovernanceContract || !proposalId || !chainId) return;\n    const args = [proposalId];\n    return latestGovernanceContract.estimateGas.queue(...args, {}).then(estimatedGasLimit => {\n      return latestGovernanceContract.queue(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.QUEUE,\n          governorAddress: latestGovernanceContract.address,\n          proposalId: parseInt(proposalId)\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n}\n_s15(useQueueCallback, \"lPujC++mzOVbjOwZsd65BjpPTTA=\", false, function () {\n  return [useWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\nexport function useExecuteCallback() {\n  _s16();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  return useCallback(proposalId => {\n    if (!account || !latestGovernanceContract || !proposalId || !chainId) return;\n    const args = [proposalId];\n    return latestGovernanceContract.estimateGas.execute(...args, {}).then(estimatedGasLimit => {\n      return latestGovernanceContract.execute(...args, {\n        value: null,\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.EXECUTE,\n          governorAddress: latestGovernanceContract.address,\n          proposalId: parseInt(proposalId)\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n}\n_s16(useExecuteCallback, \"lPujC++mzOVbjOwZsd65BjpPTTA=\", false, function () {\n  return [useWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\nexport function useCreateProposalCallback() {\n  _s17();\n  const {\n    account,\n    chainId\n  } = useWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const addTransaction = useTransactionAdder();\n  return useCallback(createProposalData => {\n    if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined;\n    const args = [createProposalData.targets, createProposalData.values, createProposalData.signatures, createProposalData.calldatas, createProposalData.description];\n    return latestGovernanceContract.estimateGas.propose(...args).then(estimatedGasLimit => {\n      return latestGovernanceContract.propose(...args, {\n        gasLimit: calculateGasMargin(estimatedGasLimit)\n      }).then(response => {\n        addTransaction(response, {\n          type: TransactionType.SUBMIT_PROPOSAL\n        });\n        return response.hash;\n      });\n    });\n  }, [account, addTransaction, latestGovernanceContract, chainId]);\n}\n_s17(useCreateProposalCallback, \"lPujC++mzOVbjOwZsd65BjpPTTA=\", false, function () {\n  return [useWeb3React, useLatestGovernanceContract, useTransactionAdder];\n});\nexport function useLatestProposalId(address) {\n  _s18();\n  var _res$result, _res$result$;\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address]);\n  return res === null || res === void 0 ? void 0 : (_res$result = res.result) === null || _res$result === void 0 ? void 0 : (_res$result$ = _res$result[0]) === null || _res$result$ === void 0 ? void 0 : _res$result$.toString();\n}\n_s18(useLatestProposalId, \"bpiq817eS0/PkLCKZdsWiIr/f/0=\", false, function () {\n  return [useLatestGovernanceContract, useSingleCallResult];\n});\nexport function useProposalThreshold() {\n  _s19();\n  var _res$result2;\n  const {\n    chainId\n  } = useWeb3React();\n  const latestGovernanceContract = useLatestGovernanceContract();\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold');\n  const uni = useMemo(() => chainId ? UNI[chainId] : undefined, [chainId]);\n  if ((res === null || res === void 0 ? void 0 : (_res$result2 = res.result) === null || _res$result2 === void 0 ? void 0 : _res$result2[0]) && uni) {\n    return CurrencyAmount.fromRawAmount(uni, res.result[0]);\n  }\n  return undefined;\n}\n_s19(useProposalThreshold, \"YgAzVvL5SKlurRjQvDk6RqyBpI0=\", false, function () {\n  return [useWeb3React, useLatestGovernanceContract, useSingleCallResult];\n});","map":{"version":3,"names":["defaultAbiCoder","Interface","isAddress","toUtf8String","Utf8ErrorFuncs","Utf8ErrorReason","abi","GOVERNANCE_ABI","UNI_ABI","CurrencyAmount","useWeb3React","GOVERNOR_BRAVO_ABI","GOVERNANCE_ALPHA_V0_ADDRESSES","GOVERNANCE_ALPHA_V1_ADDRESSES","GOVERNANCE_BRAVO_ADDRESSES","LATEST_GOVERNOR_INDEX","POLYGON_PROPOSAL_TITLE","UNISWAP_GRANTS_PROPOSAL_DESCRIPTION","useContract","useSingleCallResult","useSingleContractMultipleData","useCallback","useMemo","calculateGasMargin","SupportedChainId","BRAVO_START_BLOCK","MOONBEAN_START_BLOCK","ONE_BIP_START_BLOCK","POLYGON_START_BLOCK","UNISWAP_GRANTS_START_BLOCK","UNI","useLogs","useTransactionAdder","TransactionType","VoteOption","useGovernanceV0Contract","useGovernanceV1Contract","useGovernanceBravoContract","useLatestGovernanceContract","useUniContract","chainId","uniAddress","address","undefined","ProposalState","GovernanceInterface","useProposalCount","contract","result","toNumber","FOUR_BYTES_DIR","useFormattedProposalCreatedLogs","indices","fromBlock","toBlock","filter","filters","ProposalCreated","useLogsResult","logs","map","log","parsed","parseLog","args","flat","some","i","id","description","startBlock","parseInt","toString","error","onError","replace","U2018","U2026","reason","offset","bytes","output","UNEXPECTED_CONTINUE","charCode","reverse","push","JSON","parse","value","details","targets","target","signature","signatures","calldata","calldatas","name","types","fourbyte","slice","sig","Error","substring","length","split","decoded","decode","functionSig","callData","join","V0_PROPOSAL_IDS","V1_PROPOSAL_IDS","countToIndices","count","skip","Array","fill","_","useAllProposalData","gov0","gov1","gov2","proposalCount0","proposalCount1","proposalCount2","gov0ProposalIndexes","MAINNET","gov1ProposalIndexes","gov2ProposalIndexes","proposalsV0","proposalsV1","proposalsV2","proposalStatesV0","proposalStatesV1","proposalStatesV2","formattedLogsV0","formattedLogsV1","formattedLogsV2","uni","proposalsCallData","proposalStatesCallData","formattedLogs","p","loading","data","proposal","title","proposer","status","UNDETERMINED","forCount","fromRawAmount","forVotes","againstCount","againstVotes","endBlock","eta","governorIndex","useProposalData","find","useQuorum","latestGovernanceContract","quorumVotes","useUserDelegatee","account","uniContract","useUserVotes","votes","useUserVotesAsOfBlock","block","useDelegateCallback","provider","addTransaction","delegatee","estimateGas","delegate","then","estimatedGasLimit","gasLimit","response","type","DELEGATE","hash","useVoteCallback","proposalId","voteOption","Against","For","castVote","VOTE","decision","governorAddress","useQueueCallback","queue","QUEUE","useExecuteCallback","execute","EXECUTE","useCreateProposalCallback","createProposalData","values","propose","SUBMIT_PROPOSAL","useLatestProposalId","res","useProposalThreshold"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/governance/hooks.ts"],"sourcesContent":["import { defaultAbiCoder, Interface } from '@ethersproject/abi'\nimport { isAddress } from '@ethersproject/address'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { toUtf8String, Utf8ErrorFuncs, Utf8ErrorReason } from '@ethersproject/strings'\n// eslint-disable-next-line no-restricted-imports\nimport { t } from '@lingui/macro'\nimport { abi as GOVERNANCE_ABI } from '@uniswap/governance/build/GovernorAlpha.json'\nimport { abi as UNI_ABI } from '@uniswap/governance/build/Uni.json'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport GOVERNOR_BRAVO_ABI from 'abis/governor-bravo.json'\nimport {\n  GOVERNANCE_ALPHA_V0_ADDRESSES,\n  GOVERNANCE_ALPHA_V1_ADDRESSES,\n  GOVERNANCE_BRAVO_ADDRESSES,\n} from 'constants/addresses'\nimport { LATEST_GOVERNOR_INDEX } from 'constants/governance'\nimport { POLYGON_PROPOSAL_TITLE } from 'constants/proposals/polygon_proposal_title'\nimport { UNISWAP_GRANTS_PROPOSAL_DESCRIPTION } from 'constants/proposals/uniswap_grants_proposal_description'\nimport { useContract } from 'hooks/useContract'\nimport { useSingleCallResult, useSingleContractMultipleData } from 'lib/hooks/multicall'\nimport { useCallback, useMemo } from 'react'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nimport { SupportedChainId } from '../../constants/chains'\nimport {\n  BRAVO_START_BLOCK,\n  MOONBEAN_START_BLOCK,\n  ONE_BIP_START_BLOCK,\n  POLYGON_START_BLOCK,\n  UNISWAP_GRANTS_START_BLOCK,\n} from '../../constants/proposals'\nimport { UNI } from '../../constants/tokens'\nimport { useLogs } from '../logs/hooks'\nimport { useTransactionAdder } from '../transactions/hooks'\nimport { TransactionType } from '../transactions/types'\nimport { VoteOption } from './types'\n\nfunction useGovernanceV0Contract(): Contract | null {\n  return useContract(GOVERNANCE_ALPHA_V0_ADDRESSES, GOVERNANCE_ABI, false)\n}\n\nfunction useGovernanceV1Contract(): Contract | null {\n  return useContract(GOVERNANCE_ALPHA_V1_ADDRESSES, GOVERNANCE_ABI, false)\n}\n\nfunction useGovernanceBravoContract(): Contract | null {\n  return useContract(GOVERNANCE_BRAVO_ADDRESSES, GOVERNOR_BRAVO_ABI, true)\n}\n\nconst useLatestGovernanceContract = useGovernanceBravoContract\n\nfunction useUniContract() {\n  const { chainId } = useWeb3React()\n  const uniAddress = useMemo(() => (chainId ? UNI[chainId]?.address : undefined), [chainId])\n  return useContract(uniAddress, UNI_ABI, true)\n}\n\ninterface ProposalDetail {\n  target: string\n  functionSig: string\n  callData: string\n}\n\nexport interface ProposalData {\n  id: string\n  title: string\n  description: string\n  proposer: string\n  status: ProposalState\n  forCount: CurrencyAmount<Token>\n  againstCount: CurrencyAmount<Token>\n  startBlock: number\n  endBlock: number\n  eta: BigNumber\n  details: ProposalDetail[]\n  governorIndex: number // index in the governance address array for which this proposal pertains\n}\n\nexport interface CreateProposalData {\n  targets: string[]\n  values: string[]\n  signatures: string[]\n  calldatas: string[]\n  description: string\n}\n\nexport enum ProposalState {\n  UNDETERMINED = -1,\n  PENDING,\n  ACTIVE,\n  CANCELED,\n  DEFEATED,\n  SUCCEEDED,\n  QUEUED,\n  EXPIRED,\n  EXECUTED,\n}\n\nconst GovernanceInterface = new Interface(GOVERNANCE_ABI)\n\n// get count of all proposals made in the latest governor contract\nfunction useProposalCount(contract: Contract | null): number | undefined {\n  const { result } = useSingleCallResult(contract, 'proposalCount')\n\n  return result?.[0]?.toNumber()\n}\n\ninterface FormattedProposalLog {\n  description: string\n  details: { target: string; functionSig: string; callData: string }[]\n}\n\nconst FOUR_BYTES_DIR: { [sig: string]: string } = {\n  '0x5ef2c7f0': 'setSubnodeRecord(bytes32,bytes32,address,address,uint64)',\n  '0x10f13a8c': 'setText(bytes32,string,string)',\n  '0xb4720477': 'sendMessageToChild(address,bytes)',\n  '0xa9059cbb': 'transfer(address,uint256)',\n  '0x095ea7b3': 'approve(address,uint256)',\n  '0x7b1837de': 'fund(address,uint256)',\n}\n\n/**\n * Need proposal events to get description data emitted from\n * new proposal event.\n */\nfunction useFormattedProposalCreatedLogs(\n  contract: Contract | null,\n  indices: number[][],\n  fromBlock?: number,\n  toBlock?: number\n): FormattedProposalLog[] | undefined {\n  // create filters for ProposalCreated events\n  const filter = useMemo(() => {\n    const filter = contract?.filters?.ProposalCreated()\n    if (!filter) return undefined\n    return {\n      ...filter,\n      fromBlock,\n      toBlock,\n    }\n  }, [contract, fromBlock, toBlock])\n\n  const useLogsResult = useLogs(filter)\n\n  return useMemo(() => {\n    return useLogsResult?.logs\n      ?.map((log) => {\n        const parsed = GovernanceInterface.parseLog(log).args\n        return parsed\n      })\n      ?.filter((parsed) => indices.flat().some((i) => i === parsed.id.toNumber()))\n      ?.map((parsed) => {\n        let description!: string\n\n        const startBlock = parseInt(parsed.startBlock?.toString())\n        try {\n          description = parsed.description\n        } catch (error) {\n          // replace invalid UTF-8 in the description with replacement characters\n          let onError = Utf8ErrorFuncs.replace\n\n          // Bravo proposal reverses the codepoints for U+2018 (‘) and U+2026 (…)\n          if (startBlock === BRAVO_START_BLOCK) {\n            const U2018 = [0xe2, 0x80, 0x98].toString()\n            const U2026 = [0xe2, 0x80, 0xa6].toString()\n            onError = (reason, offset, bytes, output) => {\n              if (reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n                const charCode = [bytes[offset], bytes[offset + 1], bytes[offset + 2]].reverse().toString()\n                if (charCode === U2018) {\n                  output.push(0x2018)\n                  return 2\n                } else if (charCode === U2026) {\n                  output.push(0x2026)\n                  return 2\n                }\n              }\n              return Utf8ErrorFuncs.replace(reason, offset, bytes, output)\n            }\n          }\n\n          description = JSON.parse(toUtf8String(error.error.value, onError)) || ''\n        }\n\n        // some proposals omit newlines\n        if (\n          startBlock === BRAVO_START_BLOCK ||\n          startBlock === ONE_BIP_START_BLOCK ||\n          startBlock === MOONBEAN_START_BLOCK\n        ) {\n          description = description.replace(/ {2}/g, '\\n').replace(/\\d\\. /g, '\\n$&')\n        }\n\n        return {\n          description,\n          details: parsed.targets.map((target: string, i: number) => {\n            const signature = parsed.signatures[i]\n            let calldata = parsed.calldatas[i]\n            let name: string\n            let types: string\n            if (signature === '') {\n              const fourbyte = calldata.slice(0, 10)\n              const sig = FOUR_BYTES_DIR[fourbyte] ?? 'UNKNOWN()'\n              if (!sig) throw new Error('Missing four byte sig')\n              ;[name, types] = sig.substring(0, sig.length - 1).split('(')\n              calldata = `0x${calldata.slice(10)}`\n            } else {\n              ;[name, types] = signature.substring(0, signature.length - 1).split('(')\n            }\n            const decoded = defaultAbiCoder.decode(types.split(','), calldata)\n            return {\n              target,\n              functionSig: name,\n              callData: decoded.join(', '),\n            }\n          }),\n        }\n      })\n  }, [indices, useLogsResult])\n}\n\nconst V0_PROPOSAL_IDS = [[1], [2], [3], [4]]\nconst V1_PROPOSAL_IDS = [[1], [2], [3]]\n\nfunction countToIndices(count: number | undefined, skip = 0) {\n  return typeof count === 'number' ? new Array(count - skip).fill(0).map((_, i) => [i + 1 + skip]) : []\n}\n\n// get data for all past and active proposals\nexport function useAllProposalData(): { data: ProposalData[]; loading: boolean } {\n  const { chainId } = useWeb3React()\n  const gov0 = useGovernanceV0Contract()\n  const gov1 = useGovernanceV1Contract()\n  const gov2 = useGovernanceBravoContract()\n\n  const proposalCount0 = useProposalCount(gov0)\n  const proposalCount1 = useProposalCount(gov1)\n  const proposalCount2 = useProposalCount(gov2)\n\n  const gov0ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V0_PROPOSAL_IDS : countToIndices(proposalCount0)\n  }, [chainId, proposalCount0])\n  const gov1ProposalIndexes = useMemo(() => {\n    return chainId === SupportedChainId.MAINNET ? V1_PROPOSAL_IDS : countToIndices(proposalCount1)\n  }, [chainId, proposalCount1])\n  const gov2ProposalIndexes = useMemo(() => {\n    return countToIndices(proposalCount2, 8)\n  }, [proposalCount2])\n\n  const proposalsV0 = useSingleContractMultipleData(gov0, 'proposals', gov0ProposalIndexes)\n  const proposalsV1 = useSingleContractMultipleData(gov1, 'proposals', gov1ProposalIndexes)\n  const proposalsV2 = useSingleContractMultipleData(gov2, 'proposals', gov2ProposalIndexes)\n\n  // get all proposal states\n  const proposalStatesV0 = useSingleContractMultipleData(gov0, 'state', gov0ProposalIndexes)\n  const proposalStatesV1 = useSingleContractMultipleData(gov1, 'state', gov1ProposalIndexes)\n  const proposalStatesV2 = useSingleContractMultipleData(gov2, 'state', gov2ProposalIndexes)\n\n  // get metadata from past events\n  const formattedLogsV0 = useFormattedProposalCreatedLogs(gov0, gov0ProposalIndexes, 11042287, 12563484)\n  const formattedLogsV1 = useFormattedProposalCreatedLogs(gov1, gov1ProposalIndexes, 12686656, 13059343)\n  const formattedLogsV2 = useFormattedProposalCreatedLogs(gov2, gov2ProposalIndexes, 13538153)\n\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\n\n  // early return until events are fetched\n  return useMemo(() => {\n    const proposalsCallData = [...proposalsV0, ...proposalsV1, ...proposalsV2]\n    const proposalStatesCallData = [...proposalStatesV0, ...proposalStatesV1, ...proposalStatesV2]\n    const formattedLogs = [...(formattedLogsV0 ?? []), ...(formattedLogsV1 ?? []), ...(formattedLogsV2 ?? [])]\n\n    if (\n      !uni ||\n      proposalsCallData.some((p) => p.loading) ||\n      proposalStatesCallData.some((p) => p.loading) ||\n      (gov0 && !formattedLogsV0) ||\n      (gov1 && !formattedLogsV1) ||\n      (gov2 && !formattedLogsV2)\n    ) {\n      return { data: [], loading: true }\n    }\n\n    return {\n      data: proposalsCallData.map((proposal, i) => {\n        const startBlock = parseInt(proposal?.result?.startBlock?.toString())\n\n        let description = formattedLogs[i]?.description ?? ''\n        if (startBlock === UNISWAP_GRANTS_START_BLOCK) {\n          description = UNISWAP_GRANTS_PROPOSAL_DESCRIPTION\n        }\n\n        let title = description?.split(/#+\\s|\\n/g)[1]\n        if (startBlock === POLYGON_START_BLOCK) {\n          title = POLYGON_PROPOSAL_TITLE\n        }\n\n        return {\n          id: proposal?.result?.id.toString(),\n          title: title ?? t`Untitled`,\n          description: description ?? t`No description.`,\n          proposer: proposal?.result?.proposer,\n          status: proposalStatesCallData[i]?.result?.[0] ?? ProposalState.UNDETERMINED,\n          forCount: CurrencyAmount.fromRawAmount(uni, proposal?.result?.forVotes),\n          againstCount: CurrencyAmount.fromRawAmount(uni, proposal?.result?.againstVotes),\n          startBlock,\n          endBlock: parseInt(proposal?.result?.endBlock?.toString()),\n          eta: proposal?.result?.eta,\n          details: formattedLogs[i]?.details,\n          governorIndex: i >= proposalsV0.length + proposalsV1.length ? 2 : i >= proposalsV0.length ? 1 : 0,\n        }\n      }),\n      loading: false,\n    }\n  }, [\n    formattedLogsV0,\n    formattedLogsV1,\n    formattedLogsV2,\n    gov0,\n    gov1,\n    gov2,\n    proposalStatesV0,\n    proposalStatesV1,\n    proposalStatesV2,\n    proposalsV0,\n    proposalsV1,\n    proposalsV2,\n    uni,\n  ])\n}\n\nexport function useProposalData(governorIndex: number, id: string): ProposalData | undefined {\n  const { data } = useAllProposalData()\n  return data.filter((p) => p.governorIndex === governorIndex)?.find((p) => p.id === id)\n}\n\nexport function useQuorum(governorIndex: number): CurrencyAmount<Token> | undefined {\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const quorumVotes = useSingleCallResult(latestGovernanceContract, 'quorumVotes')?.result?.[0]\n  const { chainId } = useWeb3React()\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\n\n  if (\n    !latestGovernanceContract ||\n    !quorumVotes ||\n    chainId !== SupportedChainId.MAINNET ||\n    !uni ||\n    governorIndex !== LATEST_GOVERNOR_INDEX\n  )\n    return undefined\n\n  return CurrencyAmount.fromRawAmount(uni, quorumVotes)\n}\n\n// get the users delegatee if it exists\nexport function useUserDelegatee(): string {\n  const { account } = useWeb3React()\n  const uniContract = useUniContract()\n  const { result } = useSingleCallResult(uniContract, 'delegates', [account ?? undefined])\n  return result?.[0] ?? undefined\n}\n\n// gets the users current votes\nexport function useUserVotes(): { loading: boolean; votes: CurrencyAmount<Token> | undefined } {\n  const { account, chainId } = useWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const { result, loading } = useSingleCallResult(uniContract, 'getCurrentVotes', [account ?? undefined])\n  return useMemo(() => {\n    const uni = chainId ? UNI[chainId] : undefined\n    return { loading, votes: uni && result ? CurrencyAmount.fromRawAmount(uni, result?.[0]) : undefined }\n  }, [chainId, loading, result])\n}\n\n// fetch available votes as of block (usually proposal start block)\nexport function useUserVotesAsOfBlock(block: number | undefined): CurrencyAmount<Token> | undefined {\n  const { account, chainId } = useWeb3React()\n  const uniContract = useUniContract()\n\n  // check for available votes\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\n  const votes = useSingleCallResult(uniContract, 'getPriorVotes', [account ?? undefined, block ?? undefined])\n    ?.result?.[0]\n  return votes && uni ? CurrencyAmount.fromRawAmount(uni, votes) : undefined\n}\n\nexport function useDelegateCallback(): (delegatee: string | undefined) => undefined | Promise<string> {\n  const { account, chainId, provider } = useWeb3React()\n  const addTransaction = useTransactionAdder()\n\n  const uniContract = useUniContract()\n\n  return useCallback(\n    (delegatee: string | undefined) => {\n      if (!provider || !chainId || !account || !delegatee || !isAddress(delegatee ?? '')) return undefined\n      const args = [delegatee]\n      if (!uniContract) throw new Error('No UNI Contract!')\n      return uniContract.estimateGas.delegate(...args, {}).then((estimatedGasLimit) => {\n        return uniContract\n          .delegate(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.DELEGATE,\n              delegatee,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, chainId, provider, uniContract]\n  )\n}\n\nexport function useVoteCallback(): (\n  proposalId: string | undefined,\n  voteOption: VoteOption\n) => undefined | Promise<string> {\n  const { account, chainId } = useWeb3React()\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (proposalId: string | undefined, voteOption: VoteOption) => {\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\n      const args = [proposalId, voteOption === VoteOption.Against ? 0 : voteOption === VoteOption.For ? 1 : 2]\n      return latestGovernanceContract.estimateGas.castVote(...args, {}).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .castVote(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.VOTE,\n              decision: voteOption,\n              governorAddress: latestGovernanceContract.address,\n              proposalId: parseInt(proposalId),\n              reason: '',\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useQueueCallback(): (proposalId: string | undefined) => undefined | Promise<string> {\n  const { account, chainId } = useWeb3React()\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (proposalId: string | undefined) => {\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\n      const args = [proposalId]\n      return latestGovernanceContract.estimateGas.queue(...args, {}).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .queue(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.QUEUE,\n              governorAddress: latestGovernanceContract.address,\n              proposalId: parseInt(proposalId),\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useExecuteCallback(): (proposalId: string | undefined) => undefined | Promise<string> {\n  const { account, chainId } = useWeb3React()\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (proposalId: string | undefined) => {\n      if (!account || !latestGovernanceContract || !proposalId || !chainId) return\n      const args = [proposalId]\n      return latestGovernanceContract.estimateGas.execute(...args, {}).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .execute(...args, { value: null, gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.EXECUTE,\n              governorAddress: latestGovernanceContract.address,\n              proposalId: parseInt(proposalId),\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useCreateProposalCallback(): (\n  createProposalData: CreateProposalData | undefined\n) => undefined | Promise<string> {\n  const { account, chainId } = useWeb3React()\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const addTransaction = useTransactionAdder()\n\n  return useCallback(\n    (createProposalData: CreateProposalData | undefined) => {\n      if (!account || !latestGovernanceContract || !createProposalData || !chainId) return undefined\n\n      const args = [\n        createProposalData.targets,\n        createProposalData.values,\n        createProposalData.signatures,\n        createProposalData.calldatas,\n        createProposalData.description,\n      ]\n\n      return latestGovernanceContract.estimateGas.propose(...args).then((estimatedGasLimit) => {\n        return latestGovernanceContract\n          .propose(...args, { gasLimit: calculateGasMargin(estimatedGasLimit) })\n          .then((response: TransactionResponse) => {\n            addTransaction(response, {\n              type: TransactionType.SUBMIT_PROPOSAL,\n            })\n            return response.hash\n          })\n      })\n    },\n    [account, addTransaction, latestGovernanceContract, chainId]\n  )\n}\n\nexport function useLatestProposalId(address: string | undefined): string | undefined {\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'latestProposalIds', [address])\n  return res?.result?.[0]?.toString()\n}\n\nexport function useProposalThreshold(): CurrencyAmount<Token> | undefined {\n  const { chainId } = useWeb3React()\n\n  const latestGovernanceContract = useLatestGovernanceContract()\n  const res = useSingleCallResult(latestGovernanceContract, 'proposalThreshold')\n  const uni = useMemo(() => (chainId ? UNI[chainId] : undefined), [chainId])\n\n  if (res?.result?.[0] && uni) {\n    return CurrencyAmount.fromRawAmount(uni, res.result[0])\n  }\n\n  return undefined\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}