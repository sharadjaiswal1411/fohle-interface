{"ast":null,"code":"import{SupportedChainId}from'../constants/chains';var DEFAULT_NETWORKS=[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN];export function constructSameAddressMap(address){var additionalNetworks=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];return DEFAULT_NETWORKS.concat(additionalNetworks).reduce(function(memo,chainId){memo[chainId]=address;return memo;},{});}","map":{"version":3,"names":["SupportedChainId","DEFAULT_NETWORKS","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","constructSameAddressMap","address","additionalNetworks","concat","reduce","memo","chainId"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/constructSameAddressMap.ts"],"sourcesContent":["import { SupportedChainId } from '../constants/chains'\n\nconst DEFAULT_NETWORKS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n]\n\nexport function constructSameAddressMap<T extends string>(\n  address: T,\n  additionalNetworks: SupportedChainId[] = []\n): { [chainId: number]: T } {\n  return DEFAULT_NETWORKS.concat(additionalNetworks).reduce<{ [chainId: number]: T }>((memo, chainId) => {\n    memo[chainId] = address\n    return memo\n  }, {})\n}\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,qBAAqB,CAEtD,GAAMC,iBAAgB,CAAG,CACvBD,gBAAgB,CAACE,OAAO,CACxBF,gBAAgB,CAACG,OAAO,CACxBH,gBAAgB,CAACI,OAAO,CACxBJ,gBAAgB,CAACK,MAAM,CACvBL,gBAAgB,CAACM,KAAK,CACvB,CAED,MAAO,SAASC,wBAAuB,CACrCC,OAAU,CAEgB,IAD1BC,mBAAsC,2DAAG,EAAE,CAE3C,MAAOR,iBAAgB,CAACS,MAAM,CAACD,kBAAkB,CAAC,CAACE,MAAM,CAA2B,SAACC,IAAI,CAAEC,OAAO,CAAK,CACrGD,IAAI,CAACC,OAAO,CAAC,CAAGL,OAAO,CACvB,MAAOI,KAAI,CACb,CAAC,CAAE,CAAC,CAAC,CAAC,CACR"},"metadata":{},"sourceType":"module"}