{"ast":null,"code":"var _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nmodule.exports = getBlocksForRange;\nfunction getBlocksForRange(_x) {\n  return _getBlocksForRange.apply(this, arguments);\n}\nfunction _getBlocksForRange() {\n  _getBlocksForRange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var provider, fromBlock, toBlock, fromBlockNumber, toBlockNumber, blockCountToQuery, missingBlockNumbers, blockBodies;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            provider = _ref.provider, fromBlock = _ref.fromBlock, toBlock = _ref.toBlock;\n            if (!fromBlock) fromBlock = toBlock;\n            fromBlockNumber = hexToInt(fromBlock);\n            toBlockNumber = hexToInt(toBlock);\n            blockCountToQuery = toBlockNumber - fromBlockNumber + 1; // load all blocks from old to new (inclusive)\n            missingBlockNumbers = Array(blockCountToQuery).fill().map(function (_, index) {\n              return fromBlockNumber + index;\n            }).map(intToHex);\n            _context.next = 8;\n            return Promise.all(missingBlockNumbers.map(function (blockNum) {\n              return query(provider, 'eth_getBlockByNumber', [blockNum, false]);\n            }));\n          case 8:\n            blockBodies = _context.sent;\n            return _context.abrupt(\"return\", blockBodies);\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getBlocksForRange.apply(this, arguments);\n}\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  return Number.parseInt(hexString, 16);\n}\nfunction incrementHexInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString;\n  var value = hexToInt(hexString);\n  return intToHex(value + 1);\n}\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int;\n  var hexString = int.toString(16);\n  return '0x' + hexString;\n}\nfunction query(provider, method, params) {\n  return new Promise(function (resolve, reject) {\n    provider.sendAsync({\n      id: 1,\n      jsonrpc: '2.0',\n      method: method,\n      params: params\n    }, function (err, res) {\n      if (err) return reject(err);\n      resolve(res.result);\n    });\n  });\n}","map":{"version":3,"names":["module","exports","getBlocksForRange","provider","fromBlock","toBlock","fromBlockNumber","hexToInt","toBlockNumber","blockCountToQuery","missingBlockNumbers","Array","fill","map","_","index","intToHex","Promise","all","blockNum","query","blockBodies","hexString","undefined","Number","parseInt","incrementHexInt","value","int","toString","method","params","resolve","reject","sendAsync","id","jsonrpc","err","res","result"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/eth-json-rpc-filters/getBlocksForRange.js"],"sourcesContent":["module.exports = getBlocksForRange\n\nasync function getBlocksForRange({ provider, fromBlock, toBlock }) {\n  if (!fromBlock) fromBlock = toBlock\n\n  const fromBlockNumber = hexToInt(fromBlock)\n  const toBlockNumber = hexToInt(toBlock)\n  const blockCountToQuery = toBlockNumber - fromBlockNumber + 1\n  // load all blocks from old to new (inclusive)\n  const missingBlockNumbers = Array(blockCountToQuery).fill()\n                              .map((_,index) => fromBlockNumber + index)\n                              .map(intToHex)\n  const blockBodies = await Promise.all(\n    missingBlockNumbers.map(blockNum => query(provider, 'eth_getBlockByNumber', [blockNum, false]))\n  )\n  return blockBodies\n}\n\nfunction hexToInt(hexString) {\n  if (hexString === undefined || hexString === null) return hexString\n  return Number.parseInt(hexString, 16)\n}\n\nfunction incrementHexInt(hexString){\n  if (hexString === undefined || hexString === null) return hexString\n  const value = hexToInt(hexString)\n  return intToHex(value + 1)\n}\n\nfunction intToHex(int) {\n  if (int === undefined || int === null) return int\n  const hexString = int.toString(16)\n  return '0x' + hexString\n}\n\nfunction query(provider, method, params) {\n  return new Promise((resolve, reject) => {\n    provider.sendAsync({ id: 1, jsonrpc: '2.0', method, params }, (err, res) => {\n      if (err) return reject(err)\n      resolve(res.result)\n    })\n  })\n}\n"],"mappings":";;AAAAA,MAAM,CAACC,OAAO,GAAGC,iBAAiB;AAAA,SAEnBA,iBAAiB;EAAA;AAAA;AAAA;EAAA,8EAAhC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAmCC,QAAQ,QAARA,QAAQ,EAAEC,SAAS,QAATA,SAAS,EAAEC,OAAO,QAAPA,OAAO;YAC7D,IAAI,CAACD,SAAS,EAAEA,SAAS,GAAGC,OAAO;YAE7BC,eAAe,GAAGC,QAAQ,CAACH,SAAS,CAAC;YACrCI,aAAa,GAAGD,QAAQ,CAACF,OAAO,CAAC;YACjCI,iBAAiB,GAAGD,aAAa,GAAGF,eAAe,GAAG,CAAC,EAC7D;YACMI,mBAAmB,GAAGC,KAAK,CAACF,iBAAiB,CAAC,CAACG,IAAI,EAAE,CAC9BC,GAAG,CAAC,UAACC,CAAC,EAACC,KAAK;cAAA,OAAKT,eAAe,GAAGS,KAAK;YAAA,EAAC,CACzCF,GAAG,CAACG,QAAQ,CAAC;YAAA;YAAA,OAChBC,OAAO,CAACC,GAAG,CACnCR,mBAAmB,CAACG,GAAG,CAAC,UAAAM,QAAQ;cAAA,OAAIC,KAAK,CAACjB,QAAQ,EAAE,sBAAsB,EAAE,CAACgB,QAAQ,EAAE,KAAK,CAAC,CAAC;YAAA,EAAC,CAChG;UAAA;YAFKE,WAAW;YAAA,iCAGVA,WAAW;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CACnB;EAAA;AAAA;AAED,SAASd,QAAQ,CAACe,SAAS,EAAE;EAC3B,IAAIA,SAAS,KAAKC,SAAS,IAAID,SAAS,KAAK,IAAI,EAAE,OAAOA,SAAS;EACnE,OAAOE,MAAM,CAACC,QAAQ,CAACH,SAAS,EAAE,EAAE,CAAC;AACvC;AAEA,SAASI,eAAe,CAACJ,SAAS,EAAC;EACjC,IAAIA,SAAS,KAAKC,SAAS,IAAID,SAAS,KAAK,IAAI,EAAE,OAAOA,SAAS;EACnE,IAAMK,KAAK,GAAGpB,QAAQ,CAACe,SAAS,CAAC;EACjC,OAAON,QAAQ,CAACW,KAAK,GAAG,CAAC,CAAC;AAC5B;AAEA,SAASX,QAAQ,CAACY,GAAG,EAAE;EACrB,IAAIA,GAAG,KAAKL,SAAS,IAAIK,GAAG,KAAK,IAAI,EAAE,OAAOA,GAAG;EACjD,IAAMN,SAAS,GAAGM,GAAG,CAACC,QAAQ,CAAC,EAAE,CAAC;EAClC,OAAO,IAAI,GAAGP,SAAS;AACzB;AAEA,SAASF,KAAK,CAACjB,QAAQ,EAAE2B,MAAM,EAAEC,MAAM,EAAE;EACvC,OAAO,IAAId,OAAO,CAAC,UAACe,OAAO,EAAEC,MAAM,EAAK;IACtC9B,QAAQ,CAAC+B,SAAS,CAAC;MAAEC,EAAE,EAAE,CAAC;MAAEC,OAAO,EAAE,KAAK;MAAEN,MAAM,EAANA,MAAM;MAAEC,MAAM,EAANA;IAAO,CAAC,EAAE,UAACM,GAAG,EAAEC,GAAG,EAAK;MAC1E,IAAID,GAAG,EAAE,OAAOJ,MAAM,CAACI,GAAG,CAAC;MAC3BL,OAAO,CAACM,GAAG,CAACC,MAAM,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script"}