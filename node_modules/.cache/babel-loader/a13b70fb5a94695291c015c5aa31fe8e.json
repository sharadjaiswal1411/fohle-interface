{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _reducer;import{configureStore}from'@reduxjs/toolkit';import{setupListeners}from'@reduxjs/toolkit/query/react';import multicall from'lib/state/multicall';import{load,save}from'redux-localstorage-simple';import{isTestEnv}from'utils/env';import geckoTerminalApi from'../services/geckoTermial';import application from'./application/reducer';import burn from'./burn/reducer';import burnV3 from'./burn/v3/reducer';import connection from'./connection/reducer';import{updateVersion}from'./global/actions';import lists from'./lists/reducer';import logs from'./logs/slice';import mint from'./mint/reducer';import mintV3 from'./mint/v3/reducer';import pools from'./pools/reducer';import{routingApi}from'./routing/slice';import swap from'./swap/reducer';import transactions from'./transactions/reducer';import user from'./user/reducer';import wallets from'./wallets/reducer';var PERSISTED_KEYS=['user','transactions','lists','pools'];var store=configureStore({reducer:(_reducer={application:application,user:user,connection:connection,transactions:transactions,wallets:wallets,swap:swap,mint:mint,mintV3:mintV3,burn:burn,burnV3:burnV3,pools:pools,multicall:multicall.reducer,lists:lists,logs:logs},_defineProperty(_reducer,geckoTerminalApi.reducerPath,geckoTerminalApi.reducer),_defineProperty(_reducer,routingApi.reducerPath,routingApi.reducer),_reducer),middleware:function middleware(getDefaultMiddleware){return getDefaultMiddleware({thunk:true}).concat(routingApi.middleware).concat(save({states:PERSISTED_KEYS,debounce:1000})).concat(geckoTerminalApi.middleware);},preloadedState:load({states:PERSISTED_KEYS,disableWarnings:isTestEnv()})});store.dispatch(updateVersion());setupListeners(store.dispatch);export default store;","map":{"version":3,"names":["configureStore","setupListeners","multicall","load","save","isTestEnv","geckoTerminalApi","application","burn","burnV3","connection","updateVersion","lists","logs","mint","mintV3","pools","routingApi","swap","transactions","user","wallets","PERSISTED_KEYS","store","reducer","reducerPath","middleware","getDefaultMiddleware","thunk","concat","states","debounce","preloadedState","disableWarnings","dispatch"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query/react'\nimport multicall from 'lib/state/multicall'\nimport { load, save } from 'redux-localstorage-simple'\nimport { isTestEnv } from 'utils/env'\nimport geckoTerminalApi from '../services/geckoTermial'\nimport application from './application/reducer'\nimport burn from './burn/reducer'\nimport burnV3 from './burn/v3/reducer'\nimport connection from './connection/reducer'\nimport { updateVersion } from './global/actions'\nimport lists from './lists/reducer'\nimport logs from './logs/slice'\nimport mint from './mint/reducer'\nimport mintV3 from './mint/v3/reducer'\nimport pools from './pools/reducer'\nimport { routingApi } from './routing/slice'\nimport swap from './swap/reducer'\nimport transactions from './transactions/reducer'\nimport user from './user/reducer'\nimport wallets from './wallets/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'pools']\n\nconst store = configureStore({\n  reducer: {\n    application,\n    user,\n    connection,\n    transactions,\n    wallets,\n    swap,\n    mint,\n    mintV3,\n    burn,\n    burnV3,\n    pools,\n    multicall: multicall.reducer,\n    lists,\n    logs,\n    [geckoTerminalApi.reducerPath]: geckoTerminalApi.reducer,\n    [routingApi.reducerPath]: routingApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({ thunk: true })\n      .concat(routingApi.middleware)\n      .concat(save({ states: PERSISTED_KEYS, debounce: 1000 }))\n      .concat(geckoTerminalApi.middleware)\n      ,\n  preloadedState: load({ states: PERSISTED_KEYS, disableWarnings: isTestEnv() }),\n})\n\nstore.dispatch(updateVersion())\n\nsetupListeners(store.dispatch)\n\nexport default store\n\nexport type AppState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n"],"mappings":"2LAAA,OAASA,cAAc,KAAQ,kBAAkB,CACjD,OAASC,cAAc,KAAQ,8BAA8B,CAC7D,MAAOC,UAAS,KAAM,qBAAqB,CAC3C,OAASC,IAAI,CAAEC,IAAI,KAAQ,2BAA2B,CACtD,OAASC,SAAS,KAAQ,WAAW,CACrC,MAAOC,iBAAgB,KAAM,0BAA0B,CACvD,MAAOC,YAAW,KAAM,uBAAuB,CAC/C,MAAOC,KAAI,KAAM,gBAAgB,CACjC,MAAOC,OAAM,KAAM,mBAAmB,CACtC,MAAOC,WAAU,KAAM,sBAAsB,CAC7C,OAASC,aAAa,KAAQ,kBAAkB,CAChD,MAAOC,MAAK,KAAM,iBAAiB,CACnC,MAAOC,KAAI,KAAM,cAAc,CAC/B,MAAOC,KAAI,KAAM,gBAAgB,CACjC,MAAOC,OAAM,KAAM,mBAAmB,CACtC,MAAOC,MAAK,KAAM,iBAAiB,CACnC,OAASC,UAAU,KAAQ,iBAAiB,CAC5C,MAAOC,KAAI,KAAM,gBAAgB,CACjC,MAAOC,aAAY,KAAM,wBAAwB,CACjD,MAAOC,KAAI,KAAM,gBAAgB,CACjC,MAAOC,QAAO,KAAM,mBAAmB,CAEvC,GAAMC,eAAwB,CAAG,CAAC,MAAM,CAAE,cAAc,CAAE,OAAO,CAAE,OAAO,CAAC,CAE3E,GAAMC,MAAK,CAAGvB,cAAc,CAAC,CAC3BwB,OAAO,YACLjB,WAAW,CAAXA,WAAW,CACXa,IAAI,CAAJA,IAAI,CACJV,UAAU,CAAVA,UAAU,CACVS,YAAY,CAAZA,YAAY,CACZE,OAAO,CAAPA,OAAO,CACPH,IAAI,CAAJA,IAAI,CACJJ,IAAI,CAAJA,IAAI,CACJC,MAAM,CAANA,MAAM,CACNP,IAAI,CAAJA,IAAI,CACJC,MAAM,CAANA,MAAM,CACNO,KAAK,CAALA,KAAK,CACLd,SAAS,CAAEA,SAAS,CAACsB,OAAO,CAC5BZ,KAAK,CAALA,KAAK,CACLC,IAAI,CAAJA,IAAI,2BACHP,gBAAgB,CAACmB,WAAW,CAAGnB,gBAAgB,CAACkB,OAAO,2BACvDP,UAAU,CAACQ,WAAW,CAAGR,UAAU,CAACO,OAAO,WAC7C,CACDE,UAAU,CAAE,oBAACC,oBAAoB,QAC/BA,qBAAoB,CAAC,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CAClCC,MAAM,CAACZ,UAAU,CAACS,UAAU,CAAC,CAC7BG,MAAM,CAACzB,IAAI,CAAC,CAAE0B,MAAM,CAAER,cAAc,CAAES,QAAQ,CAAE,IAAK,CAAC,CAAC,CAAC,CACxDF,MAAM,CAACvB,gBAAgB,CAACoB,UAAU,CAAC,GAExCM,cAAc,CAAE7B,IAAI,CAAC,CAAE2B,MAAM,CAAER,cAAc,CAAEW,eAAe,CAAE5B,SAAS,EAAG,CAAC,CAC/E,CAAC,CAAC,CAEFkB,KAAK,CAACW,QAAQ,CAACvB,aAAa,EAAE,CAAC,CAE/BV,cAAc,CAACsB,KAAK,CAACW,QAAQ,CAAC,CAE9B,cAAeX,MAAK"},"metadata":{},"sourceType":"module"}