{"ast":null,"code":"import { getGlobalScope } from './global-scope';\nexport var getQueryParams = function getQueryParams() {\n  var _a;\n  var globalScope = getGlobalScope();\n  /* istanbul ignore if */\n  if (!((_a = globalScope === null || globalScope === void 0 ? void 0 : globalScope.location) === null || _a === void 0 ? void 0 : _a.search)) {\n    return {};\n  }\n  var pairs = globalScope.location.search.substring(1).split('&').filter(Boolean);\n  var params = pairs.reduce(function (acc, curr) {\n    var query = curr.split('=', 2);\n    var key = tryDecodeURIComponent(query[0]);\n    var value = tryDecodeURIComponent(query[1]);\n    if (!value) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n  return params;\n};\nexport var tryDecodeURIComponent = function tryDecodeURIComponent(value) {\n  if (value === void 0) {\n    value = '';\n  }\n  try {\n    return decodeURIComponent(value);\n  } catch (_a) {\n    return '';\n  }\n};","map":{"version":3,"sources":["../../src/query-params.ts"],"names":[],"mappings":"AAAA,SAAS,cAAc,QAAQ,gBAAgB;AAE/C,OAAO,IAAM,cAAc,GAAG,SAAjB,cAAc,GAAG;;EAC5B,IAAM,WAAW,GAAG,cAAc,EAAE;EACpC;EACA,IAAI,EAAC,CAAA,EAAA,GAAA,WAAW,KAAA,IAAA,IAAX,WAAW,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAX,WAAW,CAAE,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CAAA,EAAE;IAClC,OAAO,CAAA,CAAE;EACV;EACD,IAAM,KAAK,GAAG,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC;EACjF,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAqC,UAAC,GAAG,EAAE,IAAI,EAAA;IACxE,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,IAAM,GAAG,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC3C,IAAM,KAAK,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAI,CAAC,KAAK,EAAE;MACV,OAAO,GAAG;IACX;IACD,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK;IAChB,OAAO,GAAG;EACZ,CAAC,EAAE,CAAA,CAAE,CAAC;EACN,OAAO,MAAM;AACf,CAAC;AAED,OAAO,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,KAAU,EAAA;EAAV,IAAA,KAAA,KAAA,KAAA,CAAA,EAAA;IAAA,KAAA,GAAA,EAAU;EAAA;EAC9C,IAAI;IACF,OAAO,kBAAkB,CAAC,KAAK,CAAC;GACjC,CAAC,OAAA,EAAA,EAAM;IACN,OAAO,EAAE;EACV;AACH,CAAC","sourcesContent":["import { getGlobalScope } from './global-scope';\n\nexport const getQueryParams = (): Record<string, string | undefined> => {\n  const globalScope = getGlobalScope();\n  /* istanbul ignore if */\n  if (!globalScope?.location?.search) {\n    return {};\n  }\n  const pairs = globalScope.location.search.substring(1).split('&').filter(Boolean);\n  const params = pairs.reduce<Record<string, string | undefined>>((acc, curr) => {\n    const query = curr.split('=', 2);\n    const key = tryDecodeURIComponent(query[0]);\n    const value = tryDecodeURIComponent(query[1]);\n    if (!value) {\n      return acc;\n    }\n    acc[key] = value;\n    return acc;\n  }, {});\n  return params;\n};\n\nexport const tryDecodeURIComponent = (value = '') => {\n  try {\n    return decodeURIComponent(value);\n  } catch {\n    return '';\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}