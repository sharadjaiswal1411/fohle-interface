{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{CurrencyAmount,MaxUint256}from'@uniswap/sdk-core';import{useSingleCallResult}from'lib/hooks/multicall';import{useCallback,useMemo}from'react';import{TransactionType}from'state/transactions/types';import{calculateGasMargin}from'utils/calculateGasMargin';import{useTokenContract}from'./useContract';export function useTokenAllowance(token,owner,spender){var contract=useTokenContract(token===null||token===void 0?void 0:token.address,false);var inputs=useMemo(function(){return[owner,spender];},[owner,spender]);var _useSingleCallResult=useSingleCallResult(contract,'allowance',inputs),result=_useSingleCallResult.result,isSyncing=_useSingleCallResult.syncing;return useMemo(function(){var tokenAllowance=token&&result&&CurrencyAmount.fromRawAmount(token,result.toString());return{tokenAllowance:tokenAllowance,isSyncing:isSyncing};},[isSyncing,result,token]);}export function useUpdateTokenAllowance(amount,spender){var contract=useTokenContract(amount===null||amount===void 0?void 0:amount.currency.address);return useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var allowance,estimatedGas,gasLimit,response,_amount$currency$symb,symbol;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(amount){_context.next=3;break;}throw new Error('missing amount');case 3:if(contract){_context.next=5;break;}throw new Error('missing contract');case 5:if(spender){_context.next=7;break;}throw new Error('missing spender');case 7:allowance=MaxUint256.toString();_context.next=10;return contract.estimateGas.approve(spender,allowance).catch(function(){// Fallback for tokens which restrict approval amounts:\nallowance=amount.quotient.toString();return contract.estimateGas.approve(spender,allowance);});case 10:estimatedGas=_context.sent;gasLimit=calculateGasMargin(estimatedGas);_context.next=14;return contract.approve(spender,allowance,{gasLimit:gasLimit});case 14:response=_context.sent;return _context.abrupt(\"return\",{response:response,info:{type:TransactionType.APPROVAL,tokenAddress:contract.address,spender:spender}});case 18:_context.prev=18;_context.t0=_context[\"catch\"](0);symbol=(_amount$currency$symb=amount===null||amount===void 0?void 0:amount.currency.symbol)!==null&&_amount$currency$symb!==void 0?_amount$currency$symb:'Token';throw new Error(\"\".concat(symbol,\" approval failed: \").concat(_context.t0 instanceof Error?_context.t0.message:_context.t0));case 22:case\"end\":return _context.stop();}}},_callee,null,[[0,18]]);})),[amount,contract,spender]);}","map":{"version":3,"names":["CurrencyAmount","MaxUint256","useSingleCallResult","useCallback","useMemo","TransactionType","calculateGasMargin","useTokenContract","useTokenAllowance","token","owner","spender","contract","address","inputs","result","isSyncing","syncing","tokenAllowance","fromRawAmount","toString","useUpdateTokenAllowance","amount","currency","Error","allowance","estimateGas","approve","catch","quotient","estimatedGas","gasLimit","response","info","type","APPROVAL","tokenAddress","symbol","message"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useTokenAllowance.ts"],"sourcesContent":["import { BigNumberish } from '@ethersproject/bignumber'\nimport { ContractTransaction } from '@ethersproject/contracts'\nimport { CurrencyAmount, MaxUint256, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useCallback, useMemo } from 'react'\nimport { ApproveTransactionInfo, TransactionType } from 'state/transactions/types'\nimport { calculateGasMargin } from 'utils/calculateGasMargin'\n\nimport { useTokenContract } from './useContract'\n\nexport function useTokenAllowance(\n  token?: Token,\n  owner?: string,\n  spender?: string\n): {\n  tokenAllowance: CurrencyAmount<Token> | undefined\n  isSyncing: boolean\n} {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const { result, syncing: isSyncing } = useSingleCallResult(contract, 'allowance', inputs)\n\n  return useMemo(() => {\n    const tokenAllowance = token && result && CurrencyAmount.fromRawAmount(token, result.toString())\n    return { tokenAllowance, isSyncing }\n  }, [isSyncing, result, token])\n}\n\nexport function useUpdateTokenAllowance(amount: CurrencyAmount<Token> | undefined, spender: string) {\n  const contract = useTokenContract(amount?.currency.address)\n\n  return useCallback(async (): Promise<{\n    response: ContractTransaction\n    info: ApproveTransactionInfo\n  }> => {\n    try {\n      if (!amount) throw new Error('missing amount')\n      if (!contract) throw new Error('missing contract')\n      if (!spender) throw new Error('missing spender')\n\n      let allowance: BigNumberish = MaxUint256.toString()\n      const estimatedGas = await contract.estimateGas.approve(spender, allowance).catch(() => {\n        // Fallback for tokens which restrict approval amounts:\n        allowance = amount.quotient.toString()\n        return contract.estimateGas.approve(spender, allowance)\n      })\n\n      const gasLimit = calculateGasMargin(estimatedGas)\n      const response = await contract.approve(spender, allowance, { gasLimit })\n      return {\n        response,\n        info: {\n          type: TransactionType.APPROVAL,\n          tokenAddress: contract.address,\n          spender,\n        },\n      }\n    } catch (e: unknown) {\n      const symbol = amount?.currency.symbol ?? 'Token'\n      throw new Error(`${symbol} approval failed: ${e instanceof Error ? e.message : e}`)\n    }\n  }, [amount, contract, spender])\n}\n"],"mappings":"qVAEA,OAASA,cAAc,CAAEC,UAAU,KAAe,mBAAmB,CACrE,OAASC,mBAAmB,KAAQ,qBAAqB,CACzD,OAASC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CAC5C,OAAiCC,eAAe,KAAQ,0BAA0B,CAClF,OAASC,kBAAkB,KAAQ,0BAA0B,CAE7D,OAASC,gBAAgB,KAAQ,eAAe,CAEhD,MAAO,SAASC,kBAAiB,CAC/BC,KAAa,CACbC,KAAc,CACdC,OAAgB,CAIhB,CACA,GAAMC,SAAQ,CAAGL,gBAAgB,CAACE,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEI,OAAO,CAAE,KAAK,CAAC,CAExD,GAAMC,OAAM,CAAGV,OAAO,CAAC,iBAAM,CAACM,KAAK,CAAEC,OAAO,CAAC,GAAE,CAACD,KAAK,CAAEC,OAAO,CAAC,CAAC,CAChE,yBAAuCT,mBAAmB,CAACU,QAAQ,CAAE,WAAW,CAAEE,MAAM,CAAC,CAAjFC,MAAM,sBAANA,MAAM,CAAWC,SAAS,sBAAlBC,OAAO,CAEvB,MAAOb,QAAO,CAAC,UAAM,CACnB,GAAMc,eAAc,CAAGT,KAAK,EAAIM,MAAM,EAAIf,cAAc,CAACmB,aAAa,CAACV,KAAK,CAAEM,MAAM,CAACK,QAAQ,EAAE,CAAC,CAChG,MAAO,CAAEF,cAAc,CAAdA,cAAc,CAAEF,SAAS,CAATA,SAAU,CAAC,CACtC,CAAC,CAAE,CAACA,SAAS,CAAED,MAAM,CAAEN,KAAK,CAAC,CAAC,CAChC,CAEA,MAAO,SAASY,wBAAuB,CAACC,MAAyC,CAAEX,OAAe,CAAE,CAClG,GAAMC,SAAQ,CAAGL,gBAAgB,CAACe,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEC,QAAQ,CAACV,OAAO,CAAC,CAE3D,MAAOV,YAAW,sEAAC,gOAKVmB,MAAM,8BAAQ,IAAIE,MAAK,CAAC,gBAAgB,CAAC,WACzCZ,QAAQ,8BAAQ,IAAIY,MAAK,CAAC,kBAAkB,CAAC,WAC7Cb,OAAO,8BAAQ,IAAIa,MAAK,CAAC,iBAAiB,CAAC,QAE5CC,SAAuB,CAAGxB,UAAU,CAACmB,QAAQ,EAAE,wBACxBR,SAAQ,CAACc,WAAW,CAACC,OAAO,CAAChB,OAAO,CAAEc,SAAS,CAAC,CAACG,KAAK,CAAC,UAAM,CACtF;AACAH,SAAS,CAAGH,MAAM,CAACO,QAAQ,CAACT,QAAQ,EAAE,CACtC,MAAOR,SAAQ,CAACc,WAAW,CAACC,OAAO,CAAChB,OAAO,CAAEc,SAAS,CAAC,CACzD,CAAC,CAAC,SAJIK,YAAY,eAMZC,QAAQ,CAAGzB,kBAAkB,CAACwB,YAAY,CAAC,wBAC1BlB,SAAQ,CAACe,OAAO,CAAChB,OAAO,CAAEc,SAAS,CAAE,CAAEM,QAAQ,CAARA,QAAS,CAAC,CAAC,SAAnEC,QAAQ,+CACP,CACLA,QAAQ,CAARA,QAAQ,CACRC,IAAI,CAAE,CACJC,IAAI,CAAE7B,eAAe,CAAC8B,QAAQ,CAC9BC,YAAY,CAAExB,QAAQ,CAACC,OAAO,CAC9BF,OAAO,CAAPA,OACF,CACF,CAAC,4DAEK0B,MAAM,wBAAGf,MAAM,SAANA,MAAM,iBAANA,MAAM,CAAEC,QAAQ,CAACc,MAAM,+DAAI,OAAO,MAC3C,IAAIb,MAAK,WAAIa,MAAM,8BAAqB,sBAAab,MAAK,CAAG,YAAEc,OAAO,YAAI,EAAG,sEAEtF,GAAE,CAAChB,MAAM,CAAEV,QAAQ,CAAED,OAAO,CAAC,CAAC,CACjC"},"metadata":{},"sourceType":"module"}