{"ast":null,"code":"import { log } from '../../util';\n/**\n * Provider for getting V3 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V3SubgraphProviderWithFallBacks\n */\nexport class V3SubgraphProviderWithFallBacks {\n  constructor(fallbacks) {\n    this.fallbacks = fallbacks;\n  }\n  async getPools(tokenIn, tokenOut, providerConfig) {\n    for (let i = 0; i < this.fallbacks.length; i++) {\n      const provider = this.fallbacks[i];\n      try {\n        const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\n        return pools;\n      } catch (err) {\n        log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);\n      }\n    }\n    throw new Error('Failed to get subgraph pools from any providers');\n  }\n}","map":{"version":3,"sources":["../../../../src/providers/v3/subgraph-provider-with-fallback.ts"],"names":[],"mappings":"AAEA,SAAS,GAAG,QAAQ,YAAY;AAKhC;;;;;;AAMG;AACH,OAAM,MAAO,+BAA+B,CAAA;EAC1C,WAAA,CAAoB,SAAgC,EAAA;IAAhC,IAAA,CAAA,SAAS,GAAT,SAAS;EAA0B;EAEhD,MAAM,QAAQ,CACnB,OAAe,EACf,QAAgB,EAChB,cAA+B,EAAA;IAE/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAE;MACnC,IAAI;QACF,MAAM,KAAK,GAAG,MAAM,QAAQ,CAAC,QAAQ,CACnC,OAAO,EACP,QAAQ,EACR,cAAc,CACf;QACD,OAAO,KAAK;OACb,CAAC,OAAO,GAAG,EAAE;QACZ,GAAG,CAAC,IAAI,CAAC,sDAAsD,CAAC,EAAE,CAAC;MACpE;IACF;IAED,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC;EACpE;AACD","sourceRoot":"","sourcesContent":["import { log } from '../../util';\n/**\n * Provider for getting V3 subgraph pools that falls back to a different provider\n * in the event of failure.\n *\n * @export\n * @class V3SubgraphProviderWithFallBacks\n */\nexport class V3SubgraphProviderWithFallBacks {\n    constructor(fallbacks) {\n        this.fallbacks = fallbacks;\n    }\n    async getPools(tokenIn, tokenOut, providerConfig) {\n        for (let i = 0; i < this.fallbacks.length; i++) {\n            const provider = this.fallbacks[i];\n            try {\n                const pools = await provider.getPools(tokenIn, tokenOut, providerConfig);\n                return pools;\n            }\n            catch (err) {\n                log.info(`Failed to get subgraph pools for V3 from fallback #${i}`);\n            }\n        }\n        throw new Error('Failed to get subgraph pools from any providers');\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9wcm92aWRlcnMvdjMvc3ViZ3JhcGgtcHJvdmlkZXItd2l0aC1mYWxsYmFjay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBS2pDOzs7Ozs7R0FNRztBQUNILE1BQU0sT0FBTywrQkFBK0I7SUFDMUMsWUFBb0IsU0FBZ0M7UUFBaEMsY0FBUyxHQUFULFNBQVMsQ0FBdUI7SUFBRyxDQUFDO0lBRWpELEtBQUssQ0FBQyxRQUFRLENBQ25CLE9BQWUsRUFDZixRQUFnQixFQUNoQixjQUErQjtRQUUvQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDOUMsTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUUsQ0FBQztZQUNwQyxJQUFJO2dCQUNGLE1BQU0sS0FBSyxHQUFHLE1BQU0sUUFBUSxDQUFDLFFBQVEsQ0FDbkMsT0FBTyxFQUNQLFFBQVEsRUFDUixjQUFjLENBQ2YsQ0FBQztnQkFDRixPQUFPLEtBQUssQ0FBQzthQUNkO1lBQUMsT0FBTyxHQUFHLEVBQUU7Z0JBQ1osR0FBRyxDQUFDLElBQUksQ0FBQyxzREFBc0QsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUNyRTtTQUNGO1FBRUQsTUFBTSxJQUFJLEtBQUssQ0FBQyxpREFBaUQsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}