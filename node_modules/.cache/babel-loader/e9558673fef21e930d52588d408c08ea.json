{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{unwrapToken}from'graphql/data/util';var TOKEN_API_URL=process.env.REACT_APP_TEMP_API_URL;export var fetchTrendingTokens=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(numTokens){var url,r,_ref2,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(TOKEN_API_URL){_context.next=2;break;}return _context.abrupt(\"return\",Promise.resolve([]));case 2:url=\"\".concat(TOKEN_API_URL,\"/tokens/trending\").concat(numTokens?\"?numTokens=\".concat(numTokens):'');_context.next=5;return fetch(url,{method:'GET',headers:{'Content-Type':'application/json'}});case 5:r=_context.sent;_context.next=8;return r.json();case 8:_ref2=_context.sent;data=_ref2.data;return _context.abrupt(\"return\",data?data.map(function(token){return unwrapToken(token.chainId,token);}):[]);case 11:case\"end\":return _context.stop();}}},_callee);}));return function fetchTrendingTokens(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"names":["unwrapToken","TOKEN_API_URL","process","env","REACT_APP_TEMP_API_URL","fetchTrendingTokens","numTokens","Promise","resolve","url","fetch","method","headers","r","json","data","map","token","chainId"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/genie/TrendingTokensFetcher.ts"],"sourcesContent":["import { unwrapToken } from 'graphql/data/util'\n\nimport { FungibleToken } from '../../types'\n\nconst TOKEN_API_URL = process.env.REACT_APP_TEMP_API_URL\nexport const fetchTrendingTokens = async (numTokens?: number): Promise<FungibleToken[]> => {\n  if (!TOKEN_API_URL) return Promise.resolve([])\n  const url = `${TOKEN_API_URL}/tokens/trending${numTokens ? `?numTokens=${numTokens}` : ''}`\n\n  const r = await fetch(url, {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n\n  const { data } = (await r.json()) as { data: FungibleToken[] }\n  return data ? data.map((token) => unwrapToken(token.chainId, token)) : []\n}\n"],"mappings":"qVAAA,OAASA,WAAW,KAAQ,mBAAmB,CAI/C,GAAMC,cAAa,CAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CACxD,MAAO,IAAMC,oBAAmB,0FAAG,iBAAOC,SAAkB,0IACrDL,aAAa,yDAASM,OAAO,CAACC,OAAO,CAAC,EAAE,CAAC,SACxCC,GAAG,WAAMR,aAAa,4BAAmBK,SAAS,sBAAiBA,SAAS,EAAK,EAAE,wBAEzEI,MAAK,CAACD,GAAG,CAAE,CACzBE,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,QALIC,CAAC,qCAOiBA,EAAC,CAACC,IAAI,EAAE,4BAAxBC,IAAI,OAAJA,IAAI,iCACLA,IAAI,CAAGA,IAAI,CAACC,GAAG,CAAC,SAACC,KAAK,QAAKjB,YAAW,CAACiB,KAAK,CAACC,OAAO,CAAED,KAAK,CAAC,GAAC,CAAG,EAAE,yDAC1E,kBAbYZ,oBAAmB,4CAa/B"},"metadata":{},"sourceType":"module"}