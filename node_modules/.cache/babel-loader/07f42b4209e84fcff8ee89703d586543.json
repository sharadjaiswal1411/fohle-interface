{"ast":null,"code":"import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import create from'zustand';import{devtools,persist}from'zustand/middleware';export var useSweep=create()(persist(devtools(function(set){return{sweepAssets:[],setSweepAssets:function setSweepAssets(assets){return set(function(){return{sweepAssets:assets};});},removeSweepAsset:function removeSweepAsset(asset){set(function(_ref){var sweepAssets=_ref.sweepAssets;if(sweepAssets.length===0)return{sweepAssets:[]};else sweepAssets.find(function(x){return x.tokenId===asset.tokenId&&x.address===asset.address;});var assetsCopy=_toConsumableArray(sweepAssets);assetsCopy.splice(sweepAssets.findIndex(function(n){return n.tokenId===asset.tokenId&&n.address===asset.address;}),1);return{sweepAssets:assetsCopy};});},reset:function reset(){return set(function(){return{sweepAssets:[]};});}};}),{name:'useSweep'}));","map":{"version":3,"names":["create","devtools","persist","useSweep","set","sweepAssets","setSweepAssets","assets","removeSweepAsset","asset","length","find","x","tokenId","address","assetsCopy","splice","findIndex","n","reset","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useSweep.ts"],"sourcesContent":["import create from 'zustand'\nimport { devtools, persist } from 'zustand/middleware'\n\nimport { GenieAsset } from '../types'\n\ninterface SweepState {\n  sweepAssets: GenieAsset[]\n  setSweepAssets: (assets: GenieAsset[]) => void\n  removeSweepAsset: (asset: GenieAsset) => void\n  reset: () => void\n}\n\nexport const useSweep = create<SweepState>()(\n  persist(\n    devtools((set) => ({\n      sweepAssets: [],\n      setSweepAssets: (assets) =>\n        set(() => {\n          return { sweepAssets: assets }\n        }),\n      removeSweepAsset: (asset) => {\n        set(({ sweepAssets }) => {\n          if (sweepAssets.length === 0) return { sweepAssets: [] }\n          else sweepAssets.find((x) => x.tokenId === asset.tokenId && x.address === asset.address)\n          const assetsCopy = [...sweepAssets]\n          assetsCopy.splice(\n            sweepAssets.findIndex((n) => n.tokenId === asset.tokenId && n.address === asset.address),\n            1\n          )\n          return { sweepAssets: assetsCopy }\n        })\n      },\n      reset: () => set(() => ({ sweepAssets: [] })),\n    })),\n    { name: 'useSweep' }\n  )\n)\n"],"mappings":"oLAAA,MAAOA,OAAM,KAAM,SAAS,CAC5B,OAASC,QAAQ,CAAEC,OAAO,KAAQ,oBAAoB,CAWtD,MAAO,IAAMC,SAAQ,CAAGH,MAAM,EAAc,CAC1CE,OAAO,CACLD,QAAQ,CAAC,SAACG,GAAG,QAAM,CACjBC,WAAW,CAAE,EAAE,CACfC,cAAc,CAAE,wBAACC,MAAM,QACrBH,IAAG,CAAC,UAAM,CACR,MAAO,CAAEC,WAAW,CAAEE,MAAO,CAAC,CAChC,CAAC,CAAC,GACJC,gBAAgB,CAAE,0BAACC,KAAK,CAAK,CAC3BL,GAAG,CAAC,cAAqB,IAAlBC,YAAW,MAAXA,WAAW,CAChB,GAAIA,WAAW,CAACK,MAAM,GAAK,CAAC,CAAE,MAAO,CAAEL,WAAW,CAAE,EAAG,CAAC,KACnDA,YAAW,CAACM,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACC,OAAO,GAAKJ,KAAK,CAACI,OAAO,EAAID,CAAC,CAACE,OAAO,GAAKL,KAAK,CAACK,OAAO,GAAC,CACxF,GAAMC,WAAU,oBAAOV,WAAW,CAAC,CACnCU,UAAU,CAACC,MAAM,CACfX,WAAW,CAACY,SAAS,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACL,OAAO,GAAKJ,KAAK,CAACI,OAAO,EAAIK,CAAC,CAACJ,OAAO,GAAKL,KAAK,CAACK,OAAO,GAAC,CACxF,CAAC,CACF,CACD,MAAO,CAAET,WAAW,CAAEU,UAAW,CAAC,CACpC,CAAC,CAAC,CACJ,CAAC,CACDI,KAAK,CAAE,uBAAMf,IAAG,CAAC,iBAAO,CAAEC,WAAW,CAAE,EAAG,CAAC,EAAC,CAAC,EAC/C,CAAC,EAAC,CAAC,CACH,CAAEe,IAAI,CAAE,UAAW,CAAC,CACrB,CACF"},"metadata":{},"sourceType":"module"}