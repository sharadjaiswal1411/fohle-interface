{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Pools/PoolTable/PoolTable.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { PAGE_SIZE, useTopPools } from 'graphql/data/TopTokens';\nimport { validateUrlChainParam } from 'graphql/data/util';\nimport { AlertTriangle } from 'react-feather';\nimport { useParams } from 'react-router-dom';\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from '../constants';\nimport { HeaderRow, LoadedRow, LoadingRow } from './TokenRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GridContainer = _styled.div.withConfig({\n  displayName: \"PoolTable__GridContainer\",\n  componentId: \"sc-73jl1x-0\"\n})([\"display:flex;flex-direction:column;max-width:\", \";background-color:\", \";box-shadow:0px 0px 1px rgba(0,0,0,0.01),0px 4px 8px rgba(0,0,0,0.04),0px 16px 24px rgba(0,0,0,0.04),0px 24px 32px rgba(0,0,0,0.01);margin-left:auto;margin-right:auto;border-radius:12px;justify-content:center;align-items:center;border:1px solid \", \";\"], MAX_WIDTH_MEDIA_BREAKPOINT, _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.backgroundSurface;\n}, _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.backgroundOutline;\n});\nconst TokenDataContainer = _styled.div.withConfig({\n  displayName: \"PoolTable__TokenDataContainer\",\n  componentId: \"sc-73jl1x-1\"\n})([\"display:flex;flex-direction:column;gap:4px;height:100%;width:100%;\"]);\nconst NoTokenDisplay = _styled.div.withConfig({\n  displayName: \"PoolTable__NoTokenDisplay\",\n  componentId: \"sc-73jl1x-2\"\n})([\"display:flex;justify-content:center;width:100%;height:60px;color:\", \";font-size:16px;font-weight:500;align-items:center;padding:0px 28px;gap:8px;\"], _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.textSecondary;\n});\nfunction NoTokensState(_ref4) {\n  let {\n    message\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NoTokenDisplay, {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = NoTokensState;\nconst LoadingRows = _ref5 => {\n  let {\n    rowCount\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Array(rowCount).fill(null).map((_, index) => {\n      return /*#__PURE__*/_jsxDEV(LoadingRow, {\n        first: index === 0,\n        last: index === rowCount - 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this);\n    })\n  }, void 0, false);\n};\n_c2 = LoadingRows;\nfunction LoadingTokenTable(_ref6) {\n  let {\n    rowCount = PAGE_SIZE\n  } = _ref6;\n  return /*#__PURE__*/_jsxDEV(GridContainer, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderRow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TokenDataContainer, {\n      children: /*#__PURE__*/_jsxDEV(LoadingRows, {\n        rowCount: rowCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_c3 = LoadingTokenTable;\nexport default function PoolTable() {\n  _s();\n  // TODO: consider moving prefetched call into app.tsx and passing it here, use a preloaded call & updated on interval every 60s\n  const chainName = validateUrlChainParam(useParams().chainName);\n  const {\n    tokens,\n    loadingTokens,\n    sparklines\n  } = useTopPools(chainName);\n\n  /* loading and error state */\n  if (loadingTokens) {\n    return /*#__PURE__*/_jsxDEV(LoadingTokenTable, {\n      rowCount: PAGE_SIZE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  } else if (!tokens) {\n    return /*#__PURE__*/_jsxDEV(NoTokensState, {\n      message: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"An error occurred loading tokens. Please try again.\"\n        }, void 0, false, void 0, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  } else if ((tokens === null || tokens === void 0 ? void 0 : tokens.length) === 0) {\n    return /*#__PURE__*/_jsxDEV(NoTokensState, {\n      message: /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"No tokens found\"\n      }, void 0, false, void 0, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(GridContainer, {\n      children: [/*#__PURE__*/_jsxDEV(HeaderRow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TokenDataContainer, {\n        children: tokens.map((token, index) => token && /*#__PURE__*/_jsxDEV(LoadedRow, {\n          tokenListIndex: index,\n          tokenListLength: tokens.length,\n          token: token,\n          sparklineMap: sparklines\n        }, token === null || token === void 0 ? void 0 : token.address, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n}\n_s(PoolTable, \"0g70WX6kfXRIRQPE+9SP6+BGo4o=\", false, function () {\n  return [useParams, useTopPools];\n});\n_c4 = PoolTable;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"NoTokensState\");\n$RefreshReg$(_c2, \"LoadingRows\");\n$RefreshReg$(_c3, \"LoadingTokenTable\");\n$RefreshReg$(_c4, \"PoolTable\");","map":{"version":3,"names":["PAGE_SIZE","useTopPools","validateUrlChainParam","AlertTriangle","useParams","MAX_WIDTH_MEDIA_BREAKPOINT","HeaderRow","LoadedRow","LoadingRow","GridContainer","styled","div","theme","backgroundSurface","backgroundOutline","TokenDataContainer","NoTokenDisplay","textSecondary","NoTokensState","message","LoadingRows","rowCount","Array","fill","map","_","index","LoadingTokenTable","PoolTable","chainName","tokens","loadingTokens","sparklines","length","token","address"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Pools/PoolTable/PoolTable.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { PAGE_SIZE, useTopPools } from 'graphql/data/TopTokens'\nimport { validateUrlChainParam } from 'graphql/data/util'\nimport { ReactNode } from 'react'\nimport { AlertTriangle } from 'react-feather'\nimport { useParams } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nimport { MAX_WIDTH_MEDIA_BREAKPOINT } from '../constants'\nimport { HeaderRow, LoadedRow, LoadingRow } from './TokenRow'\n\nconst GridContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: ${MAX_WIDTH_MEDIA_BREAKPOINT};\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  margin-left: auto;\n  margin-right: auto;\n  border-radius: 12px;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid ${({ theme }) => theme.backgroundOutline};\n`\n\nconst TokenDataContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  height: 100%;\n  width: 100%;\n`\n\nconst NoTokenDisplay = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n  height: 60px;\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 16px;\n  font-weight: 500;\n  align-items: center;\n  padding: 0px 28px;\n  gap: 8px;\n`\n\nfunction NoTokensState({ message }: { message: ReactNode }) {\n  return (\n    <GridContainer>\n      <HeaderRow />\n      <NoTokenDisplay>{message}</NoTokenDisplay>\n    </GridContainer>\n  )\n}\n\nconst LoadingRows = ({ rowCount }: { rowCount: number }) => (\n  <>\n    {Array(rowCount)\n      .fill(null)\n      .map((_, index) => {\n        return <LoadingRow key={index} first={index === 0} last={index === rowCount - 1} />\n      })}\n  </>\n)\n\nfunction LoadingTokenTable({ rowCount = PAGE_SIZE }: { rowCount?: number }) {\n  return (\n    <GridContainer>\n      <HeaderRow />\n      <TokenDataContainer>\n        <LoadingRows rowCount={rowCount} />\n      </TokenDataContainer>\n    </GridContainer>\n  )\n}\n\nexport default function PoolTable() {\n  // TODO: consider moving prefetched call into app.tsx and passing it here, use a preloaded call & updated on interval every 60s\n  const chainName = validateUrlChainParam(useParams<{ chainName?: string }>().chainName)\n  const { tokens, loadingTokens, sparklines } = useTopPools(chainName)\n\n  /* loading and error state */\n  if (loadingTokens) {\n    return <LoadingTokenTable rowCount={PAGE_SIZE} />\n  } else if (!tokens) {\n    return (\n      <NoTokensState\n        message={\n          <>\n            <AlertTriangle size={16} />\n            <Trans>An error occurred loading tokens. Please try again.</Trans>\n          </>\n        }\n      />\n    )\n  } else if (tokens?.length === 0) {\n    return <NoTokensState message={<Trans>No tokens found</Trans>} />\n  } else {\n    return (\n      <GridContainer>\n        <HeaderRow />\n        <TokenDataContainer>\n          {tokens.map(\n            (token, index) =>\n              token && (\n                <LoadedRow\n                  key={token?.address}\n                  tokenListIndex={index}\n                  tokenListLength={tokens.length}\n                  token={token}\n                  sparklineMap={sparklines}\n                />\n              )\n          )}\n        </TokenDataContainer>\n      </GridContainer>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}