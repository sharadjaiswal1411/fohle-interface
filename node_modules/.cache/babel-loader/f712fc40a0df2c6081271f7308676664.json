{"ast":null,"code":"'use strict';\n\nvar _createForOfIteratorHelper = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\nvar textDecoder = new TextDecoder();\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nvar decodeText = function decodeText(bytes) {\n  return textDecoder.decode(bytes);\n};\nvar textEncoder = new TextEncoder();\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nvar encodeText = function encodeText(text) {\n  return textEncoder.encode(text);\n};\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat(arrs, length) {\n  var output = new Uint8Array(length);\n  var offset = 0;\n  var _iterator = _createForOfIteratorHelper(arrs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var arr = _step.value;\n      output.set(arr, offset);\n      offset += arr.length;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return output;\n}\nmodule.exports = {\n  decodeText: decodeText,\n  encodeText: encodeText,\n  concat: concat\n};","map":{"version":3,"names":["textDecoder","TextDecoder","decodeText","bytes","decode","textEncoder","TextEncoder","encodeText","text","encode","concat","arrs","length","output","Uint8Array","offset","arr","set","module","exports"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/multibase/src/util.js"],"sourcesContent":["'use strict'\n\nconst textDecoder = new TextDecoder()\n/**\n * @param {ArrayBufferView|ArrayBuffer} bytes\n * @returns {string}\n */\nconst decodeText = (bytes) => textDecoder.decode(bytes)\n\nconst textEncoder = new TextEncoder()\n/**\n * @param {string} text\n * @returns {Uint8Array}\n */\nconst encodeText = (text) => textEncoder.encode(text)\n\n/**\n * Returns a new Uint8Array created by concatenating the passed Arrays\n *\n * @param {Array<ArrayLike<number>>} arrs\n * @param {number} length\n * @returns {Uint8Array}\n */\nfunction concat (arrs, length) {\n  const output = new Uint8Array(length)\n  let offset = 0\n\n  for (const arr of arrs) {\n    output.set(arr, offset)\n    offset += arr.length\n  }\n\n  return output\n}\n\nmodule.exports = { decodeText, encodeText, concat }\n"],"mappings":"AAAA,YAAY;;AAAA;AAEZ,IAAMA,WAAW,GAAG,IAAIC,WAAW,EAAE;AACrC;AACA;AACA;AACA;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,KAAK;EAAA,OAAKH,WAAW,CAACI,MAAM,CAACD,KAAK,CAAC;AAAA;AAEvD,IAAME,WAAW,GAAG,IAAIC,WAAW,EAAE;AACrC;AACA;AACA;AACA;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAU,CAAIC,IAAI;EAAA,OAAKH,WAAW,CAACI,MAAM,CAACD,IAAI,CAAC;AAAA;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,MAAM,CAAEC,IAAI,EAAEC,MAAM,EAAE;EAC7B,IAAMC,MAAM,GAAG,IAAIC,UAAU,CAACF,MAAM,CAAC;EACrC,IAAIG,MAAM,GAAG,CAAC;EAAA,2CAEIJ,IAAI;IAAA;EAAA;IAAtB,oDAAwB;MAAA,IAAbK,GAAG;MACZH,MAAM,CAACI,GAAG,CAACD,GAAG,EAAED,MAAM,CAAC;MACvBA,MAAM,IAAIC,GAAG,CAACJ,MAAM;IACtB;EAAC;IAAA;EAAA;IAAA;EAAA;EAED,OAAOC,MAAM;AACf;AAEAK,MAAM,CAACC,OAAO,GAAG;EAAEjB,UAAU,EAAVA,UAAU;EAAEK,UAAU,EAAVA,UAAU;EAAEG,MAAM,EAANA;AAAO,CAAC"},"metadata":{},"sourceType":"script"}