{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _CHAIN_SUBGRAPH_URL;import{ApolloClient,ApolloLink,concat,HttpLink,InMemoryCache}from'@apollo/client';import{SupportedChainId}from'constants/chains';import store from'../../state/index';var CHAIN_SUBGRAPH_URL=(_CHAIN_SUBGRAPH_URL={},_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.MAINNET,'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'),_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.RINKEBY,'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3'),_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.ARBITRUM_ONE,'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal'),_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.OPTIMISM,'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis'),_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.POLYGON,'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon'),_defineProperty(_CHAIN_SUBGRAPH_URL,SupportedChainId.CELO,'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo'),_CHAIN_SUBGRAPH_URL);var httpLink=new HttpLink({uri:CHAIN_SUBGRAPH_URL[SupportedChainId.MAINNET]});// This middleware will allow us to dynamically update the uri for the requests based off chainId\n// For more information: https://www.apollographql.com/docs/react/networking/advanced-http-networking/\nvar authMiddleware=new ApolloLink(function(operation,forward){// add the authorization to the headers\nvar chainId=store.getState().application.chainId;operation.setContext(function(){return{uri:chainId&&CHAIN_SUBGRAPH_URL[chainId]?CHAIN_SUBGRAPH_URL[chainId]:CHAIN_SUBGRAPH_URL[SupportedChainId.MAINNET]};});return forward(operation);});export var apolloClient=new ApolloClient({cache:new InMemoryCache(),link:concat(authMiddleware,httpLink)});","map":{"version":3,"names":["ApolloClient","ApolloLink","concat","HttpLink","InMemoryCache","SupportedChainId","store","CHAIN_SUBGRAPH_URL","MAINNET","RINKEBY","ARBITRUM_ONE","OPTIMISM","POLYGON","CELO","httpLink","uri","authMiddleware","operation","forward","chainId","getState","application","setContext","apolloClient","cache","link"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/thegraph/apollo.ts"],"sourcesContent":["import { ApolloClient, ApolloLink, concat, HttpLink, InMemoryCache } from '@apollo/client'\nimport { SupportedChainId } from 'constants/chains'\n\nimport store, { AppState } from '../../state/index'\n\nconst CHAIN_SUBGRAPH_URL: Record<number, string> = {\n  [SupportedChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n  [SupportedChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3',\n\n  [SupportedChainId.ARBITRUM_ONE]: 'https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-minimal',\n\n  [SupportedChainId.OPTIMISM]: 'https://api.thegraph.com/subgraphs/name/ianlapham/optimism-post-regenesis',\n\n  [SupportedChainId.POLYGON]: 'https://api.thegraph.com/subgraphs/name/ianlapham/uniswap-v3-polygon',\n\n  [SupportedChainId.CELO]: 'https://api.thegraph.com/subgraphs/name/jesse-sawa/uniswap-celo',\n}\n\nconst httpLink = new HttpLink({ uri: CHAIN_SUBGRAPH_URL[SupportedChainId.MAINNET] })\n\n// This middleware will allow us to dynamically update the uri for the requests based off chainId\n// For more information: https://www.apollographql.com/docs/react/networking/advanced-http-networking/\nconst authMiddleware = new ApolloLink((operation, forward) => {\n  // add the authorization to the headers\n  const chainId = (store.getState() as AppState).application.chainId\n\n  operation.setContext(() => ({\n    uri:\n      chainId && CHAIN_SUBGRAPH_URL[chainId]\n        ? CHAIN_SUBGRAPH_URL[chainId]\n        : CHAIN_SUBGRAPH_URL[SupportedChainId.MAINNET],\n  }))\n\n  return forward(operation)\n})\n\nexport const apolloClient = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: concat(authMiddleware, httpLink),\n})\n"],"mappings":"sMAAA,OAASA,YAAY,CAAEC,UAAU,CAAEC,MAAM,CAAEC,QAAQ,CAAEC,aAAa,KAAQ,gBAAgB,CAC1F,OAASC,gBAAgB,KAAQ,kBAAkB,CAEnD,MAAOC,MAAK,KAAoB,mBAAmB,CAEnD,GAAMC,mBAA0C,6DAC7CF,gBAAgB,CAACG,OAAO,CAAG,4DAA4D,sCACvFH,gBAAgB,CAACI,OAAO,CAAG,4DAA4D,sCAEvFJ,gBAAgB,CAACK,YAAY,CAAG,oEAAoE,sCAEpGL,gBAAgB,CAACM,QAAQ,CAAG,2EAA2E,sCAEvGN,gBAAgB,CAACO,OAAO,CAAG,sEAAsE,sCAEjGP,gBAAgB,CAACQ,IAAI,CAAG,iEAAiE,sBAC3F,CAED,GAAMC,SAAQ,CAAG,GAAIX,SAAQ,CAAC,CAAEY,GAAG,CAAER,kBAAkB,CAACF,gBAAgB,CAACG,OAAO,CAAE,CAAC,CAAC,CAEpF;AACA;AACA,GAAMQ,eAAc,CAAG,GAAIf,WAAU,CAAC,SAACgB,SAAS,CAAEC,OAAO,CAAK,CAC5D;AACA,GAAMC,QAAO,CAAIb,KAAK,CAACc,QAAQ,EAAE,CAAcC,WAAW,CAACF,OAAO,CAElEF,SAAS,CAACK,UAAU,CAAC,iBAAO,CAC1BP,GAAG,CACDI,OAAO,EAAIZ,kBAAkB,CAACY,OAAO,CAAC,CAClCZ,kBAAkB,CAACY,OAAO,CAAC,CAC3BZ,kBAAkB,CAACF,gBAAgB,CAACG,OAAO,CACnD,CAAC,EAAC,CAAC,CAEH,MAAOU,QAAO,CAACD,SAAS,CAAC,CAC3B,CAAC,CAAC,CAEF,MAAO,IAAMM,aAAY,CAAG,GAAIvB,aAAY,CAAC,CAC3CwB,KAAK,CAAE,GAAIpB,cAAa,EAAE,CAC1BqB,IAAI,CAAEvB,MAAM,CAACc,cAAc,CAAEF,QAAQ,CACvC,CAAC,CAAC"},"metadata":{},"sourceType":"module"}