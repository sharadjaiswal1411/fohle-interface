{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/CurrencyLogo/index.tsx\",\n  _s = $RefreshSig$();\nimport { OptimismNetworkInfo } from 'constants/networks';\nimport useHttpLocations from 'hooks/useHttpLocations';\nimport React, { useMemo } from 'react';\nimport { useActiveNetworkVersion } from 'state/application/hooks';\nimport { useCombinedActiveList } from 'state/lists/hooks';\nimport { isAddress } from 'utils';\nimport EthereumLogo from '../../assets/images/ethereum-logo.png';\nimport Logo from '../Logo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getTokenLogoURL = address => {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n};\nconst StyledLogo = _styled(Logo).withConfig({\n  displayName: \"CurrencyLogo__StyledLogo\",\n  componentId: \"sc-1fvnadz-0\"\n})([\"width:\", \";height:\", \";border-radius:\", \";box-shadow:0px 6px 10px rgba(0,0,0,0.075);background-color:\", \";color:\", \";\"], _ref => {\n  let {\n    size\n  } = _ref;\n  return size;\n}, _ref2 => {\n  let {\n    size\n  } = _ref2;\n  return size;\n}, _ref3 => {\n  let {\n    size\n  } = _ref3;\n  return size;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return theme.white;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.textPrimary;\n});\nconst StyledEthereumLogo = _styled.img.withConfig({\n  displayName: \"CurrencyLogo__StyledEthereumLogo\",\n  componentId: \"sc-1fvnadz-1\"\n})([\"width:\", \";height:\", \";box-shadow:0px 6px 10px rgba(0,0,0,0.075);border-radius:24px;\"], _ref6 => {\n  let {\n    size\n  } = _ref6;\n  return size;\n}, _ref7 => {\n  let {\n    size\n  } = _ref7;\n  return size;\n});\nexport default function CurrencyLogo(_ref8) {\n  _s();\n  var _useCombinedActiveLis, _useCombinedActiveLis2, _useCombinedActiveLis3, _useCombinedActiveLis4;\n  let {\n    address,\n    size = '24px',\n    style,\n    ...rest\n  } = _ref8;\n  // useOptimismList()\n  const optimismList = (_useCombinedActiveLis = useCombinedActiveList()) === null || _useCombinedActiveLis === void 0 ? void 0 : _useCombinedActiveLis[10];\n  const arbitrumList = (_useCombinedActiveLis2 = useCombinedActiveList()) === null || _useCombinedActiveLis2 === void 0 ? void 0 : _useCombinedActiveLis2[42161];\n  const polygon = (_useCombinedActiveLis3 = useCombinedActiveList()) === null || _useCombinedActiveLis3 === void 0 ? void 0 : _useCombinedActiveLis3[137];\n  const celo = (_useCombinedActiveLis4 = useCombinedActiveList()) === null || _useCombinedActiveLis4 === void 0 ? void 0 : _useCombinedActiveLis4[42220];\n  const [activeNetwork] = useActiveNetworkVersion();\n  const checkSummed = isAddress(address);\n  const optimismURI = useMemo(() => {\n    if (checkSummed && (optimismList === null || optimismList === void 0 ? void 0 : optimismList[checkSummed])) {\n      return optimismList === null || optimismList === void 0 ? void 0 : optimismList[checkSummed].token.logoURI;\n    }\n    return undefined;\n  }, [checkSummed, optimismList]);\n  const uriLocationsOptimism = useHttpLocations(optimismURI);\n  const arbitrumURI = useMemo(() => {\n    if (checkSummed && (arbitrumList === null || arbitrumList === void 0 ? void 0 : arbitrumList[checkSummed])) {\n      return arbitrumList === null || arbitrumList === void 0 ? void 0 : arbitrumList[checkSummed].token.logoURI;\n    }\n    return undefined;\n  }, [checkSummed, arbitrumList]);\n  const uriLocationsArbitrum = useHttpLocations(arbitrumURI);\n  const polygonURI = useMemo(() => {\n    if (checkSummed && (polygon === null || polygon === void 0 ? void 0 : polygon[checkSummed])) {\n      return polygon === null || polygon === void 0 ? void 0 : polygon[checkSummed].token.logoURI;\n    }\n    return undefined;\n  }, [checkSummed, polygon]);\n  const uriLocationsPolygon = useHttpLocations(polygonURI);\n  const celoURI = useMemo(() => {\n    if (checkSummed && (celo === null || celo === void 0 ? void 0 : celo[checkSummed])) {\n      return celo === null || celo === void 0 ? void 0 : celo[checkSummed].token.logoURI;\n    }\n    return undefined;\n  }, [checkSummed, celo]);\n  const uriLocationsCelo = useHttpLocations(celoURI);\n\n  //temp until token logo issue merged\n  const tempSources = useMemo(() => {\n    return {\n      ['0x4dd28568d05f09b02220b09c2cb307bfd837cb95']: 'https://assets.coingecko.com/coins/images/18143/thumb/wCPb0b88_400x400.png?1630667954'\n    };\n  }, []);\n  const srcs = useMemo(() => {\n    const checkSummed = isAddress(address);\n    if (checkSummed && address) {\n      const override = tempSources[address];\n      return [getTokenLogoURL(checkSummed), ...uriLocationsOptimism, ...uriLocationsArbitrum, ...uriLocationsPolygon, ...uriLocationsCelo, override];\n    }\n    return [];\n  }, [address, tempSources, uriLocationsArbitrum, uriLocationsOptimism, uriLocationsPolygon, uriLocationsCelo]);\n  if (activeNetwork === OptimismNetworkInfo && address === '0x4200000000000000000000000000000000000006') {\n    return /*#__PURE__*/_jsxDEV(StyledEthereumLogo, {\n      src: EthereumLogo,\n      size: size,\n      style: style,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(StyledLogo, {\n    size: size,\n    srcs: srcs,\n    alt: \"token logo\",\n    style: style,\n    ...rest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 10\n  }, this);\n}\n_s(CurrencyLogo, \"rBbebi9lBJRA3WYO8j7V/i1Jzp8=\", false, function () {\n  return [useCombinedActiveList, useCombinedActiveList, useCombinedActiveList, useCombinedActiveList, useActiveNetworkVersion, useHttpLocations, useHttpLocations, useHttpLocations, useHttpLocations];\n});\n_c = CurrencyLogo;\nvar _c;\n$RefreshReg$(_c, \"CurrencyLogo\");","map":{"version":3,"names":["OptimismNetworkInfo","useHttpLocations","React","useMemo","useActiveNetworkVersion","useCombinedActiveList","isAddress","EthereumLogo","Logo","getTokenLogoURL","address","StyledLogo","styled","size","theme","white","textPrimary","StyledEthereumLogo","img","CurrencyLogo","style","rest","optimismList","arbitrumList","polygon","celo","activeNetwork","checkSummed","optimismURI","token","logoURI","undefined","uriLocationsOptimism","arbitrumURI","uriLocationsArbitrum","polygonURI","uriLocationsPolygon","celoURI","uriLocationsCelo","tempSources","srcs","override"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/CurrencyLogo/index.tsx"],"sourcesContent":["import { OptimismNetworkInfo } from 'constants/networks'\nimport useHttpLocations from 'hooks/useHttpLocations'\nimport React, { useMemo } from 'react'\nimport { useActiveNetworkVersion } from 'state/application/hooks'\nimport { useCombinedActiveList } from 'state/lists/hooks'\nimport styled from 'styled-components/macro'\nimport { isAddress } from 'utils'\n\nimport EthereumLogo from '../../assets/images/ethereum-logo.png'\nimport Logo from '../Logo'\n\nconst getTokenLogoURL = (address: string) => {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n}\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  border-radius: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  background-color: ${({ theme }) => theme.white};\n  color: ${({ theme }) => theme.textPrimary};\n`\n\nconst StyledEthereumLogo = styled.img<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  border-radius: 24px;\n`\n\nexport default function CurrencyLogo({\n  address,\n  size = '24px',\n  style,\n  ...rest\n}: {\n  address?: string\n  size?: string\n  style?: React.CSSProperties\n}) {\n  // useOptimismList()\n  const optimismList = useCombinedActiveList()?.[10]\n  const arbitrumList = useCombinedActiveList()?.[42161]\n  const polygon = useCombinedActiveList()?.[137]\n  const celo = useCombinedActiveList()?.[42220]\n\n  const [activeNetwork] = useActiveNetworkVersion()\n\n  const checkSummed = isAddress(address)\n\n  const optimismURI = useMemo(() => {\n    if (checkSummed && optimismList?.[checkSummed]) {\n      return optimismList?.[checkSummed].token.logoURI\n    }\n    return undefined\n  }, [checkSummed, optimismList])\n  const uriLocationsOptimism = useHttpLocations(optimismURI)\n\n  const arbitrumURI = useMemo(() => {\n    if (checkSummed && arbitrumList?.[checkSummed]) {\n      return arbitrumList?.[checkSummed].token.logoURI\n    }\n    return undefined\n  }, [checkSummed, arbitrumList])\n  const uriLocationsArbitrum = useHttpLocations(arbitrumURI)\n\n  const polygonURI = useMemo(() => {\n    if (checkSummed && polygon?.[checkSummed]) {\n      return polygon?.[checkSummed].token.logoURI\n    }\n    return undefined\n  }, [checkSummed, polygon])\n  const uriLocationsPolygon = useHttpLocations(polygonURI)\n\n  const celoURI = useMemo(() => {\n    if (checkSummed && celo?.[checkSummed]) {\n      return celo?.[checkSummed].token.logoURI\n    }\n    return undefined\n  }, [checkSummed, celo])\n  const uriLocationsCelo = useHttpLocations(celoURI)\n\n  //temp until token logo issue merged\n  const tempSources: { [address: string]: string } = useMemo(() => {\n    return {\n      ['0x4dd28568d05f09b02220b09c2cb307bfd837cb95']:\n        'https://assets.coingecko.com/coins/images/18143/thumb/wCPb0b88_400x400.png?1630667954',\n    }\n  }, [])\n\n  const srcs: string[] = useMemo(() => {\n    const checkSummed = isAddress(address)\n\n    if (checkSummed && address) {\n      const override = tempSources[address]\n      return [\n        getTokenLogoURL(checkSummed),\n        ...uriLocationsOptimism,\n        ...uriLocationsArbitrum,\n        ...uriLocationsPolygon,\n        ...uriLocationsCelo,\n        override,\n      ]\n    }\n    return []\n  }, [address, tempSources, uriLocationsArbitrum, uriLocationsOptimism, uriLocationsPolygon, uriLocationsCelo])\n\n  if (activeNetwork === OptimismNetworkInfo && address === '0x4200000000000000000000000000000000000006') {\n    return <StyledEthereumLogo src={EthereumLogo} size={size} style={style} {...rest} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt=\"token logo\" style={style} {...rest} />\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}