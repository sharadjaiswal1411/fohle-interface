{"ast":null,"code":"import create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport let SortBy;\n(function (SortBy) {\n  SortBy[SortBy[\"LowToHigh\"] = 0] = \"LowToHigh\";\n  SortBy[SortBy[\"HighToLow\"] = 1] = \"HighToLow\";\n  SortBy[SortBy[\"RareToCommon\"] = 2] = \"RareToCommon\";\n  SortBy[SortBy[\"CommonToRare\"] = 3] = \"CommonToRare\";\n})(SortBy || (SortBy = {}));\nexport const SortByPointers = {\n  [SortBy.HighToLow]: 'highest',\n  [SortBy.LowToHigh]: 'lowest',\n  [SortBy.RareToCommon]: 'rare',\n  [SortBy.CommonToRare]: 'common'\n};\nexport const SortByQueries = {\n  [SortBy.HighToLow]: {\n    field: 'PRICE',\n    asc: false\n  },\n  [SortBy.LowToHigh]: {\n    field: 'PRICE',\n    asc: true\n  },\n  [SortBy.RareToCommon]: {\n    field: 'RARITY',\n    asc: true\n  },\n  [SortBy.CommonToRare]: {\n    field: 'RARITY',\n    asc: false\n  }\n};\nexport const initialCollectionFilterState = {\n  minPrice: '',\n  maxPrice: '',\n  minRarity: '',\n  maxRarity: '',\n  traits: [],\n  hasRarity: false,\n  markets: [],\n  marketCount: {},\n  buyNow: false,\n  search: '',\n  sortBy: SortBy.LowToHigh,\n  showFullTraitName: {\n    shouldShow: false,\n    trait_value: '',\n    trait_type: ''\n  }\n};\nexport const useCollectionFilters = create()(devtools(set => ({\n  ...initialCollectionFilterState,\n  setHasRarity: hasRarity => set({\n    hasRarity\n  }),\n  setSortBy: sortBy => set({\n    sortBy\n  }),\n  setSearch: search => set({\n    search\n  }),\n  setBuyNow: buyNow => set({\n    buyNow\n  }),\n  setMarketCount: marketCount => set({\n    marketCount\n  }),\n  addMarket: market => set(_ref => {\n    let {\n      markets\n    } = _ref;\n    return {\n      markets: [...markets, market]\n    };\n  }),\n  removeMarket: market => set(_ref2 => {\n    let {\n      markets\n    } = _ref2;\n    return {\n      markets: markets.filter(_market => market !== _market)\n    };\n  }),\n  addTrait: trait => set(_ref3 => {\n    let {\n      traits\n    } = _ref3;\n    return {\n      traits: [...traits, trait]\n    };\n  }),\n  removeTrait: trait => set(_ref4 => {\n    let {\n      traits\n    } = _ref4;\n    return {\n      traits: traits.filter(x => JSON.stringify(x) !== JSON.stringify(trait))\n    };\n  }),\n  reset: () => set(() => ({\n    traits: [],\n    minRarity: '',\n    maxRarity: '',\n    markets: [],\n    minPrice: '',\n    maxPrice: ''\n  })),\n  setMinPrice: price => set(() => ({\n    minPrice: price\n  })),\n  setMaxPrice: price => set(() => ({\n    maxPrice: price\n  })),\n  setMinRarity: range => set(() => ({\n    minRarity: range\n  })),\n  setMaxRarity: range => set(() => ({\n    maxRarity: range\n  })),\n  toggleShowFullTraitName: _ref5 => {\n    let {\n      shouldShow,\n      trait_value,\n      trait_type\n    } = _ref5;\n    return set(() => ({\n      showFullTraitName: {\n        shouldShow,\n        trait_value,\n        trait_type\n      }\n    }));\n  }\n}), {\n  name: 'useCollectionTraits'\n}));","map":{"version":3,"names":["create","devtools","SortBy","SortByPointers","HighToLow","LowToHigh","RareToCommon","CommonToRare","SortByQueries","field","asc","initialCollectionFilterState","minPrice","maxPrice","minRarity","maxRarity","traits","hasRarity","markets","marketCount","buyNow","search","sortBy","showFullTraitName","shouldShow","trait_value","trait_type","useCollectionFilters","set","setHasRarity","setSortBy","setSearch","setBuyNow","setMarketCount","addMarket","market","removeMarket","filter","_market","addTrait","trait","removeTrait","x","JSON","stringify","reset","setMinPrice","price","setMaxPrice","setMinRarity","range","setMaxRarity","toggleShowFullTraitName","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useCollectionFilters.ts"],"sourcesContent":["import { NftAssetSortableField } from 'graphql/data/__generated__/types-and-hooks'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\nexport enum SortBy {\n  LowToHigh,\n  HighToLow,\n  RareToCommon,\n  CommonToRare,\n}\n\nexport const SortByPointers = {\n  [SortBy.HighToLow]: 'highest',\n  [SortBy.LowToHigh]: 'lowest',\n  [SortBy.RareToCommon]: 'rare',\n  [SortBy.CommonToRare]: 'common',\n}\ninterface QueryInfo {\n  field: NftAssetSortableField\n  asc: boolean\n}\nexport const SortByQueries = {\n  [SortBy.HighToLow]: { field: 'PRICE', asc: false } as QueryInfo,\n  [SortBy.LowToHigh]: { field: 'PRICE', asc: true } as QueryInfo,\n  [SortBy.RareToCommon]: { field: 'RARITY', asc: true } as QueryInfo,\n  [SortBy.CommonToRare]: { field: 'RARITY', asc: false } as QueryInfo,\n}\n\nexport type Trait = {\n  trait_type: string\n  trait_value: string\n  trait_count?: number\n  floorPrice?: number\n}\n\ninterface State {\n  traits: Trait[]\n  hasRarity: boolean\n  markets: string[]\n  minPrice: string\n  maxPrice: string\n  minRarity: number | ''\n  maxRarity: number | ''\n  marketCount: Record<string, number>\n  buyNow: boolean\n  search: string\n  sortBy: SortBy\n  showFullTraitName: { shouldShow: boolean; trait_value?: string; trait_type: string }\n}\n\ntype Actions = {\n  setHasRarity: (hasRarity: boolean) => void\n  setMarketCount: (_: Record<string, number>) => void\n  addMarket: (market: string) => void\n  removeMarket: (market: string) => void\n  addTrait: (trait: Trait) => void\n  removeTrait: (trait: Trait) => void\n  reset: () => void\n  setMinPrice: (price: string) => void\n  setMaxPrice: (price: string) => void\n  setMinRarity: (range: number | '') => void\n  setMaxRarity: (range: number | '') => void\n  setBuyNow: (bool: boolean) => void\n  setSearch: (term: string) => void\n  setSortBy: (sortBy: SortBy) => void\n  toggleShowFullTraitName: (show: { shouldShow: boolean; trait_value: string; trait_type: string }) => void\n}\n\nexport type CollectionFilters = State & Actions\n\nexport const initialCollectionFilterState: State = {\n  minPrice: '',\n  maxPrice: '',\n  minRarity: '',\n  maxRarity: '',\n  traits: [],\n  hasRarity: false,\n  markets: [],\n  marketCount: {},\n  buyNow: false,\n  search: '',\n  sortBy: SortBy.LowToHigh,\n  showFullTraitName: { shouldShow: false, trait_value: '', trait_type: '' },\n}\n\nexport const useCollectionFilters = create<CollectionFilters>()(\n  devtools(\n    (set) => ({\n      ...initialCollectionFilterState,\n      setHasRarity: (hasRarity) => set({ hasRarity }),\n      setSortBy: (sortBy) => set({ sortBy }),\n      setSearch: (search) => set({ search }),\n      setBuyNow: (buyNow) => set({ buyNow }),\n      setMarketCount: (marketCount) => set({ marketCount }),\n      addMarket: (market) => set(({ markets }) => ({ markets: [...markets, market] })),\n      removeMarket: (market) => set(({ markets }) => ({ markets: markets.filter((_market) => market !== _market) })),\n      addTrait: (trait) => set(({ traits }) => ({ traits: [...traits, trait] })),\n      removeTrait: (trait) =>\n        set(({ traits }) => ({\n          traits: traits.filter((x) => JSON.stringify(x) !== JSON.stringify(trait)),\n        })),\n      reset: () => set(() => ({ traits: [], minRarity: '', maxRarity: '', markets: [], minPrice: '', maxPrice: '' })),\n      setMinPrice: (price) => set(() => ({ minPrice: price })),\n      setMaxPrice: (price) => set(() => ({ maxPrice: price })),\n      setMinRarity: (range) => set(() => ({ minRarity: range })),\n      setMaxRarity: (range) => set(() => ({ maxRarity: range })),\n      toggleShowFullTraitName: ({ shouldShow, trait_value, trait_type }) =>\n        set(() => ({ showFullTraitName: { shouldShow, trait_value, trait_type } })),\n    }),\n    { name: 'useCollectionTraits' }\n  )\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}