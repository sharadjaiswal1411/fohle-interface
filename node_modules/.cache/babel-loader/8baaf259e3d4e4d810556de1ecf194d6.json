{"ast":null,"code":"import _classCallCheck from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import store from'../state';import{UNI_EXTENDED_LIST,UNI_LIST,UNSUPPORTED_LIST_URLS}from'./lists';import brokenTokenList from'./tokenLists/broken.tokenlist.json';import{NATIVE_CHAIN_ID}from'./tokens';export var TOKEN_LIST_TYPES;(function(TOKEN_LIST_TYPES){TOKEN_LIST_TYPES[TOKEN_LIST_TYPES[\"UNI_DEFAULT\"]=1]=\"UNI_DEFAULT\";TOKEN_LIST_TYPES[TOKEN_LIST_TYPES[\"UNI_EXTENDED\"]=2]=\"UNI_EXTENDED\";TOKEN_LIST_TYPES[TOKEN_LIST_TYPES[\"UNKNOWN\"]=3]=\"UNKNOWN\";TOKEN_LIST_TYPES[TOKEN_LIST_TYPES[\"BLOCKED\"]=4]=\"BLOCKED\";TOKEN_LIST_TYPES[TOKEN_LIST_TYPES[\"BROKEN\"]=5]=\"BROKEN\";})(TOKEN_LIST_TYPES||(TOKEN_LIST_TYPES={}));var TokenSafetyLookupTable=/*#__PURE__*/function(){function TokenSafetyLookupTable(){_classCallCheck(this,TokenSafetyLookupTable);this.dict=null;}_createClass(TokenSafetyLookupTable,[{key:\"createMap\",value:function createMap(){var _store$getState$lists,_store$getState$lists2;var dict={};// Initialize extended tokens first\n(_store$getState$lists=store.getState().lists.byUrl[UNI_EXTENDED_LIST].current)===null||_store$getState$lists===void 0?void 0:_store$getState$lists.tokens.forEach(function(token){dict[token.address.toLowerCase()]=TOKEN_LIST_TYPES.UNI_EXTENDED;});// Initialize default tokens second, so that any tokens on both default and extended will display as default (no warning)\n(_store$getState$lists2=store.getState().lists.byUrl[UNI_LIST].current)===null||_store$getState$lists2===void 0?void 0:_store$getState$lists2.tokens.forEach(function(token){dict[token.address.toLowerCase()]=TOKEN_LIST_TYPES.UNI_DEFAULT;});// TODO: Figure out if this list is still relevant\nbrokenTokenList.tokens.forEach(function(token){dict[token.address.toLowerCase()]=TOKEN_LIST_TYPES.BROKEN;});// Initialize blocked tokens from all urls included\nUNSUPPORTED_LIST_URLS.map(function(url){var _store$getState$lists3;return(_store$getState$lists3=store.getState().lists.byUrl[url].current)===null||_store$getState$lists3===void 0?void 0:_store$getState$lists3.tokens;}).filter(function(x){return!!x;}).flat(1).forEach(function(token){dict[token.address.toLowerCase()]=TOKEN_LIST_TYPES.BLOCKED;});return dict;}},{key:\"checkToken\",value:function checkToken(address){var _this$dict$address;if(!this.dict){this.dict=this.createMap();}if(address===NATIVE_CHAIN_ID.toLowerCase()){return TOKEN_LIST_TYPES.UNI_DEFAULT;}return(_this$dict$address=this.dict[address])!==null&&_this$dict$address!==void 0?_this$dict$address:TOKEN_LIST_TYPES.UNKNOWN;}}]);return TokenSafetyLookupTable;}();export default new TokenSafetyLookupTable();","map":{"version":3,"names":["store","UNI_EXTENDED_LIST","UNI_LIST","UNSUPPORTED_LIST_URLS","brokenTokenList","NATIVE_CHAIN_ID","TOKEN_LIST_TYPES","TokenSafetyLookupTable","dict","getState","lists","byUrl","current","tokens","forEach","token","address","toLowerCase","UNI_EXTENDED","UNI_DEFAULT","BROKEN","map","url","filter","x","flat","BLOCKED","createMap","UNKNOWN"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/constants/TokenSafetyLookupTable.ts"],"sourcesContent":["import { TokenInfo } from '@uniswap/token-lists'\n\nimport store from '../state'\nimport { UNI_EXTENDED_LIST, UNI_LIST, UNSUPPORTED_LIST_URLS } from './lists'\nimport brokenTokenList from './tokenLists/broken.tokenlist.json'\nimport { NATIVE_CHAIN_ID } from './tokens'\n\nexport enum TOKEN_LIST_TYPES {\n  UNI_DEFAULT = 1,\n  UNI_EXTENDED,\n  UNKNOWN,\n  BLOCKED,\n  BROKEN,\n}\n\nclass TokenSafetyLookupTable {\n  dict: { [key: string]: TOKEN_LIST_TYPES } | null = null\n\n  createMap() {\n    const dict: { [key: string]: TOKEN_LIST_TYPES } = {}\n\n    // Initialize extended tokens first\n    store.getState().lists.byUrl[UNI_EXTENDED_LIST].current?.tokens.forEach((token) => {\n      dict[token.address.toLowerCase()] = TOKEN_LIST_TYPES.UNI_EXTENDED\n    })\n\n    // Initialize default tokens second, so that any tokens on both default and extended will display as default (no warning)\n    store.getState().lists.byUrl[UNI_LIST].current?.tokens.forEach((token) => {\n      dict[token.address.toLowerCase()] = TOKEN_LIST_TYPES.UNI_DEFAULT\n    })\n\n    // TODO: Figure out if this list is still relevant\n    brokenTokenList.tokens.forEach((token) => {\n      dict[token.address.toLowerCase()] = TOKEN_LIST_TYPES.BROKEN\n    })\n\n    // Initialize blocked tokens from all urls included\n    UNSUPPORTED_LIST_URLS.map((url) => store.getState().lists.byUrl[url].current?.tokens)\n      .filter((x): x is TokenInfo[] => !!x)\n      .flat(1)\n      .forEach((token) => {\n        dict[token.address.toLowerCase()] = TOKEN_LIST_TYPES.BLOCKED\n      })\n    return dict\n  }\n\n  checkToken(address: string) {\n    if (!this.dict) {\n      this.dict = this.createMap()\n    }\n    if (address === NATIVE_CHAIN_ID.toLowerCase()) {\n      return TOKEN_LIST_TYPES.UNI_DEFAULT\n    }\n    return this.dict[address] ?? TOKEN_LIST_TYPES.UNKNOWN\n  }\n}\n\nexport default new TokenSafetyLookupTable()\n"],"mappings":"sVAEA,MAAOA,MAAK,KAAM,UAAU,CAC5B,OAASC,iBAAiB,CAAEC,QAAQ,CAAEC,qBAAqB,KAAQ,SAAS,CAC5E,MAAOC,gBAAe,KAAM,oCAAoC,CAChE,OAASC,eAAe,KAAQ,UAAU,CAE1C,UAAYC,iBAAgB,CAM3B,UANWA,gBAAgB,EAAhBA,gBAAgB,CAAhBA,gBAAgB,iCAAhBA,gBAAgB,CAAhBA,gBAAgB,mCAAhBA,gBAAgB,CAAhBA,gBAAgB,yBAAhBA,gBAAgB,CAAhBA,gBAAgB,yBAAhBA,gBAAgB,CAAhBA,gBAAgB,0BAAhBA,gBAAgB,GAAhBA,gBAAgB,SAQtBC,uBAAsB,6GAC1BC,IAAI,CAA+C,IAAI,8DAEvD,oBAAY,kDACV,GAAMA,KAAyC,CAAG,CAAC,CAAC,CAEpD;AACA,uBAAAR,KAAK,CAACS,QAAQ,EAAE,CAACC,KAAK,CAACC,KAAK,CAACV,iBAAiB,CAAC,CAACW,OAAO,gDAAvD,sBAAyDC,MAAM,CAACC,OAAO,CAAC,SAACC,KAAK,CAAK,CACjFP,IAAI,CAACO,KAAK,CAACC,OAAO,CAACC,WAAW,EAAE,CAAC,CAAGX,gBAAgB,CAACY,YAAY,CACnE,CAAC,CAAC,CAEF;AACA,wBAAAlB,KAAK,CAACS,QAAQ,EAAE,CAACC,KAAK,CAACC,KAAK,CAACT,QAAQ,CAAC,CAACU,OAAO,iDAA9C,uBAAgDC,MAAM,CAACC,OAAO,CAAC,SAACC,KAAK,CAAK,CACxEP,IAAI,CAACO,KAAK,CAACC,OAAO,CAACC,WAAW,EAAE,CAAC,CAAGX,gBAAgB,CAACa,WAAW,CAClE,CAAC,CAAC,CAEF;AACAf,eAAe,CAACS,MAAM,CAACC,OAAO,CAAC,SAACC,KAAK,CAAK,CACxCP,IAAI,CAACO,KAAK,CAACC,OAAO,CAACC,WAAW,EAAE,CAAC,CAAGX,gBAAgB,CAACc,MAAM,CAC7D,CAAC,CAAC,CAEF;AACAjB,qBAAqB,CAACkB,GAAG,CAAC,SAACC,GAAG,2DAAKtB,KAAK,CAACS,QAAQ,EAAE,CAACC,KAAK,CAACC,KAAK,CAACW,GAAG,CAAC,CAACV,OAAO,iDAAzC,uBAA2CC,MAAM,GAAC,CAClFU,MAAM,CAAC,SAACC,CAAC,QAAuB,CAAC,CAACA,CAAC,GAAC,CACpCC,IAAI,CAAC,CAAC,CAAC,CACPX,OAAO,CAAC,SAACC,KAAK,CAAK,CAClBP,IAAI,CAACO,KAAK,CAACC,OAAO,CAACC,WAAW,EAAE,CAAC,CAAGX,gBAAgB,CAACoB,OAAO,CAC9D,CAAC,CAAC,CACJ,MAAOlB,KAAI,CACb,CAAC,0BAED,oBAAWQ,OAAe,CAAE,wBAC1B,GAAI,CAAC,IAAI,CAACR,IAAI,CAAE,CACd,IAAI,CAACA,IAAI,CAAG,IAAI,CAACmB,SAAS,EAAE,CAC9B,CACA,GAAIX,OAAO,GAAKX,eAAe,CAACY,WAAW,EAAE,CAAE,CAC7C,MAAOX,iBAAgB,CAACa,WAAW,CACrC,CACA,0BAAO,IAAI,CAACX,IAAI,CAACQ,OAAO,CAAC,yDAAIV,gBAAgB,CAACsB,OAAO,CACvD,CAAC,sCAGH,cAAe,IAAIrB,uBAAsB,EAAE"},"metadata":{},"sourceType":"module"}