{"ast":null,"code":"import{usePoolActiveLiquidity}from'hooks/usePoolTickData';import{useCallback,useMemo}from'react';export function useDensityChartData(_ref){var currencyA=_ref.currencyA,currencyB=_ref.currencyB,feeAmount=_ref.feeAmount;var _usePoolActiveLiquidi=usePoolActiveLiquidity(currencyA,currencyB,feeAmount),isLoading=_usePoolActiveLiquidi.isLoading,error=_usePoolActiveLiquidi.error,data=_usePoolActiveLiquidi.data;var formatData=useCallback(function(){if(!(data===null||data===void 0?void 0:data.length)){return undefined;}var newData=[];for(var i=0;i<data.length;i++){var t=data[i];var chartEntry={activeLiquidity:parseFloat(t.liquidityActive.toString()),price0:parseFloat(t.price0)};if(chartEntry.activeLiquidity>0){newData.push(chartEntry);}}return newData;},[data]);return useMemo(function(){return{isLoading:isLoading,error:error,formattedData:!isLoading?formatData():undefined};},[isLoading,error,formatData]);}","map":{"version":3,"names":["usePoolActiveLiquidity","useCallback","useMemo","useDensityChartData","currencyA","currencyB","feeAmount","isLoading","error","data","formatData","length","undefined","newData","i","t","chartEntry","activeLiquidity","parseFloat","liquidityActive","toString","price0","push","formattedData"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/LiquidityChartRangeInput/hooks.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { FeeAmount } from '@uniswap/v3-sdk'\nimport { TickProcessed, usePoolActiveLiquidity } from 'hooks/usePoolTickData'\nimport { useCallback, useMemo } from 'react'\n\nimport { ChartEntry } from './types'\n\nexport function useDensityChartData({\n  currencyA,\n  currencyB,\n  feeAmount,\n}: {\n  currencyA: Currency | undefined\n  currencyB: Currency | undefined\n  feeAmount: FeeAmount | undefined\n}) {\n  const { isLoading, error, data } = usePoolActiveLiquidity(currencyA, currencyB, feeAmount)\n\n  const formatData = useCallback(() => {\n    if (!data?.length) {\n      return undefined\n    }\n\n    const newData: ChartEntry[] = []\n\n    for (let i = 0; i < data.length; i++) {\n      const t: TickProcessed = data[i]\n\n      const chartEntry = {\n        activeLiquidity: parseFloat(t.liquidityActive.toString()),\n        price0: parseFloat(t.price0),\n      }\n\n      if (chartEntry.activeLiquidity > 0) {\n        newData.push(chartEntry)\n      }\n    }\n\n    return newData\n  }, [data])\n\n  return useMemo(() => {\n    return {\n      isLoading,\n      error,\n      formattedData: !isLoading ? formatData() : undefined,\n    }\n  }, [isLoading, error, formatData])\n}\n"],"mappings":"AAEA,OAAwBA,sBAAsB,KAAQ,uBAAuB,CAC7E,OAASC,WAAW,CAAEC,OAAO,KAAQ,OAAO,CAI5C,MAAO,SAASC,oBAAmB,MAQhC,IAPDC,UAAS,MAATA,SAAS,CACTC,SAAS,MAATA,SAAS,CACTC,SAAS,MAATA,SAAS,CAMT,0BAAmCN,sBAAsB,CAACI,SAAS,CAAEC,SAAS,CAAEC,SAAS,CAAC,CAAlFC,SAAS,uBAATA,SAAS,CAAEC,KAAK,uBAALA,KAAK,CAAEC,IAAI,uBAAJA,IAAI,CAE9B,GAAMC,WAAU,CAAGT,WAAW,CAAC,UAAM,CACnC,GAAI,EAACQ,IAAI,SAAJA,IAAI,iBAAJA,IAAI,CAAEE,MAAM,EAAE,CACjB,MAAOC,UAAS,CAClB,CAEA,GAAMC,QAAqB,CAAG,EAAE,CAEhC,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGL,IAAI,CAACE,MAAM,CAAEG,CAAC,EAAE,CAAE,CACpC,GAAMC,EAAgB,CAAGN,IAAI,CAACK,CAAC,CAAC,CAEhC,GAAME,WAAU,CAAG,CACjBC,eAAe,CAAEC,UAAU,CAACH,CAAC,CAACI,eAAe,CAACC,QAAQ,EAAE,CAAC,CACzDC,MAAM,CAAEH,UAAU,CAACH,CAAC,CAACM,MAAM,CAC7B,CAAC,CAED,GAAIL,UAAU,CAACC,eAAe,CAAG,CAAC,CAAE,CAClCJ,OAAO,CAACS,IAAI,CAACN,UAAU,CAAC,CAC1B,CACF,CAEA,MAAOH,QAAO,CAChB,CAAC,CAAE,CAACJ,IAAI,CAAC,CAAC,CAEV,MAAOP,QAAO,CAAC,UAAM,CACnB,MAAO,CACLK,SAAS,CAATA,SAAS,CACTC,KAAK,CAALA,KAAK,CACLe,aAAa,CAAE,CAAChB,SAAS,CAAGG,UAAU,EAAE,CAAGE,SAC7C,CAAC,CACH,CAAC,CAAE,CAACL,SAAS,CAAEC,KAAK,CAAEE,UAAU,CAAC,CAAC,CACpC"},"metadata":{},"sourceType":"module"}