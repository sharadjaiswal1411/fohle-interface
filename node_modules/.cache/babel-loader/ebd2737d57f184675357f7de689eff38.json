{"ast":null,"code":"import { ChainId } from '../util/chains';\nimport { IGasPriceProvider } from './gas-price-provider';\nconst DEFAULT_EIP_1559_SUPPORTED_CHAINS = [ChainId.MAINNET, ChainId.RINKEBY, ChainId.ROPSTEN, ChainId.GÖRLI, ChainId.POLYGON_MUMBAI\n// infura endpoint having difficulty w/ eip-1559 on kovan\n// ChainId.KOVAN,\n];\n/**\n * Gets gas prices on chain. If the chain supports EIP-1559 and has the feeHistory API,\n * uses the EIP1559 provider. Otherwise it will use a legacy provider that uses eth_gasPrice\n *\n * @export\n * @class OnChainGasPriceProvider\n */\nexport class OnChainGasPriceProvider extends IGasPriceProvider {\n  constructor(chainId, eip1559GasPriceProvider, legacyGasPriceProvider) {\n    let eipChains = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_EIP_1559_SUPPORTED_CHAINS;\n    super();\n    this.chainId = chainId;\n    this.eip1559GasPriceProvider = eip1559GasPriceProvider;\n    this.legacyGasPriceProvider = legacyGasPriceProvider;\n    this.eipChains = eipChains;\n  }\n  async getGasPrice() {\n    if (this.eipChains.includes(this.chainId)) {\n      return this.eip1559GasPriceProvider.getGasPrice();\n    }\n    return this.legacyGasPriceProvider.getGasPrice();\n  }\n}","map":{"version":3,"sources":["../../../src/providers/on-chain-gas-price-provider.ts"],"names":[],"mappings":"AAAA,SAAS,OAAO,QAAQ,gBAAgB;AAGxC,SAAmB,iBAAiB,QAAQ,sBAAsB;AAGlE,MAAM,iCAAiC,GAAG,CACxC,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,OAAO,EACf,OAAO,CAAC,KAAK,EACb,OAAO,CAAC;AACR;AACA;AAAA,CACD;AAED;;;;;;AAMG;AACH,OAAM,MAAO,uBAAwB,SAAQ,iBAAiB,CAAA;EAC5D,WAAA,CACY,OAAgB,EAChB,uBAAgD,EAChD,sBAA8C,EACU;IAAA,IAAxD,SAAA,uEAAuB,iCAAiC;IAElE,KAAK,EAAE;IALG,IAAA,CAAA,OAAO,GAAP,OAAO;IACP,IAAA,CAAA,uBAAuB,GAAvB,uBAAuB;IACvB,IAAA,CAAA,sBAAsB,GAAtB,sBAAsB;IACtB,IAAA,CAAA,SAAS,GAAT,SAAS;EAGrB;EAEO,MAAM,WAAW,GAAA;IACtB,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;MACzC,OAAO,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE;IAClD;IAED,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE;EAClD;AACD","sourceRoot":"","sourcesContent":["import { ChainId } from '../util/chains';\nimport { IGasPriceProvider } from './gas-price-provider';\nconst DEFAULT_EIP_1559_SUPPORTED_CHAINS = [\n    ChainId.MAINNET,\n    ChainId.RINKEBY,\n    ChainId.ROPSTEN,\n    ChainId.GÖRLI,\n    ChainId.POLYGON_MUMBAI,\n    // infura endpoint having difficulty w/ eip-1559 on kovan\n    // ChainId.KOVAN,\n];\n/**\n * Gets gas prices on chain. If the chain supports EIP-1559 and has the feeHistory API,\n * uses the EIP1559 provider. Otherwise it will use a legacy provider that uses eth_gasPrice\n *\n * @export\n * @class OnChainGasPriceProvider\n */\nexport class OnChainGasPriceProvider extends IGasPriceProvider {\n    constructor(chainId, eip1559GasPriceProvider, legacyGasPriceProvider, eipChains = DEFAULT_EIP_1559_SUPPORTED_CHAINS) {\n        super();\n        this.chainId = chainId;\n        this.eip1559GasPriceProvider = eip1559GasPriceProvider;\n        this.legacyGasPriceProvider = legacyGasPriceProvider;\n        this.eipChains = eipChains;\n    }\n    async getGasPrice() {\n        if (this.eipChains.includes(this.chainId)) {\n            return this.eip1559GasPriceProvider.getGasPrice();\n        }\n        return this.legacyGasPriceProvider.getGasPrice();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib24tY2hhaW4tZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9vbi1jaGFpbi1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBR3pDLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR25FLE1BQU0saUNBQWlDLEdBQUc7SUFDeEMsT0FBTyxDQUFDLE9BQU87SUFDZixPQUFPLENBQUMsT0FBTztJQUNmLE9BQU8sQ0FBQyxPQUFPO0lBQ2YsT0FBTyxDQUFDLEtBQUs7SUFDYixPQUFPLENBQUMsY0FBYztJQUN0Qix5REFBeUQ7SUFDekQsaUJBQWlCO0NBQ2xCLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsaUJBQWlCO0lBQzVELFlBQ1ksT0FBZ0IsRUFDaEIsdUJBQWdELEVBQ2hELHNCQUE4QyxFQUM5QyxZQUF1QixpQ0FBaUM7UUFFbEUsS0FBSyxFQUFFLENBQUM7UUFMRSxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQ2hCLDRCQUF1QixHQUF2Qix1QkFBdUIsQ0FBeUI7UUFDaEQsMkJBQXNCLEdBQXRCLHNCQUFzQixDQUF3QjtRQUM5QyxjQUFTLEdBQVQsU0FBUyxDQUErQztJQUdwRSxDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDekMsT0FBTyxJQUFJLENBQUMsdUJBQXVCLENBQUMsV0FBVyxFQUFFLENBQUM7U0FDbkQ7UUFFRCxPQUFPLElBQUksQ0FBQyxzQkFBc0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNuRCxDQUFDO0NBQ0YifQ=="]},"metadata":{},"sourceType":"module"}