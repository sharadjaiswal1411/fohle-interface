{"ast":null,"code":"import{createMulticall}from'@uniswap/redux-multicall';import{useWeb3React}from'@web3-react/core';import{SupportedChainId}from'constants/chains';import{useInterfaceMulticall}from'hooks/useContract';import useBlockNumber from'lib/hooks/useBlockNumber';import{useMemo}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";var multicall=createMulticall();export default multicall;function getBlocksPerFetchForChainId(chainId){switch(chainId){case SupportedChainId.ARBITRUM_ONE:case SupportedChainId.OPTIMISM:return 15;case SupportedChainId.CELO:case SupportedChainId.CELO_ALFAJORES:return 5;default:return 1;}}export function MulticallUpdater(){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var latestBlockNumber=useBlockNumber();var contract=useInterfaceMulticall();var listenerOptions=useMemo(function(){return{blocksPerFetch:getBlocksPerFetchForChainId(chainId)};},[chainId]);return/*#__PURE__*/_jsx(multicall.Updater,{chainId:chainId,latestBlockNumber:latestBlockNumber,contract:contract,listenerOptions:listenerOptions});}","map":{"version":3,"names":["createMulticall","useWeb3React","SupportedChainId","useInterfaceMulticall","useBlockNumber","useMemo","multicall","getBlocksPerFetchForChainId","chainId","ARBITRUM_ONE","OPTIMISM","CELO","CELO_ALFAJORES","MulticallUpdater","latestBlockNumber","contract","listenerOptions","blocksPerFetch"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/state/multicall.tsx"],"sourcesContent":["import { createMulticall, ListenerOptions } from '@uniswap/redux-multicall'\nimport { useWeb3React } from '@web3-react/core'\nimport { SupportedChainId } from 'constants/chains'\nimport { useInterfaceMulticall } from 'hooks/useContract'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useMemo } from 'react'\n\nconst multicall = createMulticall()\n\nexport default multicall\n\nfunction getBlocksPerFetchForChainId(chainId: number | undefined): number {\n  switch (chainId) {\n    case SupportedChainId.ARBITRUM_ONE:\n    case SupportedChainId.OPTIMISM:\n      return 15\n    case SupportedChainId.CELO:\n    case SupportedChainId.CELO_ALFAJORES:\n      return 5\n    default:\n      return 1\n  }\n}\n\nexport function MulticallUpdater() {\n  const { chainId } = useWeb3React()\n  const latestBlockNumber = useBlockNumber()\n  const contract = useInterfaceMulticall()\n  const listenerOptions: ListenerOptions = useMemo(\n    () => ({\n      blocksPerFetch: getBlocksPerFetchForChainId(chainId),\n    }),\n    [chainId]\n  )\n\n  return (\n    <multicall.Updater\n      chainId={chainId}\n      latestBlockNumber={latestBlockNumber}\n      contract={contract}\n      listenerOptions={listenerOptions}\n    />\n  )\n}\n"],"mappings":"AAAA,OAASA,eAAe,KAAyB,0BAA0B,CAC3E,OAASC,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,qBAAqB,KAAQ,mBAAmB,CACzD,MAAOC,eAAc,KAAM,0BAA0B,CACrD,OAASC,OAAO,KAAQ,OAAO,4CAE/B,GAAMC,UAAS,CAAGN,eAAe,EAAE,CAEnC,cAAeM,UAAS,CAExB,QAASC,4BAA2B,CAACC,OAA2B,CAAU,CACxE,OAAQA,OAAO,EACb,IAAKN,iBAAgB,CAACO,YAAY,CAClC,IAAKP,iBAAgB,CAACQ,QAAQ,CAC5B,MAAO,GAAE,CACX,IAAKR,iBAAgB,CAACS,IAAI,CAC1B,IAAKT,iBAAgB,CAACU,cAAc,CAClC,MAAO,EAAC,CACV,QACE,MAAO,EAAC,EAEd,CAEA,MAAO,SAASC,iBAAgB,EAAG,CACjC,kBAAoBZ,YAAY,EAAE,CAA1BO,OAAO,eAAPA,OAAO,CACf,GAAMM,kBAAiB,CAAGV,cAAc,EAAE,CAC1C,GAAMW,SAAQ,CAAGZ,qBAAqB,EAAE,CACxC,GAAMa,gBAAgC,CAAGX,OAAO,CAC9C,iBAAO,CACLY,cAAc,CAAEV,2BAA2B,CAACC,OAAO,CACrD,CAAC,EAAC,CACF,CAACA,OAAO,CAAC,CACV,CAED,mBACE,KAAC,SAAS,CAAC,OAAO,EAChB,OAAO,CAAEA,OAAQ,CACjB,iBAAiB,CAAEM,iBAAkB,CACrC,QAAQ,CAAEC,QAAS,CACnB,eAAe,CAAEC,eAAgB,EACjC,CAEN"},"metadata":{},"sourceType":"module"}