{"ast":null,"code":"export function filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}","map":{"version":3,"sources":["../../../src/utilities/common/filterInPlace.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,aAAa,CAC3B,KAAU,EACV,IAA0B,EAC1B,OAAa,EAAA;EAEb,IAAI,MAAM,GAAG,CAAC;EACd,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,EAAA;IAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;MACnC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI;IACvB;EACH,CAAC,EAAE,OAAO,CAAC;EACX,KAAK,CAAC,MAAM,GAAG,MAAM;EACrB,OAAO,KAAK;AACd","sourcesContent":["export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}