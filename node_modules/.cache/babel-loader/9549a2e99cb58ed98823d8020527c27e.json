{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport useBlockNumber from 'lib/hooks/useBlockNumber';\nimport multicall from 'lib/state/multicall';\n// re-export for convenience\nexport { NEVER_RELOAD } from '@uniswap/redux-multicall'; // re-export for convenience\n\n// Create wrappers for hooks so consumers don't need to get latest block themselves\n\nexport function useMultipleContractSingleData() {\n  _s();\n  const {\n    chainId,\n    latestBlock\n  } = useCallContext();\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return multicall.hooks.useMultipleContractSingleData(chainId, latestBlock, ...args);\n}\n_s(useMultipleContractSingleData, \"sR4q0h1HbeaAb2+BLkt3W0Vpi9I=\", true, function () {\n  return [useCallContext];\n});\nexport function useSingleCallResult() {\n  _s2();\n  const {\n    chainId,\n    latestBlock\n  } = useCallContext();\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return multicall.hooks.useSingleCallResult(chainId, latestBlock, ...args);\n}\n_s2(useSingleCallResult, \"+jr2a4XihGq4iS16+CW2qAuwLjM=\", true, function () {\n  return [useCallContext];\n});\nexport function useSingleContractMultipleData() {\n  _s3();\n  const {\n    chainId,\n    latestBlock\n  } = useCallContext();\n  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n  return multicall.hooks.useSingleContractMultipleData(chainId, latestBlock, ...args);\n}\n_s3(useSingleContractMultipleData, \"iABY4UVC13Yy3kaHiQKSzM9t+lE=\", true, function () {\n  return [useCallContext];\n});\nexport function useSingleContractWithCallData() {\n  _s4();\n  const {\n    chainId,\n    latestBlock\n  } = useCallContext();\n  for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n  return multicall.hooks.useSingleContractWithCallData(chainId, latestBlock, ...args);\n}\n_s4(useSingleContractWithCallData, \"ssuvUs9x4EJL2xyo5bgNyU/W8HI=\", true, function () {\n  return [useCallContext];\n});\nfunction useCallContext() {\n  _s5();\n  const {\n    chainId\n  } = useWeb3React();\n  const latestBlock = useBlockNumber();\n  return {\n    chainId,\n    latestBlock\n  };\n}\n_s5(useCallContext, \"vXEiOddV3Yoi2/PIIhJJYidHOb0=\", false, function () {\n  return [useWeb3React, useBlockNumber];\n});","map":{"version":3,"names":["useWeb3React","useBlockNumber","multicall","NEVER_RELOAD","useMultipleContractSingleData","chainId","latestBlock","useCallContext","args","hooks","useSingleCallResult","useSingleContractMultipleData","useSingleContractWithCallData"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/multicall.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport multicall from 'lib/state/multicall'\nimport { SkipFirst } from 'types/tuple'\n\nexport type { CallStateResult } from '@uniswap/redux-multicall' // re-export for convenience\nexport { NEVER_RELOAD } from '@uniswap/redux-multicall' // re-export for convenience\n\n// Create wrappers for hooks so consumers don't need to get latest block themselves\n\ntype SkipFirstTwoParams<T extends (...args: any) => any> = SkipFirst<Parameters<T>, 2>\n\nexport function useMultipleContractSingleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useMultipleContractSingleData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useMultipleContractSingleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleCallResult(...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleCallResult>) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleCallResult(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractMultipleData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractMultipleData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleContractMultipleData(chainId, latestBlock, ...args)\n}\n\nexport function useSingleContractWithCallData(\n  ...args: SkipFirstTwoParams<typeof multicall.hooks.useSingleContractWithCallData>\n) {\n  const { chainId, latestBlock } = useCallContext()\n  return multicall.hooks.useSingleContractWithCallData(chainId, latestBlock, ...args)\n}\n\nfunction useCallContext() {\n  const { chainId } = useWeb3React()\n  const latestBlock = useBlockNumber()\n  return { chainId, latestBlock }\n}\n"],"mappings":";;;;;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,cAAc,MAAM,0BAA0B;AACrD,OAAOC,SAAS,MAAM,qBAAqB;AAGqB;AAChE,SAASC,YAAY,QAAQ,0BAA0B,EAAC;;AAExD;;AAIA,OAAO,SAASC,6BAA6B,GAE3C;EAAA;EACA,MAAM;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGC,cAAc,EAAE;EAAA,kCAF9CC,IAAI;IAAJA,IAAI;EAAA;EAGP,OAAON,SAAS,CAACO,KAAK,CAACL,6BAA6B,CAACC,OAAO,EAAEC,WAAW,EAAE,GAAGE,IAAI,CAAC;AACrF;AAAC,GALeJ,6BAA6B;EAAA,QAGVG,cAAc;AAAA;AAIjD,OAAO,SAASG,mBAAmB,GAA0E;EAAA;EAC3G,MAAM;IAAEL,OAAO;IAAEC;EAAY,CAAC,GAAGC,cAAc,EAAE;EAAA,mCADZC,IAAI;IAAJA,IAAI;EAAA;EAEzC,OAAON,SAAS,CAACO,KAAK,CAACC,mBAAmB,CAACL,OAAO,EAAEC,WAAW,EAAE,GAAGE,IAAI,CAAC;AAC3E;AAAC,IAHeE,mBAAmB;EAAA,QACAH,cAAc;AAAA;AAIjD,OAAO,SAASI,6BAA6B,GAE3C;EAAA;EACA,MAAM;IAAEN,OAAO;IAAEC;EAAY,CAAC,GAAGC,cAAc,EAAE;EAAA,mCAF9CC,IAAI;IAAJA,IAAI;EAAA;EAGP,OAAON,SAAS,CAACO,KAAK,CAACE,6BAA6B,CAACN,OAAO,EAAEC,WAAW,EAAE,GAAGE,IAAI,CAAC;AACrF;AAAC,IALeG,6BAA6B;EAAA,QAGVJ,cAAc;AAAA;AAIjD,OAAO,SAASK,6BAA6B,GAE3C;EAAA;EACA,MAAM;IAAEP,OAAO;IAAEC;EAAY,CAAC,GAAGC,cAAc,EAAE;EAAA,mCAF9CC,IAAI;IAAJA,IAAI;EAAA;EAGP,OAAON,SAAS,CAACO,KAAK,CAACG,6BAA6B,CAACP,OAAO,EAAEC,WAAW,EAAE,GAAGE,IAAI,CAAC;AACrF;AAAC,IALeI,6BAA6B;EAAA,QAGVL,cAAc;AAAA;AAIjD,SAASA,cAAc,GAAG;EAAA;EACxB,MAAM;IAAEF;EAAQ,CAAC,GAAGL,YAAY,EAAE;EAClC,MAAMM,WAAW,GAAGL,cAAc,EAAE;EACpC,OAAO;IAAEI,OAAO;IAAEC;EAAY,CAAC;AACjC;AAAC,IAJQC,cAAc;EAAA,QACDP,YAAY,EACZC,cAAc;AAAA"},"metadata":{},"sourceType":"module"}