{"ast":null,"code":"var toExpression = function toExpression(operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n  return operands.map(o => \"\".concat(o)).join(\" \".concat(operator, \" \")).replace(/calc/g, '');\n};\nvar _add = function add() {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n  return \"calc(\".concat(toExpression('+', ...operands), \")\");\n};\nvar _subtract = function subtract() {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n  return \"calc(\".concat(toExpression('-', ...operands), \")\");\n};\nvar _multiply = function multiply() {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n  return \"calc(\".concat(toExpression('*', ...operands), \")\");\n};\nvar _divide = function divide() {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n  return \"calc(\".concat(toExpression('/', ...operands), \")\");\n};\nvar _negate = x => _multiply(x, -1);\nvar calc = Object.assign(x => {\n  return {\n    add: function add() {\n      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        operands[_key6] = arguments[_key6];\n      }\n      return calc(_add(x, ...operands));\n    },\n    subtract: function subtract() {\n      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        operands[_key7] = arguments[_key7];\n      }\n      return calc(_subtract(x, ...operands));\n    },\n    multiply: function multiply() {\n      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        operands[_key8] = arguments[_key8];\n      }\n      return calc(_multiply(x, ...operands));\n    },\n    divide: function divide() {\n      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        operands[_key9] = arguments[_key9];\n      }\n      return calc(_divide(x, ...operands));\n    },\n    negate: () => calc(_negate(x)),\n    toString: () => x.toString()\n  };\n}, {\n  add: _add,\n  subtract: _subtract,\n  multiply: _multiply,\n  divide: _divide,\n  negate: _negate\n});\nexport { calc };","map":{"version":3,"names":["toExpression","operator","_len","arguments","length","operands","Array","_key","map","o","concat","join","replace","_add","add","_len2","_key2","_subtract","subtract","_len3","_key3","_multiply","multiply","_len4","_key4","_divide","divide","_len5","_key5","_negate","x","calc","Object","assign","_len6","_key6","_len7","_key7","_len8","_key8","_len9","_key9","negate","toString"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@vanilla-extract/css-utils/dist/vanilla-extract-css-utils.esm.js"],"sourcesContent":["var toExpression = function toExpression(operator) {\n  for (var _len = arguments.length, operands = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    operands[_key - 1] = arguments[_key];\n  }\n\n  return operands.map(o => \"\".concat(o)).join(\" \".concat(operator, \" \")).replace(/calc/g, '');\n};\n\nvar _add = function add() {\n  for (var _len2 = arguments.length, operands = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    operands[_key2] = arguments[_key2];\n  }\n\n  return \"calc(\".concat(toExpression('+', ...operands), \")\");\n};\n\nvar _subtract = function subtract() {\n  for (var _len3 = arguments.length, operands = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    operands[_key3] = arguments[_key3];\n  }\n\n  return \"calc(\".concat(toExpression('-', ...operands), \")\");\n};\n\nvar _multiply = function multiply() {\n  for (var _len4 = arguments.length, operands = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    operands[_key4] = arguments[_key4];\n  }\n\n  return \"calc(\".concat(toExpression('*', ...operands), \")\");\n};\n\nvar _divide = function divide() {\n  for (var _len5 = arguments.length, operands = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    operands[_key5] = arguments[_key5];\n  }\n\n  return \"calc(\".concat(toExpression('/', ...operands), \")\");\n};\n\nvar _negate = x => _multiply(x, -1);\n\nvar calc = Object.assign(x => {\n  return {\n    add: function add() {\n      for (var _len6 = arguments.length, operands = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        operands[_key6] = arguments[_key6];\n      }\n\n      return calc(_add(x, ...operands));\n    },\n    subtract: function subtract() {\n      for (var _len7 = arguments.length, operands = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        operands[_key7] = arguments[_key7];\n      }\n\n      return calc(_subtract(x, ...operands));\n    },\n    multiply: function multiply() {\n      for (var _len8 = arguments.length, operands = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        operands[_key8] = arguments[_key8];\n      }\n\n      return calc(_multiply(x, ...operands));\n    },\n    divide: function divide() {\n      for (var _len9 = arguments.length, operands = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        operands[_key9] = arguments[_key9];\n      }\n\n      return calc(_divide(x, ...operands));\n    },\n    negate: () => calc(_negate(x)),\n    toString: () => x.toString()\n  };\n}, {\n  add: _add,\n  subtract: _subtract,\n  multiply: _multiply,\n  divide: _divide,\n  negate: _negate\n});\n\nexport { calc };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}