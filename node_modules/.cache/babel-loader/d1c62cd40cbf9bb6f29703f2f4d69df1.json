{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _regeneratorRuntime = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\nvar _asyncToGenerator = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _createSuper = require(\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nvar DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nvar Session_1 = require(\"../relay/Session\");\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nvar util_1 = require(\"../util\");\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\nvar JSONRPC_1 = require(\"./JSONRPC\");\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nvar HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nvar HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n  var _super = _createSuper(CoinbaseWalletProvider);\n  function CoinbaseWalletProvider(options) {\n    var _this;\n    _classCallCheck(this, CoinbaseWalletProvider);\n    var _a, _b;\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this._send = _this.send.bind(_assertThisInitialized(_this));\n    _this._sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this.diagnostic = options.diagnosticLogger;\n    _this.reloadOnDisconnect = true;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    _this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    _this.qrUrl = options.qrUrl;\n    _this.supportsAddressSwitching = options.supportsAddressSwitching;\n    var chainId = _this.getChainId();\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n      if (event.data.data.action === \"defaultChainChanged\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n      }\n    });\n    return _this;\n  }\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      // backward compatibility\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"isChainOverridden\",\n    get: function get() {\n      return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    },\n    set: function set(value) {\n      this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n  }, {\n    key: \"disableReloadOnDisconnect\",\n    value: function disableReloadOnDisconnect() {\n      this.reloadOnDisconnect = false;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      if (this.isChainOverridden) return;\n      this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n      var hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n      if (hasChainSwitched && fromRelay) return;\n      if (fromRelay) {\n        this.isChainOverridden = true;\n      }\n      this.jsonRpcUrl = jsonRpcUrl;\n      // emit chainChanged event if necessary\n      var originalChainId = this.getChainId();\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, address, symbol, decimals, image, chainId) {\n        var relay, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context.sent;\n                _context.next = 5;\n                return relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n              case 5:\n                result = _context.sent;\n                return _context.abrupt(\"return\", !!result.result);\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function watchAsset(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context2.next = 2;\n                  break;\n                }\n                return _context2.abrupt(\"return\", false);\n              case 2:\n                _context2.next = 4;\n                return this.initializeRelay();\n              case 4:\n                relay = _context2.sent;\n                isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n                if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                  _context2.next = 9;\n                  break;\n                }\n                _context2.next = 9;\n                return relay.requestEthereumAccounts().promise;\n              case 9:\n                _context2.next = 11;\n                return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n              case 11:\n                res = _context2.sent;\n                if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                  this.updateProviderInfo(rpcUrls[0], chainId, false);\n                }\n                return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function addEthereumChain(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                  _context3.next = 2;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 2:\n                _context3.next = 4;\n                return this.initializeRelay();\n              case 4:\n                relay = _context3.sent;\n                _context3.next = 7;\n                return relay.switchEthereumChain(chainId.toString(10)).promise;\n              case 7:\n                res = _context3.sent;\n                if (!res.errorCode) {\n                  _context3.next = 10;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: res.errorCode\n                });\n              case 10:\n                switchResponse = res.result;\n                if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                  this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n                  this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n                }\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function switchEthereumChain(_x13) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var _a;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::enable\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n                });\n                if (!(this._addresses.length > 0)) {\n                  _context4.next = 3;\n                  break;\n                }\n                return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n              case 3:\n                _context4.next = 5;\n                return this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n              case 5:\n                return _context4.abrupt(\"return\", _context4.sent);\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n        var relay;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context5.sent;\n                relay.resetAndReload();\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n      // send<T>(method, params): Promise<T>\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      }\n      // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n      if (typeof callbackOrParams === \"function\") {\n        var _request = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request, callback);\n      }\n      // send(JSONRPCRequest[]): JSONRPCResponse[]\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      }\n      // send(JSONRPCRequest): JSONRPCResponse\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function () {\n      var _sendAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(request, callback) {\n        var arrayCb, cb;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(typeof callback !== \"function\")) {\n                  _context6.next = 2;\n                  break;\n                }\n                throw new Error(\"callback is required\");\n              case 2:\n                if (!Array.isArray(request)) {\n                  _context6.next = 6;\n                  break;\n                }\n                arrayCb = callback;\n                this._sendMultipleRequestsAsync(request).then(function (responses) {\n                  return arrayCb(null, responses);\n                }).catch(function (err) {\n                  return arrayCb(err, null);\n                });\n                return _context6.abrupt(\"return\");\n              case 6:\n                // send(JSONRPCRequest, callback): void\n                cb = callback;\n                return _context6.abrupt(\"return\", this._sendRequestAsync(request).then(function (response) {\n                  return cb(null, response);\n                }).catch(function (err) {\n                  return cb(err, null);\n                }));\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n      function sendAsync(_x14, _x15) {\n        return _sendAsync.apply(this, arguments);\n      }\n      return sendAsync;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                  _context7.next = 2;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"Expected a single, non-array, object argument.\",\n                  data: args\n                });\n              case 2:\n                method = args.method, params = args.params;\n                if (!(typeof method !== \"string\" || method.length === 0)) {\n                  _context7.next = 5;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.method' must be a non-empty string.\",\n                  data: args\n                });\n              case 5:\n                if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                  _context7.next = 7;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                  message: \"'args.params' must be an object or array if provided.\",\n                  data: args\n                });\n              case 7:\n                newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n                id = this._relayEventManager.makeRequestId();\n                _context7.next = 11;\n                return this._sendRequestAsync({\n                  method: method,\n                  params: newParams,\n                  jsonrpc: \"2.0\",\n                  id: id\n                });\n              case 11:\n                result = _context7.sent;\n                return _context7.abrupt(\"return\", result.result);\n              case 13:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function request(_x16) {\n        return _request2.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(match) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context8.sent;\n                _context8.next = 5;\n                return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n              case 5:\n                res = _context8.sent;\n                if (!(typeof res.result !== \"string\")) {\n                  _context8.next = 8;\n                  break;\n                }\n                throw new Error(\"result was not a string\");\n              case 8:\n                return _context8.abrupt(\"return\", res.result);\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function scanQRCode(_x17) {\n        return _scanQRCode.apply(this, arguments);\n      }\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(data, action) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context9.sent;\n                _context9.next = 5;\n                return relay.genericRequest(data, action).promise;\n              case 5:\n                res = _context9.sent;\n                if (!(typeof res.result !== \"string\")) {\n                  _context9.next = 8;\n                  break;\n                }\n                throw new Error(\"result was not a string\");\n              case 8:\n                return _context9.abrupt(\"return\", res.result);\n              case 9:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n      function genericRequest(_x18, _x19) {\n        return _genericRequest.apply(this, arguments);\n      }\n      return genericRequest;\n    }()\n  }, {\n    key: \"selectProvider\",\n    value: function () {\n      var _selectProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(providerOptions) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context10.sent;\n                _context10.next = 5;\n                return relay.selectProvider(providerOptions).promise;\n              case 5:\n                res = _context10.sent;\n                if (!(typeof res.result !== \"string\")) {\n                  _context10.next = 8;\n                  break;\n                }\n                throw new Error(\"result was not a string\");\n              case 8:\n                return _context10.abrupt(\"return\", res.result);\n              case 9:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n      function selectProvider(_x20) {\n        return _selectProvider.apply(this, arguments);\n      }\n      return selectProvider;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses, isDisconnect) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n      if (this._addresses.length > 0 && this.supportsAddressSwitching === false && !isDisconnect) {\n        /**\n         * The extension currently doesn't support switching selected wallet index\n         * make sure walletlink doesn't update it's address in this case\n         */\n        return;\n      }\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(request) {\n        var method, params, relay;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                method = request.method;\n                params = request.params || [];\n                _context11.t0 = method;\n                _context11.next = _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context11.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context11.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context11.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n                break;\n              case 5:\n                return _context11.abrupt(\"return\", this._eth_requestAccounts());\n              case 6:\n                return _context11.abrupt(\"return\", this._eth_sign(params));\n              case 7:\n                return _context11.abrupt(\"return\", this._eth_ecRecover(params));\n              case 8:\n                return _context11.abrupt(\"return\", this._personal_sign(params));\n              case 9:\n                return _context11.abrupt(\"return\", this._personal_ecRecover(params));\n              case 10:\n                return _context11.abrupt(\"return\", this._eth_signTransaction(params));\n              case 11:\n                return _context11.abrupt(\"return\", this._eth_sendRawTransaction(params));\n              case 12:\n                return _context11.abrupt(\"return\", this._eth_sendTransaction(params));\n              case 13:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v1(params));\n              case 14:\n                return _context11.abrupt(\"return\", this._throwUnsupportedMethodError());\n              case 15:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v3(params));\n              case 16:\n                return _context11.abrupt(\"return\", this._eth_signTypedData_v4(params));\n              case 17:\n                return _context11.abrupt(\"return\", this._cbwallet_arbitrary(params));\n              case 18:\n                return _context11.abrupt(\"return\", this._wallet_addEthereumChain(params));\n              case 19:\n                return _context11.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n              case 20:\n                return _context11.abrupt(\"return\", this._wallet_watchAsset(params));\n              case 21:\n                _context11.next = 23;\n                return this.initializeRelay();\n              case 23:\n                relay = _context11.sent;\n                return _context11.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n              case 25:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n      function _handleAsynchronousMethods(_x21) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var addressStr = (0, util_1.ensureAddressString)(addressString);\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        return lowercaseAddresses.includes(addressStr);\n      } catch (_a) {}\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n      this._ensureKnownAddress(fromAddress);\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                this._ensureKnownAddress(address);\n                _context12.prev = 1;\n                _context12.next = 4;\n                return this.initializeRelay();\n              case 4:\n                relay = _context12.sent;\n                _context12.next = 7;\n                return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n              case 7:\n                res = _context12.sent;\n                return _context12.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n              case 11:\n                _context12.prev = 11;\n                _context12.t0 = _context12[\"catch\"](1);\n                if (!(typeof _context12.t0.message === \"string\" && _context12.t0.message.match(/(denied|rejected)/i))) {\n                  _context12.next = 15;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n              case 15:\n                throw _context12.t0;\n              case 16:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[1, 11]]);\n      }));\n      function _signEthereumMessage(_x22, _x23, _x24, _x25) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return this.initializeRelay();\n              case 2:\n                relay = _context13.sent;\n                _context13.next = 5;\n                return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n              case 5:\n                res = _context13.sent;\n                return _context13.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n              case 7:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this);\n      }));\n      function _ethereumAddressFromSignedMessage(_x26, _x27, _x28) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14() {\n        var _a, res, relay;\n        return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                  method: \"provider::_eth_requestAccounts\",\n                  addresses_length: this._addresses.length,\n                  sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n                });\n                if (!(this._addresses.length > 0)) {\n                  _context14.next = 3;\n                  break;\n                }\n                return _context14.abrupt(\"return\", Promise.resolve({\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                }));\n              case 3:\n                _context14.prev = 3;\n                _context14.next = 6;\n                return this.initializeRelay();\n              case 6:\n                relay = _context14.sent;\n                _context14.next = 9;\n                return relay.requestEthereumAccounts().promise;\n              case 9:\n                res = _context14.sent;\n                _context14.next = 17;\n                break;\n              case 12:\n                _context14.prev = 12;\n                _context14.t0 = _context14[\"catch\"](3);\n                if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                  _context14.next = 16;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n              case 16:\n                throw _context14.t0;\n              case 17:\n                if (res.result) {\n                  _context14.next = 19;\n                  break;\n                }\n                throw new Error(\"accounts received is empty\");\n              case 19:\n                this._setAddresses(res.result);\n                return _context14.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: this._addresses\n                });\n              case 21:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14, this, [[3, 12]]);\n      }));\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                this._requireAuthorization();\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context15.prev = 2;\n                _context15.next = 5;\n                return this.initializeRelay();\n              case 5:\n                relay = _context15.sent;\n                _context15.next = 8;\n                return relay.signEthereumTransaction(tx).promise;\n              case 8:\n                res = _context15.sent;\n                return _context15.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n              case 12:\n                _context15.prev = 12;\n                _context15.t0 = _context15[\"catch\"](2);\n                if (!(typeof _context15.t0.message === \"string\" && _context15.t0.message.match(/(denied|rejected)/i))) {\n                  _context15.next = 16;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n              case 16:\n                throw _context15.t0;\n              case 17:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this, [[2, 12]]);\n      }));\n      function _eth_signTransaction(_x29) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n                _context16.next = 3;\n                return this.initializeRelay();\n              case 3:\n                relay = _context16.sent;\n                _context16.next = 6;\n                return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n              case 6:\n                res = _context16.sent;\n                return _context16.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n              case 8:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n      function _eth_sendRawTransaction(_x30) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                this._requireAuthorization();\n                tx = this._prepareTransactionParams(params[0] || {});\n                _context17.prev = 2;\n                _context17.next = 5;\n                return this.initializeRelay();\n              case 5:\n                relay = _context17.sent;\n                _context17.next = 8;\n                return relay.signAndSubmitEthereumTransaction(tx).promise;\n              case 8:\n                res = _context17.sent;\n                return _context17.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res.result\n                });\n              case 12:\n                _context17.prev = 12;\n                _context17.t0 = _context17[\"catch\"](2);\n                if (!(typeof _context17.t0.message === \"string\" && _context17.t0.message.match(/(denied|rejected)/i))) {\n                  _context17.next = 16;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n              case 16:\n                throw _context17.t0;\n              case 17:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this, [[2, 12]]);\n      }));\n      function _eth_sendTransaction(_x31) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                this._requireAuthorization();\n                typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n                address = (0, util_1.ensureAddressString)(params[1]);\n                this._ensureKnownAddress(address);\n                message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context18.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n              case 7:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n      function _eth_signTypedData_v1(_x32) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                this._requireAuthorization();\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n                this._ensureKnownAddress(address);\n                message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context19.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n              case 7:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n      function _eth_signTypedData_v3(_x33) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                this._requireAuthorization();\n                address = (0, util_1.ensureAddressString)(params[0]);\n                typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n                this._ensureKnownAddress(address);\n                message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                  data: typedData\n                });\n                typedDataJSON = JSON.stringify(typedData, null, 2);\n                return _context20.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n              case 7:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n      function _eth_signTypedData_v4(_x34) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n      return _eth_signTypedData_v4;\n    }() /** @deprecated */\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(params) {\n        var action, data, result;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                action = params[0];\n                data = params[1];\n                if (!(typeof data !== \"string\")) {\n                  _context21.next = 4;\n                  break;\n                }\n                throw new Error(\"parameter must be a string\");\n              case 4:\n                if (!(typeof action !== \"object\" || action === null)) {\n                  _context21.next = 6;\n                  break;\n                }\n                throw new Error(\"parameter must be an object\");\n              case 6:\n                _context21.next = 8;\n                return this.genericRequest(action, data);\n              case 8:\n                result = _context21.sent;\n                return _context21.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: result\n                });\n              case 10:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n      function _cbwallet_arbitrary(_x35) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                request = params[0];\n                if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                  _context22.next = 3;\n                  break;\n                }\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"please pass in at least 1 rpcUrl\"\n                  }\n                });\n              case 3:\n                if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                  _context22.next = 5;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"chainName is a required field\"\n                });\n              case 5:\n                if (request.nativeCurrency) {\n                  _context22.next = 7;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.provider.custom({\n                  code: 0,\n                  message: \"nativeCurrency is a required field\"\n                });\n              case 7:\n                chainIdNumber = parseInt(request.chainId, 16);\n                _context22.next = 10;\n                return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n              case 10:\n                success = _context22.sent;\n                if (!success) {\n                  _context22.next = 15;\n                  break;\n                }\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n              case 15:\n                return _context22.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  error: {\n                    code: 2,\n                    message: \"unable to add ethereum chain\"\n                  }\n                });\n              case 16:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n      function _wallet_addEthereumChain(_x36) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(params) {\n        var request;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                request = params[0];\n                _context23.next = 3;\n                return this.switchEthereumChain(parseInt(request.chainId, 16));\n              case 3:\n                return _context23.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: null\n                });\n              case 4:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n      function _wallet_switchEthereumChain(_x37) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(params) {\n        var request, chainId, _request$options, address, symbol, image, decimals, res;\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                request = Array.isArray(params) ? params[0] : params;\n                if (request.type) {\n                  _context24.next = 3;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Type is required\"\n                });\n              case 3:\n                if (!((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\")) {\n                  _context24.next = 5;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Asset of type '\".concat(request.type, \"' is not supported\")\n                });\n              case 5:\n                if (request === null || request === void 0 ? void 0 : request.options) {\n                  _context24.next = 7;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Options are required\"\n                });\n              case 7:\n                if (request === null || request === void 0 ? void 0 : request.options.address) {\n                  _context24.next = 9;\n                  break;\n                }\n                throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                  message: \"Address is required\"\n                });\n              case 9:\n                chainId = this.getChainId();\n                _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n                _context24.next = 13;\n                return this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n              case 13:\n                res = _context24.sent;\n                return _context24.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: res\n                });\n              case 15:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n      function _wallet_watchAsset(_x38) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(params) {\n        var param, filterId;\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                param = params[0];\n                _context25.next = 3;\n                return this._filterPolyfill.newFilter(param);\n              case 3:\n                filterId = _context25.sent;\n                return _context25.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n      function _eth_newFilter(_x39) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                _context26.next = 2;\n                return this._filterPolyfill.newBlockFilter();\n              case 2:\n                filterId = _context26.sent;\n                return _context26.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n              case 4:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27() {\n        var filterId;\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                _context27.next = 2;\n                return this._filterPolyfill.newPendingTransactionFilter();\n              case 2:\n                filterId = _context27.sent;\n                return _context27.abrupt(\"return\", {\n                  jsonrpc: \"2.0\",\n                  id: 0,\n                  result: filterId\n                });\n              case 4:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts, isDisconnect) {\n          return _this5._setAddresses(accounts, isDisconnect);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n        });\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","CoinbaseWalletProvider","safe_event_emitter_1","require","bn_js_1","eth_rpc_errors_1","DiagnosticLogger_1","Session_1","WalletSDKRelayAbstract_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","HAS_CHAIN_BEEN_SWITCHED_KEY","HAS_CHAIN_OVERRIDDEN_FROM_RELAY","options","_a","_b","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","_send","send","bind","_sendAsync","sendAsync","setProviderInfo","updateProviderInfo","getChainId","setAppInfo","enable","close","request","_setAddresses","scanQRCode","genericRequest","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","diagnostic","diagnosticLogger","reloadOnDisconnect","isCoinbaseWallet","overrideIsCoinbaseWallet","isCoinbaseBrowser","overrideIsCoinbaseBrowser","qrUrl","supportsAddressSwitching","chainId","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","type","method","data","params","length","initializeRelay","window","addEventListener","event","action","_chainId","Number","undefined","setItem","isChainOverridden","fromRelay","hasChainSwitched","originalChainId","chainChanged","ensureIntNumber","symbol","decimals","image","relay","watchAsset","promise","result","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","isWhitelistedNetworkOrStandalone","inlineAddEthereumChain","_isAuthorized","requestEthereumAccounts","addEthereumChain","res","isApproved","switchEthereumChain","errorCode","ethErrors","provider","custom","code","switchResponse","rpcUrl","appName","appLogoUrl","then","log","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","resetAndReload","requestOrMethod","callbackOrParams","Array","isArray","jsonrpc","_sendRequestAsync","callback","requests","r","_sendRequest","req","Error","arrayCb","_sendMultipleRequestsAsync","responses","catch","err","cb","response","args","rpc","invalidRequest","message","newParams","makeRequestId","match","ensureRegExpString","providerOptions","selectProvider","_handleSynchronousMethods","isDisconnect","newAddresses","JSON","stringify","join","Promise","resolve","reject","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","cbWallet_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_cbwallet_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","addressString","addressStr","lowercaseAddresses","includes","_isKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","tx","fromAddress","from","selectedAddress","_ensureKnownAddress","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","unauthorized","unsupportedMethod","addPrefix","typedDataJson","signEthereumMessage","userRejectedRequest","signature","ethereumAddressFromSignedMessage","hexStringFromIntNumber","parseInt","_requireAuthorization","_signEthereumMessage","_ethereumAddressFromSignedMessage","_prepareTransactionParams","signEthereumTransaction","signedTransaction","submitEthereumTransaction","signAndSubmitEthereumTransaction","typedData","ensureParsedJSONObject","hashForSignTypedDataLegacy","typedDataJSON","hashForSignTypedData_v3","hashForSignTypedData_v4","error","trim","chainIdNumber","_c","_d","success","invalidParams","filterId","ensureHexString","uninstallFilter","param","newFilter","newBlockFilter","newPendingTransactionFilter","getFilterChanges","getFilterLogs","setAccountsCallback","accounts","setChainCallback"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst eth_rpc_errors_1 = require(\"eth-rpc-errors\");\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\n// Indicates chain has been switched by switchEthereumChain or addEthereumChain request\nconst HAS_CHAIN_BEEN_SWITCHED_KEY = \"HasChainBeenSwitched\";\nconst HAS_CHAIN_OVERRIDDEN_FROM_RELAY = \"HasChainOverriddenFromRelay\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a, _b;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this._send = this.send.bind(this);\n        this._sendAsync = this.sendAsync.bind(this);\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this.reloadOnDisconnect = true;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this.qrUrl = options.qrUrl;\n        this.supportsAddressSwitching = options.supportsAddressSwitching;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params,\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"defaultChainChanged\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId), true);\n            }\n        });\n    }\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        // backward compatibility\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    get isChainOverridden() {\n        return this._storage.getItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY) === \"true\";\n    }\n    set isChainOverridden(value) {\n        this._storage.setItem(HAS_CHAIN_OVERRIDDEN_FROM_RELAY, value.toString());\n    }\n    disableReloadOnDisconnect() {\n        this.reloadOnDisconnect = false;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    setProviderInfo(jsonRpcUrl, chainId) {\n        if (this.isChainOverridden)\n            return;\n        this.updateProviderInfo(jsonRpcUrl, this.getChainId(), false);\n    }\n    updateProviderInfo(jsonRpcUrl, chainId, fromRelay) {\n        const hasChainSwitched = this._storage.getItem(HAS_CHAIN_BEEN_SWITCHED_KEY) === \"true\";\n        if (hasChainSwitched && fromRelay)\n            return;\n        if (fromRelay) {\n            this.isChainOverridden = true;\n        }\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(rpcUrls[0], chainId, false);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return;\n        }\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10)).promise;\n        if (res.errorCode) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: res.errorCode,\n            });\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this._storage.setItem(HAS_CHAIN_BEEN_SWITCHED_KEY, \"true\");\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId, false);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    async enable() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this._send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    async close() {\n        const relay = await this.initializeRelay();\n        relay.resetAndReload();\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params,\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    async sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        return this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id,\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    async selectProvider(providerOptions) {\n        const relay = await this.initializeRelay();\n        const res = await relay.selectProvider(providerOptions).promise;\n        if (typeof res.result !== \"string\") {\n            throw new Error(\"result was not a string\");\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id,\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses, isDisconnect) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        if (this._addresses.length > 0 &&\n            this.supportsAddressSwitching === false &&\n            !isDisconnect) {\n            /**\n             * The extension currently doesn't support switching selected wallet index\n             * make sure walletlink doesn't update it's address in this case\n             */\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result,\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null\n            ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas)\n            : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw eth_rpc_errors_1.ethErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw eth_rpc_errors_1.ethErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY) || \"1\";\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw eth_rpc_errors_1.ethErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    /** @deprecated */\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"chainName is a required field\",\n            });\n        }\n        if (!request.nativeCurrency) {\n            throw eth_rpc_errors_1.ethErrors.provider.custom({\n                code: 0,\n                message: \"nativeCurrency is a required field\",\n            });\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` },\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Type is required\",\n            });\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: `Asset of type '${request.type}' is not supported`,\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Options are required\",\n            });\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw eth_rpc_errors_1.ethErrors.rpc.invalidParams({\n                message: \"Address is required\",\n            });\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10), true);\n            });\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}