{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _STABLECOIN_AMOUNT_OU;import{CurrencyAmount,Price,TradeType}from'@uniswap/sdk-core';import{useWeb3React}from'@web3-react/core';import tryParseCurrencyAmount from'lib/utils/tryParseCurrencyAmount';import{useMemo,useRef}from'react';import{RouterPreference}from'state/routing/slice';import{useRoutingAPITrade}from'state/routing/useRoutingAPITrade';import{SupportedChainId}from'../constants/chains';import{CUSD_CELO,DAI_OPTIMISM,USDC_ARBITRUM,USDC_MAINNET,USDC_POLYGON}from'../constants/tokens';// Stablecoin amounts used when calculating spot price for a given currency.\n// The amount is large enough to filter low liquidity pairs.\nvar STABLECOIN_AMOUNT_OUT=(_STABLECOIN_AMOUNT_OU={},_defineProperty(_STABLECOIN_AMOUNT_OU,SupportedChainId.MAINNET,CurrencyAmount.fromRawAmount(USDC_MAINNET,100000e6)),_defineProperty(_STABLECOIN_AMOUNT_OU,SupportedChainId.ARBITRUM_ONE,CurrencyAmount.fromRawAmount(USDC_ARBITRUM,10000e6)),_defineProperty(_STABLECOIN_AMOUNT_OU,SupportedChainId.OPTIMISM,CurrencyAmount.fromRawAmount(DAI_OPTIMISM,10000e18)),_defineProperty(_STABLECOIN_AMOUNT_OU,SupportedChainId.POLYGON,CurrencyAmount.fromRawAmount(USDC_POLYGON,10000e6)),_defineProperty(_STABLECOIN_AMOUNT_OU,SupportedChainId.CELO,CurrencyAmount.fromRawAmount(CUSD_CELO,10000e18)),_STABLECOIN_AMOUNT_OU);/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */export default function useStablecoinPrice(currency){var chainId=currency===null||currency===void 0?void 0:currency.chainId;var amountOut=chainId?STABLECOIN_AMOUNT_OUT[chainId]:undefined;var stablecoin=amountOut===null||amountOut===void 0?void 0:amountOut.currency;var _useRoutingAPITrade=useRoutingAPITrade(TradeType.EXACT_OUTPUT,amountOut,currency,RouterPreference.PRICE),trade=_useRoutingAPITrade.trade;var price=useMemo(function(){if(!currency||!stablecoin){return undefined;}// handle usdc\nif(currency===null||currency===void 0?void 0:currency.wrapped.equals(stablecoin)){return new Price(stablecoin,stablecoin,'1','1');}if(trade){var _trade$routes$0$midPr=trade.routes[0].midPrice,numerator=_trade$routes$0$midPr.numerator,denominator=_trade$routes$0$midPr.denominator;return new Price(currency,stablecoin,denominator,numerator);}return undefined;},[currency,stablecoin,trade]);var lastPrice=useRef(price);if(!price||!lastPrice.current||!price.equalTo(lastPrice.current)){lastPrice.current=price;}return lastPrice.current;}export function useStablecoinValue(currencyAmount){var price=useStablecoinPrice(currencyAmount===null||currencyAmount===void 0?void 0:currencyAmount.currency);return useMemo(function(){if(!price||!currencyAmount)return null;try{return price.quote(currencyAmount);}catch(error){return null;}},[currencyAmount,price]);}/**\n *\n * @param fiatValue string representation of a USD amount\n * @returns CurrencyAmount where currency is stablecoin on active chain\n */export function useStablecoinAmountFromFiatValue(fiatValue){var _STABLECOIN_AMOUNT_OU2;var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var stablecoin=chainId?(_STABLECOIN_AMOUNT_OU2=STABLECOIN_AMOUNT_OUT[chainId])===null||_STABLECOIN_AMOUNT_OU2===void 0?void 0:_STABLECOIN_AMOUNT_OU2.currency:undefined;return useMemo(function(){if(fiatValue===null||fiatValue===undefined||!chainId||!stablecoin){return undefined;}// trim for decimal precision when parsing\nvar parsedForDecimals=parseFloat(fiatValue).toFixed(stablecoin.decimals).toString();try{// parse USD string into CurrencyAmount based on stablecoin decimals\nreturn tryParseCurrencyAmount(parsedForDecimals,stablecoin);}catch(error){return undefined;}},[chainId,fiatValue,stablecoin]);}","map":{"version":3,"names":["CurrencyAmount","Price","TradeType","useWeb3React","tryParseCurrencyAmount","useMemo","useRef","RouterPreference","useRoutingAPITrade","SupportedChainId","CUSD_CELO","DAI_OPTIMISM","USDC_ARBITRUM","USDC_MAINNET","USDC_POLYGON","STABLECOIN_AMOUNT_OUT","MAINNET","fromRawAmount","ARBITRUM_ONE","OPTIMISM","POLYGON","CELO","useStablecoinPrice","currency","chainId","amountOut","undefined","stablecoin","EXACT_OUTPUT","PRICE","trade","price","wrapped","equals","routes","midPrice","numerator","denominator","lastPrice","current","equalTo","useStablecoinValue","currencyAmount","quote","error","useStablecoinAmountFromFiatValue","fiatValue","parsedForDecimals","parseFloat","toFixed","decimals","toString"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useStablecoinPrice.ts"],"sourcesContent":["import { Currency, CurrencyAmount, Price, Token, TradeType } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { useMemo, useRef } from 'react'\nimport { RouterPreference } from 'state/routing/slice'\nimport { useRoutingAPITrade } from 'state/routing/useRoutingAPITrade'\n\nimport { SupportedChainId } from '../constants/chains'\nimport { CUSD_CELO, DAI_OPTIMISM, USDC_ARBITRUM, USDC_MAINNET, USDC_POLYGON } from '../constants/tokens'\n\n// Stablecoin amounts used when calculating spot price for a given currency.\n// The amount is large enough to filter low liquidity pairs.\nconst STABLECOIN_AMOUNT_OUT: { [chainId: number]: CurrencyAmount<Token> } = {\n  [SupportedChainId.MAINNET]: CurrencyAmount.fromRawAmount(USDC_MAINNET, 100_000e6),\n  [SupportedChainId.ARBITRUM_ONE]: CurrencyAmount.fromRawAmount(USDC_ARBITRUM, 10_000e6),\n  [SupportedChainId.OPTIMISM]: CurrencyAmount.fromRawAmount(DAI_OPTIMISM, 10_000e18),\n  [SupportedChainId.POLYGON]: CurrencyAmount.fromRawAmount(USDC_POLYGON, 10_000e6),\n  [SupportedChainId.CELO]: CurrencyAmount.fromRawAmount(CUSD_CELO, 10_000e18),\n}\n\n/**\n * Returns the price in USDC of the input currency\n * @param currency currency to compute the USDC price of\n */\nexport default function useStablecoinPrice(currency?: Currency): Price<Currency, Token> | undefined {\n  const chainId = currency?.chainId\n\n  const amountOut = chainId ? STABLECOIN_AMOUNT_OUT[chainId] : undefined\n  const stablecoin = amountOut?.currency\n\n  const { trade } = useRoutingAPITrade(TradeType.EXACT_OUTPUT, amountOut, currency, RouterPreference.PRICE)\n  const price = useMemo(() => {\n    if (!currency || !stablecoin) {\n      return undefined\n    }\n\n    // handle usdc\n    if (currency?.wrapped.equals(stablecoin)) {\n      return new Price(stablecoin, stablecoin, '1', '1')\n    }\n\n    if (trade) {\n      const { numerator, denominator } = trade.routes[0].midPrice\n      return new Price(currency, stablecoin, denominator, numerator)\n    }\n\n    return undefined\n  }, [currency, stablecoin, trade])\n\n  const lastPrice = useRef(price)\n  if (!price || !lastPrice.current || !price.equalTo(lastPrice.current)) {\n    lastPrice.current = price\n  }\n  return lastPrice.current\n}\n\nexport function useStablecoinValue(currencyAmount: CurrencyAmount<Currency> | undefined | null) {\n  const price = useStablecoinPrice(currencyAmount?.currency)\n\n  return useMemo(() => {\n    if (!price || !currencyAmount) return null\n    try {\n      return price.quote(currencyAmount)\n    } catch (error) {\n      return null\n    }\n  }, [currencyAmount, price])\n}\n\n/**\n *\n * @param fiatValue string representation of a USD amount\n * @returns CurrencyAmount where currency is stablecoin on active chain\n */\nexport function useStablecoinAmountFromFiatValue(fiatValue: string | null | undefined) {\n  const { chainId } = useWeb3React()\n  const stablecoin = chainId ? STABLECOIN_AMOUNT_OUT[chainId]?.currency : undefined\n\n  return useMemo(() => {\n    if (fiatValue === null || fiatValue === undefined || !chainId || !stablecoin) {\n      return undefined\n    }\n\n    // trim for decimal precision when parsing\n    const parsedForDecimals = parseFloat(fiatValue).toFixed(stablecoin.decimals).toString()\n    try {\n      // parse USD string into CurrencyAmount based on stablecoin decimals\n      return tryParseCurrencyAmount(parsedForDecimals, stablecoin)\n    } catch (error) {\n      return undefined\n    }\n  }, [chainId, fiatValue, stablecoin])\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}