{"ast":null,"code":"export const OSCollectionsFetcher = async _ref => {\n  let {\n    params\n  } = _ref;\n  let hasEmptyFields = false;\n  for (const v of Object.values(params)) {\n    if (v === undefined) {\n      hasEmptyFields = true;\n    }\n  }\n  if (hasEmptyFields) return [];\n  const r = await fetch(`https://api.opensea.io/api/v1/collections?${new URLSearchParams(params).toString()}`);\n  const walletCollections = await r.json();\n  if (walletCollections) {\n    return walletCollections.filter(collection => collection.primary_asset_contracts.length).map(collection => ({\n      address: collection.primary_asset_contracts[0].address,\n      name: collection.name,\n      image: collection.image_url,\n      count: collection.owned_asset_count\n    }));\n  } else {\n    return [];\n  }\n};\n_c = OSCollectionsFetcher;\nvar _c;\n$RefreshReg$(_c, \"OSCollectionsFetcher\");","map":{"version":3,"names":["OSCollectionsFetcher","params","hasEmptyFields","v","Object","values","undefined","r","fetch","URLSearchParams","toString","walletCollections","json","filter","collection","primary_asset_contracts","length","map","address","name","image","image_url","count","owned_asset_count"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/openSea/OSCollectionsFetcher.ts"],"sourcesContent":["import { WalletCollection } from '../../types'\n\nexport const OSCollectionsFetcher = async ({ params }: any): Promise<WalletCollection[]> => {\n  let hasEmptyFields = false\n\n  for (const v of Object.values(params)) {\n    if (v === undefined) {\n      hasEmptyFields = true\n    }\n  }\n  if (hasEmptyFields) return []\n\n  const r = await fetch(`https://api.opensea.io/api/v1/collections?${new URLSearchParams(params).toString()}`)\n  const walletCollections = await r.json()\n  if (walletCollections) {\n    return walletCollections\n      .filter((collection: any) => collection.primary_asset_contracts.length)\n      .map((collection: any) => ({\n        address: collection.primary_asset_contracts[0].address,\n        name: collection.name,\n        image: collection.image_url,\n        count: collection.owned_asset_count,\n      }))\n  } else {\n    return []\n  }\n}\n"],"mappings":"AAEA,OAAO,MAAMA,oBAAoB,GAAG,cAAwD;EAAA,IAAjD;IAAEC;EAAY,CAAC;EACxD,IAAIC,cAAc,GAAG,KAAK;EAE1B,KAAK,MAAMC,CAAC,IAAIC,MAAM,CAACC,MAAM,CAACJ,MAAM,CAAC,EAAE;IACrC,IAAIE,CAAC,KAAKG,SAAS,EAAE;MACnBJ,cAAc,GAAG,IAAI;IACvB;EACF;EACA,IAAIA,cAAc,EAAE,OAAO,EAAE;EAE7B,MAAMK,CAAC,GAAG,MAAMC,KAAK,CAAE,6CAA4C,IAAIC,eAAe,CAACR,MAAM,CAAC,CAACS,QAAQ,EAAG,EAAC,CAAC;EAC5G,MAAMC,iBAAiB,GAAG,MAAMJ,CAAC,CAACK,IAAI,EAAE;EACxC,IAAID,iBAAiB,EAAE;IACrB,OAAOA,iBAAiB,CACrBE,MAAM,CAAEC,UAAe,IAAKA,UAAU,CAACC,uBAAuB,CAACC,MAAM,CAAC,CACtEC,GAAG,CAAEH,UAAe,KAAM;MACzBI,OAAO,EAAEJ,UAAU,CAACC,uBAAuB,CAAC,CAAC,CAAC,CAACG,OAAO;MACtDC,IAAI,EAAEL,UAAU,CAACK,IAAI;MACrBC,KAAK,EAAEN,UAAU,CAACO,SAAS;MAC3BC,KAAK,EAAER,UAAU,CAACS;IACpB,CAAC,CAAC,CAAC;EACP,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF,CAAC;AAAA,KAxBYvB,oBAAoB;AAAA;AAAA"},"metadata":{},"sourceType":"module"}