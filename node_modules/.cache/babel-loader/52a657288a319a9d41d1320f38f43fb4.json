{"ast":null,"code":"export default function getTicks(scale, numTicks) {\n  // Because `Scale` is generic type which maybe a subset of AnyD3Scale\n  // that may not have `ticks` field,\n  // TypeScript will not let us do the `'ticks' in scale` check directly.\n  // Have to manually cast and expand type first.\n  var s = scale;\n  if ('ticks' in s) {\n    return s.ticks(numTicks);\n  }\n  return s.domain().filter(function (_, index, arr) {\n    return numTicks == null || arr.length <= numTicks || index % Math.round((arr.length - 1) / numTicks) === 0;\n  });\n}","map":{"version":3,"names":["getTicks","scale","numTicks","s","ticks","domain","filter","_","index","arr","length","Math","round"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@visx/scale/esm/utils/getTicks.js"],"sourcesContent":["export default function getTicks(scale, numTicks) {\n  // Because `Scale` is generic type which maybe a subset of AnyD3Scale\n  // that may not have `ticks` field,\n  // TypeScript will not let us do the `'ticks' in scale` check directly.\n  // Have to manually cast and expand type first.\n  var s = scale;\n\n  if ('ticks' in s) {\n    return s.ticks(numTicks);\n  }\n\n  return s.domain().filter(function (_, index, arr) {\n    return numTicks == null || arr.length <= numTicks || index % Math.round((arr.length - 1) / numTicks) === 0;\n  });\n}"],"mappings":"AAAA,eAAe,SAASA,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAChD;EACA;EACA;EACA;EACA,IAAIC,CAAC,GAAGF,KAAK;EAEb,IAAI,OAAO,IAAIE,CAAC,EAAE;IAChB,OAAOA,CAAC,CAACC,KAAK,CAACF,QAAQ,CAAC;EAC1B;EAEA,OAAOC,CAAC,CAACE,MAAM,EAAE,CAACC,MAAM,CAAC,UAAUC,CAAC,EAAEC,KAAK,EAAEC,GAAG,EAAE;IAChD,OAAOP,QAAQ,IAAI,IAAI,IAAIO,GAAG,CAACC,MAAM,IAAIR,QAAQ,IAAIM,KAAK,GAAGG,IAAI,CAACC,KAAK,CAAC,CAACH,GAAG,CAACC,MAAM,GAAG,CAAC,IAAIR,QAAQ,CAAC,KAAK,CAAC;EAC5G,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}