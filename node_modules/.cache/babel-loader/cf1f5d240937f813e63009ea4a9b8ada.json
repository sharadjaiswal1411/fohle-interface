{"ast":null,"code":"import { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens';\nimport { supportedChainId } from './supportedChainId';\nexport function unwrappedToken(currency) {\n  var _WRAPPED_NATIVE_CURRE;\n  if (currency.isNative) return currency;\n  const formattedChainId = supportedChainId(currency.chainId);\n  if (formattedChainId && ((_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[formattedChainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.equals(currency))) return nativeOnChain(currency.chainId);\n  return currency;\n}","map":{"version":3,"names":["nativeOnChain","WRAPPED_NATIVE_CURRENCY","supportedChainId","unwrappedToken","currency","isNative","formattedChainId","chainId","equals"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/unwrappedToken.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\nimport { supportedChainId } from './supportedChainId'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = supportedChainId(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"mappings":"AAEA,SAASA,aAAa,EAAEC,uBAAuB,QAAQ,qBAAqB;AAC5E,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,OAAO,SAASC,cAAc,CAACC,QAAkB,EAAY;EAAA;EAC3D,IAAIA,QAAQ,CAACC,QAAQ,EAAE,OAAOD,QAAQ;EACtC,MAAME,gBAAgB,GAAGJ,gBAAgB,CAACE,QAAQ,CAACG,OAAO,CAAC;EAC3D,IAAID,gBAAgB,8BAAIL,uBAAuB,CAACK,gBAAgB,CAAC,0DAAzC,sBAA2CE,MAAM,CAACJ,QAAQ,CAAC,GACjF,OAAOJ,aAAa,CAACI,QAAQ,CAACG,OAAO,CAAC;EACxC,OAAOH,QAAQ;AACjB"},"metadata":{},"sourceType":"module"}