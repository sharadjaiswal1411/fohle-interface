{"ast":null,"code":"import{SupportedChainId}from'../constants/chains';/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */export function supportedChainId(chainId){if(typeof chainId==='number'&&chainId in SupportedChainId){return chainId;}return undefined;}","map":{"version":3,"names":["SupportedChainId","supportedChainId","chainId","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/supportedChainId.ts"],"sourcesContent":["import { SupportedChainId } from '../constants/chains'\n\n/**\n * Returns the input chain ID if chain is supported. If not, return undefined\n * @param chainId a chain ID, which will be returned if it is a supported chain ID\n */\nexport function supportedChainId(chainId: number | undefined): SupportedChainId | undefined {\n  if (typeof chainId === 'number' && chainId in SupportedChainId) {\n    return chainId\n  }\n  return undefined\n}\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,qBAAqB,CAEtD;AACA;AACA;AACA,GACA,MAAO,SAASC,iBAAgB,CAACC,OAA2B,CAAgC,CAC1F,GAAI,MAAOA,QAAO,GAAK,QAAQ,EAAIA,OAAO,GAAIF,iBAAgB,CAAE,CAC9D,MAAOE,QAAO,CAChB,CACA,MAAOC,UAAS,CAClB"},"metadata":{},"sourceType":"module"}