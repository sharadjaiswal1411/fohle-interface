{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import useBlockNumber from'lib/hooks/useBlockNumber';import{useEffect,useMemo}from'react';import{useAppDispatch,useAppSelector}from'../hooks';import{addListener,removeListener}from'./slice';import{filterToKey,isHistoricalLog}from'./utils';var LogsState;(function(LogsState){LogsState[LogsState[\"INVALID\"]=0]=\"INVALID\";LogsState[LogsState[\"LOADING\"]=1]=\"LOADING\";LogsState[LogsState[\"SYNCING\"]=2]=\"SYNCING\";LogsState[LogsState[\"ERROR\"]=3]=\"ERROR\";LogsState[LogsState[\"SYNCED\"]=4]=\"SYNCED\";})(LogsState||(LogsState={}));/**\n * Returns the logs for the given filter as of the latest block, re-fetching from the library every block.\n * @param filter The logs filter, with `fromBlock` or `toBlock` optionally specified.\n * The filter parameter should _always_ be memoized, or else will trigger constant refetching\n */export function useLogs(filter){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var blockNumber=useBlockNumber();var logs=useAppSelector(function(state){return state.logs;});var dispatch=useAppDispatch();useEffect(function(){if(!filter||!chainId)return;dispatch(addListener({chainId:chainId,filter:filter}));return function(){dispatch(removeListener({chainId:chainId,filter:filter}));};},[chainId,dispatch,filter]);return useMemo(function(){var _logs$chainId;if(!chainId||!filter||!blockNumber)return{logs:undefined,state:LogsState.INVALID};var state=(_logs$chainId=logs[chainId])===null||_logs$chainId===void 0?void 0:_logs$chainId[filterToKey(filter)];var result=state===null||state===void 0?void 0:state.results;if(!result){return{state:LogsState.LOADING,logs:undefined};}if(result.error){return{state:LogsState.ERROR,logs:undefined};}return{// if we're only fetching logs until a block that has already elapsed, we're synced regardless of result.blockNumber\nstate:isHistoricalLog(filter,blockNumber)?LogsState.SYNCED:result.blockNumber>=blockNumber?LogsState.SYNCED:LogsState.SYNCING,logs:result.logs};},[blockNumber,chainId,filter,logs]);}","map":{"version":3,"names":["useWeb3React","useBlockNumber","useEffect","useMemo","useAppDispatch","useAppSelector","addListener","removeListener","filterToKey","isHistoricalLog","LogsState","useLogs","filter","chainId","blockNumber","logs","state","dispatch","undefined","INVALID","result","results","LOADING","error","ERROR","SYNCED","SYNCING"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/logs/hooks.ts"],"sourcesContent":["import type { Filter } from '@ethersproject/providers'\nimport { useWeb3React } from '@web3-react/core'\nimport useBlockNumber from 'lib/hooks/useBlockNumber'\nimport { useEffect, useMemo } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '../hooks'\nimport { addListener, removeListener } from './slice'\nimport { filterToKey, isHistoricalLog, Log } from './utils'\n\nenum LogsState {\n  // The filter is invalid\n  INVALID,\n  // The logs are being loaded\n  LOADING,\n  // Logs are from a previous block number\n  SYNCING,\n  // Tried to fetch logs but received an error\n  ERROR,\n  // Logs have been fetched as of the latest block number\n  SYNCED,\n}\n\ninterface UseLogsResult {\n  logs: Log[] | undefined\n  state: LogsState\n}\n\n/**\n * Returns the logs for the given filter as of the latest block, re-fetching from the library every block.\n * @param filter The logs filter, with `fromBlock` or `toBlock` optionally specified.\n * The filter parameter should _always_ be memoized, or else will trigger constant refetching\n */\nexport function useLogs(filter: Filter | undefined): UseLogsResult {\n  const { chainId } = useWeb3React()\n  const blockNumber = useBlockNumber()\n\n  const logs = useAppSelector((state) => state.logs)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (!filter || !chainId) return\n\n    dispatch(addListener({ chainId, filter }))\n    return () => {\n      dispatch(removeListener({ chainId, filter }))\n    }\n  }, [chainId, dispatch, filter])\n\n  return useMemo(() => {\n    if (!chainId || !filter || !blockNumber)\n      return {\n        logs: undefined,\n        state: LogsState.INVALID,\n      }\n\n    const state = logs[chainId]?.[filterToKey(filter)]\n    const result = state?.results\n\n    if (!result) {\n      return {\n        state: LogsState.LOADING,\n        logs: undefined,\n      }\n    }\n\n    if (result.error) {\n      return {\n        state: LogsState.ERROR,\n        logs: undefined,\n      }\n    }\n\n    return {\n      // if we're only fetching logs until a block that has already elapsed, we're synced regardless of result.blockNumber\n      state: isHistoricalLog(filter, blockNumber)\n        ? LogsState.SYNCED\n        : result.blockNumber >= blockNumber\n        ? LogsState.SYNCED\n        : LogsState.SYNCING,\n      logs: result.logs,\n    }\n  }, [blockNumber, chainId, filter, logs])\n}\n"],"mappings":"AACA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,MAAOC,eAAc,KAAM,0BAA0B,CACrD,OAASC,SAAS,CAAEC,OAAO,KAAQ,OAAO,CAE1C,OAASC,cAAc,CAAEC,cAAc,KAAQ,UAAU,CACzD,OAASC,WAAW,CAAEC,cAAc,KAAQ,SAAS,CACrD,OAASC,WAAW,CAAEC,eAAe,KAAa,SAAS,IAEtDC,UAAS,WAATA,SAAS,EAATA,SAAS,CAATA,SAAS,yBAATA,SAAS,CAATA,SAAS,yBAATA,SAAS,CAATA,SAAS,yBAATA,SAAS,CAATA,SAAS,qBAATA,SAAS,CAATA,SAAS,0BAATA,SAAS,GAATA,SAAS,MAkBd;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,QAAO,CAACC,MAA0B,CAAiB,CACjE,kBAAoBZ,YAAY,EAAE,CAA1Ba,OAAO,eAAPA,OAAO,CACf,GAAMC,YAAW,CAAGb,cAAc,EAAE,CAEpC,GAAMc,KAAI,CAAGV,cAAc,CAAC,SAACW,KAAK,QAAKA,MAAK,CAACD,IAAI,GAAC,CAClD,GAAME,SAAQ,CAAGb,cAAc,EAAE,CAEjCF,SAAS,CAAC,UAAM,CACd,GAAI,CAACU,MAAM,EAAI,CAACC,OAAO,CAAE,OAEzBI,QAAQ,CAACX,WAAW,CAAC,CAAEO,OAAO,CAAPA,OAAO,CAAED,MAAM,CAANA,MAAO,CAAC,CAAC,CAAC,CAC1C,MAAO,WAAM,CACXK,QAAQ,CAACV,cAAc,CAAC,CAAEM,OAAO,CAAPA,OAAO,CAAED,MAAM,CAANA,MAAO,CAAC,CAAC,CAAC,CAC/C,CAAC,CACH,CAAC,CAAE,CAACC,OAAO,CAAEI,QAAQ,CAAEL,MAAM,CAAC,CAAC,CAE/B,MAAOT,QAAO,CAAC,UAAM,mBACnB,GAAI,CAACU,OAAO,EAAI,CAACD,MAAM,EAAI,CAACE,WAAW,CACrC,MAAO,CACLC,IAAI,CAAEG,SAAS,CACfF,KAAK,CAAEN,SAAS,CAACS,OACnB,CAAC,CAEH,GAAMH,MAAK,gBAAGD,IAAI,CAACF,OAAO,CAAC,wCAAb,cAAgBL,WAAW,CAACI,MAAM,CAAC,CAAC,CAClD,GAAMQ,OAAM,CAAGJ,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEK,OAAO,CAE7B,GAAI,CAACD,MAAM,CAAE,CACX,MAAO,CACLJ,KAAK,CAAEN,SAAS,CAACY,OAAO,CACxBP,IAAI,CAAEG,SACR,CAAC,CACH,CAEA,GAAIE,MAAM,CAACG,KAAK,CAAE,CAChB,MAAO,CACLP,KAAK,CAAEN,SAAS,CAACc,KAAK,CACtBT,IAAI,CAAEG,SACR,CAAC,CACH,CAEA,MAAO,CACL;AACAF,KAAK,CAAEP,eAAe,CAACG,MAAM,CAAEE,WAAW,CAAC,CACvCJ,SAAS,CAACe,MAAM,CAChBL,MAAM,CAACN,WAAW,EAAIA,WAAW,CACjCJ,SAAS,CAACe,MAAM,CAChBf,SAAS,CAACgB,OAAO,CACrBX,IAAI,CAAEK,MAAM,CAACL,IACf,CAAC,CACH,CAAC,CAAE,CAACD,WAAW,CAAED,OAAO,CAAED,MAAM,CAAEG,IAAI,CAAC,CAAC,CAC1C"},"metadata":{},"sourceType":"module"}