{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { atomWithImmer } from 'jotai/immer';\nimport { useAtomValue } from 'jotai/utils';\nimport { useCallback } from 'react';\nimport useBlockNumber from './useBlockNumber';\n\n// The oldest block (per chain) to be considered valid.\nconst oldestBlockMapAtom = atomWithImmer({});\nconst DEFAULT_MAX_BLOCK_AGE = 10;\nfunction useGetIsValidBlock() {\n  _s();\n  let maxBlockAge = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_MAX_BLOCK_AGE;\n  const {\n    chainId\n  } = useWeb3React();\n  const currentBlock = useBlockNumber();\n  const oldestBlockMap = useAtomValue(oldestBlockMapAtom);\n  const oldestBlock = chainId ? oldestBlockMap[chainId] : 0;\n  return useCallback(block => {\n    if (!currentBlock) return false;\n    if (currentBlock - block > maxBlockAge) return false;\n    if (currentBlock < oldestBlock) return false;\n    return true;\n  }, [currentBlock, maxBlockAge, oldestBlock]);\n}\n_s(useGetIsValidBlock, \"mg/O5ro1kgijDNmmMJhhfB2dyIM=\", false, function () {\n  return [useWeb3React, useBlockNumber, useAtomValue];\n});\nexport default function useIsValidBlock(block) {\n  _s2();\n  return useGetIsValidBlock()(block);\n}\n_s2(useIsValidBlock, \"xUeCWaY0jf5A2Xf7MkCXjFIP5S8=\", false, function () {\n  return [useGetIsValidBlock];\n});","map":{"version":3,"names":["useWeb3React","atomWithImmer","useAtomValue","useCallback","useBlockNumber","oldestBlockMapAtom","DEFAULT_MAX_BLOCK_AGE","useGetIsValidBlock","maxBlockAge","chainId","currentBlock","oldestBlockMap","oldestBlock","block","useIsValidBlock"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useIsValidBlock.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { atomWithImmer } from 'jotai/immer'\nimport { useAtomValue } from 'jotai/utils'\nimport { useCallback } from 'react'\n\nimport useBlockNumber from './useBlockNumber'\n\n// The oldest block (per chain) to be considered valid.\nconst oldestBlockMapAtom = atomWithImmer<{ [chainId: number]: number }>({})\n\nconst DEFAULT_MAX_BLOCK_AGE = 10\n\nfunction useGetIsValidBlock(maxBlockAge = DEFAULT_MAX_BLOCK_AGE): (block: number) => boolean {\n  const { chainId } = useWeb3React()\n  const currentBlock = useBlockNumber()\n  const oldestBlockMap = useAtomValue(oldestBlockMapAtom)\n  const oldestBlock = chainId ? oldestBlockMap[chainId] : 0\n  return useCallback(\n    (block: number) => {\n      if (!currentBlock) return false\n      if (currentBlock - block > maxBlockAge) return false\n      if (currentBlock < oldestBlock) return false\n      return true\n    },\n    [currentBlock, maxBlockAge, oldestBlock]\n  )\n}\n\nexport default function useIsValidBlock(block: number): boolean {\n  return useGetIsValidBlock()(block)\n}\n"],"mappings":";;AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,aAAa,QAAQ,aAAa;AAC3C,SAASC,YAAY,QAAQ,aAAa;AAC1C,SAASC,WAAW,QAAQ,OAAO;AAEnC,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA,MAAMC,kBAAkB,GAAGJ,aAAa,CAAgC,CAAC,CAAC,CAAC;AAE3E,MAAMK,qBAAqB,GAAG,EAAE;AAEhC,SAASC,kBAAkB,GAAkE;EAAA;EAAA,IAAjEC,WAAW,uEAAGF,qBAAqB;EAC7D,MAAM;IAAEG;EAAQ,CAAC,GAAGT,YAAY,EAAE;EAClC,MAAMU,YAAY,GAAGN,cAAc,EAAE;EACrC,MAAMO,cAAc,GAAGT,YAAY,CAACG,kBAAkB,CAAC;EACvD,MAAMO,WAAW,GAAGH,OAAO,GAAGE,cAAc,CAACF,OAAO,CAAC,GAAG,CAAC;EACzD,OAAON,WAAW,CACfU,KAAa,IAAK;IACjB,IAAI,CAACH,YAAY,EAAE,OAAO,KAAK;IAC/B,IAAIA,YAAY,GAAGG,KAAK,GAAGL,WAAW,EAAE,OAAO,KAAK;IACpD,IAAIE,YAAY,GAAGE,WAAW,EAAE,OAAO,KAAK;IAC5C,OAAO,IAAI;EACb,CAAC,EACD,CAACF,YAAY,EAAEF,WAAW,EAAEI,WAAW,CAAC,CACzC;AACH;AAAC,GAdQL,kBAAkB;EAAA,QACLP,YAAY,EACXI,cAAc,EACZF,YAAY;AAAA;AAarC,eAAe,SAASY,eAAe,CAACD,KAAa,EAAW;EAAA;EAC9D,OAAON,kBAAkB,EAAE,CAACM,KAAK,CAAC;AACpC;AAAC,IAFuBC,eAAe;EAAA,QAC9BP,kBAAkB;AAAA"},"metadata":{},"sourceType":"module"}