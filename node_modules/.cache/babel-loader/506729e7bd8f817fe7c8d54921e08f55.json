{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512 } from \"../constants\";\nexport function getAlgo(type) {\n  return type === AES_BROWSER_ALGO ? {\n    length: AES_LENGTH,\n    name: AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: HMAC_BROWSER_ALGO\n    },\n    name: HMAC_BROWSER\n  };\n}\nexport function getOps(type) {\n  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];\n}\nexport function browserExportKey(_x) {\n  return _browserExportKey.apply(this, arguments);\n}\nfunction _browserExportKey() {\n  _browserExportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cryptoKey) {\n    var type,\n      subtle,\n      _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = _args.length > 1 && _args[1] !== undefined ? _args[1] : AES_BROWSER_ALGO;\n            subtle = env.getSubtleCrypto();\n            _context.t0 = Uint8Array;\n            _context.next = 5;\n            return subtle.exportKey(\"raw\", cryptoKey);\n          case 5:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t0(_context.t1));\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _browserExportKey.apply(this, arguments);\n}\nexport function browserImportKey(_x2) {\n  return _browserImportKey.apply(this, arguments);\n}\nfunction _browserImportKey() {\n  _browserImportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(buffer) {\n    var type,\n      _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            type = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : AES_BROWSER_ALGO;\n            return _context2.abrupt(\"return\", env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type)));\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _browserImportKey.apply(this, arguments);\n}\nexport function browserAesEncrypt(_x3, _x4, _x5) {\n  return _browserAesEncrypt.apply(this, arguments);\n}\nfunction _browserAesEncrypt() {\n  _browserAesEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context3.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n          case 3:\n            cryptoKey = _context3.sent;\n            _context3.next = 6;\n            return subtle.encrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n          case 6:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", new Uint8Array(result));\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _browserAesEncrypt.apply(this, arguments);\n}\nexport function browserAesDecrypt(_x6, _x7, _x8) {\n  return _browserAesDecrypt.apply(this, arguments);\n}\nfunction _browserAesDecrypt() {\n  _browserAesDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context4.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n          case 3:\n            cryptoKey = _context4.sent;\n            _context4.next = 6;\n            return subtle.decrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n          case 6:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", new Uint8Array(result));\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _browserAesDecrypt.apply(this, arguments);\n}\nexport function browserHmacSha256Sign(_x9, _x10) {\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\nfunction _browserHmacSha256Sign() {\n  _browserHmacSha256Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context5.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n          case 3:\n            cryptoKey = _context5.sent;\n            _context5.next = 6;\n            return subtle.sign({\n              length: HMAC_LENGTH,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n          case 6:\n            signature = _context5.sent;\n            return _context5.abrupt(\"return\", new Uint8Array(signature));\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\nexport function browserHmacSha512Sign(_x11, _x12) {\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\nfunction _browserHmacSha512Sign() {\n  _browserHmacSha512Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context6.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n          case 3:\n            cryptoKey = _context6.sent;\n            _context6.next = 6;\n            return subtle.sign({\n              length: LENGTH_512,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n          case 6:\n            signature = _context6.sent;\n            return _context6.abrupt(\"return\", new Uint8Array(signature));\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\nexport function browserSha256(_x13) {\n  return _browserSha.apply(this, arguments);\n}\nfunction _browserSha() {\n  _browserSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context7.next = 3;\n            return subtle.digest({\n              name: SHA256_BROWSER_ALGO\n            }, data);\n          case 3:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", new Uint8Array(result));\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _browserSha.apply(this, arguments);\n}\nexport function browserSha512(_x14) {\n  return _browserSha2.apply(this, arguments);\n}\nfunction _browserSha2() {\n  _browserSha2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context8.next = 3;\n            return subtle.digest({\n              name: SHA512_BROWSER_ALGO\n            }, data);\n          case 3:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", new Uint8Array(result));\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _browserSha2.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/lib/browser.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512, } from \"../constants\";\nexport function getAlgo(type) {\n    return type === AES_BROWSER_ALGO\n        ? { length: AES_LENGTH, name: AES_BROWSER_ALGO }\n        : {\n            hash: { name: HMAC_BROWSER_ALGO },\n            name: HMAC_BROWSER,\n        };\n}\nexport function getOps(type) {\n    return type === AES_BROWSER_ALGO\n        ? [ENCRYPT_OP, DECRYPT_OP]\n        : [SIGN_OP, VERIFY_OP];\n}\nexport async function browserExportKey(cryptoKey, type = AES_BROWSER_ALGO) {\n    const subtle = env.getSubtleCrypto();\n    return new Uint8Array(await subtle.exportKey(\"raw\", cryptoKey));\n}\nexport async function browserImportKey(buffer, type = AES_BROWSER_ALGO) {\n    return env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type));\n}\nexport async function browserAesEncrypt(iv, key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n    const result = await subtle.encrypt({\n        iv,\n        name: AES_BROWSER_ALGO,\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n}\nexport async function browserAesDecrypt(iv, key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, AES_BROWSER_ALGO);\n    const result = await subtle.decrypt({\n        iv,\n        name: AES_BROWSER_ALGO,\n    }, cryptoKey, data);\n    return new Uint8Array(result);\n}\nexport async function browserHmacSha256Sign(key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n    const signature = await subtle.sign({\n        length: HMAC_LENGTH,\n        name: HMAC_BROWSER,\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n}\nexport async function browserHmacSha512Sign(key, data) {\n    const subtle = env.getSubtleCrypto();\n    const cryptoKey = await browserImportKey(key, HMAC_BROWSER);\n    const signature = await subtle.sign({\n        length: LENGTH_512,\n        name: HMAC_BROWSER,\n    }, cryptoKey, data);\n    return new Uint8Array(signature);\n}\nexport async function browserSha256(data) {\n    const subtle = env.getSubtleCrypto();\n    const result = await subtle.digest({\n        name: SHA256_BROWSER_ALGO,\n    }, data);\n    return new Uint8Array(result);\n}\nexport async function browserSha512(data) {\n    const subtle = env.getSubtleCrypto();\n    const result = await subtle.digest({\n        name: SHA512_BROWSER_ALGO,\n    }, data);\n    return new Uint8Array(result);\n}\n//# sourceMappingURL=browser.js.map"]},"metadata":{},"sourceType":"module"}