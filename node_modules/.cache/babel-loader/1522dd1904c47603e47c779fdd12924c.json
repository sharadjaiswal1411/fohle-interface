{"ast":null,"code":"import{useWeb3React}from'@web3-react/core';import{useMemo}from'react';import{useCombinedActiveList}from'state/lists/hooks';/**\n * Returns a WrappedTokenInfo from the active token lists when possible,\n * or the passed token otherwise. */export function useTokenInfoFromActiveList(currency){var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;var activeList=useCombinedActiveList();return useMemo(function(){if(!chainId)return;if(currency.isNative)return currency;try{return activeList[chainId][currency.wrapped.address].token;}catch(e){return currency;}},[activeList,chainId,currency]);}","map":{"version":3,"names":["useWeb3React","useMemo","useCombinedActiveList","useTokenInfoFromActiveList","currency","chainId","activeList","isNative","wrapped","address","token","e"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useTokenInfoFromActiveList.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useMemo } from 'react'\nimport { useCombinedActiveList } from 'state/lists/hooks'\n\n/**\n * Returns a WrappedTokenInfo from the active token lists when possible,\n * or the passed token otherwise. */\nexport function useTokenInfoFromActiveList(currency: Currency) {\n  const { chainId } = useWeb3React()\n  const activeList = useCombinedActiveList()\n\n  return useMemo(() => {\n    if (!chainId) return\n    if (currency.isNative) return currency\n\n    try {\n      return activeList[chainId][currency.wrapped.address].token\n    } catch (e) {\n      return currency\n    }\n  }, [activeList, chainId, currency])\n}\n"],"mappings":"AACA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,OAAO,KAAQ,OAAO,CAC/B,OAASC,qBAAqB,KAAQ,mBAAmB,CAEzD;AACA;AACA,oCACA,MAAO,SAASC,2BAA0B,CAACC,QAAkB,CAAE,CAC7D,kBAAoBJ,YAAY,EAAE,CAA1BK,OAAO,eAAPA,OAAO,CACf,GAAMC,WAAU,CAAGJ,qBAAqB,EAAE,CAE1C,MAAOD,QAAO,CAAC,UAAM,CACnB,GAAI,CAACI,OAAO,CAAE,OACd,GAAID,QAAQ,CAACG,QAAQ,CAAE,MAAOH,SAAQ,CAEtC,GAAI,CACF,MAAOE,WAAU,CAACD,OAAO,CAAC,CAACD,QAAQ,CAACI,OAAO,CAACC,OAAO,CAAC,CAACC,KAAK,CAC5D,CAAE,MAAOC,CAAC,CAAE,CACV,MAAOP,SAAQ,CACjB,CACF,CAAC,CAAE,CAACE,UAAU,CAAED,OAAO,CAAED,QAAQ,CAAC,CAAC,CACrC"},"metadata":{},"sourceType":"module"}