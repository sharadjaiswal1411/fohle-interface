{"ast":null,"code":"import { SupportedChainId } from 'constants/chains';\nimport { ZERO_ADDRESS } from 'constants/misc';\nimport { NATIVE_CHAIN_ID, nativeOnChain, WRAPPED_NATIVE_CURRENCY } from 'constants/tokens';\nimport { Chain, HistoryDuration } from './__generated__/types-and-hooks';\nexport let TimePeriod;\n(function (TimePeriod) {\n  TimePeriod[TimePeriod[\"HOUR\"] = 0] = \"HOUR\";\n  TimePeriod[TimePeriod[\"DAY\"] = 1] = \"DAY\";\n  TimePeriod[TimePeriod[\"WEEK\"] = 2] = \"WEEK\";\n  TimePeriod[TimePeriod[\"MONTH\"] = 3] = \"MONTH\";\n  TimePeriod[TimePeriod[\"YEAR\"] = 4] = \"YEAR\";\n})(TimePeriod || (TimePeriod = {}));\nexport function toHistoryDuration(timePeriod) {\n  switch (timePeriod) {\n    case TimePeriod.HOUR:\n      return HistoryDuration.Hour;\n    case TimePeriod.DAY:\n      return HistoryDuration.Day;\n    case TimePeriod.WEEK:\n      return HistoryDuration.Week;\n    case TimePeriod.MONTH:\n      return HistoryDuration.Month;\n    case TimePeriod.YEAR:\n      return HistoryDuration.Year;\n  }\n}\nexport function isPricePoint(p) {\n  return p !== null;\n}\nexport const CHAIN_ID_TO_BACKEND_NAME = {\n  [SupportedChainId.MAINNET]: Chain.Ethereum,\n  [SupportedChainId.GOERLI]: Chain.EthereumGoerli,\n  [SupportedChainId.POLYGON]: Chain.Polygon,\n  [SupportedChainId.POLYGON_MUMBAI]: Chain.Polygon,\n  [SupportedChainId.CELO]: Chain.Celo,\n  [SupportedChainId.CELO_ALFAJORES]: Chain.Celo,\n  [SupportedChainId.ARBITRUM_ONE]: Chain.Arbitrum,\n  [SupportedChainId.ARBITRUM_RINKEBY]: Chain.Arbitrum,\n  [SupportedChainId.OPTIMISM]: Chain.Optimism,\n  [SupportedChainId.OPTIMISM_GOERLI]: Chain.Optimism\n};\nexport function chainIdToBackendName(chainId) {\n  return chainId && CHAIN_ID_TO_BACKEND_NAME[chainId] ? CHAIN_ID_TO_BACKEND_NAME[chainId] : CHAIN_ID_TO_BACKEND_NAME[SupportedChainId.MAINNET];\n}\nconst URL_CHAIN_PARAM_TO_BACKEND = {\n  ethereum: Chain.Ethereum,\n  polygon: Chain.Polygon,\n  celo: Chain.Celo,\n  arbitrum: Chain.Arbitrum,\n  optimism: Chain.Optimism\n};\nexport function validateUrlChainParam(chainName) {\n  return chainName && URL_CHAIN_PARAM_TO_BACKEND[chainName] ? URL_CHAIN_PARAM_TO_BACKEND[chainName] : Chain.Ethereum;\n}\nexport const CHAIN_NAME_TO_CHAIN_ID = {\n  ETHEREUM: SupportedChainId.MAINNET,\n  POLYGON: SupportedChainId.POLYGON,\n  CELO: SupportedChainId.CELO,\n  ARBITRUM: SupportedChainId.ARBITRUM_ONE,\n  OPTIMISM: SupportedChainId.OPTIMISM\n};\nexport const BACKEND_CHAIN_NAMES = [Chain.Ethereum, Chain.Polygon, Chain.Optimism, Chain.Arbitrum, Chain.Celo];\nexport function isValidBackendChainName(chainName) {\n  if (!chainName) return false;\n  for (let i = 0; i < BACKEND_CHAIN_NAMES.length; i++) {\n    if (chainName === BACKEND_CHAIN_NAMES[i]) return true;\n  }\n  return false;\n}\nexport function getTokenDetailsURL(address, chainName, chainId) {\n  if (address === ZERO_ADDRESS && chainId && chainId === SupportedChainId.MAINNET) {\n    return `/tokens/${CHAIN_ID_TO_BACKEND_NAME[chainId].toLowerCase()}/${NATIVE_CHAIN_ID}`;\n  } else if (chainName) {\n    return `/tokens/${chainName.toLowerCase()}/${address}`;\n  } else if (chainId) {\n    const chainName = CHAIN_ID_TO_BACKEND_NAME[chainId];\n    return chainName ? `/tokens/${chainName.toLowerCase()}/${address}` : '';\n  } else {\n    return '';\n  }\n}\nexport function unwrapToken(chainId, token) {\n  var _WRAPPED_NATIVE_CURRE;\n  if (!(token === null || token === void 0 ? void 0 : token.address)) return token;\n  const address = token.address.toLowerCase();\n  const nativeAddress = (_WRAPPED_NATIVE_CURRE = WRAPPED_NATIVE_CURRENCY[chainId]) === null || _WRAPPED_NATIVE_CURRE === void 0 ? void 0 : _WRAPPED_NATIVE_CURRE.address.toLowerCase();\n  if (address !== nativeAddress) return token;\n  const nativeToken = nativeOnChain(chainId);\n  return {\n    ...token,\n    ...nativeToken,\n    address: NATIVE_CHAIN_ID,\n    extensions: undefined // prevents marking cross-chain wrapped tokens as native\n  };\n}","map":{"version":3,"names":["SupportedChainId","ZERO_ADDRESS","NATIVE_CHAIN_ID","nativeOnChain","WRAPPED_NATIVE_CURRENCY","Chain","HistoryDuration","TimePeriod","toHistoryDuration","timePeriod","HOUR","Hour","DAY","Day","WEEK","Week","MONTH","Month","YEAR","Year","isPricePoint","p","CHAIN_ID_TO_BACKEND_NAME","MAINNET","Ethereum","GOERLI","EthereumGoerli","POLYGON","Polygon","POLYGON_MUMBAI","CELO","Celo","CELO_ALFAJORES","ARBITRUM_ONE","Arbitrum","ARBITRUM_RINKEBY","OPTIMISM","Optimism","OPTIMISM_GOERLI","chainIdToBackendName","chainId","URL_CHAIN_PARAM_TO_BACKEND","ethereum","polygon","celo","arbitrum","optimism","validateUrlChainParam","chainName","CHAIN_NAME_TO_CHAIN_ID","ETHEREUM","ARBITRUM","BACKEND_CHAIN_NAMES","isValidBackendChainName","i","length","getTokenDetailsURL","address","toLowerCase","unwrapToken","token","nativeAddress","nativeToken","extensions","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/data/util.tsx"],"sourcesContent":["import { SupportedChainId } from 'constants/chains'\nimport { ZERO_ADDRESS } from 'constants/misc'\nimport { NATIVE_CHAIN_ID, nativeOnChain, WRAPPED_NATIVE_CURRENCY } from 'constants/tokens'\n\nimport { Chain, HistoryDuration } from './__generated__/types-and-hooks'\n\nexport enum TimePeriod {\n  HOUR,\n  DAY,\n  WEEK,\n  MONTH,\n  YEAR,\n}\n\nexport function toHistoryDuration(timePeriod: TimePeriod): HistoryDuration {\n  switch (timePeriod) {\n    case TimePeriod.HOUR:\n      return HistoryDuration.Hour\n    case TimePeriod.DAY:\n      return HistoryDuration.Day\n    case TimePeriod.WEEK:\n      return HistoryDuration.Week\n    case TimePeriod.MONTH:\n      return HistoryDuration.Month\n    case TimePeriod.YEAR:\n      return HistoryDuration.Year\n  }\n}\n\nexport type PricePoint = { timestamp: number; value: number }\n\nexport function isPricePoint(p: PricePoint | null): p is PricePoint {\n  return p !== null\n}\n\nexport const CHAIN_ID_TO_BACKEND_NAME: { [key: number]: Chain } = {\n  [SupportedChainId.MAINNET]: Chain.Ethereum,\n  [SupportedChainId.GOERLI]: Chain.EthereumGoerli,\n  [SupportedChainId.POLYGON]: Chain.Polygon,\n  [SupportedChainId.POLYGON_MUMBAI]: Chain.Polygon,\n  [SupportedChainId.CELO]: Chain.Celo,\n  [SupportedChainId.CELO_ALFAJORES]: Chain.Celo,\n  [SupportedChainId.ARBITRUM_ONE]: Chain.Arbitrum,\n  [SupportedChainId.ARBITRUM_RINKEBY]: Chain.Arbitrum,\n  [SupportedChainId.OPTIMISM]: Chain.Optimism,\n  [SupportedChainId.OPTIMISM_GOERLI]: Chain.Optimism,\n}\n\nexport function chainIdToBackendName(chainId: number | undefined) {\n  return chainId && CHAIN_ID_TO_BACKEND_NAME[chainId]\n    ? CHAIN_ID_TO_BACKEND_NAME[chainId]\n    : CHAIN_ID_TO_BACKEND_NAME[SupportedChainId.MAINNET]\n}\n\nconst URL_CHAIN_PARAM_TO_BACKEND: { [key: string]: Chain } = {\n  ethereum: Chain.Ethereum,\n  polygon: Chain.Polygon,\n  celo: Chain.Celo,\n  arbitrum: Chain.Arbitrum,\n  optimism: Chain.Optimism,\n}\n\nexport function validateUrlChainParam(chainName: string | undefined) {\n  return chainName && URL_CHAIN_PARAM_TO_BACKEND[chainName] ? URL_CHAIN_PARAM_TO_BACKEND[chainName] : Chain.Ethereum\n}\n\nexport const CHAIN_NAME_TO_CHAIN_ID: { [key: string]: SupportedChainId } = {\n  ETHEREUM: SupportedChainId.MAINNET,\n  POLYGON: SupportedChainId.POLYGON,\n  CELO: SupportedChainId.CELO,\n  ARBITRUM: SupportedChainId.ARBITRUM_ONE,\n  OPTIMISM: SupportedChainId.OPTIMISM,\n}\n\nexport const BACKEND_CHAIN_NAMES: Chain[] = [Chain.Ethereum, Chain.Polygon, Chain.Optimism, Chain.Arbitrum, Chain.Celo]\n\nexport function isValidBackendChainName(chainName: string | undefined): chainName is Chain {\n  if (!chainName) return false\n  for (let i = 0; i < BACKEND_CHAIN_NAMES.length; i++) {\n    if (chainName === BACKEND_CHAIN_NAMES[i]) return true\n  }\n  return false\n}\n\nexport function getTokenDetailsURL(address: string, chainName?: Chain, chainId?: number) {\n  if (address === ZERO_ADDRESS && chainId && chainId === SupportedChainId.MAINNET) {\n    return `/tokens/${CHAIN_ID_TO_BACKEND_NAME[chainId].toLowerCase()}/${NATIVE_CHAIN_ID}`\n  } else if (chainName) {\n    return `/tokens/${chainName.toLowerCase()}/${address}`\n  } else if (chainId) {\n    const chainName = CHAIN_ID_TO_BACKEND_NAME[chainId]\n    return chainName ? `/tokens/${chainName.toLowerCase()}/${address}` : ''\n  } else {\n    return ''\n  }\n}\n\nexport function unwrapToken<\n  T extends {\n    address?: string | null | undefined\n  } | null\n>(chainId: number, token: T): T {\n  if (!token?.address) return token\n\n  const address = token.address.toLowerCase()\n  const nativeAddress = WRAPPED_NATIVE_CURRENCY[chainId]?.address.toLowerCase()\n  if (address !== nativeAddress) return token\n\n  const nativeToken = nativeOnChain(chainId)\n  return {\n    ...token,\n    ...nativeToken,\n    address: NATIVE_CHAIN_ID,\n    extensions: undefined, // prevents marking cross-chain wrapped tokens as native\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}