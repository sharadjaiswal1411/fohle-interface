{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import dayjs from'dayjs';import utc from'dayjs/plugin/utc';import weekOfYear from'dayjs/plugin/weekOfYear';import gql from'graphql-tag';// format dayjs with the libraries that we need\ndayjs.extend(utc);dayjs.extend(weekOfYear);var ONE_DAY_UNIX=24*60*60;var POOL_CHART=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query poolDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\\n    poolDayDatas(\\n      first: 1000\\n      skip: $skip\\n      where: { pool: $address, date_gt: $startTime }\\n      orderBy: date\\n      orderDirection: asc\\n      subgraphError: allow\\n    ) {\\n      date\\n      volumeUSD\\n      tvlUSD\\n      feesUSD\\n      pool {\\n        feeTier\\n      }\\n    }\\n  }\\n\"])));export function fetchPoolChartData(_x,_x2){return _fetchPoolChartData.apply(this,arguments);}function _fetchPoolChartData(){_fetchPoolChartData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address,client){var data,startTimestamp,endTimestamp,error,skip,allFound,_yield$client$query,chartResData,_error,loading,_firstEntry$date,_firstEntry$totalValu,formattedExisting,firstEntry,timestamp,latestTvl,nextDay,currentDayIndex,dateMap;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data=[];startTimestamp=1619170975;endTimestamp=dayjs.utc().unix();error=false;skip=0;allFound=false;_context.prev=6;case 7:if(allFound){_context.next=17;break;}_context.next=10;return client.query({query:POOL_CHART,variables:{address:address,startTime:startTimestamp,skip:skip},fetchPolicy:'cache-first'});case 10:_yield$client$query=_context.sent;chartResData=_yield$client$query.data;_error=_yield$client$query.error;loading=_yield$client$query.loading;if(!loading){skip+=1000;if(chartResData.poolDayDatas.length<1000||_error){allFound=true;}if(chartResData){data=data.concat(chartResData.poolDayDatas);}}_context.next=7;break;case 17:_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](6);error=true;case 22:if(!data){_context.next=32;break;}formattedExisting=data.reduce(function(accum,dayData){var roundedDate=parseInt((dayData.date/ONE_DAY_UNIX).toFixed(0));var feePercent=parseFloat(dayData.pool.feeTier)/10000;var tvlAdjust=(dayData===null||dayData===void 0?void 0:dayData.volumeUSD)?parseFloat(dayData.volumeUSD)*feePercent:0;accum[roundedDate]={date:dayData.date,volumeUSD:parseFloat(dayData.volumeUSD),totalValueLockedUSD:parseFloat(dayData.tvlUSD)-tvlAdjust,feesUSD:parseFloat(dayData.feesUSD)};return accum;},{});firstEntry=formattedExisting[parseInt(Object.keys(formattedExisting)[0])];// fill in empty days ( there will be no day datas if no trades made that day )\ntimestamp=(_firstEntry$date=firstEntry===null||firstEntry===void 0?void 0:firstEntry.date)!==null&&_firstEntry$date!==void 0?_firstEntry$date:startTimestamp;latestTvl=(_firstEntry$totalValu=firstEntry===null||firstEntry===void 0?void 0:firstEntry.totalValueLockedUSD)!==null&&_firstEntry$totalValu!==void 0?_firstEntry$totalValu:0;while(timestamp<endTimestamp-ONE_DAY_UNIX){nextDay=timestamp+ONE_DAY_UNIX;currentDayIndex=parseInt((nextDay/ONE_DAY_UNIX).toFixed(0));if(!Object.keys(formattedExisting).includes(currentDayIndex.toString())){formattedExisting[currentDayIndex]={date:nextDay,volumeUSD:0,totalValueLockedUSD:latestTvl,feesUSD:0};}else{latestTvl=formattedExisting[currentDayIndex].totalValueLockedUSD;}timestamp=nextDay;}dateMap=Object.keys(formattedExisting).map(function(key){return formattedExisting[parseInt(key)];});return _context.abrupt(\"return\",{data:dateMap,error:false});case 32:return _context.abrupt(\"return\",{data:undefined,error:error});case 33:case\"end\":return _context.stop();}}},_callee,null,[[6,19]]);}));return _fetchPoolChartData.apply(this,arguments);}","map":{"version":3,"names":["dayjs","utc","weekOfYear","gql","extend","ONE_DAY_UNIX","POOL_CHART","fetchPoolChartData","address","client","data","startTimestamp","endTimestamp","unix","error","skip","allFound","query","variables","startTime","fetchPolicy","chartResData","loading","poolDayDatas","length","concat","formattedExisting","reduce","accum","dayData","roundedDate","parseInt","date","toFixed","feePercent","parseFloat","pool","feeTier","tvlAdjust","volumeUSD","totalValueLockedUSD","tvlUSD","feesUSD","firstEntry","Object","keys","timestamp","latestTvl","nextDay","currentDayIndex","includes","toString","dateMap","map","key","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/data/pools/chartData.ts"],"sourcesContent":["import { ApolloClient, NormalizedCacheObject } from '@apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport gql from 'graphql-tag'\nimport { PoolChartEntry } from 'state/pools/reducer'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\nconst ONE_DAY_UNIX = 24 * 60 * 60\n\nconst POOL_CHART = gql`\n  query poolDayDatas($startTime: Int!, $skip: Int!, $address: Bytes!) {\n    poolDayDatas(\n      first: 1000\n      skip: $skip\n      where: { pool: $address, date_gt: $startTime }\n      orderBy: date\n      orderDirection: asc\n      subgraphError: allow\n    ) {\n      date\n      volumeUSD\n      tvlUSD\n      feesUSD\n      pool {\n        feeTier\n      }\n    }\n  }\n`\n\ninterface ChartResults {\n  poolDayDatas: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n    feesUSD: string\n    pool: {\n      feeTier: string\n    }\n  }[]\n}\n\nexport async function fetchPoolChartData(address: string, client: ApolloClient<NormalizedCacheObject>) {\n  let data: {\n    date: number\n    volumeUSD: string\n    tvlUSD: string\n    feesUSD: string\n    pool: {\n      feeTier: string\n    }\n  }[] = []\n  const startTimestamp = 1619170975\n  const endTimestamp = dayjs.utc().unix()\n\n  let error = false\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      const {\n        data: chartResData,\n        error,\n        loading,\n      } = await client.query<ChartResults>({\n        query: POOL_CHART,\n        variables: {\n          address,\n          startTime: startTimestamp,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (!loading) {\n        skip += 1000\n        if (chartResData.poolDayDatas.length < 1000 || error) {\n          allFound = true\n        }\n        if (chartResData) {\n          data = data.concat(chartResData.poolDayDatas)\n        }\n      }\n    }\n  } catch {\n    error = true\n  }\n\n  if (data) {\n    const formattedExisting = data.reduce((accum: { [date: number]: PoolChartEntry }, dayData) => {\n      const roundedDate = parseInt((dayData.date / ONE_DAY_UNIX).toFixed(0))\n      const feePercent = parseFloat(dayData.pool.feeTier) / 10000\n      const tvlAdjust = dayData?.volumeUSD ? parseFloat(dayData.volumeUSD) * feePercent : 0\n\n      accum[roundedDate] = {\n        date: dayData.date,\n        volumeUSD: parseFloat(dayData.volumeUSD),\n        totalValueLockedUSD: parseFloat(dayData.tvlUSD) - tvlAdjust,\n        feesUSD: parseFloat(dayData.feesUSD),\n      }\n      return accum\n    }, {})\n\n    const firstEntry = formattedExisting[parseInt(Object.keys(formattedExisting)[0])]\n\n    // fill in empty days ( there will be no day datas if no trades made that day )\n    let timestamp = firstEntry?.date ?? startTimestamp\n    let latestTvl = firstEntry?.totalValueLockedUSD ?? 0\n    while (timestamp < endTimestamp - ONE_DAY_UNIX) {\n      const nextDay = timestamp + ONE_DAY_UNIX\n      const currentDayIndex = parseInt((nextDay / ONE_DAY_UNIX).toFixed(0))\n      if (!Object.keys(formattedExisting).includes(currentDayIndex.toString())) {\n        formattedExisting[currentDayIndex] = {\n          date: nextDay,\n          volumeUSD: 0,\n          totalValueLockedUSD: latestTvl,\n          feesUSD: 0,\n        }\n      } else {\n        latestTvl = formattedExisting[currentDayIndex].totalValueLockedUSD\n      }\n      timestamp = nextDay\n    }\n\n    const dateMap = Object.keys(formattedExisting).map((key) => {\n      return formattedExisting[parseInt(key)]\n    })\n\n    return {\n      data: dateMap,\n      error: false,\n    }\n  } else {\n    return {\n      data: undefined,\n      error,\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}