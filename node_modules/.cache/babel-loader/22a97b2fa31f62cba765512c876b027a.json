{"ast":null,"code":"import { __assign, __awaiter, __generator, __read, __values } from \"tslib\";\nimport { PluginType } from '@amplitude/analytics-types';\nimport { buildResult } from './utils/result-builder';\nvar Timeline = /** @class */function () {\n  function Timeline() {\n    this.queue = [];\n    // Flag to guarantee one schedule apply is running\n    this.applying = false;\n    // Flag indicates whether timeline is ready to process event\n    // Events collected before timeline is ready will stay in the queue to be processed later\n    this.plugins = [];\n  }\n  Timeline.prototype.register = function (plugin, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, plugin.setup(config)];\n          case 1:\n            _a.sent();\n            this.plugins.push(plugin);\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Timeline.prototype.deregister = function (pluginName) {\n    this.plugins.splice(this.plugins.findIndex(function (plugin) {\n      return plugin.name === pluginName;\n    }), 1);\n    return Promise.resolve();\n  };\n  Timeline.prototype.reset = function () {\n    this.applying = false;\n    this.plugins = [];\n  };\n  Timeline.prototype.push = function (event) {\n    var _this = this;\n    return new Promise(function (resolve) {\n      _this.queue.push([event, resolve]);\n      _this.scheduleApply(0);\n    });\n  };\n  Timeline.prototype.scheduleApply = function (timeout) {\n    var _this = this;\n    if (this.applying) return;\n    this.applying = true;\n    setTimeout(function () {\n      void _this.apply(_this.queue.shift()).then(function () {\n        _this.applying = false;\n        if (_this.queue.length > 0) {\n          _this.scheduleApply(0);\n        }\n      });\n    }, timeout);\n  };\n  Timeline.prototype.apply = function (item) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, event, _b, resolve, before, before_1, before_1_1, plugin, e_1_1, enrichment, enrichment_1, enrichment_1_1, plugin, e_2_1, destination, executeDestinations;\n      var e_1, _c, e_2, _d;\n      return __generator(this, function (_e) {\n        switch (_e.label) {\n          case 0:\n            if (!item) {\n              return [2 /*return*/];\n            }\n\n            _a = __read(item, 1), event = _a[0];\n            _b = __read(item, 2), resolve = _b[1];\n            before = this.plugins.filter(function (plugin) {\n              return plugin.type === PluginType.BEFORE;\n            });\n            _e.label = 1;\n          case 1:\n            _e.trys.push([1, 6, 7, 8]);\n            before_1 = __values(before), before_1_1 = before_1.next();\n            _e.label = 2;\n          case 2:\n            if (!!before_1_1.done) return [3 /*break*/, 5];\n            plugin = before_1_1.value;\n            return [4 /*yield*/, plugin.execute(__assign({}, event))];\n          case 3:\n            event = _e.sent();\n            _e.label = 4;\n          case 4:\n            before_1_1 = before_1.next();\n            return [3 /*break*/, 2];\n          case 5:\n            return [3 /*break*/, 8];\n          case 6:\n            e_1_1 = _e.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3 /*break*/, 8];\n          case 7:\n            try {\n              if (before_1_1 && !before_1_1.done && (_c = before_1.return)) _c.call(before_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n            return [7 /*endfinally*/];\n          case 8:\n            enrichment = this.plugins.filter(function (plugin) {\n              return plugin.type === PluginType.ENRICHMENT;\n            });\n            _e.label = 9;\n          case 9:\n            _e.trys.push([9, 14, 15, 16]);\n            enrichment_1 = __values(enrichment), enrichment_1_1 = enrichment_1.next();\n            _e.label = 10;\n          case 10:\n            if (!!enrichment_1_1.done) return [3 /*break*/, 13];\n            plugin = enrichment_1_1.value;\n            return [4 /*yield*/, plugin.execute(__assign({}, event))];\n          case 11:\n            event = _e.sent();\n            _e.label = 12;\n          case 12:\n            enrichment_1_1 = enrichment_1.next();\n            return [3 /*break*/, 10];\n          case 13:\n            return [3 /*break*/, 16];\n          case 14:\n            e_2_1 = _e.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3 /*break*/, 16];\n          case 15:\n            try {\n              if (enrichment_1_1 && !enrichment_1_1.done && (_d = enrichment_1.return)) _d.call(enrichment_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n            return [7 /*endfinally*/];\n          case 16:\n            destination = this.plugins.filter(function (plugin) {\n              return plugin.type === PluginType.DESTINATION;\n            });\n            executeDestinations = destination.map(function (plugin) {\n              var eventClone = __assign({}, event);\n              return plugin.execute(eventClone).catch(function (e) {\n                return buildResult(eventClone, 0, String(e));\n              });\n            });\n            void Promise.all(executeDestinations).then(function (_a) {\n              var _b = __read(_a, 1),\n                result = _b[0];\n              resolve(result);\n            });\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Timeline.prototype.flush = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var queue, destination, executeDestinations;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            queue = this.queue;\n            this.queue = [];\n            return [4 /*yield*/, Promise.all(queue.map(function (item) {\n              return _this.apply(item);\n            }))];\n          case 1:\n            _a.sent();\n            destination = this.plugins.filter(function (plugin) {\n              return plugin.type === PluginType.DESTINATION;\n            });\n            executeDestinations = destination.map(function (plugin) {\n              return plugin.flush && plugin.flush();\n            });\n            return [4 /*yield*/, Promise.all(executeDestinations)];\n          case 2:\n            _a.sent();\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  return Timeline;\n}();\nexport { Timeline };","map":{"version":3,"sources":["../../src/timeline.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  BeforePlugin,\n  Config,\n  DestinationPlugin,\n  EnrichmentPlugin,\n  Event,\n  EventCallback,\n  Plugin,\n  PluginType,\n  Result,\n} from '@amplitude/analytics-types';\nimport { buildResult } from './utils/result-builder';\n\nexport class Timeline {\n  queue: [Event, EventCallback][] = [];\n  // Flag to guarantee one schedule apply is running\n  applying = false;\n  // Flag indicates whether timeline is ready to process event\n  // Events collected before timeline is ready will stay in the queue to be processed later\n  plugins: Plugin[] = [];\n\n  async register(plugin: Plugin, config: Config) {\n    await plugin.setup(config);\n    this.plugins.push(plugin);\n  }\n\n  deregister(pluginName: string) {\n    this.plugins.splice(\n      this.plugins.findIndex((plugin) => plugin.name === pluginName),\n      1,\n    );\n    return Promise.resolve();\n  }\n\n  reset() {\n    this.applying = false;\n    this.plugins = [];\n  }\n\n  push(event: Event) {\n    return new Promise<Result>((resolve) => {\n      this.queue.push([event, resolve]);\n      this.scheduleApply(0);\n    });\n  }\n\n  scheduleApply(timeout: number) {\n    if (this.applying) return;\n    this.applying = true;\n    setTimeout(() => {\n      void this.apply(this.queue.shift()).then(() => {\n        this.applying = false;\n        if (this.queue.length > 0) {\n          this.scheduleApply(0);\n        }\n      });\n    }, timeout);\n  }\n\n  async apply(item: [Event, EventCallback] | undefined) {\n    if (!item) {\n      return;\n    }\n\n    let [event] = item;\n    const [, resolve] = item;\n\n    const before = this.plugins.filter<BeforePlugin>(\n      (plugin: Plugin): plugin is BeforePlugin => plugin.type === PluginType.BEFORE,\n    );\n\n    for (const plugin of before) {\n      event = await plugin.execute({ ...event });\n    }\n\n    const enrichment = this.plugins.filter<EnrichmentPlugin>(\n      (plugin: Plugin): plugin is EnrichmentPlugin => plugin.type === PluginType.ENRICHMENT,\n    );\n\n    for (const plugin of enrichment) {\n      event = await plugin.execute({ ...event });\n    }\n\n    const destination = this.plugins.filter<DestinationPlugin>(\n      (plugin: Plugin): plugin is DestinationPlugin => plugin.type === PluginType.DESTINATION,\n    );\n\n    const executeDestinations = destination.map((plugin) => {\n      const eventClone = { ...event };\n      return plugin.execute(eventClone).catch((e) => buildResult(eventClone, 0, String(e)));\n    });\n\n    void Promise.all(executeDestinations).then(([result]) => {\n      resolve(result);\n    });\n\n    return;\n  }\n\n  async flush() {\n    const queue = this.queue;\n    this.queue = [];\n\n    await Promise.all(queue.map((item) => this.apply(item)));\n\n    const destination = this.plugins.filter<DestinationPlugin>(\n      (plugin: Plugin): plugin is DestinationPlugin => plugin.type === PluginType.DESTINATION,\n    );\n\n    const executeDestinations = destination.map((plugin) => {\n      return plugin.flush && plugin.flush();\n    });\n\n    await Promise.all(executeDestinations);\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}