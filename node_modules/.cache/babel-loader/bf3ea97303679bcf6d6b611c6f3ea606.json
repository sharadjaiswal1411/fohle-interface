{"ast":null,"code":"import { log } from '../util/log';\n/**\n * Provider for getting gas price, with functionality for caching the results.\n *\n * @export\n * @class CachingV3SubgraphProvider\n */\nexport class CachingGasStationProvider {\n  /**\n   * Creates an instance of CachingGasStationProvider.\n   * @param chainId The chain id to use.\n   * @param gasPriceProvider The provider to use to get the gas price when not in the cache.\n   * @param cache Cache instance to hold cached pools.\n   */\n  constructor(chainId, gasPriceProvider, cache) {\n    this.chainId = chainId;\n    this.gasPriceProvider = gasPriceProvider;\n    this.cache = cache;\n    this.GAS_KEY = chainId => `gasPrice-${chainId}`;\n  }\n  async getGasPrice() {\n    const cachedGasPrice = await this.cache.get(this.GAS_KEY(this.chainId));\n    if (cachedGasPrice) {\n      log.info({\n        cachedGasPrice\n      }, `Got gas station price from local cache: ${cachedGasPrice.gasPriceWei}.`);\n      return cachedGasPrice;\n    }\n    log.info('Gas station price local cache miss.');\n    const gasPrice = await this.gasPriceProvider.getGasPrice();\n    await this.cache.set(this.GAS_KEY(this.chainId), gasPrice);\n    return gasPrice;\n  }\n}","map":{"version":3,"sources":["../../../src/providers/caching-gas-provider.ts"],"names":[],"mappings":"AACA,SAAS,GAAG,QAAQ,aAAa;AAKjC;;;;;AAKG;AACH,OAAM,MAAO,yBAAyB,CAAA;EAGpC;;;;;AAKG;EACH,WAAA,CACY,OAAgB,EAClB,gBAAmC,EACnC,KAAuB,EAAA;IAFrB,IAAA,CAAA,OAAO,GAAP,OAAO;IACT,IAAA,CAAA,gBAAgB,GAAhB,gBAAgB;IAChB,IAAA,CAAA,KAAK,GAAL,KAAK;IAXP,IAAA,CAAA,OAAO,GAAI,OAAgB,IAAK,YAAY,OAAO,EAAE;EAY1D;EAEI,MAAM,WAAW,GAAA;IACtB,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAEvE,IAAI,cAAc,EAAE;MAClB,GAAG,CAAC,IAAI,CACN;QAAE;MAAc,CAAE,EAClB,2CAA2C,cAAc,CAAC,WAAW,GAAG,CACzE;MAED,OAAO,cAAc;IACtB;IAED,GAAG,CAAC,IAAI,CAAC,qCAAqC,CAAC;IAC/C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;IAC1D,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,QAAQ,CAAC;IAE1D,OAAO,QAAQ;EACjB;AACD","sourceRoot":"","sourcesContent":["import { log } from '../util/log';\n/**\n * Provider for getting gas price, with functionality for caching the results.\n *\n * @export\n * @class CachingV3SubgraphProvider\n */\nexport class CachingGasStationProvider {\n    /**\n     * Creates an instance of CachingGasStationProvider.\n     * @param chainId The chain id to use.\n     * @param gasPriceProvider The provider to use to get the gas price when not in the cache.\n     * @param cache Cache instance to hold cached pools.\n     */\n    constructor(chainId, gasPriceProvider, cache) {\n        this.chainId = chainId;\n        this.gasPriceProvider = gasPriceProvider;\n        this.cache = cache;\n        this.GAS_KEY = (chainId) => `gasPrice-${chainId}`;\n    }\n    async getGasPrice() {\n        const cachedGasPrice = await this.cache.get(this.GAS_KEY(this.chainId));\n        if (cachedGasPrice) {\n            log.info({ cachedGasPrice }, `Got gas station price from local cache: ${cachedGasPrice.gasPriceWei}.`);\n            return cachedGasPrice;\n        }\n        log.info('Gas station price local cache miss.');\n        const gasPrice = await this.gasPriceProvider.getGasPrice();\n        await this.cache.set(this.GAS_KEY(this.chainId), gasPrice);\n        return gasPrice;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FjaGluZy1nYXMtcHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcHJvdmlkZXJzL2NhY2hpbmctZ2FzLXByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxHQUFHLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFLbEM7Ozs7O0dBS0c7QUFDSCxNQUFNLE9BQU8seUJBQXlCO0lBR3BDOzs7OztPQUtHO0lBQ0gsWUFDWSxPQUFnQixFQUNsQixnQkFBbUMsRUFDbkMsS0FBdUI7UUFGckIsWUFBTyxHQUFQLE9BQU8sQ0FBUztRQUNsQixxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQW1CO1FBQ25DLFVBQUssR0FBTCxLQUFLLENBQWtCO1FBWHpCLFlBQU8sR0FBRyxDQUFDLE9BQWdCLEVBQUUsRUFBRSxDQUFDLFlBQVksT0FBTyxFQUFFLENBQUM7SUFZM0QsQ0FBQztJQUVHLEtBQUssQ0FBQyxXQUFXO1FBQ3RCLE1BQU0sY0FBYyxHQUFHLE1BQU0sSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUV4RSxJQUFJLGNBQWMsRUFBRTtZQUNsQixHQUFHLENBQUMsSUFBSSxDQUNOLEVBQUUsY0FBYyxFQUFFLEVBQ2xCLDJDQUEyQyxjQUFjLENBQUMsV0FBVyxHQUFHLENBQ3pFLENBQUM7WUFFRixPQUFPLGNBQWMsQ0FBQztTQUN2QjtRQUVELEdBQUcsQ0FBQyxJQUFJLENBQUMscUNBQXFDLENBQUMsQ0FBQztRQUNoRCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUMzRCxNQUFNLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRTNELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}