{"ast":null,"code":"import { NftStandard } from 'graphql/data/__generated__/types-and-hooks';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport const useWalletCollections = create()(devtools(set => ({\n  walletAssets: [],\n  walletCollections: [],\n  displayAssets: [],\n  collectionFilters: [],\n  listFilter: 'All',\n  setWalletAssets: assets => set(() => {\n    return {\n      walletAssets: assets === null || assets === void 0 ? void 0 : assets.filter(asset => {\n        var _asset$asset_contract;\n        return ((_asset$asset_contract = asset.asset_contract) === null || _asset$asset_contract === void 0 ? void 0 : _asset$asset_contract.tokenType) === NftStandard.Erc721;\n      })\n    };\n  }),\n  setWalletCollections: collections => set(() => {\n    return {\n      walletCollections: collections\n    };\n  }),\n  setCollectionFilters: address => set(_ref => {\n    let {\n      collectionFilters\n    } = _ref;\n    if (collectionFilters.length === 0) return {\n      collectionFilters: [address]\n    };else if (collectionFilters.some(x => x === address)) return {\n      collectionFilters: collectionFilters.filter(n => n !== address)\n    };else return {\n      collectionFilters: [...collectionFilters, address]\n    };\n  }),\n  clearCollectionFilters: () => set(() => {\n    return {\n      collectionFilters: []\n    };\n  }),\n  setListFilter: value => set(() => {\n    return {\n      listFilter: value\n    };\n  }),\n  setDisplayAssets: (walletAssets, listFilter) => set(() => {\n    return {\n      displayAssets: filterWalletAssets(walletAssets, listFilter)\n    };\n  })\n}), {\n  name: 'useWalletCollections'\n}));\nconst filterWalletAssets = (walletAssets, listFilter) => {\n  var _displayAssets, _displayAssets2;\n  let displayAssets = walletAssets;\n  if (listFilter === 'Listed') displayAssets = (_displayAssets = displayAssets) === null || _displayAssets === void 0 ? void 0 : _displayAssets.filter(x => {\n    return x.listing_date !== null;\n  });\n  if (listFilter === 'Unlisted') displayAssets = (_displayAssets2 = displayAssets) === null || _displayAssets2 === void 0 ? void 0 : _displayAssets2.filter(x => {\n    return x.listing_date === null;\n  });\n  return displayAssets;\n};","map":{"version":3,"names":["NftStandard","create","devtools","useWalletCollections","set","walletAssets","walletCollections","displayAssets","collectionFilters","listFilter","setWalletAssets","assets","filter","asset","asset_contract","tokenType","Erc721","setWalletCollections","collections","setCollectionFilters","address","length","some","x","n","clearCollectionFilters","setListFilter","value","setDisplayAssets","filterWalletAssets","name","listing_date"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useWalletCollections.ts"],"sourcesContent":["import { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\nimport { WalletAsset, WalletCollection } from '../types'\n\ninterface WalletCollectionState {\n  walletAssets: WalletAsset[]\n  walletCollections: WalletCollection[]\n  displayAssets: WalletAsset[]\n  collectionFilters: string[]\n  listFilter: string\n  setWalletAssets: (assets: WalletAsset[]) => void\n  setWalletCollections: (collections: WalletCollection[]) => void\n  setCollectionFilters: (address: string) => void\n  clearCollectionFilters: () => void\n  setListFilter: (value: string) => void\n  setDisplayAssets: (walletAssets: WalletAsset[], listFilter: string) => void\n}\n\nexport const useWalletCollections = create<WalletCollectionState>()(\n  devtools(\n    (set) => ({\n      walletAssets: [],\n      walletCollections: [],\n      displayAssets: [],\n      collectionFilters: [],\n      listFilter: 'All',\n      setWalletAssets: (assets) =>\n        set(() => {\n          return {\n            walletAssets: assets?.filter((asset) => asset.asset_contract?.tokenType === NftStandard.Erc721),\n          }\n        }),\n      setWalletCollections: (collections) =>\n        set(() => {\n          return { walletCollections: collections }\n        }),\n      setCollectionFilters: (address) =>\n        set(({ collectionFilters }) => {\n          if (collectionFilters.length === 0) return { collectionFilters: [address] }\n          else if (collectionFilters.some((x) => x === address))\n            return { collectionFilters: collectionFilters.filter((n) => n !== address) }\n          else return { collectionFilters: [...collectionFilters, address] }\n        }),\n      clearCollectionFilters: () =>\n        set(() => {\n          return { collectionFilters: [] }\n        }),\n      setListFilter: (value) =>\n        set(() => {\n          return { listFilter: value }\n        }),\n      setDisplayAssets: (walletAssets, listFilter) =>\n        set(() => {\n          return { displayAssets: filterWalletAssets(walletAssets, listFilter) }\n        }),\n    }),\n    { name: 'useWalletCollections' }\n  )\n)\n\nconst filterWalletAssets = (walletAssets: WalletAsset[], listFilter: string) => {\n  let displayAssets = walletAssets\n  if (listFilter === 'Listed')\n    displayAssets = displayAssets?.filter((x) => {\n      return x.listing_date !== null\n    })\n  if (listFilter === 'Unlisted')\n    displayAssets = displayAssets?.filter((x) => {\n      return x.listing_date === null\n    })\n  return displayAssets\n}\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,4CAA4C;AACxE,OAAOC,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,oBAAoB;AAkB7C,OAAO,MAAMC,oBAAoB,GAAGF,MAAM,EAAyB,CACjEC,QAAQ,CACLE,GAAG,KAAM;EACRC,YAAY,EAAE,EAAE;EAChBC,iBAAiB,EAAE,EAAE;EACrBC,aAAa,EAAE,EAAE;EACjBC,iBAAiB,EAAE,EAAE;EACrBC,UAAU,EAAE,KAAK;EACjBC,eAAe,EAAGC,MAAM,IACtBP,GAAG,CAAC,MAAM;IACR,OAAO;MACLC,YAAY,EAAEM,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEC,MAAM,CAAEC,KAAK;QAAA;QAAA,OAAK,0BAAAA,KAAK,CAACC,cAAc,0DAApB,sBAAsBC,SAAS,MAAKf,WAAW,CAACgB,MAAM;MAAA;IAChG,CAAC;EACH,CAAC,CAAC;EACJC,oBAAoB,EAAGC,WAAW,IAChCd,GAAG,CAAC,MAAM;IACR,OAAO;MAAEE,iBAAiB,EAAEY;IAAY,CAAC;EAC3C,CAAC,CAAC;EACJC,oBAAoB,EAAGC,OAAO,IAC5BhB,GAAG,CAAC,QAA2B;IAAA,IAA1B;MAAEI;IAAkB,CAAC;IACxB,IAAIA,iBAAiB,CAACa,MAAM,KAAK,CAAC,EAAE,OAAO;MAAEb,iBAAiB,EAAE,CAACY,OAAO;IAAE,CAAC,MACtE,IAAIZ,iBAAiB,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,KAAKH,OAAO,CAAC,EACnD,OAAO;MAAEZ,iBAAiB,EAAEA,iBAAiB,CAACI,MAAM,CAAEY,CAAC,IAAKA,CAAC,KAAKJ,OAAO;IAAE,CAAC,MACzE,OAAO;MAAEZ,iBAAiB,EAAE,CAAC,GAAGA,iBAAiB,EAAEY,OAAO;IAAE,CAAC;EACpE,CAAC,CAAC;EACJK,sBAAsB,EAAE,MACtBrB,GAAG,CAAC,MAAM;IACR,OAAO;MAAEI,iBAAiB,EAAE;IAAG,CAAC;EAClC,CAAC,CAAC;EACJkB,aAAa,EAAGC,KAAK,IACnBvB,GAAG,CAAC,MAAM;IACR,OAAO;MAAEK,UAAU,EAAEkB;IAAM,CAAC;EAC9B,CAAC,CAAC;EACJC,gBAAgB,EAAE,CAACvB,YAAY,EAAEI,UAAU,KACzCL,GAAG,CAAC,MAAM;IACR,OAAO;MAAEG,aAAa,EAAEsB,kBAAkB,CAACxB,YAAY,EAAEI,UAAU;IAAE,CAAC;EACxE,CAAC;AACL,CAAC,CAAC,EACF;EAAEqB,IAAI,EAAE;AAAuB,CAAC,CACjC,CACF;AAED,MAAMD,kBAAkB,GAAG,CAACxB,YAA2B,EAAEI,UAAkB,KAAK;EAAA;EAC9E,IAAIF,aAAa,GAAGF,YAAY;EAChC,IAAII,UAAU,KAAK,QAAQ,EACzBF,aAAa,qBAAGA,aAAa,mDAAb,eAAeK,MAAM,CAAEW,CAAC,IAAK;IAC3C,OAAOA,CAAC,CAACQ,YAAY,KAAK,IAAI;EAChC,CAAC,CAAC;EACJ,IAAItB,UAAU,KAAK,UAAU,EAC3BF,aAAa,sBAAGA,aAAa,oDAAb,gBAAeK,MAAM,CAAEW,CAAC,IAAK;IAC3C,OAAOA,CAAC,CAACQ,YAAY,KAAK,IAAI;EAChC,CAAC,CAAC;EACJ,OAAOxB,aAAa;AACtB,CAAC"},"metadata":{},"sourceType":"module"}