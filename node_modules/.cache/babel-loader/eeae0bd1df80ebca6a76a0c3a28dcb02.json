{"ast":null,"code":"import _taggedTemplateLiteral from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import{useQuery}from'@apollo/client';import gql from'graphql-tag';import{useMemo}from'react';import{apolloClient}from'./apollo';var query=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query AllV3Ticks($poolAddress: String!, $skip: Int!) {\\n    ticks(first: 1000, skip: $skip, where: { poolAddress: $poolAddress }, orderBy: tickIdx) {\\n      tick: tickIdx\\n      liquidityNet\\n      price0\\n      price1\\n    }\\n  }\\n\"])));export default function useAllV3TicksQuery(poolAddress,skip,interval){var _useQuery=useQuery(query,{variables:{poolAddress:poolAddress===null||poolAddress===void 0?void 0:poolAddress.toLowerCase(),skip:skip},pollInterval:interval,client:apolloClient}),data=_useQuery.data,isLoading=_useQuery.loading,error=_useQuery.error;return useMemo(function(){return{error:error,isLoading:isLoading,data:data};},[data,error,isLoading]);}","map":{"version":3,"names":["useQuery","gql","useMemo","apolloClient","query","useAllV3TicksQuery","poolAddress","skip","interval","variables","toLowerCase","pollInterval","client","data","isLoading","loading","error"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/graphql/thegraph/AllV3TicksQuery.ts"],"sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useMemo } from 'react'\n\nimport { AllV3TicksQuery } from './__generated__/types-and-hooks'\nimport { apolloClient } from './apollo'\n\nconst query = gql`\n  query AllV3Ticks($poolAddress: String!, $skip: Int!) {\n    ticks(first: 1000, skip: $skip, where: { poolAddress: $poolAddress }, orderBy: tickIdx) {\n      tick: tickIdx\n      liquidityNet\n      price0\n      price1\n    }\n  }\n`\n\nexport type Ticks = AllV3TicksQuery['ticks']\nexport type TickData = Ticks[number]\n\nexport default function useAllV3TicksQuery(poolAddress: string | undefined, skip: number, interval: number) {\n  const {\n    data,\n    loading: isLoading,\n    error,\n  } = useQuery(query, {\n    variables: {\n      poolAddress: poolAddress?.toLowerCase(),\n      skip,\n    },\n    pollInterval: interval,\n    client: apolloClient,\n  })\n\n  return useMemo(\n    () => ({\n      error,\n      isLoading,\n      data,\n    }),\n    [data, error, isLoading]\n  )\n}\n"],"mappings":"gNAAA,OAASA,QAAQ,KAAQ,gBAAgB,CACzC,MAAOC,IAAG,KAAM,aAAa,CAC7B,OAASC,OAAO,KAAQ,OAAO,CAG/B,OAASC,YAAY,KAAQ,UAAU,CAEvC,GAAMC,MAAK,CAAGH,GAAG,6SAShB,CAKD,cAAe,SAASI,mBAAkB,CAACC,WAA+B,CAAEC,IAAY,CAAEC,QAAgB,CAAE,CAC1G,cAIIR,QAAQ,CAACI,KAAK,CAAE,CAClBK,SAAS,CAAE,CACTH,WAAW,CAAEA,WAAW,SAAXA,WAAW,iBAAXA,WAAW,CAAEI,WAAW,EAAE,CACvCH,IAAI,CAAJA,IACF,CAAC,CACDI,YAAY,CAAEH,QAAQ,CACtBI,MAAM,CAAET,YACV,CAAC,CAAC,CAVAU,IAAI,WAAJA,IAAI,CACKC,SAAS,WAAlBC,OAAO,CACPC,KAAK,WAALA,KAAK,CAUP,MAAOd,QAAO,CACZ,iBAAO,CACLc,KAAK,CAALA,KAAK,CACLF,SAAS,CAATA,SAAS,CACTD,IAAI,CAAJA,IACF,CAAC,EAAC,CACF,CAACA,IAAI,CAAEG,KAAK,CAAEF,SAAS,CAAC,CACzB,CACH"},"metadata":{},"sourceType":"module"}