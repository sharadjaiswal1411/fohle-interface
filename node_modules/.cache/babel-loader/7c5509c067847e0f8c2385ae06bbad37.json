{"ast":null,"code":"import create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport const useNFTSelect = create()(devtools(set => ({\n  selectedNFTs: [],\n  isUniversalPrice: false,\n  selectNFT: nft => set(_ref => {\n    let {\n      selectedNFTs\n    } = _ref;\n    if (selectedNFTs.length === 0) return {\n      selectedNFTs: [nft]\n    };else if (selectedNFTs.some(x => x.id === nft.id)) return {\n      selectedNFTs: selectedNFTs.filter(n => n.id !== nft.id)\n    };else return {\n      selectedNFTs: [...selectedNFTs, nft]\n    };\n  }),\n  reset: () => set(() => ({\n    selectedNFTs: []\n  })),\n  toggleUniversalPrice: v => set(() => ({\n    isUniversalPrice: v\n  })),\n  setUniversalPrice: price => set(_ref2 => {\n    let {\n      selectedNFTs\n    } = _ref2;\n    return {\n      selectedNFTs: selectedNFTs.map(n => ({\n        ...n,\n        price\n      })),\n      isUniversalPrice: true\n    };\n  }),\n  setSingleNFTPrice: (id, price) => set(_ref3 => {\n    let {\n      selectedNFTs\n    } = _ref3;\n    const found = selectedNFTs.find(i => i.id === id);\n    return {\n      selectedNFTs: [...selectedNFTs.filter(n => n.id !== id), {\n        ...found,\n        price\n      }]\n    };\n  })\n}), {\n  name: 'useNFTSelect'\n}));","map":{"version":3,"names":["create","devtools","useNFTSelect","set","selectedNFTs","isUniversalPrice","selectNFT","nft","length","some","x","id","filter","n","reset","toggleUniversalPrice","v","setUniversalPrice","price","map","setSingleNFTPrice","found","find","i","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useNFTSelect.ts"],"sourcesContent":["import create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\nimport { OpenSeaAsset } from '../types'\n\ninterface SelectNFTState {\n  /**\n   * NFTs selected by a user\n   */\n  selectedNFTs: (OpenSeaAsset & { price?: number })[]\n\n  selectNFT: (nft: OpenSeaAsset & { price?: number }) => void\n  reset: () => void\n  setUniversalPrice: (price: number) => void\n  toggleUniversalPrice: (v: boolean) => void\n  setSingleNFTPrice: (id: number, price: number) => void\n  isUniversalPrice: boolean\n}\n\nexport const useNFTSelect = create<SelectNFTState>()(\n  devtools(\n    (set) => ({\n      selectedNFTs: [],\n      isUniversalPrice: false,\n      selectNFT: (nft) =>\n        set(({ selectedNFTs }) => {\n          if (selectedNFTs.length === 0) return { selectedNFTs: [nft] }\n          else if (selectedNFTs.some((x) => x.id === nft.id))\n            return { selectedNFTs: selectedNFTs.filter((n) => n.id !== nft.id) }\n          else return { selectedNFTs: [...selectedNFTs, nft] }\n        }),\n      reset: () => set(() => ({ selectedNFTs: [] })),\n      toggleUniversalPrice: (v) => set(() => ({ isUniversalPrice: v })),\n      setUniversalPrice: (price) =>\n        set(({ selectedNFTs }) => {\n          return {\n            selectedNFTs: selectedNFTs.map((n) => ({ ...n, price })),\n            isUniversalPrice: true,\n          }\n        }),\n      setSingleNFTPrice: (id, price) =>\n        set(({ selectedNFTs }) => {\n          const found = selectedNFTs.find((i) => i.id === id)\n\n          return {\n            selectedNFTs: [...selectedNFTs.filter((n) => n.id !== id), { ...found, price }],\n          }\n        }),\n    }),\n    { name: 'useNFTSelect' }\n  )\n)\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,SAAS;AAC5B,SAASC,QAAQ,QAAQ,oBAAoB;AAkB7C,OAAO,MAAMC,YAAY,GAAGF,MAAM,EAAkB,CAClDC,QAAQ,CACLE,GAAG,KAAM;EACRC,YAAY,EAAE,EAAE;EAChBC,gBAAgB,EAAE,KAAK;EACvBC,SAAS,EAAGC,GAAG,IACbJ,GAAG,CAAC,QAAsB;IAAA,IAArB;MAAEC;IAAa,CAAC;IACnB,IAAIA,YAAY,CAACI,MAAM,KAAK,CAAC,EAAE,OAAO;MAAEJ,YAAY,EAAE,CAACG,GAAG;IAAE,CAAC,MACxD,IAAIH,YAAY,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC,EAChD,OAAO;MAAEP,YAAY,EAAEA,YAAY,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKJ,GAAG,CAACI,EAAE;IAAE,CAAC,MACjE,OAAO;MAAEP,YAAY,EAAE,CAAC,GAAGA,YAAY,EAAEG,GAAG;IAAE,CAAC;EACtD,CAAC,CAAC;EACJO,KAAK,EAAE,MAAMX,GAAG,CAAC,OAAO;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC,CAAC;EAC9CW,oBAAoB,EAAGC,CAAC,IAAKb,GAAG,CAAC,OAAO;IAAEE,gBAAgB,EAAEW;EAAE,CAAC,CAAC,CAAC;EACjEC,iBAAiB,EAAGC,KAAK,IACvBf,GAAG,CAAC,SAAsB;IAAA,IAArB;MAAEC;IAAa,CAAC;IACnB,OAAO;MACLA,YAAY,EAAEA,YAAY,CAACe,GAAG,CAAEN,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAEK;MAAM,CAAC,CAAC,CAAC;MACxDb,gBAAgB,EAAE;IACpB,CAAC;EACH,CAAC,CAAC;EACJe,iBAAiB,EAAE,CAACT,EAAE,EAAEO,KAAK,KAC3Bf,GAAG,CAAC,SAAsB;IAAA,IAArB;MAAEC;IAAa,CAAC;IACnB,MAAMiB,KAAK,GAAGjB,YAAY,CAACkB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACZ,EAAE,KAAKA,EAAE,CAAC;IAEnD,OAAO;MACLP,YAAY,EAAE,CAAC,GAAGA,YAAY,CAACQ,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACF,EAAE,KAAKA,EAAE,CAAC,EAAE;QAAE,GAAGU,KAAK;QAAEH;MAAM,CAAC;IAChF,CAAC;EACH,CAAC;AACL,CAAC,CAAC,EACF;EAAEM,IAAI,EAAE;AAAe,CAAC,CACzB,CACF"},"metadata":{},"sourceType":"module"}