{"ast":null,"code":"'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar locate = require('../locate/tag');\nvar tag = require('../util/html').tag;\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n  if (value.charAt(0) !== '<' || length < 3) {\n    return;\n  }\n  character = value.charAt(1);\n  if (!alphabetical(character) && character !== '?' && character !== '!' && character !== '/') {\n    return;\n  }\n  subvalue = value.match(tag);\n  if (!subvalue) {\n    return;\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true;\n  }\n  subvalue = subvalue[0];\n  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\n    self.inLink = false;\n  }\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"names":["alphabetical","require","locate","tag","module","exports","inlineHTML","locator","EXPRESSION_HTML_LINK_OPEN","EXPRESSION_HTML_LINK_CLOSE","eat","value","silent","self","length","character","subvalue","charAt","match","inLink","test","type"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/remark-parse/lib/tokenize/html-inline.js"],"sourcesContent":["'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar locate = require('../locate/tag');\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\n\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== '<' || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (\n    !alphabetical(character) &&\n    character !== '?' &&\n    character !== '!' &&\n    character !== '/'\n  ) {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({type: 'html', value: subvalue});\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC7C,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAc,CAAC,CAACE,GAAG;AAErCC,MAAM,CAACC,OAAO,GAAGC,UAAU;AAC3BA,UAAU,CAACC,OAAO,GAAGL,MAAM;AAE3B,IAAIM,yBAAyB,GAAG,OAAO;AACvC,IAAIC,0BAA0B,GAAG,SAAS;AAE1C,SAASH,UAAU,CAACI,GAAG,EAAEC,KAAK,EAAEC,MAAM,EAAE;EACtC,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAM;EACzB,IAAIC,SAAS;EACb,IAAIC,QAAQ;EAEZ,IAAIL,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIH,MAAM,GAAG,CAAC,EAAE;IACzC;EACF;EAEAC,SAAS,GAAGJ,KAAK,CAACM,MAAM,CAAC,CAAC,CAAC;EAE3B,IACE,CAACjB,YAAY,CAACe,SAAS,CAAC,IACxBA,SAAS,KAAK,GAAG,IACjBA,SAAS,KAAK,GAAG,IACjBA,SAAS,KAAK,GAAG,EACjB;IACA;EACF;EAEAC,QAAQ,GAAGL,KAAK,CAACO,KAAK,CAACf,GAAG,CAAC;EAE3B,IAAI,CAACa,QAAQ,EAAE;IACb;EACF;;EAEA;EACA,IAAIJ,MAAM,EAAE;IACV,OAAO,IAAI;EACb;EAEAI,QAAQ,GAAGA,QAAQ,CAAC,CAAC,CAAC;EAEtB,IAAI,CAACH,IAAI,CAACM,MAAM,IAAIX,yBAAyB,CAACY,IAAI,CAACJ,QAAQ,CAAC,EAAE;IAC5DH,IAAI,CAACM,MAAM,GAAG,IAAI;EACpB,CAAC,MAAM,IAAIN,IAAI,CAACM,MAAM,IAAIV,0BAA0B,CAACW,IAAI,CAACJ,QAAQ,CAAC,EAAE;IACnEH,IAAI,CAACM,MAAM,GAAG,KAAK;EACrB;EAEA,OAAOT,GAAG,CAACM,QAAQ,CAAC,CAAC;IAACK,IAAI,EAAE,MAAM;IAAEV,KAAK,EAAEK;EAAQ,CAAC,CAAC;AACvD"},"metadata":{},"sourceType":"script"}