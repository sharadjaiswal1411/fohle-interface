{"ast":null,"code":"import _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { isThenable } from './is.js';\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/** SyncPromise internal states */\nvar States;\n(function (States) {\n  /** Pending */\n  var PENDING = 0;\n  States[States[\"PENDING\"] = PENDING] = \"PENDING\";\n  /** Resolved / OK */\n  var RESOLVED = 1;\n  States[States[\"RESOLVED\"] = RESOLVED] = \"RESOLVED\";\n  /** Rejected / Error */\n  var REJECTED = 2;\n  States[States[\"REJECTED\"] = REJECTED] = \"REJECTED\";\n})(States || (States = {}));\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nfunction resolvedSyncPromise(value) {\n  return new SyncPromise(function (resolve) {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nfunction rejectedSyncPromise(reason) {\n  return new SyncPromise(function (_, reject) {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nvar SyncPromise = /*#__PURE__*/function () {\n  function SyncPromise(executor) {\n    _classCallCheck(this, SyncPromise);\n    ;\n    SyncPromise.prototype.__init.call(this);\n    SyncPromise.prototype.__init2.call(this);\n    SyncPromise.prototype.__init3.call(this);\n    SyncPromise.prototype.__init4.call(this);\n    SyncPromise.prototype.__init5.call(this);\n    SyncPromise.prototype.__init6.call(this);\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  _createClass(SyncPromise, [{\n    key: \"__init\",\n    value: function __init() {\n      this._state = States.PENDING;\n    }\n  }, {\n    key: \"__init2\",\n    value: function __init2() {\n      this._handlers = [];\n    }\n  }, {\n    key: \"then\",\n    value: function then(onfulfilled, onrejected) {\n      var _this = this;\n      return new SyncPromise(function (resolve, reject) {\n        _this._handlers.push([false, function (result) {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        }, function (reason) {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        }]);\n        _this._executeHandlers();\n      });\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"catch\",\n    value: function _catch(onrejected) {\n      return this.then(function (val) {\n        return val;\n      }, onrejected);\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"finally\",\n    value: function _finally(onfinally) {\n      var _this2 = this;\n      return new SyncPromise(function (resolve, reject) {\n        var val;\n        var isRejected;\n        return _this2.then(function (value) {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        }, function (reason) {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        }).then(function () {\n          if (isRejected) {\n            reject(val);\n            return;\n          }\n          resolve(val);\n        });\n      });\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"__init3\",\n    value: function __init3() {\n      var _this3 = this;\n      this._resolve = function (value) {\n        _this3._setResult(States.RESOLVED, value);\n      };\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"__init4\",\n    value: function __init4() {\n      var _this4 = this;\n      this._reject = function (reason) {\n        _this4._setResult(States.REJECTED, reason);\n      };\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"__init5\",\n    value: function __init5() {\n      var _this5 = this;\n      this._setResult = function (state, value) {\n        if (_this5._state !== States.PENDING) {\n          return;\n        }\n        if (isThenable(value)) {\n          void value.then(_this5._resolve, _this5._reject);\n          return;\n        }\n        _this5._state = state;\n        _this5._value = value;\n        _this5._executeHandlers();\n      };\n    }\n\n    /** JSDoc */\n  }, {\n    key: \"__init6\",\n    value: function __init6() {\n      var _this6 = this;\n      this._executeHandlers = function () {\n        if (_this6._state === States.PENDING) {\n          return;\n        }\n        var cachedHandlers = _this6._handlers.slice();\n        _this6._handlers = [];\n        cachedHandlers.forEach(function (handler) {\n          if (handler[0]) {\n            return;\n          }\n          if (_this6._state === States.RESOLVED) {\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\n            handler[1](_this6._value);\n          }\n          if (_this6._state === States.REJECTED) {\n            handler[2](_this6._value);\n          }\n          handler[0] = true;\n        });\n      };\n    }\n  }]);\n  return SyncPromise;\n}();\nexport { SyncPromise, rejectedSyncPromise, resolvedSyncPromise };","map":{"version":3,"sources":["../../src/syncpromise.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nconst enum States {\n  /** Pending */\n  PENDING = 0,\n  /** Resolved / OK */\n  RESOLVED = 1,\n  /** Rejected / Error */\n  REJECTED = 2,\n}\n\n// Overloads so we can call resolvedSyncPromise without arguments and generic argument\nexport function resolvedSyncPromise(): PromiseLike<void>;\nexport function resolvedSyncPromise<T>(value: T | PromiseLike<T>): PromiseLike<T>;\n\n/**\n * Creates a resolved sync promise.\n *\n * @param value the value to resolve the promise with\n * @returns the resolved sync promise\n */\nexport function resolvedSyncPromise<T>(value?: T | PromiseLike<T>): PromiseLike<T> {\n  return new SyncPromise(resolve => {\n    resolve(value);\n  });\n}\n\n/**\n * Creates a rejected sync promise.\n *\n * @param value the value to reject the promise with\n * @returns the rejected sync promise\n */\nexport function rejectedSyncPromise<T = never>(reason?: any): PromiseLike<T> {\n  return new SyncPromise((_, reject) => {\n    reject(reason);\n  });\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<[boolean, (value: T) => void, (reason: any) => any]> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._handlers.push([\n        false,\n        result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n          } else {\n            try {\n              resolve(onfulfilled(result));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n        reason => {\n          if (!onrejected) {\n            reject(reason);\n          } else {\n            try {\n              resolve(onrejected(reason));\n            } catch (e) {\n              reject(e);\n            }\n          }\n        },\n      ]);\n      this._executeHandlers();\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve(val as unknown as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      void (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler[0]) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        handler[1](this._value as unknown as any);\n      }\n\n      if (this._state === States.REJECTED) {\n        handler[2](this._value);\n      }\n\n      handler[0] = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n"]},"metadata":{},"sourceType":"module"}