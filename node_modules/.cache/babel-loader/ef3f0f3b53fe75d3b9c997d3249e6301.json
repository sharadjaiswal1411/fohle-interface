{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { getQueryParams } from '../query-params';\nimport { UTM_CAMPAIGN, UTM_CONTENT, UTM_MEDIUM, UTM_SOURCE, UTM_TERM, GCLID, FBCLID, BASE_CAMPAIGN, DCLID, MSCLKID, TWCLID, TTCLID, KO_CLICK_ID, GBRAID, WBRAID } from './constants';\nvar CampaignParser = /** @class */function () {\n  function CampaignParser() {}\n  CampaignParser.prototype.parse = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, __assign(__assign(__assign(__assign({}, BASE_CAMPAIGN), this.getUtmParam()), this.getReferrer()), this.getClickIds())];\n      });\n    });\n  };\n  CampaignParser.prototype.getUtmParam = function () {\n    var params = getQueryParams();\n    var utmSource = params[UTM_SOURCE];\n    var utmMedium = params[UTM_MEDIUM];\n    var utmCampaign = params[UTM_CAMPAIGN];\n    var utmTerm = params[UTM_TERM];\n    var utmContent = params[UTM_CONTENT];\n    return {\n      utm_source: utmSource,\n      utm_medium: utmMedium,\n      utm_campaign: utmCampaign,\n      utm_term: utmTerm,\n      utm_content: utmContent\n    };\n  };\n  CampaignParser.prototype.getReferrer = function () {\n    var _a, _b;\n    var data = {\n      referrer: undefined,\n      referring_domain: undefined\n    };\n    try {\n      data.referrer = document.referrer || undefined;\n      data.referring_domain = (_b = (_a = data.referrer) === null || _a === void 0 ? void 0 : _a.split('/')[2]) !== null && _b !== void 0 ? _b : undefined;\n    } catch (_c) {\n      // nothing to track\n    }\n    return data;\n  };\n  CampaignParser.prototype.getClickIds = function () {\n    var _a;\n    var params = getQueryParams();\n    return _a = {}, _a[DCLID] = params[DCLID], _a[FBCLID] = params[FBCLID], _a[GBRAID] = params[GBRAID], _a[GCLID] = params[GCLID], _a[KO_CLICK_ID] = params[KO_CLICK_ID], _a[MSCLKID] = params[MSCLKID], _a[TTCLID] = params[TTCLID], _a[TWCLID] = params[TWCLID], _a[WBRAID] = params[WBRAID], _a;\n  };\n  return CampaignParser;\n}();\nexport { CampaignParser };","map":{"version":3,"sources":["../../../src/attribution/campaign-parser.ts"],"names":[],"mappings":";AAAA,SAAS,cAAc,QAAQ,iBAAiB;AAChD,SACE,YAAY,EACZ,WAAW,EACX,UAAU,EACV,UAAU,EACV,QAAQ,EACR,KAAK,EACL,MAAM,EACN,aAAa,EACb,KAAK,EACL,OAAO,EACP,MAAM,EACN,MAAM,EACN,WAAW,EACX,MAAM,EACN,MAAM,QACD,aAAa;AASpB,IAAA,cAAA,GAAA,aAAA,YAAA;EAAA,SAAA,cAAA,GAAA,CAwDA;EAvDQ,cAAA,CAAA,SAAA,CAAA,KAAK,GAAX,YAAA;;;QACE,OAAA,CAAA,CAAA,CAAA,YAAO,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACF,aAAa,CAAA,EACb,IAAI,CAAC,WAAW,EAAE,CAAA,EAClB,IAAI,CAAC,WAAW,EAAE,CAAA,EAClB,IAAI,CAAC,WAAW,EAAE,CACV,CAAA;;;GACd;EAED,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;IACE,IAAM,MAAM,GAAG,cAAc,EAAE;IAE/B,IAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC;IACpC,IAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC;IACpC,IAAM,WAAW,GAAG,MAAM,CAAC,YAAY,CAAC;IACxC,IAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC;IAChC,IAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;IAEtC,OAAO;MACL,UAAU,EAAE,SAAS;MACrB,UAAU,EAAE,SAAS;MACrB,YAAY,EAAE,WAAW;MACzB,QAAQ,EAAE,OAAO;MACjB,WAAW,EAAE;KACd;EACH,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;;IACE,IAAM,IAAI,GAAuB;MAC/B,QAAQ,EAAE,SAAS;MACnB,gBAAgB,EAAE;KACnB;IACD,IAAI;MACF,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,IAAI,SAAS;MAC9C,IAAI,CAAC,gBAAgB,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,GAAG,CAAA,CAAE,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAI,SAAS;KAClE,CAAC,OAAA,EAAA,EAAM;MACN;IAAA;IAEF,OAAO,IAAI;EACb,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,WAAW,GAAX,YAAA;;IACE,IAAM,MAAM,GAAG,cAAc,EAAE;IAC/B,OAAA,EAAA,GAAA,CAAA,CAAA,EACE,EAAA,CAAC,KAAK,CAAA,GAAG,MAAM,CAAC,KAAK,CAAC,EACtB,EAAA,CAAC,MAAM,CAAA,GAAG,MAAM,CAAC,MAAM,CAAC,EACxB,EAAA,CAAC,MAAM,CAAA,GAAG,MAAM,CAAC,MAAM,CAAC,EACxB,EAAA,CAAC,KAAK,CAAA,GAAG,MAAM,CAAC,KAAK,CAAC,EACtB,EAAA,CAAC,WAAW,CAAA,GAAG,MAAM,CAAC,WAAW,CAAC,EAClC,EAAA,CAAC,OAAO,CAAA,GAAG,MAAM,CAAC,OAAO,CAAC,EAC1B,EAAA,CAAC,MAAM,CAAA,GAAG,MAAM,CAAC,MAAM,CAAC,EACxB,EAAA,CAAC,MAAM,CAAA,GAAG,MAAM,CAAC,MAAM,CAAC,EACxB,EAAA,CAAC,MAAM,CAAA,GAAG,MAAM,CAAC,MAAM,CAAC,E,EACxB;EACJ,CAAC;EACH,OAAA,cAAC;AAAD,CAAC,EAAA","sourcesContent":["import { getQueryParams } from '../query-params';\nimport {\n  UTM_CAMPAIGN,\n  UTM_CONTENT,\n  UTM_MEDIUM,\n  UTM_SOURCE,\n  UTM_TERM,\n  GCLID,\n  FBCLID,\n  BASE_CAMPAIGN,\n  DCLID,\n  MSCLKID,\n  TWCLID,\n  TTCLID,\n  KO_CLICK_ID,\n  GBRAID,\n  WBRAID,\n} from './constants';\nimport {\n  Campaign,\n  CampaignParser as ICampaignParser,\n  ClickIdParameters,\n  ReferrerParameters,\n  UTMParameters,\n} from '@amplitude/analytics-types';\n\nexport class CampaignParser implements ICampaignParser {\n  async parse(): Promise<Campaign> {\n    return {\n      ...BASE_CAMPAIGN,\n      ...this.getUtmParam(),\n      ...this.getReferrer(),\n      ...this.getClickIds(),\n    } as Campaign;\n  }\n\n  getUtmParam(): UTMParameters {\n    const params = getQueryParams();\n\n    const utmSource = params[UTM_SOURCE];\n    const utmMedium = params[UTM_MEDIUM];\n    const utmCampaign = params[UTM_CAMPAIGN];\n    const utmTerm = params[UTM_TERM];\n    const utmContent = params[UTM_CONTENT];\n\n    return {\n      utm_source: utmSource,\n      utm_medium: utmMedium,\n      utm_campaign: utmCampaign,\n      utm_term: utmTerm,\n      utm_content: utmContent,\n    };\n  }\n\n  getReferrer(): ReferrerParameters {\n    const data: ReferrerParameters = {\n      referrer: undefined,\n      referring_domain: undefined,\n    };\n    try {\n      data.referrer = document.referrer || undefined;\n      data.referring_domain = data.referrer?.split('/')[2] ?? undefined;\n    } catch {\n      // nothing to track\n    }\n    return data;\n  }\n\n  getClickIds(): ClickIdParameters {\n    const params = getQueryParams();\n    return {\n      [DCLID]: params[DCLID],\n      [FBCLID]: params[FBCLID],\n      [GBRAID]: params[GBRAID],\n      [GCLID]: params[GCLID],\n      [KO_CLICK_ID]: params[KO_CLICK_ID],\n      [MSCLKID]: params[MSCLKID],\n      [TTCLID]: params[TTCLID],\n      [TWCLID]: params[TWCLID],\n      [WBRAID]: params[WBRAID],\n    };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}