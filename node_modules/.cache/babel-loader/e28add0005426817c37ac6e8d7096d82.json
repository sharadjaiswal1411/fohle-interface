{"ast":null,"code":"import _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { Logger } from '@ethersproject/logger';\nimport { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from './bases';\n// Interface defaults to 2.\nvar MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\nexport var LegacyRouter = /*#__PURE__*/function () {\n  function LegacyRouter(_ref) {\n    var chainId = _ref.chainId,\n      multicall2Provider = _ref.multicall2Provider,\n      poolProvider = _ref.poolProvider,\n      quoteProvider = _ref.quoteProvider,\n      tokenProvider = _ref.tokenProvider;\n    _classCallCheck(this, LegacyRouter);\n    this.chainId = chainId;\n    this.multicall2Provider = multicall2Provider;\n    this.poolProvider = poolProvider;\n    this.quoteProvider = quoteProvider;\n    this.tokenProvider = tokenProvider;\n  }\n  _createClass(LegacyRouter, [{\n    key: \"route\",\n    value: function () {\n      var _route = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(swapType == TradeType.EXACT_INPUT)) {\n                  _context.next = 2;\n                  break;\n                }\n                return _context.abrupt(\"return\", this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig));\n              case 2:\n                return _context.abrupt(\"return\", this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig));\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function route(_x, _x2, _x3, _x4, _x5) {\n        return _route.apply(this, arguments);\n      }\n      return route;\n    }()\n  }, {\n    key: \"routeExactIn\",\n    value: function () {\n      var _routeExactIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n        var tokenIn, tokenOut, routes, routeQuote, trade;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                tokenIn = currencyIn.wrapped;\n                tokenOut = currencyOut.wrapped;\n                _context2.next = 4;\n                return this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n              case 4:\n                routes = _context2.sent;\n                _context2.next = 7;\n                return this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n              case 7:\n                routeQuote = _context2.sent;\n                if (routeQuote) {\n                  _context2.next = 10;\n                  break;\n                }\n                return _context2.abrupt(\"return\", null);\n              case 10:\n                trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n                return _context2.abrupt(\"return\", {\n                  quote: routeQuote.quote,\n                  quoteGasAdjusted: routeQuote.quote,\n                  route: [routeQuote],\n                  estimatedGasUsed: BigNumber.from(0),\n                  estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n                  estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n                  gasPriceWei: BigNumber.from(0),\n                  trade: trade,\n                  methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n                  blockNumber: BigNumber.from(0)\n                });\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n      function routeExactIn(_x6, _x7, _x8, _x9, _x10) {\n        return _routeExactIn.apply(this, arguments);\n      }\n      return routeExactIn;\n    }()\n  }, {\n    key: \"routeExactOut\",\n    value: function () {\n      var _routeExactOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n        var tokenIn, tokenOut, routes, routeQuote, trade;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                tokenIn = currencyIn.wrapped;\n                tokenOut = currencyOut.wrapped;\n                _context3.next = 4;\n                return this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n              case 4:\n                routes = _context3.sent;\n                _context3.next = 7;\n                return this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n              case 7:\n                routeQuote = _context3.sent;\n                if (routeQuote) {\n                  _context3.next = 10;\n                  break;\n                }\n                return _context3.abrupt(\"return\", null);\n              case 10:\n                trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n                return _context3.abrupt(\"return\", {\n                  quote: routeQuote.quote,\n                  quoteGasAdjusted: routeQuote.quote,\n                  route: [routeQuote],\n                  estimatedGasUsed: BigNumber.from(0),\n                  estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n                  estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n                  gasPriceWei: BigNumber.from(0),\n                  trade: trade,\n                  methodParameters: swapConfig ? this.buildMethodParameters(trade, swapConfig) : undefined,\n                  blockNumber: BigNumber.from(0)\n                });\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n      function routeExactOut(_x11, _x12, _x13, _x14, _x15) {\n        return _routeExactOut.apply(this, arguments);\n      }\n      return routeExactOut;\n    }()\n  }, {\n    key: \"findBestRouteExactIn\",\n    value: function () {\n      var _findBestRouteExactIn = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(amountIn, tokenOut, routes, routingConfig) {\n        var _yield$this$quoteProv, quotesRaw, quotes100Percent, bestQuote;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n              case 2:\n                _yield$this$quoteProv = _context4.sent;\n                quotesRaw = _yield$this$quoteProv.routesWithQuotes;\n                quotes100Percent = _.map(quotesRaw, function (_ref2) {\n                  var _ref3 = _slicedToArray(_ref2, 2),\n                    route = _ref3[0],\n                    quotes = _ref3[1];\n                  var _a, _b;\n                  return \"\".concat(routeToString(route), \" : \").concat((_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString());\n                });\n                log.info({\n                  quotes100Percent: quotes100Percent\n                }, '100% Quotes');\n                _context4.next = 8;\n                return this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n              case 8:\n                bestQuote = _context4.sent;\n                return _context4.abrupt(\"return\", bestQuote);\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n      function findBestRouteExactIn(_x16, _x17, _x18, _x19) {\n        return _findBestRouteExactIn.apply(this, arguments);\n      }\n      return findBestRouteExactIn;\n    }()\n  }, {\n    key: \"findBestRouteExactOut\",\n    value: function () {\n      var _findBestRouteExactOut = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(amountOut, tokenIn, routes, routingConfig) {\n        var _yield$this$quoteProv2, quotesRaw, bestQuote;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n              case 2:\n                _yield$this$quoteProv2 = _context5.sent;\n                quotesRaw = _yield$this$quoteProv2.routesWithQuotes;\n                _context5.next = 6;\n                return this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n              case 6:\n                bestQuote = _context5.sent;\n                return _context5.abrupt(\"return\", bestQuote);\n              case 8:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n      function findBestRouteExactOut(_x20, _x21, _x22, _x23) {\n        return _findBestRouteExactOut.apply(this, arguments);\n      }\n      return findBestRouteExactOut;\n    }()\n  }, {\n    key: \"getBestQuote\",\n    value: function () {\n      var _getBestQuote = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(routes, quotesRaw, quoteToken, routeType) {\n        var _this = this;\n        var routeQuotesRaw, i, _quotesRaw$i, route, quotes, _quotes$, quote, amount, routeQuotes, _iterator, _step, rq;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                log.debug(\"Got \".concat(_.filter(quotesRaw, function (_ref4) {\n                  var _ref5 = _slicedToArray(_ref4, 2),\n                    _ = _ref5[0],\n                    quotes = _ref5[1];\n                  return !!quotes[0];\n                }).length, \" valid quotes from \").concat(routes.length, \" possible routes.\"));\n                routeQuotesRaw = [];\n                i = 0;\n              case 3:\n                if (!(i < quotesRaw.length)) {\n                  _context6.next = 13;\n                  break;\n                }\n                _quotesRaw$i = _slicedToArray(quotesRaw[i], 2), route = _quotesRaw$i[0], quotes = _quotesRaw$i[1];\n                _quotes$ = quotes[0], quote = _quotes$.quote, amount = _quotes$.amount;\n                if (quote) {\n                  _context6.next = 9;\n                  break;\n                }\n                Logger.globalLogger().debug(\"No quote for \".concat(routeToString(route)));\n                return _context6.abrupt(\"continue\", 10);\n              case 9:\n                routeQuotesRaw.push({\n                  route: route,\n                  quote: quote,\n                  amount: amount\n                });\n              case 10:\n                i++;\n                _context6.next = 3;\n                break;\n              case 13:\n                if (!(routeQuotesRaw.length == 0)) {\n                  _context6.next = 15;\n                  break;\n                }\n                return _context6.abrupt(\"return\", null);\n              case 15:\n                routeQuotesRaw.sort(function (routeQuoteA, routeQuoteB) {\n                  if (routeType == TradeType.EXACT_INPUT) {\n                    return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n                  } else {\n                    return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n                  }\n                });\n                routeQuotes = _.map(routeQuotesRaw, function (_ref6) {\n                  var route = _ref6.route,\n                    quote = _ref6.quote,\n                    amount = _ref6.amount;\n                  return new V3RouteWithValidQuote({\n                    route: route,\n                    rawQuote: quote,\n                    amount: amount,\n                    percent: 100,\n                    gasModel: {\n                      estimateGasCost: function estimateGasCost() {\n                        return {\n                          gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n                          gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n                          gasEstimate: BigNumber.from(0)\n                        };\n                      }\n                    },\n                    sqrtPriceX96AfterList: [],\n                    initializedTicksCrossedList: [],\n                    quoterGasEstimate: BigNumber.from(0),\n                    tradeType: routeType,\n                    quoteToken: quoteToken,\n                    v3PoolProvider: _this.poolProvider\n                  });\n                });\n                _iterator = _createForOfIteratorHelper(routeQuotes);\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    rq = _step.value;\n                    log.debug(\"Quote: \".concat(rq.amount.toFixed(Math.min(rq.amount.currency.decimals, 2)), \" Route: \").concat(routeToString(rq.route)));\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n                return _context6.abrupt(\"return\", routeQuotes[0]);\n              case 20:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n      function getBestQuote(_x24, _x25, _x26, _x27) {\n        return _getBestQuote.apply(this, arguments);\n      }\n      return getBestQuote;\n    }()\n  }, {\n    key: \"getAllRoutes\",\n    value: function () {\n      var _getAllRoutes = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(tokenIn, tokenOut, routingConfig) {\n        var tokenPairs, poolAccessor, pools, routes;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getAllPossiblePairings(tokenIn, tokenOut);\n              case 2:\n                tokenPairs = _context7.sent;\n                _context7.next = 5;\n                return this.poolProvider.getPools(tokenPairs, {\n                  blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber\n                });\n              case 5:\n                poolAccessor = _context7.sent;\n                pools = poolAccessor.getAllPools();\n                routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n                log.info({\n                  routes: _.map(routes, routeToString)\n                }, \"Computed \".concat(routes.length, \" possible routes.\"));\n                return _context7.abrupt(\"return\", routes);\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n      function getAllRoutes(_x28, _x29, _x30) {\n        return _getAllRoutes.apply(this, arguments);\n      }\n      return getAllRoutes;\n    }()\n  }, {\n    key: \"getAllPossiblePairings\",\n    value: function () {\n      var _getAllPossiblePairings = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(tokenIn, tokenOut) {\n        var _a, _b, _c, _d, _e, common, additionalA, additionalB, bases, basePairs, customBases, allPairs;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n                _context8.next = 3;\n                return ADDITIONAL_BASES(this.tokenProvider);\n              case 3:\n                _context8.t2 = this.chainId;\n                _context8.t3 = _b = _context8.sent[_context8.t2];\n                _context8.t1 = _context8.t3 === null;\n                if (_context8.t1) {\n                  _context8.next = 8;\n                  break;\n                }\n                _context8.t1 = _b === void 0;\n              case 8:\n                if (!_context8.t1) {\n                  _context8.next = 12;\n                  break;\n                }\n                _context8.t4 = void 0;\n                _context8.next = 13;\n                break;\n              case 12:\n                _context8.t4 = _b[tokenIn.address];\n              case 13:\n                _context8.t5 = _c = _context8.t4;\n                _context8.t0 = _context8.t5 !== null;\n                if (!_context8.t0) {\n                  _context8.next = 17;\n                  break;\n                }\n                _context8.t0 = _c !== void 0;\n              case 17:\n                if (!_context8.t0) {\n                  _context8.next = 21;\n                  break;\n                }\n                _context8.t6 = _c;\n                _context8.next = 22;\n                break;\n              case 21:\n                _context8.t6 = [];\n              case 22:\n                additionalA = _context8.t6;\n                _context8.next = 25;\n                return ADDITIONAL_BASES(this.tokenProvider);\n              case 25:\n                _context8.t9 = this.chainId;\n                _context8.t10 = _d = _context8.sent[_context8.t9];\n                _context8.t8 = _context8.t10 === null;\n                if (_context8.t8) {\n                  _context8.next = 30;\n                  break;\n                }\n                _context8.t8 = _d === void 0;\n              case 30:\n                if (!_context8.t8) {\n                  _context8.next = 34;\n                  break;\n                }\n                _context8.t11 = void 0;\n                _context8.next = 35;\n                break;\n              case 34:\n                _context8.t11 = _d[tokenOut.address];\n              case 35:\n                _context8.t12 = _e = _context8.t11;\n                _context8.t7 = _context8.t12 !== null;\n                if (!_context8.t7) {\n                  _context8.next = 39;\n                  break;\n                }\n                _context8.t7 = _e !== void 0;\n              case 39:\n                if (!_context8.t7) {\n                  _context8.next = 43;\n                  break;\n                }\n                _context8.t13 = _e;\n                _context8.next = 44;\n                break;\n              case 43:\n                _context8.t13 = [];\n              case 44:\n                additionalB = _context8.t13;\n                bases = [].concat(_toConsumableArray(common), _toConsumableArray(additionalA), _toConsumableArray(additionalB));\n                basePairs = _.flatMap(bases, function (base) {\n                  return bases.map(function (otherBase) {\n                    return [base, otherBase];\n                  });\n                });\n                _context8.next = 49;\n                return CUSTOM_BASES(this.tokenProvider);\n              case 49:\n                _context8.t14 = this.chainId;\n                customBases = _context8.sent[_context8.t14];\n                allPairs = _([\n                // the direct pair\n                [tokenIn, tokenOut]].concat(_toConsumableArray(bases.map(function (base) {\n                  return [tokenIn, base];\n                })), _toConsumableArray(bases.map(function (base) {\n                  return [tokenOut, base];\n                })), _toConsumableArray(basePairs))).filter(function (tokens) {\n                  return Boolean(tokens[0] && tokens[1]);\n                }).filter(function (_ref7) {\n                  var _ref8 = _slicedToArray(_ref7, 2),\n                    tokenA = _ref8[0],\n                    tokenB = _ref8[1];\n                  return tokenA.address !== tokenB.address && !tokenA.equals(tokenB);\n                }).filter(function (_ref9) {\n                  var _ref10 = _slicedToArray(_ref9, 2),\n                    tokenA = _ref10[0],\n                    tokenB = _ref10[1];\n                  var customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n                  var customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n                  if (!customBasesA && !customBasesB) return true;\n                  if (customBasesA && !customBasesA.find(function (base) {\n                    return tokenB.equals(base);\n                  })) return false;\n                  if (customBasesB && !customBasesB.find(function (base) {\n                    return tokenA.equals(base);\n                  })) return false;\n                  return true;\n                }).flatMap(function (_ref11) {\n                  var _ref12 = _slicedToArray(_ref11, 2),\n                    tokenA = _ref12[0],\n                    tokenB = _ref12[1];\n                  return [[tokenA, tokenB, FeeAmount.LOW], [tokenA, tokenB, FeeAmount.MEDIUM], [tokenA, tokenB, FeeAmount.HIGH]];\n                }).value();\n                return _context8.abrupt(\"return\", allPairs);\n              case 53:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n      function getAllPossiblePairings(_x31, _x32) {\n        return _getAllPossiblePairings.apply(this, arguments);\n      }\n      return getAllPossiblePairings;\n    }()\n  }, {\n    key: \"computeAllRoutes\",\n    value: function computeAllRoutes(tokenIn, tokenOut, pools, chainId) {\n      var currentPath = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n      var allPaths = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n      var startTokenIn = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : tokenIn;\n      var maxHops = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 2;\n      var _iterator2 = _createForOfIteratorHelper(pools),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var pool = _step2.value;\n          if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn)) continue;\n          var outputToken = pool.token0.equals(tokenIn) ? pool.token1 : pool.token0;\n          if (outputToken.equals(tokenOut)) {\n            allPaths.push(new V3Route([].concat(_toConsumableArray(currentPath), [pool]), startTokenIn, tokenOut));\n          } else if (maxHops > 1) {\n            this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [].concat(_toConsumableArray(currentPath), [pool]), allPaths, startTokenIn, maxHops - 1);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return allPaths;\n    }\n  }, {\n    key: \"buildTrade\",\n    value: function buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n      var route = routeAmount.route,\n        amount = routeAmount.amount,\n        quote = routeAmount.quote;\n      // The route, amount and quote are all in terms of wrapped tokens.\n      // When constructing the Trade object the inputAmount/outputAmount must\n      // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n      if (tradeType == TradeType.EXACT_INPUT) {\n        var amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n        var quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n        var routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n        return new Trade({\n          v3Routes: [{\n            routev3: routeCurrency,\n            inputAmount: amountCurrency,\n            outputAmount: quoteCurrency\n          }],\n          v2Routes: [],\n          tradeType: tradeType\n        });\n      } else {\n        var _quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n        var _amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n        var _routeCurrency = new Route(route.pools, _quoteCurrency.currency, _amountCurrency.currency);\n        return new Trade({\n          v3Routes: [{\n            routev3: _routeCurrency,\n            inputAmount: _quoteCurrency,\n            outputAmount: _amountCurrency\n          }],\n          v2Routes: [],\n          tradeType: tradeType\n        });\n      }\n    }\n  }, {\n    key: \"buildMethodParameters\",\n    value: function buildMethodParameters(trade, swapConfig) {\n      var recipient = swapConfig.recipient,\n        slippageTolerance = swapConfig.slippageTolerance,\n        deadline = swapConfig.deadline;\n      var methodParameters = SwapRouter.swapCallParameters(trade, {\n        recipient: recipient,\n        slippageTolerance: slippageTolerance,\n        deadlineOrPreviousBlockhash: deadline\n        // ...(signatureData\n        //   ? {\n        //       inputTokenPermit:\n        //         'allowed' in signatureData\n        //           ? {\n        //               expiry: signatureData.deadline,\n        //               nonce: signatureData.nonce,\n        //               s: signatureData.s,\n        //               r: signatureData.r,\n        //               v: signatureData.v as any,\n        //             }\n        //           : {\n        //               deadline: signatureData.deadline,\n        //               amount: signatureData.amount,\n        //               s: signatureData.s,\n        //               r: signatureData.r,\n        //               v: signatureData.v as any,\n        //             },\n        //     }\n        //   : {}),\n      });\n\n      return methodParameters;\n    }\n  }]);\n  return LegacyRouter;\n}();","map":{"version":3,"sources":["../../../../src/routers/legacy-router/legacy-router.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport { Logger } from '@ethersproject/logger';\nimport { SwapRouter, Trade } from '@uniswap/router-sdk';\nimport { TradeType } from '@uniswap/sdk-core';\nimport { FeeAmount, Route } from '@uniswap/v3-sdk';\nimport _ from 'lodash';\nimport { DAI_MAINNET, USDC_MAINNET, } from '../../providers/token-provider';\nimport { CurrencyAmount } from '../../util/amounts';\nimport { log } from '../../util/log';\nimport { routeToString } from '../../util/routes';\nimport { V3RouteWithValidQuote } from '../alpha-router';\nimport { V3Route } from '../router';\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES, } from './bases';\n// Interface defaults to 2.\nconst MAX_HOPS = 2;\n/**\n * Replicates the router implemented in the V3 interface.\n * Code is mostly a copy from https://github.com/Uniswap/uniswap-interface/blob/0190b5a408c13016c87e1030ffc59326c085f389/src/hooks/useBestV3Trade.ts#L22-L23\n * with React/Redux hooks removed, and refactoring to allow re-use in other routers.\n */\nexport class LegacyRouter {\n    constructor({ chainId, multicall2Provider, poolProvider, quoteProvider, tokenProvider, }) {\n        this.chainId = chainId;\n        this.multicall2Provider = multicall2Provider;\n        this.poolProvider = poolProvider;\n        this.quoteProvider = quoteProvider;\n        this.tokenProvider = tokenProvider;\n    }\n    async route(amount, quoteCurrency, swapType, swapConfig, partialRoutingConfig) {\n        if (swapType == TradeType.EXACT_INPUT) {\n            return this.routeExactIn(amount.currency, quoteCurrency, amount, swapConfig, partialRoutingConfig);\n        }\n        return this.routeExactOut(quoteCurrency, amount.currency, amount, swapConfig, partialRoutingConfig);\n    }\n    async routeExactIn(currencyIn, currencyOut, amountIn, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_INPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenOut, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async routeExactOut(currencyIn, currencyOut, amountOut, swapConfig, routingConfig) {\n        const tokenIn = currencyIn.wrapped;\n        const tokenOut = currencyOut.wrapped;\n        const routes = await this.getAllRoutes(tokenIn, tokenOut, routingConfig);\n        const routeQuote = await this.findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig);\n        if (!routeQuote) {\n            return null;\n        }\n        const trade = this.buildTrade(currencyIn, currencyOut, TradeType.EXACT_OUTPUT, routeQuote);\n        return {\n            quote: routeQuote.quote,\n            quoteGasAdjusted: routeQuote.quote,\n            route: [routeQuote],\n            estimatedGasUsed: BigNumber.from(0),\n            estimatedGasUsedQuoteToken: CurrencyAmount.fromFractionalAmount(tokenIn, 0, 1),\n            estimatedGasUsedUSD: CurrencyAmount.fromFractionalAmount(DAI_MAINNET, 0, 1),\n            gasPriceWei: BigNumber.from(0),\n            trade,\n            methodParameters: swapConfig\n                ? this.buildMethodParameters(trade, swapConfig)\n                : undefined,\n            blockNumber: BigNumber.from(0),\n        };\n    }\n    async findBestRouteExactIn(amountIn, tokenOut, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactIn([amountIn], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const quotes100Percent = _.map(quotesRaw, ([route, quotes]) => { var _a, _b; return `${routeToString(route)} : ${(_b = (_a = quotes[0]) === null || _a === void 0 ? void 0 : _a.quote) === null || _b === void 0 ? void 0 : _b.toString()}`; });\n        log.info({ quotes100Percent }, '100% Quotes');\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenOut, TradeType.EXACT_INPUT);\n        return bestQuote;\n    }\n    async findBestRouteExactOut(amountOut, tokenIn, routes, routingConfig) {\n        const { routesWithQuotes: quotesRaw } = await this.quoteProvider.getQuotesManyExactOut([amountOut], routes, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const bestQuote = await this.getBestQuote(routes, quotesRaw, tokenIn, TradeType.EXACT_OUTPUT);\n        return bestQuote;\n    }\n    async getBestQuote(routes, quotesRaw, quoteToken, routeType) {\n        log.debug(`Got ${_.filter(quotesRaw, ([_, quotes]) => !!quotes[0]).length} valid quotes from ${routes.length} possible routes.`);\n        const routeQuotesRaw = [];\n        for (let i = 0; i < quotesRaw.length; i++) {\n            const [route, quotes] = quotesRaw[i];\n            const { quote, amount } = quotes[0];\n            if (!quote) {\n                Logger.globalLogger().debug(`No quote for ${routeToString(route)}`);\n                continue;\n            }\n            routeQuotesRaw.push({ route, quote, amount });\n        }\n        if (routeQuotesRaw.length == 0) {\n            return null;\n        }\n        routeQuotesRaw.sort((routeQuoteA, routeQuoteB) => {\n            if (routeType == TradeType.EXACT_INPUT) {\n                return routeQuoteA.quote.gt(routeQuoteB.quote) ? -1 : 1;\n            }\n            else {\n                return routeQuoteA.quote.lt(routeQuoteB.quote) ? -1 : 1;\n            }\n        });\n        const routeQuotes = _.map(routeQuotesRaw, ({ route, quote, amount }) => {\n            return new V3RouteWithValidQuote({\n                route,\n                rawQuote: quote,\n                amount,\n                percent: 100,\n                gasModel: {\n                    estimateGasCost: () => ({\n                        gasCostInToken: CurrencyAmount.fromRawAmount(quoteToken, 0),\n                        gasCostInUSD: CurrencyAmount.fromRawAmount(USDC_MAINNET, 0),\n                        gasEstimate: BigNumber.from(0),\n                    }),\n                },\n                sqrtPriceX96AfterList: [],\n                initializedTicksCrossedList: [],\n                quoterGasEstimate: BigNumber.from(0),\n                tradeType: routeType,\n                quoteToken,\n                v3PoolProvider: this.poolProvider,\n            });\n        });\n        for (const rq of routeQuotes) {\n            log.debug(`Quote: ${rq.amount.toFixed(Math.min(rq.amount.currency.decimals, 2))} Route: ${routeToString(rq.route)}`);\n        }\n        return routeQuotes[0];\n    }\n    async getAllRoutes(tokenIn, tokenOut, routingConfig) {\n        const tokenPairs = await this.getAllPossiblePairings(tokenIn, tokenOut);\n        const poolAccessor = await this.poolProvider.getPools(tokenPairs, {\n            blockNumber: routingConfig === null || routingConfig === void 0 ? void 0 : routingConfig.blockNumber,\n        });\n        const pools = poolAccessor.getAllPools();\n        const routes = this.computeAllRoutes(tokenIn, tokenOut, pools, this.chainId, [], [], tokenIn, MAX_HOPS);\n        log.info({ routes: _.map(routes, routeToString) }, `Computed ${routes.length} possible routes.`);\n        return routes;\n    }\n    async getAllPossiblePairings(tokenIn, tokenOut) {\n        var _a, _b, _c, _d, _e;\n        const common = (_a = BASES_TO_CHECK_TRADES_AGAINST(this.tokenProvider)[this.chainId]) !== null && _a !== void 0 ? _a : [];\n        const additionalA = (_c = (_b = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _b === void 0 ? void 0 : _b[tokenIn.address]) !== null && _c !== void 0 ? _c : [];\n        const additionalB = (_e = (_d = (await ADDITIONAL_BASES(this.tokenProvider))[this.chainId]) === null || _d === void 0 ? void 0 : _d[tokenOut.address]) !== null && _e !== void 0 ? _e : [];\n        const bases = [...common, ...additionalA, ...additionalB];\n        const basePairs = _.flatMap(bases, (base) => bases.map((otherBase) => [base, otherBase]));\n        const customBases = (await CUSTOM_BASES(this.tokenProvider))[this.chainId];\n        const allPairs = _([\n            // the direct pair\n            [tokenIn, tokenOut],\n            // token A against all bases\n            ...bases.map((base) => [tokenIn, base]),\n            // token B against all bases\n            ...bases.map((base) => [tokenOut, base]),\n            // each base against all bases\n            ...basePairs,\n        ])\n            .filter((tokens) => Boolean(tokens[0] && tokens[1]))\n            .filter(([tokenA, tokenB]) => tokenA.address !== tokenB.address && !tokenA.equals(tokenB))\n            .filter(([tokenA, tokenB]) => {\n            const customBasesA = customBases === null || customBases === void 0 ? void 0 : customBases[tokenA.address];\n            const customBasesB = customBases === null || customBases === void 0 ? void 0 : customBases[tokenB.address];\n            if (!customBasesA && !customBasesB)\n                return true;\n            if (customBasesA && !customBasesA.find((base) => tokenB.equals(base)))\n                return false;\n            if (customBasesB && !customBasesB.find((base) => tokenA.equals(base)))\n                return false;\n            return true;\n        })\n            .flatMap(([tokenA, tokenB]) => {\n            return [\n                [tokenA, tokenB, FeeAmount.LOW],\n                [tokenA, tokenB, FeeAmount.MEDIUM],\n                [tokenA, tokenB, FeeAmount.HIGH],\n            ];\n        })\n            .value();\n        return allPairs;\n    }\n    computeAllRoutes(tokenIn, tokenOut, pools, chainId, currentPath = [], allPaths = [], startTokenIn = tokenIn, maxHops = 2) {\n        for (const pool of pools) {\n            if (currentPath.indexOf(pool) !== -1 || !pool.involvesToken(tokenIn))\n                continue;\n            const outputToken = pool.token0.equals(tokenIn)\n                ? pool.token1\n                : pool.token0;\n            if (outputToken.equals(tokenOut)) {\n                allPaths.push(new V3Route([...currentPath, pool], startTokenIn, tokenOut));\n            }\n            else if (maxHops > 1) {\n                this.computeAllRoutes(outputToken, tokenOut, pools, chainId, [...currentPath, pool], allPaths, startTokenIn, maxHops - 1);\n            }\n        }\n        return allPaths;\n    }\n    buildTrade(tokenInCurrency, tokenOutCurrency, tradeType, routeAmount) {\n        const { route, amount, quote } = routeAmount;\n        // The route, amount and quote are all in terms of wrapped tokens.\n        // When constructing the Trade object the inputAmount/outputAmount must\n        // use native currencies if necessary. This is so that the Trade knows to wrap/unwrap.\n        if (tradeType == TradeType.EXACT_INPUT) {\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, amount.numerator, amount.denominator);\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, quote.numerator, quote.denominator);\n            const routeCurrency = new Route(route.pools, amountCurrency.currency, quoteCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: amountCurrency,\n                        outputAmount: quoteCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n        else {\n            const quoteCurrency = CurrencyAmount.fromFractionalAmount(tokenInCurrency, quote.numerator, quote.denominator);\n            const amountCurrency = CurrencyAmount.fromFractionalAmount(tokenOutCurrency, amount.numerator, amount.denominator);\n            const routeCurrency = new Route(route.pools, quoteCurrency.currency, amountCurrency.currency);\n            return new Trade({\n                v3Routes: [\n                    {\n                        routev3: routeCurrency,\n                        inputAmount: quoteCurrency,\n                        outputAmount: amountCurrency,\n                    },\n                ],\n                v2Routes: [],\n                tradeType: tradeType,\n            });\n        }\n    }\n    buildMethodParameters(trade, swapConfig) {\n        const { recipient, slippageTolerance, deadline } = swapConfig;\n        const methodParameters = SwapRouter.swapCallParameters(trade, {\n            recipient,\n            slippageTolerance,\n            deadlineOrPreviousBlockhash: deadline,\n            // ...(signatureData\n            //   ? {\n            //       inputTokenPermit:\n            //         'allowed' in signatureData\n            //           ? {\n            //               expiry: signatureData.deadline,\n            //               nonce: signatureData.nonce,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             }\n            //           : {\n            //               deadline: signatureData.deadline,\n            //               amount: signatureData.amount,\n            //               s: signatureData.s,\n            //               r: signatureData.r,\n            //               v: signatureData.v as any,\n            //             },\n            //     }\n            //   : {}),\n        });\n        return methodParameters;\n    }\n}\n//# sourceMappingURL=data:application/json;base64,"]},"metadata":{},"sourceType":"module"}