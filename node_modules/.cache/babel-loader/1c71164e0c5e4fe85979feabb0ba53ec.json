{"ast":null,"code":"import { useTheme as _useTheme } from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/AddLiquidityV2/index.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport { TraceEvent } from '@uniswap/analytics';\nimport { BrowserEvent, ElementName, EventName } from '@uniswap/analytics-events';\nimport { Percent } from '@uniswap/sdk-core';\nimport { useWeb3React } from '@web3-react/core';\nimport { sendEvent } from 'components/analytics';\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter';\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink';\nimport { useCallback, useState } from 'react';\nimport { Plus } from 'react-feather';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Text } from 'rebass';\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button';\nimport { BlueCard, LightCard } from '../../components/Card';\nimport { AutoColumn, ColumnCenter } from '../../components/Column';\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel';\nimport DoubleCurrencyLogo from '../../components/DoubleLogo';\nimport { AddRemoveTabs } from '../../components/NavigationTabs';\nimport { MinimalPositionCard } from '../../components/PositionCard';\nimport Row, { RowBetween, RowFlat } from '../../components/Row';\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal';\nimport { ZERO_PERCENT } from '../../constants/misc';\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens';\nimport { useCurrency } from '../../hooks/Tokens';\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback';\nimport { useV2RouterContract } from '../../hooks/useContract';\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported';\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline';\nimport { PairState } from '../../hooks/useV2Pairs';\nimport { useToggleWalletModal } from '../../state/application/hooks';\nimport { Field } from '../../state/mint/actions';\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks';\nimport { useTransactionAdder } from '../../state/transactions/hooks';\nimport { TransactionType } from '../../state/transactions/types';\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks';\nimport { ThemedText } from '../../theme';\nimport { calculateGasMargin } from '../../utils/calculateGasMargin';\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount';\nimport { currencyId } from '../../utils/currencyId';\nimport { maxAmountSpend } from '../../utils/maxAmountSpend';\nimport AppBody from '../AppBody';\nimport { Dots, Wrapper } from '../Pool/styleds';\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom';\nimport { PoolPriceBar } from './PoolPriceBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10000);\nexport default function AddLiquidity() {\n  _s();\n  var _parsedAmounts$depend, _parsedAmounts$depend2, _parsedAmounts$Field$5, _currencies$Field$CUR7, _parsedAmounts$Field$6, _currencies$Field$CUR8, _currencies$Field$CUR9, _currencies$Field$CUR10, _currencies$Field$CUR11, _currencies$Field$CUR12, _currencies$Field$CUR13, _currencies$Field$CUR14;\n  const {\n    currencyIdA,\n    currencyIdB\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    account,\n    chainId,\n    provider\n  } = useWeb3React();\n  const theme = _useTheme();\n  const currencyA = useCurrency(currencyIdA);\n  const currencyB = useCurrency(currencyIdB);\n  const wrappedNativeCurrency = chainId ? WRAPPED_NATIVE_CURRENCY[chainId] : undefined;\n  const oneCurrencyIsWETH = Boolean(chainId && wrappedNativeCurrency && (currencyA && currencyA.equals(wrappedNativeCurrency) || currencyB && currencyB.equals(wrappedNativeCurrency)));\n  const toggleWalletModal = useToggleWalletModal(); // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode();\n\n  // mint state\n  const {\n    independentField,\n    typedValue,\n    otherTypedValue\n  } = useMintState();\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error\n  } = useDerivedMintInfo(currencyA !== null && currencyA !== void 0 ? currencyA : undefined, currencyB !== null && currencyB !== void 0 ? currencyB : undefined);\n  const {\n    onFieldAInput,\n    onFieldBInput\n  } = useMintActionHandlers(noLiquidity);\n  const isValid = !error;\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [attemptingTxn, setAttemptingTxn] = useState(false); // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline(); // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE); // custom from users\n  const [txHash, setTxHash] = useState('');\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : (_parsedAmounts$depend = (_parsedAmounts$depend2 = parsedAmounts[dependentField]) === null || _parsedAmounts$depend2 === void 0 ? void 0 : _parsedAmounts$depend2.toSignificant(6)) !== null && _parsedAmounts$depend !== void 0 ? _parsedAmounts$depend : ''\n  };\n\n  // get the max amounts user can add\n  const maxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    return {\n      ...accumulator,\n      [field]: maxAmountSpend(currencyBalances[field])\n    };\n  }, {});\n  const atMaxAmounts = [Field.CURRENCY_A, Field.CURRENCY_B].reduce((accumulator, field) => {\n    var _maxAmounts$field, _parsedAmounts$field;\n    return {\n      ...accumulator,\n      [field]: (_maxAmounts$field = maxAmounts[field]) === null || _maxAmounts$field === void 0 ? void 0 : _maxAmounts$field.equalTo((_parsedAmounts$field = parsedAmounts[field]) !== null && _parsedAmounts$field !== void 0 ? _parsedAmounts$field : '0')\n    };\n  }, {});\n  const router = useV2RouterContract();\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router === null || router === void 0 ? void 0 : router.address);\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router === null || router === void 0 ? void 0 : router.address);\n  const addTransaction = useTransactionAdder();\n  async function onAdd() {\n    if (!chainId || !provider || !account || !router) return;\n    const {\n      [Field.CURRENCY_A]: parsedAmountA,\n      [Field.CURRENCY_B]: parsedAmountB\n    } = parsedAmounts;\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return;\n    }\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0]\n    };\n    let estimate, method, args, value;\n    if (currencyA.isNative || currencyB.isNative) {\n      var _wrapped$address, _ref, _ref$wrapped;\n      const tokenBIsETH = currencyB.isNative;\n      estimate = router.estimateGas.addLiquidityETH;\n      method = router.addLiquidityETH;\n      args = [(_wrapped$address = (_ref = tokenBIsETH ? currencyA : currencyB) === null || _ref === void 0 ? void 0 : (_ref$wrapped = _ref.wrapped) === null || _ref$wrapped === void 0 ? void 0 : _ref$wrapped.address) !== null && _wrapped$address !== void 0 ? _wrapped$address : '',\n      // token\n      (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(),\n      // token desired\n      amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(),\n      // token min\n      amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(),\n      // eth min\n      account, deadline.toHexString()];\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString());\n    } else {\n      var _currencyA$wrapped$ad, _currencyA$wrapped, _currencyB$wrapped$ad, _currencyB$wrapped;\n      estimate = router.estimateGas.addLiquidity;\n      method = router.addLiquidity;\n      args = [(_currencyA$wrapped$ad = currencyA === null || currencyA === void 0 ? void 0 : (_currencyA$wrapped = currencyA.wrapped) === null || _currencyA$wrapped === void 0 ? void 0 : _currencyA$wrapped.address) !== null && _currencyA$wrapped$ad !== void 0 ? _currencyA$wrapped$ad : '', (_currencyB$wrapped$ad = currencyB === null || currencyB === void 0 ? void 0 : (_currencyB$wrapped = currencyB.wrapped) === null || _currencyB$wrapped === void 0 ? void 0 : _currencyB$wrapped.address) !== null && _currencyB$wrapped$ad !== void 0 ? _currencyB$wrapped$ad : '', parsedAmountA.quotient.toString(), parsedAmountB.quotient.toString(), amountsMin[Field.CURRENCY_A].toString(), amountsMin[Field.CURRENCY_B].toString(), account, deadline.toHexString()];\n      value = null;\n    }\n    setAttemptingTxn(true);\n    await estimate(...args, value ? {\n      value\n    } : {}).then(estimatedGasLimit => method(...args, {\n      ...(value ? {\n        value\n      } : {}),\n      gasLimit: calculateGasMargin(estimatedGasLimit)\n    }).then(response => {\n      var _parsedAmounts$Field$, _parsedAmounts$Field$2, _parsedAmounts$Field$3, _parsedAmounts$Field$4, _currencies$Field$CUR, _currencies$Field$CUR2;\n      setAttemptingTxn(false);\n      addTransaction(response, {\n        type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n        baseCurrencyId: currencyId(currencyA),\n        expectedAmountBaseRaw: (_parsedAmounts$Field$ = (_parsedAmounts$Field$2 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$2 === void 0 ? void 0 : _parsedAmounts$Field$2.quotient.toString()) !== null && _parsedAmounts$Field$ !== void 0 ? _parsedAmounts$Field$ : '0',\n        quoteCurrencyId: currencyId(currencyB),\n        expectedAmountQuoteRaw: (_parsedAmounts$Field$3 = (_parsedAmounts$Field$4 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$4 === void 0 ? void 0 : _parsedAmounts$Field$4.quotient.toString()) !== null && _parsedAmounts$Field$3 !== void 0 ? _parsedAmounts$Field$3 : '0'\n      });\n      setTxHash(response.hash);\n      sendEvent({\n        category: 'Liquidity',\n        action: 'Add',\n        label: [(_currencies$Field$CUR = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR === void 0 ? void 0 : _currencies$Field$CUR.symbol, (_currencies$Field$CUR2 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR2 === void 0 ? void 0 : _currencies$Field$CUR2.symbol].join('/')\n      });\n    })).catch(error => {\n      setAttemptingTxn(false);\n      // we only care if the error is something _other_ than the user rejected the tx\n      if ((error === null || error === void 0 ? void 0 : error.code) !== 4001) {\n        console.error(error);\n      }\n    });\n  }\n  const modalHeader = () => {\n    var _currencies$Field$CUR3, _currencies$Field$CUR4, _currencies$Field$CUR5, _currencies$Field$CUR6;\n    return noLiquidity ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: /*#__PURE__*/_jsxDEV(LightCard, {\n        mt: \"20px\",\n        $borderRadius: \"20px\",\n        children: /*#__PURE__*/_jsxDEV(RowFlat, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"48px\",\n            fontWeight: 500,\n            lineHeight: \"42px\",\n            marginRight: 10,\n            children: ((_currencies$Field$CUR3 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR3 === void 0 ? void 0 : _currencies$Field$CUR3.symbol) + '/' + ((_currencies$Field$CUR4 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR4 === void 0 ? void 0 : _currencies$Field$CUR4.symbol)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n            currency0: currencies[Field.CURRENCY_A],\n            currency1: currencies[Field.CURRENCY_B],\n            size: 30\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n      gap: \"20px\",\n      children: [/*#__PURE__*/_jsxDEV(RowFlat, {\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"48px\",\n          fontWeight: 500,\n          lineHeight: \"42px\",\n          marginRight: 10,\n          children: liquidityMinted === null || liquidityMinted === void 0 ? void 0 : liquidityMinted.toSignificant(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DoubleCurrencyLogo, {\n          currency0: currencies[Field.CURRENCY_A],\n          currency1: currencies[Field.CURRENCY_B],\n          size: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: ((_currencies$Field$CUR5 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR5 === void 0 ? void 0 : _currencies$Field$CUR5.symbol) + '/' + ((_currencies$Field$CUR6 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR6 === void 0 ? void 0 : _currencies$Field$CUR6.symbol) + ' Pool Tokens'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedItalic, {\n        fontSize: 12,\n        textAlign: \"left\",\n        padding: \"8px 0 0 0 \",\n        children: /*#__PURE__*/_jsxDEV(Trans, {\n          id: \"Output is estimated. If the price changes by more than {0}% your transaction will revert.\",\n          values: {\n            0: allowedSlippage.toSignificant(4)\n          }\n        }, void 0, false, void 0, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this);\n  };\n  const modalBottom = () => {\n    return /*#__PURE__*/_jsxDEV(ConfirmAddModalBottom, {\n      price: price,\n      currencies: currencies,\n      parsedAmounts: parsedAmounts,\n      noLiquidity: noLiquidity,\n      onAdd: onAdd,\n      poolTokenPercentage: poolTokenPercentage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this);\n  };\n  const pendingText = /*#__PURE__*/_jsxDEV(Trans, {\n    id: \"Supplying {0} {1} and {2} {3}\",\n    values: {\n      0: (_parsedAmounts$Field$5 = parsedAmounts[Field.CURRENCY_A]) === null || _parsedAmounts$Field$5 === void 0 ? void 0 : _parsedAmounts$Field$5.toSignificant(6),\n      1: (_currencies$Field$CUR7 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR7 === void 0 ? void 0 : _currencies$Field$CUR7.symbol,\n      2: (_parsedAmounts$Field$6 = parsedAmounts[Field.CURRENCY_B]) === null || _parsedAmounts$Field$6 === void 0 ? void 0 : _parsedAmounts$Field$6.toSignificant(6),\n      3: (_currencies$Field$CUR8 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR8 === void 0 ? void 0 : _currencies$Field$CUR8.symbol\n    }\n  }, void 0, false, void 0, this);\n  const handleCurrencyASelect = useCallback(currencyA => {\n    const newCurrencyIdA = currencyId(currencyA);\n    if (newCurrencyIdA === currencyIdB) {\n      navigate(`/add/v2/${currencyIdB}/${currencyIdA}`);\n    } else {\n      navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`);\n    }\n  }, [currencyIdB, navigate, currencyIdA]);\n  const handleCurrencyBSelect = useCallback(currencyB => {\n    const newCurrencyIdB = currencyId(currencyB);\n    if (currencyIdA === newCurrencyIdB) {\n      if (currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`);\n      } else {\n        navigate(`/add/v2/${newCurrencyIdB}`);\n      }\n    } else {\n      navigate(`/add/v2/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`);\n    }\n  }, [currencyIdA, navigate, currencyIdB]);\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false);\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('');\n    }\n    setTxHash('');\n  }, [onFieldAInput, txHash]);\n  const {\n    pathname\n  } = useLocation();\n  const isCreate = pathname.includes('/create');\n  const addIsUnsupported = useIsSwapUnsupported(currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_A, currencies === null || currencies === void 0 ? void 0 : currencies.CURRENCY_B);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBody, {\n      children: [/*#__PURE__*/_jsxDEV(AddRemoveTabs, {\n        creating: isCreate,\n        adding: true,\n        defaultSlippage: DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(TransactionConfirmationModal, {\n          isOpen: showConfirm,\n          onDismiss: handleDismissConfirmation,\n          attemptingTxn: attemptingTxn,\n          hash: txHash,\n          content: () => /*#__PURE__*/_jsxDEV(ConfirmationModalContent, {\n            title: noLiquidity ? /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"You are creating a pool\"\n            }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n              id: \"You will receive\"\n            }, void 0, false, void 0, this),\n            onDismiss: handleDismissConfirmation,\n            topContent: modalHeader,\n            bottomContent: modalBottom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this),\n          pendingText: pendingText,\n          currencyToAdd: pair === null || pair === void 0 ? void 0 : pair.liquidityToken\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"20px\",\n          children: [noLiquidity || (isCreate ? /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(BlueCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: [/*#__PURE__*/_jsxDEV(ThemedText.DeprecatedLink, {\n                  fontWeight: 600,\n                  color: \"accentAction\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"You are the first liquidity provider.\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedLink, {\n                  fontWeight: 400,\n                  color: \"accentAction\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"The ratio of tokens you add will set the price of this pool.\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedLink, {\n                  fontWeight: 400,\n                  color: \"accentAction\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Once you are happy with the rate click supply to review.\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(BlueCard, {\n              children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n                gap: \"10px\",\n                children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedLink, {\n                  fontWeight: 400,\n                  color: \"accentAction\",\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"<0>Tip:</0> When you add liquidity, you will receive pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.\",\n                    components: {\n                      0: /*#__PURE__*/_jsxDEV(\"b\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 27\n                      }, this)\n                    }\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_A],\n            onUserInput: onFieldAInput,\n            onMax: () => {\n              var _maxAmounts$Field$CUR, _maxAmounts$Field$CUR2;\n              onFieldAInput((_maxAmounts$Field$CUR = (_maxAmounts$Field$CUR2 = maxAmounts[Field.CURRENCY_A]) === null || _maxAmounts$Field$CUR2 === void 0 ? void 0 : _maxAmounts$Field$CUR2.toExact()) !== null && _maxAmounts$Field$CUR !== void 0 ? _maxAmounts$Field$CUR : '');\n            },\n            onCurrencySelect: handleCurrencyASelect,\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_A],\n            currency: (_currencies$Field$CUR9 = currencies[Field.CURRENCY_A]) !== null && _currencies$Field$CUR9 !== void 0 ? _currencies$Field$CUR9 : null,\n            id: \"add-liquidity-input-tokena\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ColumnCenter, {\n            children: /*#__PURE__*/_jsxDEV(Plus, {\n              size: \"16\",\n              color: theme.textSecondary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CurrencyInputPanel, {\n            value: formattedAmounts[Field.CURRENCY_B],\n            onUserInput: onFieldBInput,\n            onCurrencySelect: handleCurrencyBSelect,\n            onMax: () => {\n              var _maxAmounts$Field$CUR3, _maxAmounts$Field$CUR4;\n              onFieldBInput((_maxAmounts$Field$CUR3 = (_maxAmounts$Field$CUR4 = maxAmounts[Field.CURRENCY_B]) === null || _maxAmounts$Field$CUR4 === void 0 ? void 0 : _maxAmounts$Field$CUR4.toExact()) !== null && _maxAmounts$Field$CUR3 !== void 0 ? _maxAmounts$Field$CUR3 : '');\n            },\n            showMaxButton: !atMaxAmounts[Field.CURRENCY_B],\n            currency: (_currencies$Field$CUR10 = currencies[Field.CURRENCY_B]) !== null && _currencies$Field$CUR10 !== void 0 ? _currencies$Field$CUR10 : null,\n            id: \"add-liquidity-input-tokenb\",\n            showCommonBases: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this), currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(LightCard, {\n              padding: \"0px\",\n              $borderRadius: \"20px\",\n              children: [/*#__PURE__*/_jsxDEV(RowBetween, {\n                padding: \"1rem\",\n                children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedSubHeader, {\n                  fontWeight: 500,\n                  fontSize: 14,\n                  children: noLiquidity ? /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Initial prices and pool share\"\n                  }, void 0, false, void 0, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Prices and pool share\"\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), ' ', /*#__PURE__*/_jsxDEV(LightCard, {\n                padding: \"1rem\",\n                $borderRadius: \"20px\",\n                children: /*#__PURE__*/_jsxDEV(PoolPriceBar, {\n                  currencies: currencies,\n                  poolTokenPercentage: poolTokenPercentage,\n                  noLiquidity: noLiquidity,\n                  price: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 420,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this)\n          }, void 0, false), addIsUnsupported ? /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(ThemedText.DeprecatedMain, {\n              mb: \"4px\",\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Unsupported Asset\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this) : !account ? /*#__PURE__*/_jsxDEV(TraceEvent, {\n            events: [BrowserEvent.onClick],\n            name: EventName.CONNECT_WALLET_BUTTON_CLICKED,\n            properties: {\n              received_swap_quote: false\n            },\n            element: ElementName.CONNECT_WALLET_BUTTON,\n            children: /*#__PURE__*/_jsxDEV(ButtonLight, {\n              onClick: toggleWalletModal,\n              children: /*#__PURE__*/_jsxDEV(Trans, {\n                id: \"Connect Wallet\"\n              }, void 0, false, void 0, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(AutoColumn, {\n            gap: \"md\",\n            children: [(approvalA === ApprovalState.NOT_APPROVED || approvalA === ApprovalState.PENDING || approvalB === ApprovalState.NOT_APPROVED || approvalB === ApprovalState.PENDING) && isValid && /*#__PURE__*/_jsxDEV(RowBetween, {\n              children: [approvalA !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveACallback,\n                disabled: approvalA === ApprovalState.PENDING,\n                width: approvalB !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalA === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Approving {0}\",\n                    values: {\n                      0: (_currencies$Field$CUR11 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR11 === void 0 ? void 0 : _currencies$Field$CUR11.symbol\n                    }\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approve {0}\",\n                  values: {\n                    0: (_currencies$Field$CUR12 = currencies[Field.CURRENCY_A]) === null || _currencies$Field$CUR12 === void 0 ? void 0 : _currencies$Field$CUR12.symbol\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 25\n              }, this), approvalB !== ApprovalState.APPROVED && /*#__PURE__*/_jsxDEV(ButtonPrimary, {\n                onClick: approveBCallback,\n                disabled: approvalB === ApprovalState.PENDING,\n                width: approvalA !== ApprovalState.APPROVED ? '48%' : '100%',\n                children: approvalB === ApprovalState.PENDING ? /*#__PURE__*/_jsxDEV(Dots, {\n                  children: /*#__PURE__*/_jsxDEV(Trans, {\n                    id: \"Approving {0}\",\n                    values: {\n                      0: (_currencies$Field$CUR13 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR13 === void 0 ? void 0 : _currencies$Field$CUR13.symbol\n                    }\n                  }, void 0, false, void 0, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Approve {0}\",\n                  values: {\n                    0: (_currencies$Field$CUR14 = currencies[Field.CURRENCY_B]) === null || _currencies$Field$CUR14 === void 0 ? void 0 : _currencies$Field$CUR14.symbol\n                  }\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ButtonError, {\n              onClick: () => {\n                expertMode ? onAdd() : setShowConfirm(true);\n              },\n              disabled: !isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED,\n              error: !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B],\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: 20,\n                fontWeight: 500,\n                children: error !== null && error !== void 0 ? error : /*#__PURE__*/_jsxDEV(Trans, {\n                  id: \"Supply\"\n                }, void 0, false, void 0, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SwitchLocaleLink, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), !addIsUnsupported ? pair && !noLiquidity && pairState !== PairState.INVALID ? /*#__PURE__*/_jsxDEV(AutoColumn, {\n      style: {\n        minWidth: '20rem',\n        width: '100%',\n        maxWidth: '400px',\n        marginTop: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(MinimalPositionCard, {\n        showUnwrapped: oneCurrencyIsWETH,\n        pair: pair\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 11\n    }, this) : null : /*#__PURE__*/_jsxDEV(UnsupportedCurrencyFooter, {\n      show: addIsUnsupported,\n      currencies: [currencies.CURRENCY_A, currencies.CURRENCY_B]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(AddLiquidity, \"89qIsVmVsMu1xxHAI78zNw/Uiuo=\", false, function () {\n  return [useParams, useNavigate, useWeb3React, _useTheme, useCurrency, useCurrency, useToggleWalletModal, useIsExpertMode, useMintState, useDerivedMintInfo, useMintActionHandlers, useTransactionDeadline, useUserSlippageToleranceWithDefault, useV2RouterContract, useApproveCallback, useApproveCallback, useTransactionAdder, useLocation, useIsSwapUnsupported];\n});\n_c = AddLiquidity;\nvar _c;\n$RefreshReg$(_c, \"AddLiquidity\");","map":{"version":3,"names":["BigNumber","TraceEvent","BrowserEvent","ElementName","EventName","Percent","useWeb3React","sendEvent","UnsupportedCurrencyFooter","SwitchLocaleLink","useCallback","useState","Plus","useLocation","useNavigate","useParams","Text","ButtonError","ButtonLight","ButtonPrimary","BlueCard","LightCard","AutoColumn","ColumnCenter","CurrencyInputPanel","DoubleCurrencyLogo","AddRemoveTabs","MinimalPositionCard","Row","RowBetween","RowFlat","TransactionConfirmationModal","ConfirmationModalContent","ZERO_PERCENT","WRAPPED_NATIVE_CURRENCY","useCurrency","ApprovalState","useApproveCallback","useV2RouterContract","useIsSwapUnsupported","useTransactionDeadline","PairState","useToggleWalletModal","Field","useDerivedMintInfo","useMintActionHandlers","useMintState","useTransactionAdder","TransactionType","useIsExpertMode","useUserSlippageToleranceWithDefault","ThemedText","calculateGasMargin","calculateSlippageAmount","currencyId","maxAmountSpend","AppBody","Dots","Wrapper","ConfirmAddModalBottom","PoolPriceBar","DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE","AddLiquidity","currencyIdA","currencyIdB","navigate","account","chainId","provider","theme","useTheme","currencyA","currencyB","wrappedNativeCurrency","undefined","oneCurrencyIsWETH","Boolean","equals","toggleWalletModal","expertMode","independentField","typedValue","otherTypedValue","dependentField","currencies","pair","pairState","currencyBalances","parsedAmounts","price","noLiquidity","liquidityMinted","poolTokenPercentage","error","onFieldAInput","onFieldBInput","isValid","showConfirm","setShowConfirm","attemptingTxn","setAttemptingTxn","deadline","allowedSlippage","txHash","setTxHash","formattedAmounts","toSignificant","maxAmounts","CURRENCY_A","CURRENCY_B","reduce","accumulator","field","atMaxAmounts","equalTo","router","approvalA","approveACallback","address","approvalB","approveBCallback","addTransaction","onAdd","parsedAmountA","parsedAmountB","amountsMin","estimate","method","args","value","isNative","tokenBIsETH","estimateGas","addLiquidityETH","wrapped","quotient","toString","toHexString","from","addLiquidity","then","estimatedGasLimit","gasLimit","response","type","ADD_LIQUIDITY_V2_POOL","baseCurrencyId","expectedAmountBaseRaw","quoteCurrencyId","expectedAmountQuoteRaw","hash","category","action","label","symbol","join","catch","code","console","modalHeader","marginTop","modalBottom","pendingText","handleCurrencyASelect","newCurrencyIdA","handleCurrencyBSelect","newCurrencyIdB","handleDismissConfirmation","pathname","isCreate","includes","addIsUnsupported","liquidityToken","toExact","textSecondary","INVALID","onClick","CONNECT_WALLET_BUTTON_CLICKED","received_swap_quote","CONNECT_WALLET_BUTTON","NOT_APPROVED","PENDING","APPROVED","minWidth","width","maxWidth"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/pages/AddLiquidityV2/index.tsx"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport type { TransactionResponse } from '@ethersproject/providers'\nimport { Trans } from '@lingui/macro'\nimport { TraceEvent } from '@uniswap/analytics'\nimport { BrowserEvent, ElementName, EventName } from '@uniswap/analytics-events'\nimport { Currency, CurrencyAmount, Percent } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { sendEvent } from 'components/analytics'\nimport UnsupportedCurrencyFooter from 'components/swap/UnsupportedCurrencyFooter'\nimport { SwitchLocaleLink } from 'components/SwitchLocaleLink'\nimport { useCallback, useState } from 'react'\nimport { Plus } from 'react-feather'\nimport { useLocation, useNavigate, useParams } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport { useTheme } from 'styled-components/macro'\n\nimport { ButtonError, ButtonLight, ButtonPrimary } from '../../components/Button'\nimport { BlueCard, LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Column'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport DoubleCurrencyLogo from '../../components/DoubleLogo'\nimport { AddRemoveTabs } from '../../components/NavigationTabs'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween, RowFlat } from '../../components/Row'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport { ZERO_PERCENT } from '../../constants/misc'\nimport { WRAPPED_NATIVE_CURRENCY } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport { useV2RouterContract } from '../../hooks/useContract'\nimport { useIsSwapUnsupported } from '../../hooks/useIsSwapUnsupported'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { PairState } from '../../hooks/useV2Pairs'\nimport { useToggleWalletModal } from '../../state/application/hooks'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { TransactionType } from '../../state/transactions/types'\nimport { useIsExpertMode, useUserSlippageToleranceWithDefault } from '../../state/user/hooks'\nimport { ThemedText } from '../../theme'\nimport { calculateGasMargin } from '../../utils/calculateGasMargin'\nimport { calculateSlippageAmount } from '../../utils/calculateSlippageAmount'\nimport { currencyId } from '../../utils/currencyId'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport AppBody from '../AppBody'\nimport { Dots, Wrapper } from '../Pool/styleds'\nimport { ConfirmAddModalBottom } from './ConfirmAddModalBottom'\nimport { PoolPriceBar } from './PoolPriceBar'\n\nconst DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE = new Percent(50, 10_000)\n\nexport default function AddLiquidity() {\n  const { currencyIdA, currencyIdB } = useParams<{ currencyIdA?: string; currencyIdB?: string }>()\n  const navigate = useNavigate()\n  const { account, chainId, provider } = useWeb3React()\n\n  const theme = useTheme()\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const wrappedNativeCurrency = chainId ? WRAPPED_NATIVE_CURRENCY[chainId] : undefined\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      wrappedNativeCurrency &&\n      ((currencyA && currencyA.equals(wrappedNativeCurrency)) || (currencyB && currencyB.equals(wrappedNativeCurrency)))\n  )\n\n  const toggleWalletModal = useToggleWalletModal() // toggle wallet when disconnected\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const allowedSlippage = useUserSlippageToleranceWithDefault(DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE) // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {}\n  )\n\n  const atMaxAmounts: { [field in Field]?: CurrencyAmount<Currency> } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {}\n  )\n\n  const router = useV2RouterContract()\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], router?.address)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], router?.address)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !provider || !account || !router) return\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? ZERO_PERCENT : allowedSlippage)[0],\n    }\n\n    let estimate,\n      method: (...args: any) => Promise<TransactionResponse>,\n      args: Array<string | string[] | number>,\n      value: BigNumber | null\n    if (currencyA.isNative || currencyB.isNative) {\n      const tokenBIsETH = currencyB.isNative\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        (tokenBIsETH ? currencyA : currencyB)?.wrapped?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).quotient.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).quotient.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        currencyA?.wrapped?.address ?? '',\n        currencyB?.wrapped?.address ?? '',\n        parsedAmountA.quotient.toString(),\n        parsedAmountB.quotient.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            type: TransactionType.ADD_LIQUIDITY_V2_POOL,\n            baseCurrencyId: currencyId(currencyA),\n            expectedAmountBaseRaw: parsedAmounts[Field.CURRENCY_A]?.quotient.toString() ?? '0',\n            quoteCurrencyId: currencyId(currencyB),\n            expectedAmountQuoteRaw: parsedAmounts[Field.CURRENCY_B]?.quotient.toString() ?? '0',\n          })\n\n          setTxHash(response.hash)\n\n          sendEvent({\n            category: 'Liquidity',\n            action: 'Add',\n            label: [currencies[Field.CURRENCY_A]?.symbol, currencies[Field.CURRENCY_B]?.symbol].join('/'),\n          })\n        })\n      )\n      .catch((error) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (error?.code !== 4001) {\n          console.error(error)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <AutoColumn gap=\"20px\">\n        <LightCard mt=\"20px\" $borderRadius=\"20px\">\n          <RowFlat>\n            <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n              {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol}\n            </Text>\n            <DoubleCurrencyLogo\n              currency0={currencies[Field.CURRENCY_A]}\n              currency1={currencies[Field.CURRENCY_B]}\n              size={30}\n            />\n          </RowFlat>\n        </LightCard>\n      </AutoColumn>\n    ) : (\n      <AutoColumn gap=\"20px\">\n        <RowFlat style={{ marginTop: '20px' }}>\n          <Text fontSize=\"48px\" fontWeight={500} lineHeight=\"42px\" marginRight={10}>\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </RowFlat>\n        <Row>\n          <Text fontSize=\"24px\">\n            {currencies[Field.CURRENCY_A]?.symbol + '/' + currencies[Field.CURRENCY_B]?.symbol + ' Pool Tokens'}\n          </Text>\n        </Row>\n        <ThemedText.DeprecatedItalic fontSize={12} textAlign=\"left\" padding=\"8px 0 0 0 \">\n          <Trans>\n            Output is estimated. If the price changes by more than {allowedSlippage.toSignificant(4)}% your transaction\n            will revert.\n          </Trans>\n        </ThemedText.DeprecatedItalic>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = (\n    <Trans>\n      Supplying {parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)} {currencies[Field.CURRENCY_A]?.symbol} and{' '}\n      {parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)} {currencies[Field.CURRENCY_B]?.symbol}\n    </Trans>\n  )\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA)\n      if (newCurrencyIdA === currencyIdB) {\n        navigate(`/add/v2/${currencyIdB}/${currencyIdA}`)\n      } else {\n        navigate(`/add/v2/${newCurrencyIdA}/${currencyIdB}`)\n      }\n    },\n    [currencyIdB, navigate, currencyIdA]\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          navigate(`/add/v2/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          navigate(`/add/v2/${newCurrencyIdB}`)\n        }\n      } else {\n        navigate(`/add/v2/${currencyIdA ? currencyIdA : 'ETH'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, navigate, currencyIdB]\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    setShowConfirm(false)\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const { pathname } = useLocation()\n  const isCreate = pathname.includes('/create')\n\n  const addIsUnsupported = useIsSwapUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  return (\n    <>\n      <AppBody>\n        <AddRemoveTabs creating={isCreate} adding={true} defaultSlippage={DEFAULT_ADD_V2_SLIPPAGE_TOLERANCE} />\n        <Wrapper>\n          <TransactionConfirmationModal\n            isOpen={showConfirm}\n            onDismiss={handleDismissConfirmation}\n            attemptingTxn={attemptingTxn}\n            hash={txHash}\n            content={() => (\n              <ConfirmationModalContent\n                title={noLiquidity ? <Trans>You are creating a pool</Trans> : <Trans>You will receive</Trans>}\n                onDismiss={handleDismissConfirmation}\n                topContent={modalHeader}\n                bottomContent={modalBottom}\n              />\n            )}\n            pendingText={pendingText}\n            currencyToAdd={pair?.liquidityToken}\n          />\n          <AutoColumn gap=\"20px\">\n            {noLiquidity ||\n              (isCreate ? (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={600} color=\"accentAction\">\n                        <Trans>You are the first liquidity provider.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={400} color=\"accentAction\">\n                        <Trans>The ratio of tokens you add will set the price of this pool.</Trans>\n                      </ThemedText.DeprecatedLink>\n                      <ThemedText.DeprecatedLink fontWeight={400} color=\"accentAction\">\n                        <Trans>Once you are happy with the rate click supply to review.</Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ) : (\n                <ColumnCenter>\n                  <BlueCard>\n                    <AutoColumn gap=\"10px\">\n                      <ThemedText.DeprecatedLink fontWeight={400} color=\"accentAction\">\n                        <Trans>\n                          <b>\n                            <Trans>Tip:</Trans>\n                          </b>{' '}\n                          When you add liquidity, you will receive pool tokens representing your position. These tokens\n                          automatically earn fees proportional to your share of the pool, and can be redeemed at any\n                          time.\n                        </Trans>\n                      </ThemedText.DeprecatedLink>\n                    </AutoColumn>\n                  </BlueCard>\n                </ColumnCenter>\n              ))}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A] ?? null}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <Plus size=\"16\" color={theme.textSecondary} />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B] ?? null}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" $borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <ThemedText.DeprecatedSubHeader fontWeight={500} fontSize={14}>\n                      {noLiquidity ? (\n                        <Trans>Initial prices and pool share</Trans>\n                      ) : (\n                        <Trans>Prices and pool share</Trans>\n                      )}\n                    </ThemedText.DeprecatedSubHeader>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" $borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <ButtonPrimary disabled={true}>\n                <ThemedText.DeprecatedMain mb=\"4px\">\n                  <Trans>Unsupported Asset</Trans>\n                </ThemedText.DeprecatedMain>\n              </ButtonPrimary>\n            ) : !account ? (\n              <TraceEvent\n                events={[BrowserEvent.onClick]}\n                name={EventName.CONNECT_WALLET_BUTTON_CLICKED}\n                properties={{ received_swap_quote: false }}\n                element={ElementName.CONNECT_WALLET_BUTTON}\n              >\n                <ButtonLight onClick={toggleWalletModal}>\n                  <Trans>Connect Wallet</Trans>\n                </ButtonLight>\n              </TraceEvent>\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveACallback}\n                          disabled={approvalA === ApprovalState.PENDING}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_A]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <ButtonPrimary\n                          onClick={approveBCallback}\n                          disabled={approvalB === ApprovalState.PENDING}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>\n                              <Trans>Approving {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                            </Dots>\n                          ) : (\n                            <Trans>Approve {currencies[Field.CURRENCY_B]?.symbol}</Trans>\n                          )}\n                        </ButtonPrimary>\n                      )}\n                    </RowBetween>\n                  )}\n                <ButtonError\n                  onClick={() => {\n                    expertMode ? onAdd() : setShowConfirm(true)\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                  error={!isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {error ?? <Trans>Supply</Trans>}\n                  </Text>\n                </ButtonError>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n      <SwitchLocaleLink />\n\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter\n          show={addIsUnsupported}\n          currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]}\n        />\n      )}\n    </>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}