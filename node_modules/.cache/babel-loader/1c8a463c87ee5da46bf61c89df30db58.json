{"ast":null,"code":"import{CurrencyAmount}from'@uniswap/sdk-core';import{useSingleCallResult}from'lib/hooks/multicall';import{useMemo}from'react';import{useTokenContract}from'./useContract';// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token){var _useSingleCallResult,_useSingleCallResult$,_useSingleCallResult$2;var contract=useTokenContract((token===null||token===void 0?void 0:token.isToken)?token.address:undefined,false);var totalSupplyStr=(_useSingleCallResult=useSingleCallResult(contract,'totalSupply'))===null||_useSingleCallResult===void 0?void 0:(_useSingleCallResult$=_useSingleCallResult.result)===null||_useSingleCallResult$===void 0?void 0:(_useSingleCallResult$2=_useSingleCallResult$[0])===null||_useSingleCallResult$2===void 0?void 0:_useSingleCallResult$2.toString();return useMemo(function(){return(token===null||token===void 0?void 0:token.isToken)&&totalSupplyStr?CurrencyAmount.fromRawAmount(token,totalSupplyStr):undefined;},[token,totalSupplyStr]);}","map":{"version":3,"names":["CurrencyAmount","useSingleCallResult","useMemo","useTokenContract","useTotalSupply","token","contract","isToken","address","undefined","totalSupplyStr","result","toString","fromRawAmount"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useTotalSupply.ts"],"sourcesContent":["import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n"],"mappings":"AAAA,OAAmBA,cAAc,KAAe,mBAAmB,CACnE,OAASC,mBAAmB,KAAQ,qBAAqB,CACzD,OAASC,OAAO,KAAQ,OAAO,CAE/B,OAASC,gBAAgB,KAAQ,eAAe,CAEhD;AACA;AACA,MAAO,SAASC,eAAc,CAACC,KAAgB,CAAqC,uEAClF,GAAMC,SAAQ,CAAGH,gBAAgB,CAAC,CAAAE,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEE,OAAO,EAAGF,KAAK,CAACG,OAAO,CAAGC,SAAS,CAAE,KAAK,CAAC,CAEpF,GAAMC,eAAkC,uBAAGT,mBAAmB,CAACK,QAAQ,CAAE,aAAa,CAAC,sEAA5C,qBAA8CK,MAAM,wEAApD,sBAAuD,CAAC,CAAC,iDAAzD,uBAA2DC,QAAQ,EAAE,CAEhH,MAAOV,QAAO,CACZ,iBAAO,CAAAG,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAEE,OAAO,GAAIG,cAAc,CAAGV,cAAc,CAACa,aAAa,CAACR,KAAK,CAAEK,cAAc,CAAC,CAAGD,SAAS,EAAC,CAC1G,CAACJ,KAAK,CAAEK,cAAc,CAAC,CACxB,CACH"},"metadata":{},"sourceType":"module"}