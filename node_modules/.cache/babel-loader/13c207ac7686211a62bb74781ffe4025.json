{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{BigNumber}from'@ethersproject/bignumber';import{hexZeroPad}from'@ethersproject/bytes';import{namehash}from'@ethersproject/hash';import{useWeb3React}from'@web3-react/core';import{useSingleCallResult}from'lib/hooks/multicall';import uriToHttp from'lib/utils/uriToHttp';import{useEffect,useMemo,useState}from'react';import{safeNamehash}from'utils/safeNamehash';import{isAddress}from'../utils';import isZero from'../utils/isZero';import{useENSRegistrarContract,useENSResolverContract,useERC721Contract,useERC1155Contract}from'./useContract';import useDebounce from'./useDebounce';import useENSName from'./useENSName';/**\n * Returns the ENS avatar URI, if available.\n * Spec: https://gist.github.com/Arachnid/9db60bd75277969ee1689c8742b75182.\n */export default function useENSAvatar(address){var enforceOwnership=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var debouncedAddress=useDebounce(address,200);var node=useMemo(function(){if(!debouncedAddress||!isAddress(debouncedAddress))return undefined;return namehash(\"\".concat(debouncedAddress.toLowerCase().substr(2),\".addr.reverse\"));},[debouncedAddress]);var addressAvatar=useAvatarFromNode(node);var ENSName=useENSName(address).ENSName;var nameAvatar=useAvatarFromNode(ENSName===null?undefined:safeNamehash(ENSName));var avatar=addressAvatar.avatar||nameAvatar.avatar;var nftAvatar=useAvatarFromNFT(avatar,enforceOwnership);avatar=nftAvatar.avatar||avatar;var http=avatar&&uriToHttp(avatar)[0];var changed=debouncedAddress!==address;return useMemo(function(){return{avatar:changed?null:http!==null&&http!==void 0?http:null,loading:changed||addressAvatar.loading||nameAvatar.loading||nftAvatar.loading};},[addressAvatar.loading,changed,http,nameAvatar.loading,nftAvatar.loading]);}function useAvatarFromNode(node){var _resolverAddress$resu;var nodeArgument=useMemo(function(){return[node];},[node]);var textArgument=useMemo(function(){return[node,'avatar'];},[node]);var registrarContract=useENSRegistrarContract(false);var resolverAddress=useSingleCallResult(registrarContract,'resolver',nodeArgument);var resolverAddressResult=(_resolverAddress$resu=resolverAddress.result)===null||_resolverAddress$resu===void 0?void 0:_resolverAddress$resu[0];var resolverContract=useENSResolverContract(resolverAddressResult&&!isZero(resolverAddressResult)?resolverAddressResult:undefined,false);var avatar=useSingleCallResult(resolverContract,'text',textArgument);return useMemo(function(){var _avatar$result;return{avatar:(_avatar$result=avatar.result)===null||_avatar$result===void 0?void 0:_avatar$result[0],loading:resolverAddress.loading||avatar.loading};},[avatar.loading,avatar.result,resolverAddress.loading]);}function useAvatarFromNFT(){var _parts$1$split,_parts$,_parts$2$split,_parts$2;var nftUri=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var enforceOwnership=arguments.length>1?arguments[1]:undefined;var parts=nftUri.toLowerCase().split(':');var protocol=parts[0];// ignore the chain from eip155\n// TODO: when we are able, pull only from the specified chain\nvar _ref=(_parts$1$split=(_parts$=parts[1])===null||_parts$===void 0?void 0:_parts$.split('/'))!==null&&_parts$1$split!==void 0?_parts$1$split:[],_ref2=_slicedToArray(_ref,2),erc=_ref2[1];var _ref3=(_parts$2$split=(_parts$2=parts[2])===null||_parts$2===void 0?void 0:_parts$2.split('/'))!==null&&_parts$2$split!==void 0?_parts$2$split:[],_ref4=_slicedToArray(_ref3,2),contractAddress=_ref4[0],id=_ref4[1];var isERC721=protocol==='eip155'&&erc==='erc721';var isERC1155=protocol==='eip155'&&erc==='erc1155';var erc721=useERC721Uri(isERC721?contractAddress:undefined,id,enforceOwnership);var erc1155=useERC1155Uri(isERC1155?contractAddress:undefined,id,enforceOwnership);var uri=erc721.uri||erc1155.uri;var http=uri&&uriToHttp(uri)[0];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),loading=_useState2[0],setLoading=_useState2[1];var _useState3=useState(undefined),_useState4=_slicedToArray(_useState3,2),avatar=_useState4[0],setAvatar=_useState4[1];useEffect(function(){setAvatar(undefined);if(http){setLoading(true);fetch(http).then(function(res){return res.json();}).then(function(_ref5){var image=_ref5.image;setAvatar(image);}).catch(function(e){return console.warn(e);}).finally(function(){setLoading(false);});}},[http]);return useMemo(function(){return{avatar:avatar,loading:erc721.loading||erc1155.loading||loading};},[avatar,erc1155.loading,erc721.loading,loading]);}function useERC721Uri(contractAddress,id,enforceOwnership){var idArgument=useMemo(function(){return[id];},[id]);var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var contract=useERC721Contract(contractAddress);var owner=useSingleCallResult(contract,'ownerOf',idArgument);var uri=useSingleCallResult(contract,'tokenURI',idArgument);return useMemo(function(){var _owner$result,_uri$result;return{uri:!enforceOwnership||account===((_owner$result=owner.result)===null||_owner$result===void 0?void 0:_owner$result[0])?(_uri$result=uri.result)===null||_uri$result===void 0?void 0:_uri$result[0]:undefined,loading:owner.loading||uri.loading};},[account,enforceOwnership,owner.loading,owner.result,uri.loading,uri.result]);}function useERC1155Uri(contractAddress,id,enforceOwnership){var _useWeb3React2=useWeb3React(),account=_useWeb3React2.account;var idArgument=useMemo(function(){return[id];},[id]);var accountArgument=useMemo(function(){return[account||'',id];},[account,id]);var contract=useERC1155Contract(contractAddress);var balance=useSingleCallResult(contract,'balanceOf',accountArgument);var uri=useSingleCallResult(contract,'uri',idArgument);// ERC-1155 allows a generic {id} in the URL, so prepare to replace if relevant,\n//   in lowercase hexadecimal (with no 0x prefix) and leading zero padded to 64 hex characters.\nvar idHex=id?hexZeroPad(BigNumber.from(id).toHexString(),32).substring(2):id;return useMemo(function(){var _balance$result,_uri$result2,_uri$result2$;return{uri:!enforceOwnership||((_balance$result=balance.result)===null||_balance$result===void 0?void 0:_balance$result[0])>0?(_uri$result2=uri.result)===null||_uri$result2===void 0?void 0:(_uri$result2$=_uri$result2[0])===null||_uri$result2$===void 0?void 0:_uri$result2$.replaceAll('{id}',idHex):undefined,loading:balance.loading||uri.loading};},[balance.loading,balance.result,enforceOwnership,uri.loading,uri.result,idHex]);}","map":{"version":3,"names":["BigNumber","hexZeroPad","namehash","useWeb3React","useSingleCallResult","uriToHttp","useEffect","useMemo","useState","safeNamehash","isAddress","isZero","useENSRegistrarContract","useENSResolverContract","useERC721Contract","useERC1155Contract","useDebounce","useENSName","useENSAvatar","address","enforceOwnership","debouncedAddress","node","undefined","toLowerCase","substr","addressAvatar","useAvatarFromNode","ENSName","nameAvatar","avatar","nftAvatar","useAvatarFromNFT","http","changed","loading","nodeArgument","textArgument","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","nftUri","parts","split","protocol","erc","contractAddress","id","isERC721","isERC1155","erc721","useERC721Uri","erc1155","useERC1155Uri","uri","setLoading","setAvatar","fetch","then","res","json","image","catch","e","console","warn","finally","idArgument","account","contract","owner","accountArgument","balance","idHex","from","toHexString","substring","replaceAll"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useENSAvatar.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { hexZeroPad } from '@ethersproject/bytes'\nimport { namehash } from '@ethersproject/hash'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport uriToHttp from 'lib/utils/uriToHttp'\nimport { useEffect, useMemo, useState } from 'react'\nimport { safeNamehash } from 'utils/safeNamehash'\n\nimport { isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract, useERC721Contract, useERC1155Contract } from './useContract'\nimport useDebounce from './useDebounce'\nimport useENSName from './useENSName'\n\n/**\n * Returns the ENS avatar URI, if available.\n * Spec: https://gist.github.com/Arachnid/9db60bd75277969ee1689c8742b75182.\n */\nexport default function useENSAvatar(\n  address?: string,\n  enforceOwnership = true\n): { avatar: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const node = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return undefined\n    return namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)\n  }, [debouncedAddress])\n\n  const addressAvatar = useAvatarFromNode(node)\n  const ENSName = useENSName(address).ENSName\n  const nameAvatar = useAvatarFromNode(ENSName === null ? undefined : safeNamehash(ENSName))\n  let avatar = addressAvatar.avatar || nameAvatar.avatar\n\n  const nftAvatar = useAvatarFromNFT(avatar, enforceOwnership)\n  avatar = nftAvatar.avatar || avatar\n\n  const http = avatar && uriToHttp(avatar)[0]\n\n  const changed = debouncedAddress !== address\n  return useMemo(\n    () => ({\n      avatar: changed ? null : http ?? null,\n      loading: changed || addressAvatar.loading || nameAvatar.loading || nftAvatar.loading,\n    }),\n    [addressAvatar.loading, changed, http, nameAvatar.loading, nftAvatar.loading]\n  )\n}\n\nfunction useAvatarFromNode(node?: string): { avatar?: string; loading: boolean } {\n  const nodeArgument = useMemo(() => [node], [node])\n  const textArgument = useMemo(() => [node, 'avatar'], [node])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', nodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const avatar = useSingleCallResult(resolverContract, 'text', textArgument)\n\n  return useMemo(\n    () => ({\n      avatar: avatar.result?.[0],\n      loading: resolverAddress.loading || avatar.loading,\n    }),\n    [avatar.loading, avatar.result, resolverAddress.loading]\n  )\n}\n\nfunction useAvatarFromNFT(nftUri = '', enforceOwnership: boolean): { avatar?: string; loading: boolean } {\n  const parts = nftUri.toLowerCase().split(':')\n  const protocol = parts[0]\n  // ignore the chain from eip155\n  // TODO: when we are able, pull only from the specified chain\n  const [, erc] = parts[1]?.split('/') ?? []\n  const [contractAddress, id] = parts[2]?.split('/') ?? []\n  const isERC721 = protocol === 'eip155' && erc === 'erc721'\n  const isERC1155 = protocol === 'eip155' && erc === 'erc1155'\n  const erc721 = useERC721Uri(isERC721 ? contractAddress : undefined, id, enforceOwnership)\n  const erc1155 = useERC1155Uri(isERC1155 ? contractAddress : undefined, id, enforceOwnership)\n  const uri = erc721.uri || erc1155.uri\n  const http = uri && uriToHttp(uri)[0]\n\n  const [loading, setLoading] = useState(false)\n  const [avatar, setAvatar] = useState(undefined)\n  useEffect(() => {\n    setAvatar(undefined)\n    if (http) {\n      setLoading(true)\n      fetch(http)\n        .then((res) => res.json())\n        .then(({ image }) => {\n          setAvatar(image)\n        })\n        .catch((e) => console.warn(e))\n        .finally(() => {\n          setLoading(false)\n        })\n    }\n  }, [http])\n\n  return useMemo(\n    () => ({ avatar, loading: erc721.loading || erc1155.loading || loading }),\n    [avatar, erc1155.loading, erc721.loading, loading]\n  )\n}\n\nfunction useERC721Uri(\n  contractAddress: string | undefined,\n  id: string | undefined,\n  enforceOwnership: boolean\n): { uri?: string; loading: boolean } {\n  const idArgument = useMemo(() => [id], [id])\n  const { account } = useWeb3React()\n  const contract = useERC721Contract(contractAddress)\n  const owner = useSingleCallResult(contract, 'ownerOf', idArgument)\n  const uri = useSingleCallResult(contract, 'tokenURI', idArgument)\n  return useMemo(\n    () => ({\n      uri: !enforceOwnership || account === owner.result?.[0] ? uri.result?.[0] : undefined,\n      loading: owner.loading || uri.loading,\n    }),\n    [account, enforceOwnership, owner.loading, owner.result, uri.loading, uri.result]\n  )\n}\n\nfunction useERC1155Uri(\n  contractAddress: string | undefined,\n  id: string | undefined,\n  enforceOwnership: boolean\n): { uri?: string; loading: boolean } {\n  const { account } = useWeb3React()\n  const idArgument = useMemo(() => [id], [id])\n  const accountArgument = useMemo(() => [account || '', id], [account, id])\n  const contract = useERC1155Contract(contractAddress)\n  const balance = useSingleCallResult(contract, 'balanceOf', accountArgument)\n  const uri = useSingleCallResult(contract, 'uri', idArgument)\n  // ERC-1155 allows a generic {id} in the URL, so prepare to replace if relevant,\n  //   in lowercase hexadecimal (with no 0x prefix) and leading zero padded to 64 hex characters.\n  const idHex = id ? hexZeroPad(BigNumber.from(id).toHexString(), 32).substring(2) : id\n  return useMemo(\n    () => ({\n      uri: !enforceOwnership || balance.result?.[0] > 0 ? uri.result?.[0]?.replaceAll('{id}', idHex) : undefined,\n      loading: balance.loading || uri.loading,\n    }),\n    [balance.loading, balance.result, enforceOwnership, uri.loading, uri.result, idHex]\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}