{"ast":null,"code":"import store from 'state';\nimport { DEFAULT_LIST_OF_LISTS } from './lists';\nclass TokenLogoLookupTable {\n  constructor() {\n    this.dict = {};\n    this.initialized = false;\n  }\n  initialize() {\n    const dict = {};\n    DEFAULT_LIST_OF_LISTS.forEach(list => {\n      var _store$getState$lists;\n      return (_store$getState$lists = store.getState().lists.byUrl[list].current) === null || _store$getState$lists === void 0 ? void 0 : _store$getState$lists.tokens.forEach(token => {\n        if (token.logoURI) {\n          const lowercaseAddress = token.address.toLowerCase();\n          const currentEntry = dict[lowercaseAddress];\n          if (currentEntry) {\n            currentEntry.push(token.logoURI);\n          } else {\n            dict[lowercaseAddress] = [token.logoURI];\n          }\n        }\n      });\n    });\n    this.dict = dict;\n    this.initialized = true;\n  }\n  getIcons(address) {\n    if (!address) return undefined;\n    if (!this.initialized) {\n      this.initialize();\n    }\n    return this.dict[address.toLowerCase()];\n  }\n}\nexport default new TokenLogoLookupTable();","map":{"version":3,"names":["store","DEFAULT_LIST_OF_LISTS","TokenLogoLookupTable","dict","initialized","initialize","forEach","list","getState","lists","byUrl","current","tokens","token","logoURI","lowercaseAddress","address","toLowerCase","currentEntry","push","getIcons","undefined"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/constants/TokenLogoLookupTable.ts"],"sourcesContent":["import store from 'state'\n\nimport { DEFAULT_LIST_OF_LISTS } from './lists'\n\nclass TokenLogoLookupTable {\n  private dict: { [key: string]: string[] | undefined } = {}\n  private initialized = false\n\n  initialize() {\n    const dict: { [key: string]: string[] | undefined } = {}\n\n    DEFAULT_LIST_OF_LISTS.forEach((list) =>\n      store.getState().lists.byUrl[list].current?.tokens.forEach((token) => {\n        if (token.logoURI) {\n          const lowercaseAddress = token.address.toLowerCase()\n          const currentEntry = dict[lowercaseAddress]\n          if (currentEntry) {\n            currentEntry.push(token.logoURI)\n          } else {\n            dict[lowercaseAddress] = [token.logoURI]\n          }\n        }\n      })\n    )\n    this.dict = dict\n    this.initialized = true\n  }\n  getIcons(address?: string | null) {\n    if (!address) return undefined\n\n    if (!this.initialized) {\n      this.initialize()\n    }\n    return this.dict[address.toLowerCase()]\n  }\n}\n\nexport default new TokenLogoLookupTable()\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,qBAAqB,QAAQ,SAAS;AAE/C,MAAMC,oBAAoB,CAAC;EAAA;IAAA,KACjBC,IAAI,GAA4C,CAAC,CAAC;IAAA,KAClDC,WAAW,GAAG,KAAK;EAAA;EAE3BC,UAAU,GAAG;IACX,MAAMF,IAA6C,GAAG,CAAC,CAAC;IAExDF,qBAAqB,CAACK,OAAO,CAAEC,IAAI;MAAA;MAAA,gCACjCP,KAAK,CAACQ,QAAQ,EAAE,CAACC,KAAK,CAACC,KAAK,CAACH,IAAI,CAAC,CAACI,OAAO,0DAA1C,sBAA4CC,MAAM,CAACN,OAAO,CAAEO,KAAK,IAAK;QACpE,IAAIA,KAAK,CAACC,OAAO,EAAE;UACjB,MAAMC,gBAAgB,GAAGF,KAAK,CAACG,OAAO,CAACC,WAAW,EAAE;UACpD,MAAMC,YAAY,GAAGf,IAAI,CAACY,gBAAgB,CAAC;UAC3C,IAAIG,YAAY,EAAE;YAChBA,YAAY,CAACC,IAAI,CAACN,KAAK,CAACC,OAAO,CAAC;UAClC,CAAC,MAAM;YACLX,IAAI,CAACY,gBAAgB,CAAC,GAAG,CAACF,KAAK,CAACC,OAAO,CAAC;UAC1C;QACF;MACF,CAAC,CAAC;IAAA,EACH;IACD,IAAI,CAACX,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,WAAW,GAAG,IAAI;EACzB;EACAgB,QAAQ,CAACJ,OAAuB,EAAE;IAChC,IAAI,CAACA,OAAO,EAAE,OAAOK,SAAS;IAE9B,IAAI,CAAC,IAAI,CAACjB,WAAW,EAAE;MACrB,IAAI,CAACC,UAAU,EAAE;IACnB;IACA,OAAO,IAAI,CAACF,IAAI,CAACa,OAAO,CAACC,WAAW,EAAE,CAAC;EACzC;AACF;AAEA,eAAe,IAAIf,oBAAoB,EAAE"},"metadata":{},"sourceType":"module"}