{"ast":null,"code":"export const logListing = async (listings, userAddress) => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/logGenieList`;\n  const listingsConsolidated = listings.map(el => ({\n    ...el,\n    marketplaces: []\n  }));\n  const marketplacesById = {};\n  const listingsWithMarketsConsolidated = listingsConsolidated.reduce((uniqueListings, curr) => {\n    const key = `${curr.asset.asset_contract.address}-${curr.asset.tokenId}`;\n    if (marketplacesById[key]) {\n      marketplacesById[key].push(curr.marketplace);\n    } else {\n      marketplacesById[key] = [curr.marketplace];\n    }\n    if (!uniqueListings.some(listing => `${listing.asset.asset_contract.address}-${listing.asset.tokenId}` === key)) {\n      curr.marketplaces = marketplacesById[key];\n      uniqueListings.push(curr);\n    }\n    return uniqueListings;\n  }, []);\n  const payload = {\n    listings: listingsWithMarketsConsolidated,\n    userAddress\n  };\n  const r = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  return r.status === 200;\n};","map":{"version":3,"names":["logListing","listings","userAddress","url","process","env","REACT_APP_TEMP_API_URL","listingsConsolidated","map","el","marketplaces","marketplacesById","listingsWithMarketsConsolidated","reduce","uniqueListings","curr","key","asset","asset_contract","address","tokenId","push","marketplace","some","listing","payload","r","fetch","method","headers","body","JSON","stringify","status"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/genie/logListing.ts"],"sourcesContent":["import { ListingMarket, ListingRow } from 'nft/types'\n\ninterface Listing extends ListingRow {\n  marketplaces: ListingMarket[]\n}\n\nexport const logListing = async (listings: ListingRow[], userAddress: string): Promise<boolean> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/logGenieList`\n  const listingsConsolidated: Listing[] = listings.map((el) => ({ ...el, marketplaces: [] }))\n  const marketplacesById: Record<string, ListingMarket[]> = {}\n  const listingsWithMarketsConsolidated = listingsConsolidated.reduce((uniqueListings, curr) => {\n    const key = `${curr.asset.asset_contract.address}-${curr.asset.tokenId}`\n    if (marketplacesById[key]) {\n      marketplacesById[key].push(curr.marketplace)\n    } else {\n      marketplacesById[key] = [curr.marketplace]\n    }\n    if (!uniqueListings.some((listing) => `${listing.asset.asset_contract.address}-${listing.asset.tokenId}` === key)) {\n      curr.marketplaces = marketplacesById[key]\n      uniqueListings.push(curr)\n    }\n    return uniqueListings\n  }, [] as Listing[])\n  const payload = {\n    listings: listingsWithMarketsConsolidated,\n    userAddress,\n  }\n  const r = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  })\n  return r.status === 200\n}\n"],"mappings":"AAMA,OAAO,MAAMA,UAAU,GAAG,OAAOC,QAAsB,EAAEC,WAAmB,KAAuB;EACjG,MAAMC,GAAG,GAAI,GAAEC,OAAO,CAACC,GAAG,CAACC,sBAAuB,mBAAkB;EACpE,MAAMC,oBAA+B,GAAGN,QAAQ,CAACO,GAAG,CAAEC,EAAE,KAAM;IAAE,GAAGA,EAAE;IAAEC,YAAY,EAAE;EAAG,CAAC,CAAC,CAAC;EAC3F,MAAMC,gBAAiD,GAAG,CAAC,CAAC;EAC5D,MAAMC,+BAA+B,GAAGL,oBAAoB,CAACM,MAAM,CAAC,CAACC,cAAc,EAAEC,IAAI,KAAK;IAC5F,MAAMC,GAAG,GAAI,GAAED,IAAI,CAACE,KAAK,CAACC,cAAc,CAACC,OAAQ,IAAGJ,IAAI,CAACE,KAAK,CAACG,OAAQ,EAAC;IACxE,IAAIT,gBAAgB,CAACK,GAAG,CAAC,EAAE;MACzBL,gBAAgB,CAACK,GAAG,CAAC,CAACK,IAAI,CAACN,IAAI,CAACO,WAAW,CAAC;IAC9C,CAAC,MAAM;MACLX,gBAAgB,CAACK,GAAG,CAAC,GAAG,CAACD,IAAI,CAACO,WAAW,CAAC;IAC5C;IACA,IAAI,CAACR,cAAc,CAACS,IAAI,CAAEC,OAAO,IAAM,GAAEA,OAAO,CAACP,KAAK,CAACC,cAAc,CAACC,OAAQ,IAAGK,OAAO,CAACP,KAAK,CAACG,OAAQ,EAAC,KAAKJ,GAAG,CAAC,EAAE;MACjHD,IAAI,CAACL,YAAY,GAAGC,gBAAgB,CAACK,GAAG,CAAC;MACzCF,cAAc,CAACO,IAAI,CAACN,IAAI,CAAC;IAC3B;IACA,OAAOD,cAAc;EACvB,CAAC,EAAE,EAAE,CAAc;EACnB,MAAMW,OAAO,GAAG;IACdxB,QAAQ,EAAEW,+BAA+B;IACzCV;EACF,CAAC;EACD,MAAMwB,CAAC,GAAG,MAAMC,KAAK,CAACxB,GAAG,EAAE;IACzByB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAC9B,CAAC,CAAC;EACF,OAAOC,CAAC,CAACO,MAAM,KAAK,GAAG;AACzB,CAAC"},"metadata":{},"sourceType":"module"}