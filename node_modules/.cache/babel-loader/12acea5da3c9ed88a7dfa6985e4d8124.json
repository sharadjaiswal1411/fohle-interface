{"ast":null,"code":"import { BigNumber } from '@ethersproject/bignumber';\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks';\nimport { BagItemStatus, BagStatus } from 'nft/types';\nimport { v4 as uuidv4 } from 'uuid';\nimport create from 'zustand';\nimport { devtools } from 'zustand/middleware';\nexport const useBag = create()(devtools((set, get) => ({\n  bagStatus: BagStatus.ADDING_TO_BAG,\n  bagExpanded: false,\n  bagManuallyClosed: false,\n  setBagStatus: newBagStatus => set(() => ({\n    bagStatus: newBagStatus\n  })),\n  markAssetAsReviewed: (asset, toKeep) => set(_ref => {\n    let {\n      itemsInBag\n    } = _ref;\n    if (itemsInBag.length === 0) return {\n      itemsInBag: []\n    };\n    const itemsInBagCopy = [...itemsInBag];\n    const index = itemsInBagCopy.findIndex(item => item.asset.id === asset.id);\n    if (!toKeep && index !== -1) itemsInBagCopy.splice(index, 1);else if (index !== -1) {\n      itemsInBagCopy[index].status = BagItemStatus.REVIEWED;\n    }\n    return {\n      itemsInBag: itemsInBagCopy\n    };\n  }),\n  didOpenUnavailableAssets: false,\n  setDidOpenUnavailableAssets: didOpen => set(() => ({\n    didOpenUnavailableAssets: didOpen\n  })),\n  setBagExpanded: _ref2 => {\n    let {\n      bagExpanded,\n      manualClose\n    } = _ref2;\n    return set(_ref3 => {\n      let {\n        bagManuallyClosed\n      } = _ref3;\n      return {\n        bagExpanded,\n        bagManuallyClosed: manualClose || bagManuallyClosed\n      };\n    });\n  },\n  toggleBag: () => set(_ref4 => {\n    let {\n      bagExpanded\n    } = _ref4;\n    return {\n      bagExpanded: !bagExpanded\n    };\n  }),\n  usedSweep: false,\n  isLocked: false,\n  setLocked: _isLocked => set(() => ({\n    isLocked: _isLocked\n  })),\n  itemsInBag: [],\n  setItemsInBag: items => set(() => ({\n    itemsInBag: items\n  })),\n  totalEthPrice: BigNumber.from(0),\n  setTotalEthPrice: totalEthPrice => set(() => ({\n    totalEthPrice\n  })),\n  totalUsdPrice: undefined,\n  setTotalUsdPrice: totalUsdPrice => set(() => ({\n    totalUsdPrice\n  })),\n  addAssetsToBag: function (assets) {\n    let fromSweep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return set(_ref5 => {\n      let {\n        itemsInBag\n      } = _ref5;\n      if (get().isLocked) return {\n        itemsInBag: get().itemsInBag\n      };\n      const items = [];\n      const itemsInBagCopy = [...itemsInBag];\n      assets.forEach(asset => {\n        let index = -1;\n        if (asset.tokenType !== NftStandard.Erc1155) {\n          index = itemsInBag.findIndex(n => n.asset.tokenId === asset.tokenId && n.asset.address === asset.address);\n        }\n        if (index !== -1) {\n          itemsInBagCopy[index].inSweep = fromSweep;\n        } else {\n          const assetWithId = {\n            asset: {\n              id: uuidv4(),\n              ...asset\n            },\n            status: BagItemStatus.ADDED_TO_BAG,\n            inSweep: fromSweep\n          };\n          items.push(assetWithId);\n        }\n      });\n      if (itemsInBag.length === 0) return {\n        itemsInBag: items,\n        bagStatus: BagStatus.ADDING_TO_BAG,\n        usedSweep: fromSweep\n      };else return {\n        itemsInBag: [...itemsInBagCopy, ...items],\n        bagStatus: BagStatus.ADDING_TO_BAG,\n        usedSweep: fromSweep\n      };\n    });\n  },\n  removeAssetsFromBag: function (assets) {\n    let fromSweep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    set(_ref6 => {\n      let {\n        itemsInBag\n      } = _ref6;\n      if (get().isLocked) return {\n        itemsInBag: get().itemsInBag\n      };\n      if (itemsInBag.length === 0) return {\n        itemsInBag: []\n      };\n      const itemsCopy = itemsInBag.filter(item => !assets.some(asset => asset.id ? asset.id === item.asset.id : asset.tokenId === item.asset.tokenId && asset.address === item.asset.address));\n      return {\n        itemsInBag: itemsCopy,\n        usedSweep: fromSweep\n      };\n    });\n  },\n  lockSweepItems: contractAddress => set(_ref7 => {\n    let {\n      itemsInBag\n    } = _ref7;\n    if (get().isLocked) return {\n      itemsInBag: get().itemsInBag\n    };\n    const itemsInBagCopy = itemsInBag.map(item => item.asset.address === contractAddress && item.inSweep ? {\n      ...item,\n      inSweep: false\n    } : item);\n    if (itemsInBag.length === 0) return {\n      itemsInBag\n    };else return {\n      itemsInBag: [...itemsInBagCopy]\n    };\n  }),\n  reset: () => set(() => {\n    if (!get().isLocked) return {\n      bagStatus: BagStatus.ADDING_TO_BAG,\n      itemsInBag: [],\n      didOpenUnavailableAssets: false,\n      isLocked: false,\n      bagManuallyClosed: false,\n      bagExpanded: false\n    };else return {};\n  })\n}), {\n  name: 'useBag'\n}));","map":{"version":3,"names":["BigNumber","NftStandard","BagItemStatus","BagStatus","v4","uuidv4","create","devtools","useBag","set","get","bagStatus","ADDING_TO_BAG","bagExpanded","bagManuallyClosed","setBagStatus","newBagStatus","markAssetAsReviewed","asset","toKeep","itemsInBag","length","itemsInBagCopy","index","findIndex","item","id","splice","status","REVIEWED","didOpenUnavailableAssets","setDidOpenUnavailableAssets","didOpen","setBagExpanded","manualClose","toggleBag","usedSweep","isLocked","setLocked","_isLocked","setItemsInBag","items","totalEthPrice","from","setTotalEthPrice","totalUsdPrice","undefined","setTotalUsdPrice","addAssetsToBag","assets","fromSweep","forEach","tokenType","Erc1155","n","tokenId","address","inSweep","assetWithId","ADDED_TO_BAG","push","removeAssetsFromBag","itemsCopy","filter","some","lockSweepItems","contractAddress","map","reset","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useBag.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { BagItem, BagItemStatus, BagStatus, UpdatedGenieAsset } from 'nft/types'\nimport { v4 as uuidv4 } from 'uuid'\nimport create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\ninterface BagState {\n  bagStatus: BagStatus\n  bagManuallyClosed: boolean\n  setBagExpanded: ({ bagExpanded, manualClose }: { bagExpanded: boolean; manualClose?: boolean }) => void\n  setBagStatus: (state: BagStatus) => void\n  itemsInBag: BagItem[]\n  setItemsInBag: (items: BagItem[]) => void\n  totalEthPrice: BigNumber\n  setTotalEthPrice: (totalEthPrice: BigNumber) => void\n  totalUsdPrice: number | undefined\n  setTotalUsdPrice: (totalUsdPrice: number | undefined) => void\n  addAssetsToBag: (asset: UpdatedGenieAsset[], fromSweep?: boolean) => void\n  removeAssetsFromBag: (assets: UpdatedGenieAsset[], fromSweep?: boolean) => void\n  markAssetAsReviewed: (asset: UpdatedGenieAsset, toKeep: boolean) => void\n  lockSweepItems: (contractAddress: string) => void\n  didOpenUnavailableAssets: boolean\n  setDidOpenUnavailableAssets: (didOpen: boolean) => void\n  bagExpanded: boolean\n  toggleBag: () => void\n  usedSweep: boolean\n  isLocked: boolean\n  setLocked: (isLocked: boolean) => void\n  reset: () => void\n}\n\nexport const useBag = create<BagState>()(\n  devtools(\n    (set, get) => ({\n      bagStatus: BagStatus.ADDING_TO_BAG,\n      bagExpanded: false,\n      bagManuallyClosed: false,\n      setBagStatus: (newBagStatus) =>\n        set(() => ({\n          bagStatus: newBagStatus,\n        })),\n      markAssetAsReviewed: (asset, toKeep) =>\n        set(({ itemsInBag }) => {\n          if (itemsInBag.length === 0) return { itemsInBag: [] }\n          const itemsInBagCopy = [...itemsInBag]\n          const index = itemsInBagCopy.findIndex((item) => item.asset.id === asset.id)\n          if (!toKeep && index !== -1) itemsInBagCopy.splice(index, 1)\n          else if (index !== -1) {\n            itemsInBagCopy[index].status = BagItemStatus.REVIEWED\n          }\n          return {\n            itemsInBag: itemsInBagCopy,\n          }\n        }),\n      didOpenUnavailableAssets: false,\n      setDidOpenUnavailableAssets: (didOpen) =>\n        set(() => ({\n          didOpenUnavailableAssets: didOpen,\n        })),\n      setBagExpanded: ({ bagExpanded, manualClose }) =>\n        set(({ bagManuallyClosed }) => ({ bagExpanded, bagManuallyClosed: manualClose || bagManuallyClosed })),\n      toggleBag: () => set(({ bagExpanded }) => ({ bagExpanded: !bagExpanded })),\n      usedSweep: false,\n      isLocked: false,\n      setLocked: (_isLocked) =>\n        set(() => ({\n          isLocked: _isLocked,\n        })),\n      itemsInBag: [],\n      setItemsInBag: (items) =>\n        set(() => ({\n          itemsInBag: items,\n        })),\n      totalEthPrice: BigNumber.from(0),\n      setTotalEthPrice: (totalEthPrice) =>\n        set(() => ({\n          totalEthPrice,\n        })),\n      totalUsdPrice: undefined,\n      setTotalUsdPrice: (totalUsdPrice) =>\n        set(() => ({\n          totalUsdPrice,\n        })),\n      addAssetsToBag: (assets, fromSweep = false) =>\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          const items: BagItem[] = []\n          const itemsInBagCopy = [...itemsInBag]\n          assets.forEach((asset) => {\n            let index = -1\n            if (asset.tokenType !== NftStandard.Erc1155) {\n              index = itemsInBag.findIndex(\n                (n) => n.asset.tokenId === asset.tokenId && n.asset.address === asset.address\n              )\n            }\n            if (index !== -1) {\n              itemsInBagCopy[index].inSweep = fromSweep\n            } else {\n              const assetWithId = {\n                asset: { id: uuidv4(), ...asset },\n                status: BagItemStatus.ADDED_TO_BAG,\n                inSweep: fromSweep,\n              }\n              items.push(assetWithId)\n            }\n          })\n          if (itemsInBag.length === 0)\n            return {\n              itemsInBag: items,\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              usedSweep: fromSweep,\n            }\n          else\n            return {\n              itemsInBag: [...itemsInBagCopy, ...items],\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              usedSweep: fromSweep,\n            }\n        }),\n      removeAssetsFromBag: (assets, fromSweep = false) => {\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          if (itemsInBag.length === 0) return { itemsInBag: [] }\n          const itemsCopy = itemsInBag.filter(\n            (item) =>\n              !assets.some((asset) =>\n                asset.id\n                  ? asset.id === item.asset.id\n                  : asset.tokenId === item.asset.tokenId && asset.address === item.asset.address\n              )\n          )\n          return {\n            itemsInBag: itemsCopy,\n            usedSweep: fromSweep,\n          }\n        })\n      },\n      lockSweepItems: (contractAddress) =>\n        set(({ itemsInBag }) => {\n          if (get().isLocked) return { itemsInBag: get().itemsInBag }\n          const itemsInBagCopy = itemsInBag.map((item) =>\n            item.asset.address === contractAddress && item.inSweep ? { ...item, inSweep: false } : item\n          )\n          if (itemsInBag.length === 0)\n            return {\n              itemsInBag,\n            }\n          else\n            return {\n              itemsInBag: [...itemsInBagCopy],\n            }\n        }),\n      reset: () =>\n        set(() => {\n          if (!get().isLocked)\n            return {\n              bagStatus: BagStatus.ADDING_TO_BAG,\n              itemsInBag: [],\n              didOpenUnavailableAssets: false,\n              isLocked: false,\n              bagManuallyClosed: false,\n              bagExpanded: false,\n            }\n          else return {}\n        }),\n    }),\n    { name: 'useBag' }\n  )\n)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}