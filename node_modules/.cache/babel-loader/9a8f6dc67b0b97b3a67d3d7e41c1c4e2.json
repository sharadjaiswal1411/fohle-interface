{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\n\n/**\n * Invokes callback repeatedly over an interval defined by the delay\n *\n * @param callback\n * @param delay if null, the callback will not be invoked\n * @param leading by default, the callback will be invoked immediately (on the leading edge);\n *                if false, the callback will not be invoked until a first delay\n */\nexport default function useInterval(callback, delay) {\n  _s();\n  let leading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  useEffect(() => {\n    if (delay === null) {\n      return;\n    }\n    let timeout;\n    tick(delay, /* skip= */!leading);\n    return () => {\n      if (timeout) {\n        clearInterval(timeout);\n      }\n    };\n    async function tick(delay) {\n      let skip = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!skip) {\n        const promise = callback();\n\n        // Defer the next interval until the current callback has resolved.\n        if (promise) await promise;\n      }\n      timeout = setTimeout(() => tick(delay), delay);\n    }\n  }, [callback, delay, leading]);\n}\n_s(useInterval, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","useInterval","callback","delay","leading","timeout","tick","clearInterval","skip","promise","setTimeout"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/lib/hooks/useInterval.ts"],"sourcesContent":["import { useEffect } from 'react'\n\n/**\n * Invokes callback repeatedly over an interval defined by the delay\n *\n * @param callback\n * @param delay if null, the callback will not be invoked\n * @param leading by default, the callback will be invoked immediately (on the leading edge);\n *                if false, the callback will not be invoked until a first delay\n */\nexport default function useInterval(callback: () => void | Promise<void>, delay: null | number, leading = true) {\n  useEffect(() => {\n    if (delay === null) {\n      return\n    }\n\n    let timeout: ReturnType<typeof setTimeout>\n    tick(delay, /* skip= */ !leading)\n    return () => {\n      if (timeout) {\n        clearInterval(timeout)\n      }\n    }\n\n    async function tick(delay: number, skip = false) {\n      if (!skip) {\n        const promise = callback()\n\n        // Defer the next interval until the current callback has resolved.\n        if (promise) await promise\n      }\n\n      timeout = setTimeout(() => tick(delay), delay)\n    }\n  }, [callback, delay, leading])\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,QAAoC,EAAEC,KAAoB,EAAkB;EAAA;EAAA,IAAhBC,OAAO,uEAAG,IAAI;EAC5GJ,SAAS,CAAC,MAAM;IACd,IAAIG,KAAK,KAAK,IAAI,EAAE;MAClB;IACF;IAEA,IAAIE,OAAsC;IAC1CC,IAAI,CAACH,KAAK,EAAE,WAAY,CAACC,OAAO,CAAC;IACjC,OAAO,MAAM;MACX,IAAIC,OAAO,EAAE;QACXE,aAAa,CAACF,OAAO,CAAC;MACxB;IACF,CAAC;IAED,eAAeC,IAAI,CAACH,KAAa,EAAgB;MAAA,IAAdK,IAAI,uEAAG,KAAK;MAC7C,IAAI,CAACA,IAAI,EAAE;QACT,MAAMC,OAAO,GAAGP,QAAQ,EAAE;;QAE1B;QACA,IAAIO,OAAO,EAAE,MAAMA,OAAO;MAC5B;MAEAJ,OAAO,GAAGK,UAAU,CAAC,MAAMJ,IAAI,CAACH,KAAK,CAAC,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC,EAAE,CAACD,QAAQ,EAAEC,KAAK,EAAEC,OAAO,CAAC,CAAC;AAChC;AAAC,GAzBuBH,WAAW"},"metadata":{},"sourceType":"module"}