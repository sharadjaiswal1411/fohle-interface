{"ast":null,"code":"import numbro from'numbro';// using a currency library here in case we want to add more in future\nexport var formatDollarAmount=function formatDollarAmount(num){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;var round=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;if(num===0)return'$0.00';if(!num)return'-';if(num<0.001&&digits<=3){return'<$0.001';}return numbro(num).formatCurrency({average:round,mantissa:num>1000?2:digits,abbreviations:{million:'M',billion:'B'}});};// using a currency library here in case we want to add more in future\nexport var formatAmount=function formatAmount(num){var digits=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;if(num===0)return'0';if(!num)return'-';if(num<0.001){return'<0.001';}return numbro(num).format({average:true,mantissa:num>1000?2:digits,abbreviations:{million:'M',billion:'B'}});};","map":{"version":3,"names":["numbro","formatDollarAmount","num","digits","round","formatCurrency","average","mantissa","abbreviations","million","billion","formatAmount","format"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/numbers.ts"],"sourcesContent":["import numbro from 'numbro'\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num: number | undefined, digits = 2, round = true) => {\n  if (num === 0) return '$0.00'\n  if (!num) return '-'\n  if (num < 0.001 && digits <= 3) {\n    return '<$0.001'\n  }\n\n  return numbro(num).formatCurrency({\n    average: round,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B',\n    },\n  })\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatAmount = (num: number | undefined, digits = 2) => {\n  if (num === 0) return '0'\n  if (!num) return '-'\n  if (num < 0.001) {\n    return '<0.001'\n  }\n  return numbro(num).format({\n    average: true,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B',\n    },\n  })\n}\n"],"mappings":"AAAA,MAAOA,OAAM,KAAM,QAAQ,CAE3B;AACA,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,GAAuB,CAA+B,IAA7BC,OAAM,2DAAG,CAAC,IAAEC,MAAK,2DAAG,IAAI,CAClF,GAAIF,GAAG,GAAK,CAAC,CAAE,MAAO,OAAO,CAC7B,GAAI,CAACA,GAAG,CAAE,MAAO,GAAG,CACpB,GAAIA,GAAG,CAAG,KAAK,EAAIC,MAAM,EAAI,CAAC,CAAE,CAC9B,MAAO,SAAS,CAClB,CAEA,MAAOH,OAAM,CAACE,GAAG,CAAC,CAACG,cAAc,CAAC,CAChCC,OAAO,CAAEF,KAAK,CACdG,QAAQ,CAAEL,GAAG,CAAG,IAAI,CAAG,CAAC,CAAGC,MAAM,CACjCK,aAAa,CAAE,CACbC,OAAO,CAAE,GAAG,CACZC,OAAO,CAAE,GACX,CACF,CAAC,CAAC,CACJ,CAAC,CAED;AACA,MAAO,IAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIT,GAAuB,CAAiB,IAAfC,OAAM,2DAAG,CAAC,CAC9D,GAAID,GAAG,GAAK,CAAC,CAAE,MAAO,GAAG,CACzB,GAAI,CAACA,GAAG,CAAE,MAAO,GAAG,CACpB,GAAIA,GAAG,CAAG,KAAK,CAAE,CACf,MAAO,QAAQ,CACjB,CACA,MAAOF,OAAM,CAACE,GAAG,CAAC,CAACU,MAAM,CAAC,CACxBN,OAAO,CAAE,IAAI,CACbC,QAAQ,CAAEL,GAAG,CAAG,IAAI,CAAG,CAAC,CAAGC,MAAM,CACjCK,aAAa,CAAE,CACbC,OAAO,CAAE,GAAG,CACZC,OAAO,CAAE,GACX,CACF,CAAC,CAAC,CACJ,CAAC"},"metadata":{},"sourceType":"module"}