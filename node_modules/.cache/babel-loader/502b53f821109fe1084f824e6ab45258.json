{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk';\nimport { useWeb3React } from '@web3-react/core';\nimport { BaseVariant, FeatureFlag, useBaseFlag } from '../index';\nexport function usePermit2Flag() {\n  _s();\n  return useBaseFlag(FeatureFlag.permit2);\n}\n_s(usePermit2Flag, \"K4haSv0xDH9dTRmPJTY8c9t6vr4=\", false, function () {\n  return [useBaseFlag];\n});\nexport function usePermit2Enabled() {\n  _s2();\n  const flagEnabled = usePermit2Flag() === BaseVariant.Enabled;\n  const {\n    chainId\n  } = useWeb3React();\n  try {\n    // Detect if the Universal Router is not yet deployed to chainId.\n    // This is necessary so that we can fallback correctly on chains without a Universal Router deployment.\n    // It will be removed once Universal Router is deployed on all supported chains.\n    chainId && UNIVERSAL_ROUTER_ADDRESS(chainId);\n    return flagEnabled;\n  } catch {\n    return false;\n  }\n}\n_s2(usePermit2Enabled, \"+oJ/j0h2Fqpo1WIKukv/7h3IbQk=\", false, function () {\n  return [usePermit2Flag, useWeb3React];\n});\nexport { BaseVariant as Permit2Variant };","map":{"version":3,"names":["UNIVERSAL_ROUTER_ADDRESS","useWeb3React","BaseVariant","FeatureFlag","useBaseFlag","usePermit2Flag","permit2","usePermit2Enabled","flagEnabled","Enabled","chainId","Permit2Variant"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/featureFlags/flags/permit2.ts"],"sourcesContent":["import { UNIVERSAL_ROUTER_ADDRESS } from '@uniswap/universal-router-sdk'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { BaseVariant, FeatureFlag, useBaseFlag } from '../index'\n\nexport function usePermit2Flag(): BaseVariant {\n  return useBaseFlag(FeatureFlag.permit2)\n}\n\nexport function usePermit2Enabled(): boolean {\n  const flagEnabled = usePermit2Flag() === BaseVariant.Enabled\n  const { chainId } = useWeb3React()\n  try {\n    // Detect if the Universal Router is not yet deployed to chainId.\n    // This is necessary so that we can fallback correctly on chains without a Universal Router deployment.\n    // It will be removed once Universal Router is deployed on all supported chains.\n    chainId && UNIVERSAL_ROUTER_ADDRESS(chainId)\n    return flagEnabled\n  } catch {\n    return false\n  }\n}\n\nexport { BaseVariant as Permit2Variant }\n"],"mappings":";;AAAA,SAASA,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,YAAY,QAAQ,kBAAkB;AAE/C,SAASC,WAAW,EAAEC,WAAW,EAAEC,WAAW,QAAQ,UAAU;AAEhE,OAAO,SAASC,cAAc,GAAgB;EAAA;EAC5C,OAAOD,WAAW,CAACD,WAAW,CAACG,OAAO,CAAC;AACzC;AAAC,GAFeD,cAAc;EAAA,QACrBD,WAAW;AAAA;AAGpB,OAAO,SAASG,iBAAiB,GAAY;EAAA;EAC3C,MAAMC,WAAW,GAAGH,cAAc,EAAE,KAAKH,WAAW,CAACO,OAAO;EAC5D,MAAM;IAAEC;EAAQ,CAAC,GAAGT,YAAY,EAAE;EAClC,IAAI;IACF;IACA;IACA;IACAS,OAAO,IAAIV,wBAAwB,CAACU,OAAO,CAAC;IAC5C,OAAOF,WAAW;EACpB,CAAC,CAAC,MAAM;IACN,OAAO,KAAK;EACd;AACF;AAAC,IAZeD,iBAAiB;EAAA,QACXF,cAAc,EACdJ,YAAY;AAAA;AAYlC,SAASC,WAAW,IAAIS,cAAc"},"metadata":{},"sourceType":"module"}