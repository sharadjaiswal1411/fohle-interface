{"ast":null,"code":"import { useTheme as _useTheme } from \"styled-components\";\nimport _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Charts/SparklineChart.tsx\",\n  _s = $RefreshSig$();\nimport { SparkLineLoadingBubble } from 'components/Tokens/TokenTable/TokenRow';\nimport { curveCardinal, scaleLinear } from 'd3';\nimport { memo } from 'react';\nimport { getPriceBounds } from '../Tokens/TokenDetails/PriceChart';\nimport LineChart from './LineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingContainer = _styled.div.withConfig({\n  displayName: \"SparklineChart__LoadingContainer\",\n  componentId: \"sc-140aiuf-0\"\n})([\"height:100%;display:flex;justify-content:center;align-items:center;\"]);\nfunction _SparklineChart(_ref) {\n  _s();\n  let {\n    width,\n    height,\n    tokenData,\n    pricePercentChange,\n    sparklineMap\n  } = _ref;\n  const theme = _useTheme();\n  // for sparkline\n  const pricePoints = (tokenData === null || tokenData === void 0 ? void 0 : tokenData.address) ? sparklineMap[tokenData.address] : null;\n\n  // Don't display if there's one or less pricepoints\n  if (!pricePoints || pricePoints.length <= 1) {\n    return /*#__PURE__*/_jsxDEV(LoadingContainer, {\n      children: /*#__PURE__*/_jsxDEV(SparkLineLoadingBubble, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n  const startingPrice = pricePoints[0];\n  const endingPrice = pricePoints[pricePoints.length - 1];\n  const widthScale = scaleLinear().domain(\n  // the range of possible input values\n  [startingPrice.timestamp, endingPrice.timestamp]).range(\n  // the range of possible output values that the inputs should be transformed to (see https://www.d3indepth.com/scales/ for details)\n  [0, 110]);\n  const rdScale = scaleLinear().domain(getPriceBounds(pricePoints)).range([30, 0]);\n  const curveTension = 0.9;\n  return /*#__PURE__*/_jsxDEV(LineChart, {\n    data: pricePoints,\n    getX: p => widthScale(p.timestamp),\n    getY: p => rdScale(p.value),\n    curve: curveCardinal.tension(curveTension),\n    marginTop: 5,\n    color: pricePercentChange && pricePercentChange < 0 ? theme.accentFailure : theme.accentSuccess,\n    strokeWidth: 1.5,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(_SparklineChart, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [_useTheme];\n});\nexport default /*#__PURE__*/memo(_SparklineChart);","map":{"version":3,"names":["SparkLineLoadingBubble","curveCardinal","scaleLinear","memo","getPriceBounds","LineChart","LoadingContainer","styled","div","_SparklineChart","width","height","tokenData","pricePercentChange","sparklineMap","theme","useTheme","pricePoints","address","length","startingPrice","endingPrice","widthScale","domain","timestamp","range","rdScale","curveTension","p","value","tension","accentFailure","accentSuccess"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Charts/SparklineChart.tsx"],"sourcesContent":["import { SparkLineLoadingBubble } from 'components/Tokens/TokenTable/TokenRow'\nimport { curveCardinal, scaleLinear } from 'd3'\nimport { SparklineMap, TopToken } from 'graphql/data/TopTokens'\nimport { PricePoint } from 'graphql/data/util'\nimport { memo } from 'react'\nimport styled, { useTheme } from 'styled-components/macro'\n\nimport { getPriceBounds } from '../Tokens/TokenDetails/PriceChart'\nimport LineChart from './LineChart'\n\nconst LoadingContainer = styled.div`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\ninterface SparklineChartProps {\n  width: number\n  height: number\n  tokenData: TopToken\n  pricePercentChange: number | undefined | null\n  sparklineMap: SparklineMap\n}\n\nfunction _SparklineChart({ width, height, tokenData, pricePercentChange, sparklineMap }: SparklineChartProps) {\n  const theme = useTheme()\n  // for sparkline\n  const pricePoints = tokenData?.address ? sparklineMap[tokenData.address] : null\n\n  // Don't display if there's one or less pricepoints\n  if (!pricePoints || pricePoints.length <= 1) {\n    return (\n      <LoadingContainer>\n        <SparkLineLoadingBubble />\n      </LoadingContainer>\n    )\n  }\n\n  const startingPrice = pricePoints[0]\n  const endingPrice = pricePoints[pricePoints.length - 1]\n  const widthScale = scaleLinear()\n    .domain(\n      // the range of possible input values\n      [startingPrice.timestamp, endingPrice.timestamp]\n    )\n    .range(\n      // the range of possible output values that the inputs should be transformed to (see https://www.d3indepth.com/scales/ for details)\n      [0, 110]\n    )\n  const rdScale = scaleLinear().domain(getPriceBounds(pricePoints)).range([30, 0])\n  const curveTension = 0.9\n\n  return (\n    <LineChart\n      data={pricePoints}\n      getX={(p: PricePoint) => widthScale(p.timestamp)}\n      getY={(p: PricePoint) => rdScale(p.value)}\n      curve={curveCardinal.tension(curveTension)}\n      marginTop={5}\n      color={pricePercentChange && pricePercentChange < 0 ? theme.accentFailure : theme.accentSuccess}\n      strokeWidth={1.5}\n      width={width}\n      height={height}\n    />\n  )\n}\n\nexport default memo(_SparklineChart)\n"],"mappings":";;;;AAAA,SAASA,sBAAsB,QAAQ,uCAAuC;AAC9E,SAASC,aAAa,EAAEC,WAAW,QAAQ,IAAI;AAG/C,SAASC,IAAI,QAAQ,OAAO;AAG5B,SAASC,cAAc,QAAQ,mCAAmC;AAClE,OAAOC,SAAS,MAAM,aAAa;AAAA;AAEnC,MAAMC,gBAAgB,GAAGC,OAAM,CAACC,GAAG;EAAA;EAAA;AAAA,2EAKlC;AAUD,SAASC,eAAe,OAAsF;EAAA;EAAA,IAArF;IAAEC,KAAK;IAAEC,MAAM;IAAEC,SAAS;IAAEC,kBAAkB;IAAEC;EAAkC,CAAC;EAC1G,MAAMC,KAAK,GAAGC,SAAQ,EAAE;EACxB;EACA,MAAMC,WAAW,GAAG,CAAAL,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEM,OAAO,IAAGJ,YAAY,CAACF,SAAS,CAACM,OAAO,CAAC,GAAG,IAAI;;EAE/E;EACA,IAAI,CAACD,WAAW,IAAIA,WAAW,CAACE,MAAM,IAAI,CAAC,EAAE;IAC3C,oBACE,QAAC,gBAAgB;MAAA,uBACf,QAAC,sBAAsB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACT;EAEvB;EAEA,MAAMC,aAAa,GAAGH,WAAW,CAAC,CAAC,CAAC;EACpC,MAAMI,WAAW,GAAGJ,WAAW,CAACA,WAAW,CAACE,MAAM,GAAG,CAAC,CAAC;EACvD,MAAMG,UAAU,GAAGpB,WAAW,EAAE,CAC7BqB,MAAM;EACL;EACA,CAACH,aAAa,CAACI,SAAS,EAAEH,WAAW,CAACG,SAAS,CAAC,CACjD,CACAC,KAAK;EACJ;EACA,CAAC,CAAC,EAAE,GAAG,CAAC,CACT;EACH,MAAMC,OAAO,GAAGxB,WAAW,EAAE,CAACqB,MAAM,CAACnB,cAAc,CAACa,WAAW,CAAC,CAAC,CAACQ,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;EAChF,MAAME,YAAY,GAAG,GAAG;EAExB,oBACE,QAAC,SAAS;IACR,IAAI,EAAEV,WAAY;IAClB,IAAI,EAAGW,CAAa,IAAKN,UAAU,CAACM,CAAC,CAACJ,SAAS,CAAE;IACjD,IAAI,EAAGI,CAAa,IAAKF,OAAO,CAACE,CAAC,CAACC,KAAK,CAAE;IAC1C,KAAK,EAAE5B,aAAa,CAAC6B,OAAO,CAACH,YAAY,CAAE;IAC3C,SAAS,EAAE,CAAE;IACb,KAAK,EAAEd,kBAAkB,IAAIA,kBAAkB,GAAG,CAAC,GAAGE,KAAK,CAACgB,aAAa,GAAGhB,KAAK,CAACiB,aAAc;IAChG,WAAW,EAAE,GAAI;IACjB,KAAK,EAAEtB,KAAM;IACb,MAAM,EAAEC;EAAO;IAAA;IAAA;IAAA;EAAA,QACf;AAEN;AAAC,GAzCQF,eAAe;EAAA,QACRO,SAAQ;AAAA;AA0CxB,4BAAeb,IAAI,CAACM,eAAe,CAAC"},"metadata":{},"sourceType":"module"}