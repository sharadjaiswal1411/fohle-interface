{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _styled from\"styled-components\";import{Trans}from\"@lingui/react\";import{isAddress}from'@ethersproject/address';import{useWeb3React}from'@web3-react/core';import{useState}from'react';import{Text}from'rebass';import Circle from\"../../assets/images/blue-loader.svg\";import tokenLogo from'../../assets/images/token-logo.png';import useENS from'../../hooks/useENS';import{useClaimCallback,useUserHasAvailableClaim,useUserUnclaimedAmount}from'../../state/claim/hooks';import{useIsTransactionPending}from'../../state/transactions/hooks';import{CloseIcon,CustomLightSpinner,ExternalLink,ThemedText,UniTokenAnimated}from'../../theme';import{shortenAddress}from'../../utils';import{ExplorerDataType,getExplorerLink}from'../../utils/getExplorerLink';import AddressInputPanel from'../AddressInputPanel';import{ButtonPrimary}from'../Button';import{AutoColumn,ColumnCenter}from'../Column';import{Break,CardSection,DataCard}from'../earn/styled';import{CardBGImage,CardBGImageSmaller,CardNoise}from'../earn/styled';import Modal from'../Modal';import{RowBetween}from'../Row';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContentWrapper=_styled(AutoColumn).withConfig({componentId:\"sc-1qxvqh4-0\"})([\"width:100%;\"]);var ModalUpper=_styled(DataCard).withConfig({componentId:\"sc-1qxvqh4-1\"})([\"box-shadow:0px 4px 10px rgba(0,0,0,0.1);background:radial-gradient(76.02% 75.41% at 1.84% 0%,#ff007a 0%,#021d43 100%);\"]);var ConfirmOrLoadingWrapper=_styled.div.withConfig({componentId:\"sc-1qxvqh4-2\"})([\"width:100%;padding:24px;position:relative;background:\",\";\"],function(_ref){var activeBG=_ref.activeBG;return activeBG&&'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;';});var ConfirmedIcon=_styled(ColumnCenter).withConfig({componentId:\"sc-1qxvqh4-3\"})([\"padding:60px 0;\"]);export default function AddressClaimModal(_ref2){var _groupSeparator,_groupSeparator2;var isOpen=_ref2.isOpen,onDismiss=_ref2.onDismiss;var _useWeb3React=useWeb3React(),chainId=_useWeb3React.chainId;// state for smart contract input\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),typed=_useState2[0],setTyped=_useState2[1];function handleRecipientType(val){setTyped(val);}// monitor for third party recipient of claim\nvar _useENS=useENS(typed),parsedAddress=_useENS.address;// used for UI loading states\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),attempting=_useState4[0],setAttempting=_useState4[1];// monitor the status of the claim from contracts and txns\nvar _useClaimCallback=useClaimCallback(parsedAddress),claimCallback=_useClaimCallback.claimCallback;var unclaimedAmount=useUserUnclaimedAmount(parsedAddress);// check if the user has something available\nvar hasAvailableClaim=useUserHasAvailableClaim(parsedAddress);var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),hash=_useState6[0],setHash=_useState6[1];// monitor the status of the claim from contracts and txns\nvar claimPending=useIsTransactionPending(hash!==null&&hash!==void 0?hash:'');var claimConfirmed=hash&&!claimPending;// use the hash to monitor this txn\nfunction onClaim(){setAttempting(true);claimCallback().then(function(hash){setHash(hash);})// reset modal and log error\n.catch(function(error){setAttempting(false);console.log(error);});}function wrappedOnDismiss(){setAttempting(false);setHash(undefined);setTyped('');onDismiss();}return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onDismiss:wrappedOnDismiss,maxHeight:90,children:[!attempting&&/*#__PURE__*/_jsxs(ContentWrapper,{gap:\"lg\",children:[/*#__PURE__*/_jsxs(ModalUpper,{children:[/*#__PURE__*/_jsx(CardBGImage,{}),/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsxs(CardSection,{gap:\"md\",children:[/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(ThemedText.DeprecatedWhite,{fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"Claim UNI Token\"})}),/*#__PURE__*/_jsx(CloseIcon,{onClick:wrappedOnDismiss,style:{zIndex:99},stroke:\"white\"})]}),/*#__PURE__*/_jsx(ThemedText.DeprecatedWhite,{fontWeight:700,fontSize:36,children:/*#__PURE__*/_jsx(Trans,{id:\"{0} UNI\",values:{0:unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator={groupSeparator:','})!==null&&_groupSeparator!==void 0?_groupSeparator:'-')}})})]}),/*#__PURE__*/_jsx(Break,{})]}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",style:{padding:'1rem',paddingTop:'0'},justify:\"center\",children:[/*#__PURE__*/_jsx(ThemedText.DeprecatedSubHeader,{fontWeight:500,children:/*#__PURE__*/_jsx(Trans,{id:\"Enter an address to trigger a UNI claim. If the address has any claimable UNI it will be sent to them on submission.\"})}),/*#__PURE__*/_jsx(AddressInputPanel,{value:typed,onChange:handleRecipientType}),parsedAddress&&!hasAvailableClaim&&/*#__PURE__*/_jsx(ThemedText.DeprecatedError,{error:true,children:/*#__PURE__*/_jsx(Trans,{id:\"Address has no available claim\"})}),/*#__PURE__*/_jsx(ButtonPrimary,{disabled:!isAddress(parsedAddress!==null&&parsedAddress!==void 0?parsedAddress:'')||!hasAvailableClaim,padding:\"16px 16px\",width:\"100%\",$borderRadius:\"12px\",mt:\"1rem\",onClick:onClaim,children:/*#__PURE__*/_jsx(Trans,{id:\"Claim UNI\"})})]})]}),(attempting||claimConfirmed)&&/*#__PURE__*/_jsxs(ConfirmOrLoadingWrapper,{activeBG:true,children:[/*#__PURE__*/_jsx(CardNoise,{}),/*#__PURE__*/_jsx(CardBGImageSmaller,{desaturate:true}),/*#__PURE__*/_jsxs(RowBetween,{children:[/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(CloseIcon,{onClick:wrappedOnDismiss,style:{zIndex:99},stroke:\"black\"})]}),/*#__PURE__*/_jsx(ConfirmedIcon,{children:!claimConfirmed?/*#__PURE__*/_jsx(CustomLightSpinner,{src:Circle,alt:\"loader\",size:\"90px\"}):/*#__PURE__*/_jsx(UniTokenAnimated,{width:\"72px\",src:tokenLogo,alt:\"UNI logo\"})}),/*#__PURE__*/_jsxs(AutoColumn,{gap:\"100px\",justify:\"center\",children:[/*#__PURE__*/_jsxs(AutoColumn,{gap:\"md\",justify:\"center\",children:[/*#__PURE__*/_jsx(ThemedText.DeprecatedLargeHeader,{fontWeight:600,color:\"black\",children:claimConfirmed?/*#__PURE__*/_jsx(Trans,{id:\"Claimed\"}):/*#__PURE__*/_jsx(Trans,{id:\"Claiming\"})}),!claimConfirmed&&/*#__PURE__*/_jsx(Text,{fontSize:36,color:\"#ff007a\",fontWeight:800,children:/*#__PURE__*/_jsx(Trans,{id:\"{0} UNI\",values:{0:unclaimedAmount===null||unclaimedAmount===void 0?void 0:unclaimedAmount.toFixed(0,(_groupSeparator2={groupSeparator:','})!==null&&_groupSeparator2!==void 0?_groupSeparator2:'-')}})}),parsedAddress&&/*#__PURE__*/_jsx(ThemedText.DeprecatedLargeHeader,{fontWeight:600,color:\"black\",children:/*#__PURE__*/_jsx(Trans,{id:\"for {0}\",values:{0:shortenAddress(parsedAddress)}})})]}),claimConfirmed&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(ThemedText.DeprecatedSubHeader,{fontWeight:500,color:\"black\",children:[/*#__PURE__*/_jsxs(\"span\",{role:\"img\",\"aria-label\":\"party-hat\",children:[\"\\uD83C\\uDF89\",' ']}),/*#__PURE__*/_jsx(Trans,{id:\"Welcome to team Unicorn :)\"}),/*#__PURE__*/_jsx(\"span\",{role:\"img\",\"aria-label\":\"party-hat\",children:\"\\uD83C\\uDF89\"})]})}),attempting&&!hash&&/*#__PURE__*/_jsx(ThemedText.DeprecatedSubHeader,{color:\"black\",children:/*#__PURE__*/_jsx(Trans,{id:\"Confirm this transaction in your wallet\"})}),attempting&&hash&&!claimConfirmed&&chainId&&hash&&/*#__PURE__*/_jsx(ExternalLink,{href:getExplorerLink(chainId,hash,ExplorerDataType.TRANSACTION),style:{zIndex:99},children:/*#__PURE__*/_jsx(Trans,{id:\"View transaction on Explorer\"})})]})]})]});}","map":{"version":3,"names":["isAddress","useWeb3React","useState","Text","tokenLogo","useENS","useClaimCallback","useUserHasAvailableClaim","useUserUnclaimedAmount","useIsTransactionPending","CloseIcon","CustomLightSpinner","ExternalLink","ThemedText","UniTokenAnimated","shortenAddress","ExplorerDataType","getExplorerLink","AddressInputPanel","ButtonPrimary","AutoColumn","ColumnCenter","Break","CardSection","DataCard","CardBGImage","CardBGImageSmaller","CardNoise","Modal","RowBetween","ContentWrapper","styled","ModalUpper","ConfirmOrLoadingWrapper","div","activeBG","ConfirmedIcon","AddressClaimModal","isOpen","onDismiss","chainId","typed","setTyped","handleRecipientType","val","parsedAddress","address","attempting","setAttempting","claimCallback","unclaimedAmount","hasAvailableClaim","hash","setHash","claimPending","claimConfirmed","onClaim","then","catch","error","console","log","wrappedOnDismiss","undefined","zIndex","toFixed","groupSeparator","padding","paddingTop","Circle","TRANSACTION"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/claim/AddressClaimModal.tsx"],"sourcesContent":["import { isAddress } from '@ethersproject/address'\nimport { Trans } from '@lingui/macro'\nimport { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useState } from 'react'\nimport { Text } from 'rebass'\nimport styled from 'styled-components/macro'\n\nimport Circle from '../../assets/images/blue-loader.svg'\nimport tokenLogo from '../../assets/images/token-logo.png'\nimport useENS from '../../hooks/useENS'\nimport { useClaimCallback, useUserHasAvailableClaim, useUserUnclaimedAmount } from '../../state/claim/hooks'\nimport { useIsTransactionPending } from '../../state/transactions/hooks'\nimport { CloseIcon, CustomLightSpinner, ExternalLink, ThemedText, UniTokenAnimated } from '../../theme'\nimport { shortenAddress } from '../../utils'\nimport { ExplorerDataType, getExplorerLink } from '../../utils/getExplorerLink'\nimport AddressInputPanel from '../AddressInputPanel'\nimport { ButtonPrimary } from '../Button'\nimport { AutoColumn, ColumnCenter } from '../Column'\nimport { Break, CardSection, DataCard } from '../earn/styled'\nimport { CardBGImage, CardBGImageSmaller, CardNoise } from '../earn/styled'\nimport Modal from '../Modal'\nimport { RowBetween } from '../Row'\n\nconst ContentWrapper = styled(AutoColumn)`\n  width: 100%;\n`\n\nconst ModalUpper = styled(DataCard)`\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(76.02% 75.41% at 1.84% 0%, #ff007a 0%, #021d43 100%);\n`\n\nconst ConfirmOrLoadingWrapper = styled.div<{ activeBG: boolean }>`\n  width: 100%;\n  padding: 24px;\n  position: relative;\n  background: ${({ activeBG }) =>\n    activeBG &&\n    'radial-gradient(76.02% 75.41% at 1.84% 0%, rgba(255, 0, 122, 0.2) 0%, rgba(33, 114, 229, 0.2) 100%), #FFFFFF;'};\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 60px 0;\n`\n\nexport default function AddressClaimModal({ isOpen, onDismiss }: { isOpen: boolean; onDismiss: () => void }) {\n  const { chainId } = useWeb3React()\n\n  // state for smart contract input\n  const [typed, setTyped] = useState('')\n  function handleRecipientType(val: string) {\n    setTyped(val)\n  }\n\n  // monitor for third party recipient of claim\n  const { address: parsedAddress } = useENS(typed)\n\n  // used for UI loading states\n  const [attempting, setAttempting] = useState<boolean>(false)\n\n  // monitor the status of the claim from contracts and txns\n  const { claimCallback } = useClaimCallback(parsedAddress)\n  const unclaimedAmount: CurrencyAmount<Token> | undefined = useUserUnclaimedAmount(parsedAddress)\n\n  // check if the user has something available\n  const hasAvailableClaim = useUserHasAvailableClaim(parsedAddress)\n\n  const [hash, setHash] = useState<string | undefined>()\n\n  // monitor the status of the claim from contracts and txns\n  const claimPending = useIsTransactionPending(hash ?? '')\n  const claimConfirmed = hash && !claimPending\n\n  // use the hash to monitor this txn\n\n  function onClaim() {\n    setAttempting(true)\n    claimCallback()\n      .then((hash) => {\n        setHash(hash)\n      })\n      // reset modal and log error\n      .catch((error) => {\n        setAttempting(false)\n        console.log(error)\n      })\n  }\n\n  function wrappedOnDismiss() {\n    setAttempting(false)\n    setHash(undefined)\n    setTyped('')\n    onDismiss()\n  }\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={wrappedOnDismiss} maxHeight={90}>\n      {!attempting && (\n        <ContentWrapper gap=\"lg\">\n          <ModalUpper>\n            <CardBGImage />\n            <CardNoise />\n            <CardSection gap=\"md\">\n              <RowBetween>\n                <ThemedText.DeprecatedWhite fontWeight={500}>\n                  <Trans>Claim UNI Token</Trans>\n                </ThemedText.DeprecatedWhite>\n                <CloseIcon onClick={wrappedOnDismiss} style={{ zIndex: 99 }} stroke=\"white\" />\n              </RowBetween>\n              <ThemedText.DeprecatedWhite fontWeight={700} fontSize={36}>\n                <Trans>{unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI</Trans>\n              </ThemedText.DeprecatedWhite>\n            </CardSection>\n            <Break />\n          </ModalUpper>\n          <AutoColumn gap=\"md\" style={{ padding: '1rem', paddingTop: '0' }} justify=\"center\">\n            <ThemedText.DeprecatedSubHeader fontWeight={500}>\n              <Trans>\n                Enter an address to trigger a UNI claim. If the address has any claimable UNI it will be sent to them on\n                submission.\n              </Trans>\n            </ThemedText.DeprecatedSubHeader>\n            <AddressInputPanel value={typed} onChange={handleRecipientType} />\n            {parsedAddress && !hasAvailableClaim && (\n              <ThemedText.DeprecatedError error={true}>\n                <Trans>Address has no available claim</Trans>\n              </ThemedText.DeprecatedError>\n            )}\n            <ButtonPrimary\n              disabled={!isAddress(parsedAddress ?? '') || !hasAvailableClaim}\n              padding=\"16px 16px\"\n              width=\"100%\"\n              $borderRadius=\"12px\"\n              mt=\"1rem\"\n              onClick={onClaim}\n            >\n              <Trans>Claim UNI</Trans>\n            </ButtonPrimary>\n          </AutoColumn>\n        </ContentWrapper>\n      )}\n      {(attempting || claimConfirmed) && (\n        <ConfirmOrLoadingWrapper activeBG={true}>\n          <CardNoise />\n          <CardBGImageSmaller desaturate />\n          <RowBetween>\n            <div />\n            <CloseIcon onClick={wrappedOnDismiss} style={{ zIndex: 99 }} stroke=\"black\" />\n          </RowBetween>\n          <ConfirmedIcon>\n            {!claimConfirmed ? (\n              <CustomLightSpinner src={Circle} alt=\"loader\" size=\"90px\" />\n            ) : (\n              <UniTokenAnimated width=\"72px\" src={tokenLogo} alt=\"UNI logo\" />\n            )}\n          </ConfirmedIcon>\n          <AutoColumn gap=\"100px\" justify=\"center\">\n            <AutoColumn gap=\"md\" justify=\"center\">\n              <ThemedText.DeprecatedLargeHeader fontWeight={600} color=\"black\">\n                {claimConfirmed ? <Trans>Claimed</Trans> : <Trans>Claiming</Trans>}\n              </ThemedText.DeprecatedLargeHeader>\n              {!claimConfirmed && (\n                <Text fontSize={36} color=\"#ff007a\" fontWeight={800}>\n                  <Trans>{unclaimedAmount?.toFixed(0, { groupSeparator: ',' } ?? '-')} UNI</Trans>\n                </Text>\n              )}\n              {parsedAddress && (\n                <ThemedText.DeprecatedLargeHeader fontWeight={600} color=\"black\">\n                  <Trans>for {shortenAddress(parsedAddress)}</Trans>\n                </ThemedText.DeprecatedLargeHeader>\n              )}\n            </AutoColumn>\n            {claimConfirmed && (\n              <>\n                <ThemedText.DeprecatedSubHeader fontWeight={500} color=\"black\">\n                  <span role=\"img\" aria-label=\"party-hat\">\n                    🎉{' '}\n                  </span>\n                  <Trans>Welcome to team Unicorn :) </Trans>\n                  <span role=\"img\" aria-label=\"party-hat\">\n                    🎉\n                  </span>\n                </ThemedText.DeprecatedSubHeader>\n              </>\n            )}\n            {attempting && !hash && (\n              <ThemedText.DeprecatedSubHeader color=\"black\">\n                <Trans>Confirm this transaction in your wallet</Trans>\n              </ThemedText.DeprecatedSubHeader>\n            )}\n            {attempting && hash && !claimConfirmed && chainId && hash && (\n              <ExternalLink href={getExplorerLink(chainId, hash, ExplorerDataType.TRANSACTION)} style={{ zIndex: 99 }}>\n                <Trans>View transaction on Explorer</Trans>\n              </ExternalLink>\n            )}\n          </AutoColumn>\n        </ConfirmOrLoadingWrapper>\n      )}\n    </Modal>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}