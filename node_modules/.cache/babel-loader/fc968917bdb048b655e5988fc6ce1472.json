{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{createApi,fetchBaseQuery}from'@reduxjs/toolkit/query/react';import{Protocol}from'@uniswap/router-sdk';import{AlphaRouter}from'@uniswap/smart-order-router';import{RPC_PROVIDERS}from'constants/providers';import{getClientSideQuote,toSupportedChainId}from'lib/hooks/routing/clientSideSmartOrderRouter';import qs from'qs';export var RouterPreference;(function(RouterPreference){RouterPreference[\"API\"]=\"api\";RouterPreference[\"CLIENT\"]=\"client\";RouterPreference[\"PRICE\"]=\"price\";})(RouterPreference||(RouterPreference={}));var routers=new Map();function getRouter(chainId){var router=routers.get(chainId);if(router)return router;var supportedChainId=toSupportedChainId(chainId);if(supportedChainId){var provider=RPC_PROVIDERS[supportedChainId];var _router=new AlphaRouter({chainId:chainId,provider:provider});routers.set(chainId,_router);return _router;}throw new Error(\"Router does not support this chain (chainId: \".concat(chainId,\").\"));}// routing API quote params: https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/schema/quote-schema.ts\nvar API_QUERY_PARAMS={protocols:'v2,v3,mixed'};var CLIENT_PARAMS={protocols:[Protocol.V2,Protocol.V3,Protocol.MIXED]};// Price queries are tuned down to minimize the required RPCs to respond to them.\n// TODO(zzmp): This will be used after testing router caching.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar PRICE_PARAMS={protocols:[Protocol.V2,Protocol.V3],v2PoolSelection:{topN:2,topNDirectSwaps:1,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:2,topNWithBaseToken:2},v3PoolSelection:{topN:2,topNDirectSwaps:1,topNTokenInOut:2,topNSecondHop:1,topNWithEachBaseToken:2,topNWithBaseToken:2},maxSwapsPerPath:2,minSplits:1,maxSplits:1,distributionPercent:100};export var routingApi=createApi({reducerPath:'routingApi',baseQuery:fetchBaseQuery({baseUrl:'https://api.uniswap.org/v1/'}),endpoints:function endpoints(build){return{getQuote:build.query({queryFn:function queryFn(args,_api,_extraOptions,fetch){return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var tokenInAddress,tokenInChainId,tokenOutAddress,tokenOutChainId,amount,routerPreference,type,result,query,router;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:tokenInAddress=args.tokenInAddress,tokenInChainId=args.tokenInChainId,tokenOutAddress=args.tokenOutAddress,tokenOutChainId=args.tokenOutChainId,amount=args.amount,routerPreference=args.routerPreference,type=args.type;_context.prev=1;if(!(routerPreference===RouterPreference.API)){_context.next=9;break;}query=qs.stringify(_objectSpread(_objectSpread({},API_QUERY_PARAMS),{},{tokenInAddress:tokenInAddress,tokenInChainId:tokenInChainId,tokenOutAddress:tokenOutAddress,tokenOutChainId:tokenOutChainId,amount:amount,type:type}));_context.next=6;return fetch(\"quote?\".concat(query));case 6:result=_context.sent;_context.next=13;break;case 9:router=getRouter(args.tokenInChainId);_context.next=12;return getClientSideQuote(args,router,// TODO(zzmp): Use PRICE_PARAMS for RouterPreference.PRICE.\n// This change is intentionally being deferred to first see what effect router caching has.\nCLIENT_PARAMS);case 12:result=_context.sent;case 13:return _context.abrupt(\"return\",{data:result.data});case 16:_context.prev=16;_context.t0=_context[\"catch\"](1);return _context.abrupt(\"return\",{error:_context.t0});case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,16]]);}))();},keepUnusedDataFor:10000,extraOptions:{maxRetries:0}})};}});var useGetQuoteQuery=routingApi.useGetQuoteQuery;export{useGetQuoteQuery};","map":{"version":3,"names":["createApi","fetchBaseQuery","Protocol","AlphaRouter","RPC_PROVIDERS","getClientSideQuote","toSupportedChainId","qs","RouterPreference","routers","Map","getRouter","chainId","router","get","supportedChainId","provider","set","Error","API_QUERY_PARAMS","protocols","CLIENT_PARAMS","V2","V3","MIXED","PRICE_PARAMS","v2PoolSelection","topN","topNDirectSwaps","topNTokenInOut","topNSecondHop","topNWithEachBaseToken","topNWithBaseToken","v3PoolSelection","maxSwapsPerPath","minSplits","maxSplits","distributionPercent","routingApi","reducerPath","baseQuery","baseUrl","endpoints","build","getQuote","query","queryFn","args","_api","_extraOptions","fetch","tokenInAddress","tokenInChainId","tokenOutAddress","tokenOutChainId","amount","routerPreference","type","API","stringify","result","data","error","keepUnusedDataFor","extraOptions","maxRetries","useGetQuoteQuery"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/routing/slice.ts"],"sourcesContent":["import { createApi, fetchBaseQuery, FetchBaseQueryError } from '@reduxjs/toolkit/query/react'\nimport { Protocol } from '@uniswap/router-sdk'\nimport { AlphaRouter, ChainId } from '@uniswap/smart-order-router'\nimport { RPC_PROVIDERS } from 'constants/providers'\nimport { getClientSideQuote, toSupportedChainId } from 'lib/hooks/routing/clientSideSmartOrderRouter'\nimport ms from 'ms.macro'\nimport qs from 'qs'\n\nimport { GetQuoteResult } from './types'\n\nexport enum RouterPreference {\n  API = 'api',\n  CLIENT = 'client',\n  PRICE = 'price',\n}\n\nconst routers = new Map<ChainId, AlphaRouter>()\nfunction getRouter(chainId: ChainId): AlphaRouter {\n  const router = routers.get(chainId)\n  if (router) return router\n\n  const supportedChainId = toSupportedChainId(chainId)\n  if (supportedChainId) {\n    const provider = RPC_PROVIDERS[supportedChainId]\n    const router = new AlphaRouter({ chainId, provider })\n    routers.set(chainId, router)\n    return router\n  }\n\n  throw new Error(`Router does not support this chain (chainId: ${chainId}).`)\n}\n\n// routing API quote params: https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/schema/quote-schema.ts\nconst API_QUERY_PARAMS = {\n  protocols: 'v2,v3,mixed',\n}\nconst CLIENT_PARAMS = {\n  protocols: [Protocol.V2, Protocol.V3, Protocol.MIXED],\n}\n// Price queries are tuned down to minimize the required RPCs to respond to them.\n// TODO(zzmp): This will be used after testing router caching.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst PRICE_PARAMS = {\n  protocols: [Protocol.V2, Protocol.V3],\n  v2PoolSelection: {\n    topN: 2,\n    topNDirectSwaps: 1,\n    topNTokenInOut: 2,\n    topNSecondHop: 1,\n    topNWithEachBaseToken: 2,\n    topNWithBaseToken: 2,\n  },\n  v3PoolSelection: {\n    topN: 2,\n    topNDirectSwaps: 1,\n    topNTokenInOut: 2,\n    topNSecondHop: 1,\n    topNWithEachBaseToken: 2,\n    topNWithBaseToken: 2,\n  },\n  maxSwapsPerPath: 2,\n  minSplits: 1,\n  maxSplits: 1,\n  distributionPercent: 100,\n}\n\nexport const routingApi = createApi({\n  reducerPath: 'routingApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://api.uniswap.org/v1/',\n  }),\n  endpoints: (build) => ({\n    getQuote: build.query<\n      GetQuoteResult,\n      {\n        tokenInAddress: string\n        tokenInChainId: ChainId\n        tokenInDecimals: number\n        tokenInSymbol?: string\n        tokenOutAddress: string\n        tokenOutChainId: ChainId\n        tokenOutDecimals: number\n        tokenOutSymbol?: string\n        amount: string\n        routerPreference: RouterPreference\n        type: 'exactIn' | 'exactOut'\n      }\n    >({\n      async queryFn(args, _api, _extraOptions, fetch) {\n        const { tokenInAddress, tokenInChainId, tokenOutAddress, tokenOutChainId, amount, routerPreference, type } =\n          args\n\n        let result\n\n        try {\n          if (routerPreference === RouterPreference.API) {\n            const query = qs.stringify({\n              ...API_QUERY_PARAMS,\n              tokenInAddress,\n              tokenInChainId,\n              tokenOutAddress,\n              tokenOutChainId,\n              amount,\n              type,\n            })\n            result = await fetch(`quote?${query}`)\n          } else {\n            const router = getRouter(args.tokenInChainId)\n            result = await getClientSideQuote(\n              args,\n              router,\n              // TODO(zzmp): Use PRICE_PARAMS for RouterPreference.PRICE.\n              // This change is intentionally being deferred to first see what effect router caching has.\n              CLIENT_PARAMS\n            )\n          }\n\n          return { data: result.data as GetQuoteResult }\n        } catch (e) {\n          // TODO: fall back to client-side quoter when auto router fails.\n          // deprecate 'legacy' v2/v3 routers first.\n          return { error: e as FetchBaseQueryError }\n        }\n      },\n      keepUnusedDataFor: ms`10s`,\n      extraOptions: {\n        maxRetries: 0,\n      },\n    }),\n  }),\n})\n\nexport const { useGetQuoteQuery } = routingApi\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}