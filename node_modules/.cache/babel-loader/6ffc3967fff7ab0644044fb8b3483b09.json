{"ast":null,"code":"import _objectSpread from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import create from'zustand';import{devtools}from'zustand/middleware';export var useNFTSelect=create()(devtools(function(set){return{selectedNFTs:[],isUniversalPrice:false,selectNFT:function selectNFT(nft){return set(function(_ref){var selectedNFTs=_ref.selectedNFTs;if(selectedNFTs.length===0)return{selectedNFTs:[nft]};else if(selectedNFTs.some(function(x){return x.id===nft.id;}))return{selectedNFTs:selectedNFTs.filter(function(n){return n.id!==nft.id;})};else return{selectedNFTs:[].concat(_toConsumableArray(selectedNFTs),[nft])};});},reset:function reset(){return set(function(){return{selectedNFTs:[]};});},toggleUniversalPrice:function toggleUniversalPrice(v){return set(function(){return{isUniversalPrice:v};});},setUniversalPrice:function setUniversalPrice(price){return set(function(_ref2){var selectedNFTs=_ref2.selectedNFTs;return{selectedNFTs:selectedNFTs.map(function(n){return _objectSpread(_objectSpread({},n),{},{price:price});}),isUniversalPrice:true};});},setSingleNFTPrice:function setSingleNFTPrice(id,price){return set(function(_ref3){var selectedNFTs=_ref3.selectedNFTs;var found=selectedNFTs.find(function(i){return i.id===id;});return{selectedNFTs:[].concat(_toConsumableArray(selectedNFTs.filter(function(n){return n.id!==id;})),[_objectSpread(_objectSpread({},found),{},{price:price})])};});}};},{name:'useNFTSelect'}));","map":{"version":3,"names":["create","devtools","useNFTSelect","set","selectedNFTs","isUniversalPrice","selectNFT","nft","length","some","x","id","filter","n","reset","toggleUniversalPrice","v","setUniversalPrice","price","map","setSingleNFTPrice","found","find","i","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/hooks/useNFTSelect.ts"],"sourcesContent":["import create from 'zustand'\nimport { devtools } from 'zustand/middleware'\n\nimport { OpenSeaAsset } from '../types'\n\ninterface SelectNFTState {\n  /**\n   * NFTs selected by a user\n   */\n  selectedNFTs: (OpenSeaAsset & { price?: number })[]\n\n  selectNFT: (nft: OpenSeaAsset & { price?: number }) => void\n  reset: () => void\n  setUniversalPrice: (price: number) => void\n  toggleUniversalPrice: (v: boolean) => void\n  setSingleNFTPrice: (id: number, price: number) => void\n  isUniversalPrice: boolean\n}\n\nexport const useNFTSelect = create<SelectNFTState>()(\n  devtools(\n    (set) => ({\n      selectedNFTs: [],\n      isUniversalPrice: false,\n      selectNFT: (nft) =>\n        set(({ selectedNFTs }) => {\n          if (selectedNFTs.length === 0) return { selectedNFTs: [nft] }\n          else if (selectedNFTs.some((x) => x.id === nft.id))\n            return { selectedNFTs: selectedNFTs.filter((n) => n.id !== nft.id) }\n          else return { selectedNFTs: [...selectedNFTs, nft] }\n        }),\n      reset: () => set(() => ({ selectedNFTs: [] })),\n      toggleUniversalPrice: (v) => set(() => ({ isUniversalPrice: v })),\n      setUniversalPrice: (price) =>\n        set(({ selectedNFTs }) => {\n          return {\n            selectedNFTs: selectedNFTs.map((n) => ({ ...n, price })),\n            isUniversalPrice: true,\n          }\n        }),\n      setSingleNFTPrice: (id, price) =>\n        set(({ selectedNFTs }) => {\n          const found = selectedNFTs.find((i) => i.id === id)\n\n          return {\n            selectedNFTs: [...selectedNFTs.filter((n) => n.id !== id), { ...found, price }],\n          }\n        }),\n    }),\n    { name: 'useNFTSelect' }\n  )\n)\n"],"mappings":"+VAAA,MAAOA,OAAM,KAAM,SAAS,CAC5B,OAASC,QAAQ,KAAQ,oBAAoB,CAkB7C,MAAO,IAAMC,aAAY,CAAGF,MAAM,EAAkB,CAClDC,QAAQ,CACN,SAACE,GAAG,QAAM,CACRC,YAAY,CAAE,EAAE,CAChBC,gBAAgB,CAAE,KAAK,CACvBC,SAAS,CAAE,mBAACC,GAAG,QACbJ,IAAG,CAAC,cAAsB,IAAnBC,aAAY,MAAZA,YAAY,CACjB,GAAIA,YAAY,CAACI,MAAM,GAAK,CAAC,CAAE,MAAO,CAAEJ,YAAY,CAAE,CAACG,GAAG,CAAE,CAAC,KACxD,IAAIH,YAAY,CAACK,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACC,EAAE,GAAKJ,GAAG,CAACI,EAAE,GAAC,CAChD,MAAO,CAAEP,YAAY,CAAEA,YAAY,CAACQ,MAAM,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACF,EAAE,GAAKJ,GAAG,CAACI,EAAE,GAAE,CAAC,KACjE,OAAO,CAAEP,YAAY,8BAAMA,YAAY,GAAEG,GAAG,EAAE,CAAC,CACtD,CAAC,CAAC,GACJO,KAAK,CAAE,uBAAMX,IAAG,CAAC,iBAAO,CAAEC,YAAY,CAAE,EAAG,CAAC,EAAC,CAAC,GAC9CW,oBAAoB,CAAE,8BAACC,CAAC,QAAKb,IAAG,CAAC,iBAAO,CAAEE,gBAAgB,CAAEW,CAAE,CAAC,EAAC,CAAC,GACjEC,iBAAiB,CAAE,2BAACC,KAAK,QACvBf,IAAG,CAAC,eAAsB,IAAnBC,aAAY,OAAZA,YAAY,CACjB,MAAO,CACLA,YAAY,CAAEA,YAAY,CAACe,GAAG,CAAC,SAACN,CAAC,wCAAWA,CAAC,MAAEK,KAAK,CAALA,KAAK,IAAG,CAAC,CACxDb,gBAAgB,CAAE,IACpB,CAAC,CACH,CAAC,CAAC,GACJe,iBAAiB,CAAE,2BAACT,EAAE,CAAEO,KAAK,QAC3Bf,IAAG,CAAC,eAAsB,IAAnBC,aAAY,OAAZA,YAAY,CACjB,GAAMiB,MAAK,CAAGjB,YAAY,CAACkB,IAAI,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACZ,EAAE,GAAKA,EAAE,GAAC,CAEnD,MAAO,CACLP,YAAY,8BAAMA,YAAY,CAACQ,MAAM,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACF,EAAE,GAAKA,EAAE,GAAC,kCAAOU,KAAK,MAAEH,KAAK,CAALA,KAAK,IAC9E,CAAC,CACH,CAAC,CAAC,EACN,CAAC,EAAC,CACF,CAAEM,IAAI,CAAE,cAAe,CAAC,CACzB,CACF"},"metadata":{},"sourceType":"module"}