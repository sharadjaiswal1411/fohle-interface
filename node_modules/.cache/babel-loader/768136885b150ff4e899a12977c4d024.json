{"ast":null,"code":"export var TokenType;(function(TokenType){TokenType[\"ERC20\"]=\"ERC20\";TokenType[\"ERC721\"]=\"ERC721\";TokenType[\"ERC1155\"]=\"ERC1155\";TokenType[\"Dust\"]=\"Dust\";TokenType[\"Cryptopunk\"]=\"Cryptopunk\";})(TokenType||(TokenType={}));export var Markets;(function(Markets){Markets[\"LooksRare\"]=\"looksrare\";Markets[\"X2Y2\"]=\"x2y2\";Markets[\"NFT20\"]=\"nft20\";Markets[\"NFTX\"]=\"nftx\";Markets[\"Opensea\"]=\"opensea\";Markets[\"Rarible\"]=\"rarible\";Markets[\"Uniswap\"]=\"Uniswap\";Markets[\"Uniswap_V2\"]=\"Uniswap_V2\";Markets[\"SushiSwap\"]=\"SushiSwap\";Markets[\"SuperRare\"]=\"superrare\";Markets[\"Sudoswap\"]=\"sudoswap\";Markets[\"KnownOrigin\"]=\"knownorigin\";Markets[\"WETH\"]=\"weth\";Markets[\"Cryptopunks\"]=\"cryptopunks\";Markets[\"CryptoPhunks\"]=\"cryptophunks\";})(Markets||(Markets={}));export var isPooledMarket=function isPooledMarket(market){if(!market)return false;return market===Markets.NFTX||market===Markets.NFT20||market===Markets.Sudoswap;};export var ToolTipType;// index starts at 1 for boolean reasons\n(function(ToolTipType){ToolTipType[ToolTipType[\"pool\"]=0]=\"pool\";ToolTipType[ToolTipType[\"sus\"]=1]=\"sus\";})(ToolTipType||(ToolTipType={}));export var DetailsOrigin;(function(DetailsOrigin){DetailsOrigin[\"COLLECTION\"]=\"collection\";DetailsOrigin[\"PROFILE\"]=\"profile\";DetailsOrigin[\"EXPLORE\"]=\"explore\";})(DetailsOrigin||(DetailsOrigin={}));","map":{"version":3,"names":["TokenType","Markets","isPooledMarket","market","NFTX","NFT20","Sudoswap","ToolTipType","DetailsOrigin"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/types/common/common.ts"],"sourcesContent":["import { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { SortBy } from 'nft/hooks'\n\nimport { SellOrder } from '../sell'\n\nexport interface OpenSeaCollection {\n  name: string\n  slug: string\n  image_url: string\n  description: string\n  external_url: string\n  featured: boolean\n  hidden: boolean\n  safelist_request_status: string\n  is_subject_to_whitelist: boolean\n  large_image_url: string\n  only_proxied_transfers: boolean\n  payout_address: string\n}\n\nexport interface OpenSeaAsset {\n  id?: number\n  image_url?: string\n  image_preview_url?: string\n  name?: string\n  token_id?: string\n  last_sale?: {\n    total_price: string\n  }\n  asset_contract?: {\n    address: string\n    schema_name: 'ERC1155' | 'ERC721' | string\n    asset_contract_type: string\n    created_date: string\n    name: string\n    symbol: string\n    description: string\n    external_link: string\n    image_url: string\n    default_to_fiat: boolean\n    only_proxied_transfers: boolean\n    payout_address: string\n  }\n  collection?: OpenSeaCollection\n}\n\nexport enum TokenType {\n  ERC20 = 'ERC20',\n  ERC721 = 'ERC721',\n  ERC1155 = 'ERC1155',\n  Dust = 'Dust',\n  Cryptopunk = 'Cryptopunk',\n}\n\nexport interface PriceInfo {\n  ETHPrice: string\n  USDPrice?: string\n  baseAsset: string\n  baseDecimals: string\n  basePrice: string\n}\n\nexport interface AssetSellOrder {\n  ammFeePercent: number\n  ethReserves: number\n  tokenReserves: number\n}\n\nexport interface Rarity {\n  primaryProvider: string\n  providers?: { provider: string; rank?: number; url?: string; score?: number }[]\n}\n\nexport interface Trait {\n  trait_type: string\n  trait_value: string\n  display_type?: any\n  max_value?: any\n  trait_count?: number\n  order?: any\n}\nexport interface GenieAsset {\n  id?: string // This would be a random id created and assigned by front end\n  address: string\n  notForSale?: boolean\n  collectionName?: string\n  collectionSymbol?: string\n  imageUrl?: string\n  animationUrl?: string\n  marketplace?: Markets\n  name?: string\n  priceInfo: PriceInfo\n  susFlag?: boolean\n  sellorders?: SellOrder[]\n  smallImageUrl?: string\n  tokenId: string\n  tokenType?: NftStandard\n  totalCount?: number // The totalCount from the query to /assets\n  collectionIsVerified?: boolean\n  rarity?: Rarity\n  ownerAddress?: string\n  metadataUrl?: string\n  creator: {\n    address?: string\n    profile_img_url?: string\n  }\n  traits?: Trait[]\n}\n\nexport interface GenieCollection {\n  address: string\n  isVerified?: boolean\n  name?: string\n  description?: string\n  standard?: string\n  bannerImageUrl?: string\n  stats?: {\n    num_owners?: number\n    floor_price?: number\n    one_day_volume?: number\n    one_day_change?: number\n    one_day_floor_change?: number\n    banner_image_url?: string\n    total_supply?: number\n    total_listings?: number\n    total_volume?: number\n  }\n  traits?: Record<string, Trait[]>\n  marketplaceCount?: { marketplace: string; count: number; floorPrice: number }[]\n  imageUrl: string\n  twitterUrl?: string\n  instagram?: string\n  discordUrl?: string\n  externalUrl?: string\n  rarityVerified?: boolean\n  isFoundation?: boolean\n}\n\nexport enum Markets {\n  LooksRare = 'looksrare',\n  X2Y2 = 'x2y2',\n  NFT20 = 'nft20',\n  NFTX = 'nftx',\n  Opensea = 'opensea',\n  Rarible = 'rarible',\n  Uniswap = 'Uniswap',\n  Uniswap_V2 = 'Uniswap_V2',\n  SushiSwap = 'SushiSwap',\n  SuperRare = 'superrare',\n  Sudoswap = 'sudoswap',\n  KnownOrigin = 'knownorigin',\n  WETH = 'weth',\n  Cryptopunks = 'cryptopunks',\n  CryptoPhunks = 'cryptophunks',\n}\n\nexport const isPooledMarket = (market?: Markets): boolean => {\n  if (!market) return false\n  return market === Markets.NFTX || market === Markets.NFT20 || market === Markets.Sudoswap\n}\n\nexport enum ToolTipType {\n  pool,\n  sus,\n}\n\n// index starts at 1 for boolean reasons\nexport interface DropDownOption {\n  displayText: string\n  onClick: () => void\n  reverseIndex?: number\n  reverseOnClick?: () => void\n  sortBy?: SortBy\n}\n\nexport enum DetailsOrigin {\n  COLLECTION = 'collection',\n  PROFILE = 'profile',\n  EXPLORE = 'explore',\n}\n"],"mappings":"AA8CA,UAAYA,UAAS,CAMpB,UANWA,SAAS,EAATA,SAAS,kBAATA,SAAS,oBAATA,SAAS,sBAATA,SAAS,gBAATA,SAAS,+BAATA,SAAS,GAATA,SAAS,MA4FrB,UAAYC,QAAO,CAgBlB,UAhBWA,OAAO,EAAPA,OAAO,0BAAPA,OAAO,gBAAPA,OAAO,kBAAPA,OAAO,gBAAPA,OAAO,sBAAPA,OAAO,sBAAPA,OAAO,sBAAPA,OAAO,4BAAPA,OAAO,0BAAPA,OAAO,0BAAPA,OAAO,wBAAPA,OAAO,8BAAPA,OAAO,gBAAPA,OAAO,8BAAPA,OAAO,mCAAPA,OAAO,GAAPA,OAAO,MAkBnB,MAAO,IAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,MAAgB,CAAc,CAC3D,GAAI,CAACA,MAAM,CAAE,MAAO,MAAK,CACzB,MAAOA,OAAM,GAAKF,OAAO,CAACG,IAAI,EAAID,MAAM,GAAKF,OAAO,CAACI,KAAK,EAAIF,MAAM,GAAKF,OAAO,CAACK,QAAQ,CAC3F,CAAC,CAED,UAAYC,YAAW,CAKvB;AAAA,UALYA,WAAW,EAAXA,WAAW,CAAXA,WAAW,mBAAXA,WAAW,CAAXA,WAAW,oBAAXA,WAAW,GAAXA,WAAW,MAcvB,UAAYC,cAAa,CAIxB,UAJWA,aAAa,EAAbA,aAAa,4BAAbA,aAAa,sBAAbA,aAAa,yBAAbA,aAAa,GAAbA,aAAa"},"metadata":{},"sourceType":"module"}