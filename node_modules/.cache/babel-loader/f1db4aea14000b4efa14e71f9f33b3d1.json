{"ast":null,"code":"var EXPLORER_HOSTNAMES={'etherscan.io':true,'ropsten.etherscan.io':true,'rinkeby.etherscan.io':true,'kovan.etherscan.io':true,'goerli.etherscan.io':true,'optimistic.etherscan.io':true,'goerli-optimism.etherscan.io':true,'rinkeby-explorer.arbitrum.io':true,'arbiscan.io':true};/**\n * Returns the anonymized version of the given href, i.e. one that does not leak user information\n * @param href the link to anonymize, i.e. remove any personal data from\n * @return string anonymized version of the given href\n */export function anonymizeLink(href){try{var url=new URL(href);if(EXPLORER_HOSTNAMES[url.hostname]){var pathPieces=url.pathname.split('/');var anonymizedPath=pathPieces.map(function(pc){return /0x[a-fA-F0-9]+/.test(pc)?'***':pc;}).join('/');return\"\".concat(url.protocol,\"//\").concat(url.hostname).concat(anonymizedPath);}return href;}catch(error){return href;}}","map":{"version":3,"names":["EXPLORER_HOSTNAMES","anonymizeLink","href","url","URL","hostname","pathPieces","pathname","split","anonymizedPath","map","pc","test","join","protocol","error"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/anonymizeLink.ts"],"sourcesContent":["const EXPLORER_HOSTNAMES: { [hostname: string]: true } = {\n  'etherscan.io': true,\n  'ropsten.etherscan.io': true,\n  'rinkeby.etherscan.io': true,\n  'kovan.etherscan.io': true,\n  'goerli.etherscan.io': true,\n  'optimistic.etherscan.io': true,\n  'goerli-optimism.etherscan.io': true,\n  'rinkeby-explorer.arbitrum.io': true,\n  'arbiscan.io': true,\n}\n\n/**\n * Returns the anonymized version of the given href, i.e. one that does not leak user information\n * @param href the link to anonymize, i.e. remove any personal data from\n * @return string anonymized version of the given href\n */\nexport function anonymizeLink(href: string): string {\n  try {\n    const url = new URL(href)\n    if (EXPLORER_HOSTNAMES[url.hostname]) {\n      const pathPieces = url.pathname.split('/')\n\n      const anonymizedPath = pathPieces.map((pc) => (/0x[a-fA-F0-9]+/.test(pc) ? '***' : pc)).join('/')\n\n      return `${url.protocol}//${url.hostname}${anonymizedPath}`\n    }\n    return href\n  } catch (error) {\n    return href\n  }\n}\n"],"mappings":"AAAA,GAAMA,mBAAgD,CAAG,CACvD,cAAc,CAAE,IAAI,CACpB,sBAAsB,CAAE,IAAI,CAC5B,sBAAsB,CAAE,IAAI,CAC5B,oBAAoB,CAAE,IAAI,CAC1B,qBAAqB,CAAE,IAAI,CAC3B,yBAAyB,CAAE,IAAI,CAC/B,8BAA8B,CAAE,IAAI,CACpC,8BAA8B,CAAE,IAAI,CACpC,aAAa,CAAE,IACjB,CAAC,CAED;AACA;AACA;AACA;AACA,GACA,MAAO,SAASC,cAAa,CAACC,IAAY,CAAU,CAClD,GAAI,CACF,GAAMC,IAAG,CAAG,GAAIC,IAAG,CAACF,IAAI,CAAC,CACzB,GAAIF,kBAAkB,CAACG,GAAG,CAACE,QAAQ,CAAC,CAAE,CACpC,GAAMC,WAAU,CAAGH,GAAG,CAACI,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAE1C,GAAMC,eAAc,CAAGH,UAAU,CAACI,GAAG,CAAC,SAACC,EAAE,QAAM,iBAAgB,CAACC,IAAI,CAACD,EAAE,CAAC,CAAG,KAAK,CAAGA,EAAE,EAAC,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAEjG,gBAAUV,GAAG,CAACW,QAAQ,cAAKX,GAAG,CAACE,QAAQ,SAAGI,cAAc,EAC1D,CACA,MAAOP,KAAI,CACb,CAAE,MAAOa,KAAK,CAAE,CACd,MAAOb,KAAI,CACb,CACF"},"metadata":{},"sourceType":"module"}