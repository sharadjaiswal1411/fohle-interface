{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { CHAIN_IDS_TO_NAMES } from 'constants/chains';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport useParsedQueryString from './useParsedQueryString';\nimport usePrevious from './usePrevious';\nimport useSelectChain from './useSelectChain';\nfunction getChainIdFromName(name) {\n  const entry = Object.entries(CHAIN_IDS_TO_NAMES).find(_ref => {\n    let [, n] = _ref;\n    return n === name;\n  });\n  const chainId = entry === null || entry === void 0 ? void 0 : entry[0];\n  return chainId ? parseInt(chainId) : undefined;\n}\nfunction getParsedChainId(parsedQs) {\n  const chain = parsedQs === null || parsedQs === void 0 ? void 0 : parsedQs.chain;\n  if (!chain || typeof chain !== 'string') return;\n  return getChainIdFromName(chain);\n}\nexport default function useSyncChainQuery() {\n  _s();\n  const {\n    chainId,\n    isActive\n  } = useWeb3React();\n  const parsedQs = useParsedQueryString();\n  const urlChainId = getParsedChainId(parsedQs);\n  const previousUrlChainId = usePrevious(urlChainId);\n  const selectChain = useSelectChain();\n\n  // Can't use `usePrevious` because `chainId` can be undefined while activating.\n  const [previousChainId, setPreviousChainId] = useState(undefined);\n  useEffect(() => {\n    if (chainId && chainId !== previousChainId) {\n      setPreviousChainId(chainId);\n    }\n  }, [chainId, previousChainId]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const chainQueryManuallyUpdated = urlChainId && urlChainId !== previousUrlChainId && isActive;\n  return useEffect(() => {\n    if (chainQueryManuallyUpdated) {\n      // If the query param changed, and the chain didn't change, then activate the new chain\n      selectChain(urlChainId);\n      searchParams.delete('chain');\n      setSearchParams(searchParams);\n    }\n  }, [chainQueryManuallyUpdated, urlChainId, selectChain, searchParams, setSearchParams]);\n}\n_s(useSyncChainQuery, \"iQxFx1ALlciPviy8kM7IpLcFaxg=\", false, function () {\n  return [useWeb3React, useParsedQueryString, usePrevious, useSelectChain, useSearchParams];\n});","map":{"version":3,"names":["useWeb3React","CHAIN_IDS_TO_NAMES","useEffect","useState","useSearchParams","useParsedQueryString","usePrevious","useSelectChain","getChainIdFromName","name","entry","Object","entries","find","n","chainId","parseInt","undefined","getParsedChainId","parsedQs","chain","useSyncChainQuery","isActive","urlChainId","previousUrlChainId","selectChain","previousChainId","setPreviousChainId","searchParams","setSearchParams","chainQueryManuallyUpdated","delete"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useSyncChainQuery.ts"],"sourcesContent":["import { useWeb3React } from '@web3-react/core'\nimport { CHAIN_IDS_TO_NAMES } from 'constants/chains'\nimport { ParsedQs } from 'qs'\nimport { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\n\nimport useParsedQueryString from './useParsedQueryString'\nimport usePrevious from './usePrevious'\nimport useSelectChain from './useSelectChain'\n\nfunction getChainIdFromName(name: string) {\n  const entry = Object.entries(CHAIN_IDS_TO_NAMES).find(([, n]) => n === name)\n  const chainId = entry?.[0]\n  return chainId ? parseInt(chainId) : undefined\n}\n\nfunction getParsedChainId(parsedQs?: ParsedQs) {\n  const chain = parsedQs?.chain\n  if (!chain || typeof chain !== 'string') return\n\n  return getChainIdFromName(chain)\n}\n\nexport default function useSyncChainQuery() {\n  const { chainId, isActive } = useWeb3React()\n  const parsedQs = useParsedQueryString()\n\n  const urlChainId = getParsedChainId(parsedQs)\n  const previousUrlChainId = usePrevious(urlChainId)\n\n  const selectChain = useSelectChain()\n\n  // Can't use `usePrevious` because `chainId` can be undefined while activating.\n  const [previousChainId, setPreviousChainId] = useState<number | undefined>(undefined)\n  useEffect(() => {\n    if (chainId && chainId !== previousChainId) {\n      setPreviousChainId(chainId)\n    }\n  }, [chainId, previousChainId])\n\n  const [searchParams, setSearchParams] = useSearchParams()\n\n  const chainQueryManuallyUpdated = urlChainId && urlChainId !== previousUrlChainId && isActive\n\n  return useEffect(() => {\n    if (chainQueryManuallyUpdated) {\n      // If the query param changed, and the chain didn't change, then activate the new chain\n      selectChain(urlChainId)\n      searchParams.delete('chain')\n      setSearchParams(searchParams)\n    }\n  }, [chainQueryManuallyUpdated, urlChainId, selectChain, searchParams, setSearchParams])\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,kBAAkB,QAAQ,kBAAkB;AAErD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,eAAe,QAAQ,kBAAkB;AAElD,OAAOC,oBAAoB,MAAM,wBAAwB;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,SAASC,kBAAkB,CAACC,IAAY,EAAE;EACxC,MAAMC,KAAK,GAAGC,MAAM,CAACC,OAAO,CAACX,kBAAkB,CAAC,CAACY,IAAI,CAAC;IAAA,IAAC,GAAGC,CAAC,CAAC;IAAA,OAAKA,CAAC,KAAKL,IAAI;EAAA,EAAC;EAC5E,MAAMM,OAAO,GAAGL,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAG,CAAC,CAAC;EAC1B,OAAOK,OAAO,GAAGC,QAAQ,CAACD,OAAO,CAAC,GAAGE,SAAS;AAChD;AAEA,SAASC,gBAAgB,CAACC,QAAmB,EAAE;EAC7C,MAAMC,KAAK,GAAGD,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,KAAK;EAC7B,IAAI,CAACA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;EAEzC,OAAOZ,kBAAkB,CAACY,KAAK,CAAC;AAClC;AAEA,eAAe,SAASC,iBAAiB,GAAG;EAAA;EAC1C,MAAM;IAAEN,OAAO;IAAEO;EAAS,CAAC,GAAGtB,YAAY,EAAE;EAC5C,MAAMmB,QAAQ,GAAGd,oBAAoB,EAAE;EAEvC,MAAMkB,UAAU,GAAGL,gBAAgB,CAACC,QAAQ,CAAC;EAC7C,MAAMK,kBAAkB,GAAGlB,WAAW,CAACiB,UAAU,CAAC;EAElD,MAAME,WAAW,GAAGlB,cAAc,EAAE;;EAEpC;EACA,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAqBc,SAAS,CAAC;EACrFf,SAAS,CAAC,MAAM;IACd,IAAIa,OAAO,IAAIA,OAAO,KAAKW,eAAe,EAAE;MAC1CC,kBAAkB,CAACZ,OAAO,CAAC;IAC7B;EACF,CAAC,EAAE,CAACA,OAAO,EAAEW,eAAe,CAAC,CAAC;EAE9B,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGzB,eAAe,EAAE;EAEzD,MAAM0B,yBAAyB,GAAGP,UAAU,IAAIA,UAAU,KAAKC,kBAAkB,IAAIF,QAAQ;EAE7F,OAAOpB,SAAS,CAAC,MAAM;IACrB,IAAI4B,yBAAyB,EAAE;MAC7B;MACAL,WAAW,CAACF,UAAU,CAAC;MACvBK,YAAY,CAACG,MAAM,CAAC,OAAO,CAAC;MAC5BF,eAAe,CAACD,YAAY,CAAC;IAC/B;EACF,CAAC,EAAE,CAACE,yBAAyB,EAAEP,UAAU,EAAEE,WAAW,EAAEG,YAAY,EAAEC,eAAe,CAAC,CAAC;AACzF;AAAC,GA7BuBR,iBAAiB;EAAA,QACTrB,YAAY,EACzBK,oBAAoB,EAGVC,WAAW,EAElBC,cAAc,EAUMH,eAAe;AAAA"},"metadata":{},"sourceType":"module"}