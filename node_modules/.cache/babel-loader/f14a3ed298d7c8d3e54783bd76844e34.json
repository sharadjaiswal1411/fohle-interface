{"ast":null,"code":"var _s = $RefreshSig$();\nimport * as Sentry from '@sentry/react';\nimport { SupportedChainId } from 'constants/chains';\nimport uriToHttp from 'lib/utils/uriToHttp';\nimport Vibrant from 'node-vibrant/lib/bundle.js';\nimport { shade } from 'polished';\nimport { useEffect, useState } from 'react';\nimport { WrappedTokenInfo } from 'state/lists/wrappedTokenInfo';\nimport { hex } from 'wcag-contrast';\nfunction URIForEthToken(address) {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n}\n_c = URIForEthToken;\nasync function getColorFromToken(token) {\n  if (!(token instanceof WrappedTokenInfo)) {\n    return null;\n  }\n  const wrappedToken = token;\n  const {\n    address\n  } = wrappedToken;\n  let {\n    logoURI\n  } = wrappedToken;\n  if (!logoURI) {\n    if (token.chainId !== SupportedChainId.MAINNET) {\n      return null;\n    } else {\n      logoURI = URIForEthToken(address);\n    }\n  }\n  try {\n    return await getColorFromUriPath(logoURI);\n  } catch (e) {\n    if (logoURI === URIForEthToken(address)) {\n      return null;\n    }\n    try {\n      logoURI = URIForEthToken(address);\n      return await getColorFromUriPath(logoURI);\n    } catch (error) {\n      Sentry.captureMessage(error.toString());\n    }\n  }\n  return null;\n}\nasync function getColorFromUriPath(uri) {\n  var _palette;\n  const formattedPath = uriToHttp(uri)[0];\n  let palette;\n  try {\n    palette = await Vibrant.from(formattedPath).getPalette();\n  } catch (err) {\n    return null;\n  }\n  if (!((_palette = palette) === null || _palette === void 0 ? void 0 : _palette.Vibrant)) {\n    return null;\n  }\n  let detectedHex = palette.Vibrant.hex;\n  let AAscore = hex(detectedHex, '#FFF');\n  while (AAscore < 3) {\n    detectedHex = shade(0.005, detectedHex);\n    AAscore = hex(detectedHex, '#FFF');\n  }\n  return detectedHex;\n}\nexport function useColor(token) {\n  _s();\n  const [color, setColor] = useState('#2172E5');\n  useEffect(() => {\n    let stale = false;\n    if (token) {\n      getColorFromToken(token).then(tokenColor => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor);\n        }\n      });\n    }\n    return () => {\n      stale = true;\n      setColor('#2172E5');\n    };\n  }, [token]);\n  return color;\n}\n_s(useColor, \"PRD+4UThTlY3+kTQdO19V42slD8=\");\nvar _c;\n$RefreshReg$(_c, \"URIForEthToken\");","map":{"version":3,"names":["Sentry","SupportedChainId","uriToHttp","Vibrant","shade","useEffect","useState","WrappedTokenInfo","hex","URIForEthToken","address","getColorFromToken","token","wrappedToken","logoURI","chainId","MAINNET","getColorFromUriPath","e","error","captureMessage","toString","uri","formattedPath","palette","from","getPalette","err","detectedHex","AAscore","useColor","color","setColor","stale","then","tokenColor"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useColor.ts"],"sourcesContent":["import * as Sentry from '@sentry/react'\nimport { Token } from '@uniswap/sdk-core'\nimport { SupportedChainId } from 'constants/chains'\nimport uriToHttp from 'lib/utils/uriToHttp'\nimport Vibrant from 'node-vibrant/lib/bundle.js'\nimport { shade } from 'polished'\nimport { useEffect, useState } from 'react'\nimport { WrappedTokenInfo } from 'state/lists/wrappedTokenInfo'\nimport { hex } from 'wcag-contrast'\n\nfunction URIForEthToken(address: string) {\n  return `https://raw.githubusercontent.com/uniswap/assets/master/blockchains/ethereum/assets/${address}/logo.png`\n}\n\nasync function getColorFromToken(token: Token): Promise<string | null> {\n  if (!(token instanceof WrappedTokenInfo)) {\n    return null\n  }\n\n  const wrappedToken = token as WrappedTokenInfo\n  const { address } = wrappedToken\n  let { logoURI } = wrappedToken\n  if (!logoURI) {\n    if (token.chainId !== SupportedChainId.MAINNET) {\n      return null\n    } else {\n      logoURI = URIForEthToken(address)\n    }\n  }\n\n  try {\n    return await getColorFromUriPath(logoURI)\n  } catch (e) {\n    if (logoURI === URIForEthToken(address)) {\n      return null\n    }\n\n    try {\n      logoURI = URIForEthToken(address)\n      return await getColorFromUriPath(logoURI)\n    } catch (error) {\n      Sentry.captureMessage(error.toString())\n    }\n  }\n\n  return null\n}\n\nasync function getColorFromUriPath(uri: string): Promise<string | null> {\n  const formattedPath = uriToHttp(uri)[0]\n\n  let palette\n\n  try {\n    palette = await Vibrant.from(formattedPath).getPalette()\n  } catch (err) {\n    return null\n  }\n  if (!palette?.Vibrant) {\n    return null\n  }\n\n  let detectedHex = palette.Vibrant.hex\n  let AAscore = hex(detectedHex, '#FFF')\n  while (AAscore < 3) {\n    detectedHex = shade(0.005, detectedHex)\n    AAscore = hex(detectedHex, '#FFF')\n  }\n\n  return detectedHex\n}\n\nexport function useColor(token?: Token) {\n  const [color, setColor] = useState('#2172E5')\n\n  useEffect(() => {\n    let stale = false\n\n    if (token) {\n      getColorFromToken(token).then((tokenColor) => {\n        if (!stale && tokenColor !== null) {\n          setColor(tokenColor)\n        }\n      })\n    }\n\n    return () => {\n      stale = true\n      setColor('#2172E5')\n    }\n  }, [token])\n\n  return color\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}