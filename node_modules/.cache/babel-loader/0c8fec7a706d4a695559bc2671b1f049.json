{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport { BigNumber } from '@ethersproject/bignumber';\nimport _ from 'lodash';\nimport { log } from '../util/log';\nimport { IGasPriceProvider } from './gas-price-provider';\n// We get the Xth percentile of priority fees for transactions successfully included in previous blocks.\nvar DEFAULT_PRIORITY_FEE_PERCENTILE = 50;\n// Infura docs say only past 4 blocks guaranteed to be available: https://infura.io/docs/ethereum#operation/eth_feeHistory\nvar DEFAULT_BLOCKS_TO_LOOK_BACK = 4;\n/**\n * Computes a gas estimate using on-chain data from the eth_feeHistory RPC endpoint.\n *\n * Takes the average priority fee from the past `blocksToConsider` blocks, and adds it\n * to the current base fee.\n *\n * @export\n * @class EIP1559GasPriceProvider\n */\nexport var EIP1559GasPriceProvider = /*#__PURE__*/function (_IGasPriceProvider) {\n  _inherits(EIP1559GasPriceProvider, _IGasPriceProvider);\n  var _super = _createSuper(EIP1559GasPriceProvider);\n  function EIP1559GasPriceProvider(provider) {\n    var _this;\n    var priorityFeePercentile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_PRIORITY_FEE_PERCENTILE;\n    var blocksToConsider = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_BLOCKS_TO_LOOK_BACK;\n    _classCallCheck(this, EIP1559GasPriceProvider);\n    _this = _super.call(this);\n    _this.provider = provider;\n    _this.priorityFeePercentile = priorityFeePercentile;\n    _this.blocksToConsider = blocksToConsider;\n    return _this;\n  }\n  _createClass(EIP1559GasPriceProvider, [{\n    key: \"getGasPrice\",\n    value: function () {\n      var _getGasPrice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var feeHistoryRaw, feeHistory, nextBlockBaseFeePerGas, averagePriorityFeePerGas, gasPriceWei, blockNumber;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.provider.send('eth_feeHistory', [\n                /**\n                 * @fix Use BigNumber.from(this.blocksToConsider).toHexString() after hardhat adds support\n                 * @see https://github.com/NomicFoundation/hardhat/issues/1585 .___.\n                 */\n                BigNumber.from(this.blocksToConsider).toHexString().replace('0x0', '0x'), 'latest', [this.priorityFeePercentile]]);\n              case 2:\n                feeHistoryRaw = _context.sent;\n                feeHistory = {\n                  baseFeePerGas: _.map(feeHistoryRaw.baseFeePerGas, function (b) {\n                    return BigNumber.from(b);\n                  }),\n                  gasUsedRatio: feeHistoryRaw.gasUsedRatio,\n                  oldestBlock: BigNumber.from(feeHistoryRaw.oldestBlock),\n                  reward: _.map(feeHistoryRaw.reward, function (b) {\n                    return BigNumber.from(b[0]);\n                  })\n                };\n                nextBlockBaseFeePerGas = feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length - 1];\n                averagePriorityFeePerGas = _.reduce(feeHistory.reward, function (sum, cur) {\n                  return sum.add(cur);\n                }, BigNumber.from(0)).div(feeHistory.reward.length);\n                log.info({\n                  feeHistory: feeHistory,\n                  feeHistoryReadable: {\n                    baseFeePerGas: _.map(feeHistory.baseFeePerGas, function (f) {\n                      return f.toString();\n                    }),\n                    oldestBlock: feeHistory.oldestBlock.toString(),\n                    reward: _.map(feeHistory.reward, function (r) {\n                      return r.toString();\n                    })\n                  },\n                  nextBlockBaseFeePerGas: nextBlockBaseFeePerGas.toString(),\n                  averagePriorityFeePerGas: averagePriorityFeePerGas.toString()\n                }, 'Got fee history from provider and computed gas estimate');\n                gasPriceWei = nextBlockBaseFeePerGas.add(averagePriorityFeePerGas);\n                blockNumber = feeHistory.oldestBlock.add(this.blocksToConsider);\n                log.info(\"Estimated gas price in wei: \".concat(gasPriceWei, \" as of block \").concat(blockNumber.toString()));\n                return _context.abrupt(\"return\", {\n                  gasPriceWei: gasPriceWei\n                });\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n      function getGasPrice() {\n        return _getGasPrice.apply(this, arguments);\n      }\n      return getGasPrice;\n    }()\n  }]);\n  return EIP1559GasPriceProvider;\n}(IGasPriceProvider);","map":{"version":3,"sources":["../../../src/providers/eip-1559-gas-price-provider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nimport _ from 'lodash';\nimport { log } from '../util/log';\nimport { IGasPriceProvider } from './gas-price-provider';\n// We get the Xth percentile of priority fees for transactions successfully included in previous blocks.\nconst DEFAULT_PRIORITY_FEE_PERCENTILE = 50;\n// Infura docs say only past 4 blocks guaranteed to be available: https://infura.io/docs/ethereum#operation/eth_feeHistory\nconst DEFAULT_BLOCKS_TO_LOOK_BACK = 4;\n/**\n * Computes a gas estimate using on-chain data from the eth_feeHistory RPC endpoint.\n *\n * Takes the average priority fee from the past `blocksToConsider` blocks, and adds it\n * to the current base fee.\n *\n * @export\n * @class EIP1559GasPriceProvider\n */\nexport class EIP1559GasPriceProvider extends IGasPriceProvider {\n    constructor(provider, priorityFeePercentile = DEFAULT_PRIORITY_FEE_PERCENTILE, blocksToConsider = DEFAULT_BLOCKS_TO_LOOK_BACK) {\n        super();\n        this.provider = provider;\n        this.priorityFeePercentile = priorityFeePercentile;\n        this.blocksToConsider = blocksToConsider;\n    }\n    async getGasPrice() {\n        const feeHistoryRaw = (await this.provider.send('eth_feeHistory', [\n            /**\n             * @fix Use BigNumber.from(this.blocksToConsider).toHexString() after hardhat adds support\n             * @see https://github.com/NomicFoundation/hardhat/issues/1585 .___.\n             */\n            BigNumber.from(this.blocksToConsider).toHexString().replace('0x0', '0x'),\n            'latest',\n            [this.priorityFeePercentile],\n        ]));\n        const feeHistory = {\n            baseFeePerGas: _.map(feeHistoryRaw.baseFeePerGas, (b) => BigNumber.from(b)),\n            gasUsedRatio: feeHistoryRaw.gasUsedRatio,\n            oldestBlock: BigNumber.from(feeHistoryRaw.oldestBlock),\n            reward: _.map(feeHistoryRaw.reward, (b) => BigNumber.from(b[0])),\n        };\n        const nextBlockBaseFeePerGas = feeHistory.baseFeePerGas[feeHistory.baseFeePerGas.length - 1];\n        const averagePriorityFeePerGas = _.reduce(feeHistory.reward, (sum, cur) => sum.add(cur), BigNumber.from(0)).div(feeHistory.reward.length);\n        log.info({\n            feeHistory,\n            feeHistoryReadable: {\n                baseFeePerGas: _.map(feeHistory.baseFeePerGas, (f) => f.toString()),\n                oldestBlock: feeHistory.oldestBlock.toString(),\n                reward: _.map(feeHistory.reward, (r) => r.toString()),\n            },\n            nextBlockBaseFeePerGas: nextBlockBaseFeePerGas.toString(),\n            averagePriorityFeePerGas: averagePriorityFeePerGas.toString(),\n        }, 'Got fee history from provider and computed gas estimate');\n        const gasPriceWei = nextBlockBaseFeePerGas.add(averagePriorityFeePerGas);\n        const blockNumber = feeHistory.oldestBlock.add(this.blocksToConsider);\n        log.info(`Estimated gas price in wei: ${gasPriceWei} as of block ${blockNumber.toString()}`);\n        return { gasPriceWei: gasPriceWei };\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWlwLTE1NTktZ2FzLXByaWNlLXByb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Byb3ZpZGVycy9laXAtMTU1OS1nYXMtcHJpY2UtcHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRXJELE9BQU8sQ0FBQyxNQUFNLFFBQVEsQ0FBQztBQUV2QixPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRWxDLE9BQU8sRUFBWSxpQkFBaUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBZ0JuRSx3R0FBd0c7QUFDeEcsTUFBTSwrQkFBK0IsR0FBRyxFQUFFLENBQUM7QUFDM0MsMEhBQTBIO0FBQzFILE1BQU0sMkJBQTJCLEdBQUcsQ0FBQyxDQUFDO0FBRXRDOzs7Ozs7OztHQVFHO0FBQ0gsTUFBTSxPQUFPLHVCQUF3QixTQUFRLGlCQUFpQjtJQUM1RCxZQUNZLFFBQXlCLEVBQzNCLHdCQUFnQywrQkFBK0IsRUFDL0QsbUJBQTJCLDJCQUEyQjtRQUU5RCxLQUFLLEVBQUUsQ0FBQztRQUpFLGFBQVEsR0FBUixRQUFRLENBQWlCO1FBQzNCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBMEM7UUFDL0QscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFzQztJQUdoRSxDQUFDO0lBRU0sS0FBSyxDQUFDLFdBQVc7UUFDdEIsTUFBTSxhQUFhLEdBQUcsQ0FBQyxNQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFnQixFQUFFO1lBQ2hFOzs7ZUFHRztZQUNILFNBQVMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUM7WUFDeEUsUUFBUTtZQUNSLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDO1NBQzdCLENBQUMsQ0FBMEIsQ0FBQztRQUU3QixNQUFNLFVBQVUsR0FBdUI7WUFDckMsYUFBYSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQ3RELFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQ2xCO1lBQ0QsWUFBWSxFQUFFLGFBQWEsQ0FBQyxZQUFZO1lBQ3hDLFdBQVcsRUFBRSxTQUFTLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7WUFDdEQsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNqRSxDQUFDO1FBRUYsTUFBTSxzQkFBc0IsR0FDMUIsVUFBVSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUUsQ0FBQztRQUVqRSxNQUFNLHdCQUF3QixHQUFHLENBQUMsQ0FBQyxNQUFNLENBQ3ZDLFVBQVUsQ0FBQyxNQUFNLEVBQ2pCLENBQUMsR0FBYyxFQUFFLEdBQWMsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFDaEQsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FDbEIsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVoQyxHQUFHLENBQUMsSUFBSSxDQUNOO1lBQ0UsVUFBVTtZQUNWLGtCQUFrQixFQUFFO2dCQUNsQixhQUFhLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsYUFBYSxFQUFFLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7Z0JBQ25FLFdBQVcsRUFBRSxVQUFVLENBQUMsV0FBVyxDQUFDLFFBQVEsRUFBRTtnQkFDOUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ3REO1lBQ0Qsc0JBQXNCLEVBQUUsc0JBQXNCLENBQUMsUUFBUSxFQUFFO1lBQ3pELHdCQUF3QixFQUFFLHdCQUF3QixDQUFDLFFBQVEsRUFBRTtTQUM5RCxFQUNELHlEQUF5RCxDQUMxRCxDQUFDO1FBRUYsTUFBTSxXQUFXLEdBQUcsc0JBQXNCLENBQUMsR0FBRyxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFFekUsTUFBTSxXQUFXLEdBQUcsVUFBVSxDQUFDLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUM7UUFFdEUsR0FBRyxDQUFDLElBQUksQ0FDTiwrQkFBK0IsV0FBVyxnQkFBZ0IsV0FBVyxDQUFDLFFBQVEsRUFBRSxFQUFFLENBQ25GLENBQUM7UUFFRixPQUFPLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBRSxDQUFDO0lBQ3RDLENBQUM7Q0FDRiJ9"]},"metadata":{},"sourceType":"module"}