{"ast":null,"code":"import{Trace}from'@uniswap/analytics';import{PageName}from'@uniswap/analytics-events';import{useWeb3React}from'@web3-react/core';import{Box}from'nft/components/Box';import{Center,Column}from'nft/components/Flex';import{ListPage}from'nft/components/profile/list/ListPage';import{ProfilePage}from'nft/components/profile/view/ProfilePage';import{ProfilePageLoadingSkeleton}from'nft/components/profile/view/ProfilePageLoadingSkeleton';import{buttonMedium,headlineMedium}from'nft/css/common.css';import{useBag,useNFTList,useProfilePageState,useSellAsset,useWalletCollections}from'nft/hooks';import{ListingStatus,ProfilePageStateType}from'nft/types';import{Suspense,useEffect,useRef}from'react';import{useToggleWalletModal}from'state/application/hooks';import*as styles from'./profile.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SHOPPING_BAG_WIDTH=360;var ProfileContent=function ProfileContent(){var sellPageState=useProfilePageState(function(state){return state.state;});var setSellPageState=useProfilePageState(function(state){return state.setProfilePageState;});var removeAllMarketplaceWarnings=useSellAsset(function(state){return state.removeAllMarketplaceWarnings;});var resetSellAssets=useSellAsset(function(state){return state.reset;});var clearCollectionFilters=useWalletCollections(function(state){return state.clearCollectionFilters;});var setListingStatus=useNFTList(function(state){return state.setListingStatus;});useEffect(function(){removeAllMarketplaceWarnings();setListingStatus(ListingStatus.DEFINED);},[removeAllMarketplaceWarnings,sellPageState,setListingStatus]);var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var accountRef=useRef(account);var toggleWalletModal=useToggleWalletModal();useEffect(function(){if(accountRef.current!==account){accountRef.current=account;resetSellAssets();setSellPageState(ProfilePageStateType.VIEWING);clearCollectionFilters();}},[account,resetSellAssets,setSellPageState,clearCollectionFilters]);var cartExpanded=useBag(function(state){return state.bagExpanded;});return/*#__PURE__*/_jsx(Trace,{page:PageName.NFT_PROFILE_PAGE,shouldLogImpression:true,children:/*#__PURE__*/_jsx(Box,{className:styles.profileWrapper,children:account?/*#__PURE__*/_jsx(Box,{style:{width:\"calc(100% - \".concat(cartExpanded?SHOPPING_BAG_WIDTH:0,\"px)\")},children:sellPageState===ProfilePageStateType.VIEWING?/*#__PURE__*/_jsx(ProfilePage,{}):/*#__PURE__*/_jsx(ListPage,{})}):/*#__PURE__*/_jsx(Column,{as:\"section\",gap:\"60\",className:styles.section,children:/*#__PURE__*/_jsx(\"div\",{style:{minHeight:'70vh'},children:/*#__PURE__*/_jsxs(Center,{className:styles.notConnected,flexDirection:\"column\",children:[/*#__PURE__*/_jsx(Box,{as:\"span\",className:headlineMedium,color:\"textSecondary\",marginBottom:\"24\",display:\"block\",children:\"No items to display\"}),/*#__PURE__*/_jsx(Box,{as:\"button\",className:buttonMedium,onClick:toggleWalletModal,children:\"Connect Wallet\"})]})})})})});};var Profile=function Profile(){return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(ProfilePageLoadingSkeleton,{}),children:/*#__PURE__*/_jsx(ProfileContent,{})});};export default Profile;","map":{"version":3,"names":["Trace","PageName","useWeb3React","Box","Center","Column","ListPage","ProfilePage","ProfilePageLoadingSkeleton","buttonMedium","headlineMedium","useBag","useNFTList","useProfilePageState","useSellAsset","useWalletCollections","ListingStatus","ProfilePageStateType","Suspense","useEffect","useRef","useToggleWalletModal","styles","SHOPPING_BAG_WIDTH","ProfileContent","sellPageState","state","setSellPageState","setProfilePageState","removeAllMarketplaceWarnings","resetSellAssets","reset","clearCollectionFilters","setListingStatus","DEFINED","account","accountRef","toggleWalletModal","current","VIEWING","cartExpanded","bagExpanded","NFT_PROFILE_PAGE","profileWrapper","width","section","minHeight","notConnected","Profile"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/pages/profile/profile.tsx"],"sourcesContent":["import { Trace } from '@uniswap/analytics'\nimport { PageName } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Box } from 'nft/components/Box'\nimport { Center, Column } from 'nft/components/Flex'\nimport { ListPage } from 'nft/components/profile/list/ListPage'\nimport { ProfilePage } from 'nft/components/profile/view/ProfilePage'\nimport { ProfilePageLoadingSkeleton } from 'nft/components/profile/view/ProfilePageLoadingSkeleton'\nimport { buttonMedium, headlineMedium } from 'nft/css/common.css'\nimport { useBag, useNFTList, useProfilePageState, useSellAsset, useWalletCollections } from 'nft/hooks'\nimport { ListingStatus, ProfilePageStateType } from 'nft/types'\nimport { Suspense, useEffect, useRef } from 'react'\nimport { useToggleWalletModal } from 'state/application/hooks'\n\nimport * as styles from './profile.css'\n\nconst SHOPPING_BAG_WIDTH = 360\n\nconst ProfileContent = () => {\n  const sellPageState = useProfilePageState((state) => state.state)\n  const setSellPageState = useProfilePageState((state) => state.setProfilePageState)\n  const removeAllMarketplaceWarnings = useSellAsset((state) => state.removeAllMarketplaceWarnings)\n  const resetSellAssets = useSellAsset((state) => state.reset)\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\n  const setListingStatus = useNFTList((state) => state.setListingStatus)\n\n  useEffect(() => {\n    removeAllMarketplaceWarnings()\n    setListingStatus(ListingStatus.DEFINED)\n  }, [removeAllMarketplaceWarnings, sellPageState, setListingStatus])\n\n  const { account } = useWeb3React()\n  const accountRef = useRef(account)\n  const toggleWalletModal = useToggleWalletModal()\n\n  useEffect(() => {\n    if (accountRef.current !== account) {\n      accountRef.current = account\n      resetSellAssets()\n      setSellPageState(ProfilePageStateType.VIEWING)\n      clearCollectionFilters()\n    }\n  }, [account, resetSellAssets, setSellPageState, clearCollectionFilters])\n  const cartExpanded = useBag((state) => state.bagExpanded)\n\n  return (\n    <Trace page={PageName.NFT_PROFILE_PAGE} shouldLogImpression>\n      <Box className={styles.profileWrapper}>\n        {/* <Head> TODO: figure out metadata tagging\n          <title>Genie | Sell</title>\n        </Head> */}\n        {account ? (\n          <Box style={{ width: `calc(100% - ${cartExpanded ? SHOPPING_BAG_WIDTH : 0}px)` }}>\n            {sellPageState === ProfilePageStateType.VIEWING ? <ProfilePage /> : <ListPage />}\n          </Box>\n        ) : (\n          <Column as=\"section\" gap=\"60\" className={styles.section}>\n            <div style={{ minHeight: '70vh' }}>\n              <Center className={styles.notConnected} flexDirection=\"column\">\n                <Box as=\"span\" className={headlineMedium} color=\"textSecondary\" marginBottom=\"24\" display=\"block\">\n                  No items to display\n                </Box>\n                <Box as=\"button\" className={buttonMedium} onClick={toggleWalletModal}>\n                  Connect Wallet\n                </Box>\n              </Center>\n            </div>\n          </Column>\n        )}\n      </Box>\n    </Trace>\n  )\n}\n\nconst Profile = () => {\n  return (\n    <Suspense fallback={<ProfilePageLoadingSkeleton />}>\n      <ProfileContent />\n    </Suspense>\n  )\n}\n\nexport default Profile\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}