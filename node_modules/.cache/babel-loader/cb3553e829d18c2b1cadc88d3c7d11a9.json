{"ast":null,"code":"var _s = $RefreshSig$();\nimport { CurrencyAmount } from '@uniswap/sdk-core';\nimport { useSingleCallResult } from 'lib/hooks/multicall';\nimport { useMemo } from 'react';\nimport { useTokenContract } from './useContract';\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token) {\n  _s();\n  var _useSingleCallResult, _useSingleCallResult$, _useSingleCallResult$2;\n  const contract = useTokenContract((token === null || token === void 0 ? void 0 : token.isToken) ? token.address : undefined, false);\n  const totalSupplyStr = (_useSingleCallResult = useSingleCallResult(contract, 'totalSupply')) === null || _useSingleCallResult === void 0 ? void 0 : (_useSingleCallResult$ = _useSingleCallResult.result) === null || _useSingleCallResult$ === void 0 ? void 0 : (_useSingleCallResult$2 = _useSingleCallResult$[0]) === null || _useSingleCallResult$2 === void 0 ? void 0 : _useSingleCallResult$2.toString();\n  return useMemo(() => (token === null || token === void 0 ? void 0 : token.isToken) && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined, [token, totalSupplyStr]);\n}\n_s(useTotalSupply, \"3QRCMKH8kaEbQOJ/ISuGGS5g0jU=\", false, function () {\n  return [useTokenContract, useSingleCallResult];\n});","map":{"version":3,"names":["CurrencyAmount","useSingleCallResult","useMemo","useTokenContract","useTotalSupply","token","contract","isToken","address","undefined","totalSupplyStr","result","toString","fromRawAmount"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useTotalSupply.ts"],"sourcesContent":["import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nexport function useTotalSupply(token?: Currency): CurrencyAmount<Token> | undefined {\n  const contract = useTokenContract(token?.isToken ? token.address : undefined, false)\n\n  const totalSupplyStr: string | undefined = useSingleCallResult(contract, 'totalSupply')?.result?.[0]?.toString()\n\n  return useMemo(\n    () => (token?.isToken && totalSupplyStr ? CurrencyAmount.fromRawAmount(token, totalSupplyStr) : undefined),\n    [token, totalSupplyStr]\n  )\n}\n"],"mappings":";AAAA,SAAmBA,cAAc,QAAe,mBAAmB;AACnE,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,OAAO,QAAQ,OAAO;AAE/B,SAASC,gBAAgB,QAAQ,eAAe;;AAEhD;AACA;AACA,OAAO,SAASC,cAAc,CAACC,KAAgB,EAAqC;EAAA;EAAA;EAClF,MAAMC,QAAQ,GAAGH,gBAAgB,CAAC,CAAAE,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,OAAO,IAAGF,KAAK,CAACG,OAAO,GAAGC,SAAS,EAAE,KAAK,CAAC;EAEpF,MAAMC,cAAkC,2BAAGT,mBAAmB,CAACK,QAAQ,EAAE,aAAa,CAAC,kFAA5C,qBAA8CK,MAAM,oFAApD,sBAAuD,CAAC,CAAC,2DAAzD,uBAA2DC,QAAQ,EAAE;EAEhH,OAAOV,OAAO,CACZ,MAAO,CAAAG,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,OAAO,KAAIG,cAAc,GAAGV,cAAc,CAACa,aAAa,CAACR,KAAK,EAAEK,cAAc,CAAC,GAAGD,SAAU,EAC1G,CAACJ,KAAK,EAAEK,cAAc,CAAC,CACxB;AACH;AAAC,GATeN,cAAc;EAAA,QACXD,gBAAgB,EAEUF,mBAAmB;AAAA"},"metadata":{},"sourceType":"module"}