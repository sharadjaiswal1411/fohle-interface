{"ast":null,"code":"/* eslint-disable */\nclass NullLogger {\n  constructor() {\n    this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using \"setGlobalLogger\"';\n    this.src = true;\n  }\n  addStream(_stream) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  addSerializers(_serializers) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  child(_options, _simple) {\n    return this;\n  }\n  reopenFileStreams() {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  level(_value) {\n    return;\n  }\n  levels(_name, _value) {\n    return;\n  }\n  trace() {\n    return true;\n  }\n  debug() {\n    return true;\n  }\n  info() {\n    return true;\n  }\n  warn() {\n    return true;\n  }\n  error() {\n    return true;\n  }\n  fatal() {\n    return true;\n  }\n  addListener(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  on(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  once(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  removeListener(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  off(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  removeAllListeners(_event) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  setMaxListeners(_n) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  getMaxListeners() {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  listeners(_event) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  rawListeners(_event) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  emit(_event) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  listenerCount(_event) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  prependListener(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  prependOnceListener(_event, _listener) {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n  eventNames() {\n    throw new Error(this.ERROR_MESSAGE);\n  }\n}\nexport let log = new NullLogger();\nexport const setGlobalLogger = _log => {\n  log = _log;\n};","map":{"version":3,"sources":["../../../src/util/log.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/* eslint-disable */\nclass NullLogger {\n    constructor() {\n        this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using \"setGlobalLogger\"';\n        this.src = true;\n    }\n    addStream(_stream) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    addSerializers(_serializers) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    child(_options, _simple) {\n        return this;\n    }\n    reopenFileStreams() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    level(_value) {\n        return;\n    }\n    levels(_name, _value) {\n        return;\n    }\n    trace(..._rest) {\n        return true;\n    }\n    debug(..._rest) {\n        return true;\n    }\n    info(..._rest) {\n        return true;\n    }\n    warn(..._rest) {\n        return true;\n    }\n    error(..._rest) {\n        return true;\n    }\n    fatal(..._rest) {\n        return true;\n    }\n    addListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    on(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    once(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    removeListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    off(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    removeAllListeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    setMaxListeners(_n) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    getMaxListeners() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    listeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    rawListeners(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    emit(_event, ..._args) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    listenerCount(_event) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    prependListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    prependOnceListener(_event, _listener) {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n    eventNames() {\n        throw new Error(this.ERROR_MESSAGE);\n    }\n}\nexport let log = new NullLogger();\nexport const setGlobalLogger = (_log) => {\n    log = _log;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWwvbG9nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLG9CQUFvQjtBQUlwQixNQUFNLFVBQVU7SUFBaEI7UUFDVSxrQkFBYSxHQUNuQixpRkFBaUYsQ0FBQztRQXlCcEYsUUFBRyxHQUFHLElBQUksQ0FBQztJQW9HYixDQUFDO0lBNUhDLFNBQVMsQ0FBQyxPQUFzQjtRQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBQ0QsY0FBYyxDQUFDLFlBQWdDO1FBQzdDLE1BQU0sSUFBSSxLQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFDRCxLQUFLLENBQUMsUUFBZ0IsRUFBRSxPQUFpQjtRQUN2QyxPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFDRCxpQkFBaUI7UUFDZixNQUFNLElBQUksS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBR0QsS0FBSyxDQUFDLE1BQVk7UUFDaEIsT0FBTztJQUNULENBQUM7SUFJRCxNQUFNLENBQUMsS0FBVyxFQUFFLE1BQVk7UUFDOUIsT0FBTztJQUNULENBQUM7SUFPRCxLQUFLLENBQUMsR0FBRyxLQUFVO1FBQ2pCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsSUFBSSxDQUFDLEdBQUcsS0FBVTtRQUNoQixPQUFPLElBQUksQ0FBQztJQUNkLENBQUM7SUFLRCxJQUFJLENBQUMsR0FBRyxLQUFVO1FBQ2hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUtELEtBQUssQ0FBQyxHQUFHLEtBQVU7UUFDakIsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBS0QsS0FBSyxDQUFDLEdB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"]},"metadata":{},"sourceType":"module"}