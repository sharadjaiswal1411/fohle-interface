{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import{Trans}from\"@lingui/react\";import{TradeType}from'@uniswap/sdk-core';import{useWeb3React}from'@web3-react/core';import useAutoSlippageTolerance from'hooks/useAutoSlippageTolerance';import{useBestTrade}from'hooks/useBestTrade';import tryParseCurrencyAmount from'lib/utils/tryParseCurrencyAmount';import{useCallback,useEffect,useMemo}from'react';import{useAppDispatch,useAppSelector}from'state/hooks';import{useUserSlippageToleranceWithDefault}from'state/user/hooks';import{TOKEN_SHORTHANDS}from'../../constants/tokens';import{useCurrency}from'../../hooks/Tokens';import useENS from'../../hooks/useENS';import useParsedQueryString from'../../hooks/useParsedQueryString';import{isAddress}from'../../utils';import{useCurrencyBalances}from'../connection/hooks';import{Field,replaceSwapState,selectCurrency,setRecipient,switchCurrencies,typeInput}from'./actions';import{jsx as _jsx}from\"react/jsx-runtime\";export function useSwapState(){return useAppSelector(function(state){return state.swap;});}export function useSwapActionHandlers(){var dispatch=useAppDispatch();var onCurrencySelection=useCallback(function(field,currency){dispatch(selectCurrency({field:field,currencyId:currency.isToken?currency.address:currency.isNative?'ETH':''}));},[dispatch]);var onSwitchTokens=useCallback(function(){dispatch(switchCurrencies());},[dispatch]);var onUserInput=useCallback(function(field,typedValue){dispatch(typeInput({field:field,typedValue:typedValue}));},[dispatch]);var onChangeRecipient=useCallback(function(recipient){dispatch(setRecipient({recipient:recipient}));},[dispatch]);return{onSwitchTokens:onSwitchTokens,onCurrencySelection:onCurrencySelection,onUserInput:onUserInput,onChangeRecipient:onChangeRecipient};}var BAD_RECIPIENT_ADDRESSES={'0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f':true,// v2 factory\n'0xf164fC0Ec4E93095b804a4795bBe1e041497b92a':true,// v2 router 01\n'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D':true// v2 router 02\n};// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(){var _ref,_ref3;var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var _useSwapState=useSwapState(),independentField=_useSwapState.independentField,typedValue=_useSwapState.typedValue,inputCurrencyId=_useSwapState[Field.INPUT].currencyId,outputCurrencyId=_useSwapState[Field.OUTPUT].currencyId,recipient=_useSwapState.recipient;var inputCurrency=useCurrency(inputCurrencyId);var outputCurrency=useCurrency(outputCurrencyId);var recipientLookup=useENS(recipient!==null&&recipient!==void 0?recipient:undefined);var to=(_ref=recipient===null?account:recipientLookup.address)!==null&&_ref!==void 0?_ref:null;var relevantTokenBalances=useCurrencyBalances(account!==null&&account!==void 0?account:undefined,useMemo(function(){return[inputCurrency!==null&&inputCurrency!==void 0?inputCurrency:undefined,outputCurrency!==null&&outputCurrency!==void 0?outputCurrency:undefined];},[inputCurrency,outputCurrency]));var isExactIn=independentField===Field.INPUT;var parsedAmount=useMemo(function(){var _ref2;return tryParseCurrencyAmount(typedValue,(_ref2=isExactIn?inputCurrency:outputCurrency)!==null&&_ref2!==void 0?_ref2:undefined);},[inputCurrency,isExactIn,outputCurrency,typedValue]);var trade=useBestTrade(isExactIn?TradeType.EXACT_INPUT:TradeType.EXACT_OUTPUT,parsedAmount,(_ref3=isExactIn?outputCurrency:inputCurrency)!==null&&_ref3!==void 0?_ref3:undefined);var currencyBalances=useMemo(function(){var _ref4;return _ref4={},_defineProperty(_ref4,Field.INPUT,relevantTokenBalances[0]),_defineProperty(_ref4,Field.OUTPUT,relevantTokenBalances[1]),_ref4;},[relevantTokenBalances]);var currencies=useMemo(function(){var _ref5;return _ref5={},_defineProperty(_ref5,Field.INPUT,inputCurrency),_defineProperty(_ref5,Field.OUTPUT,outputCurrency),_ref5;},[inputCurrency,outputCurrency]);// allowed slippage is either auto slippage, or custom user defined slippage if auto slippage disabled\nvar autoSlippageTolerance=useAutoSlippageTolerance(trade.trade);var allowedSlippage=useUserSlippageToleranceWithDefault(autoSlippageTolerance);var inputError=useMemo(function(){var _trade$trade;var inputError;if(!account){inputError=/*#__PURE__*/_jsx(Trans,{id:\"Connect Wallet\"});}if(!currencies[Field.INPUT]||!currencies[Field.OUTPUT]){var _inputError;inputError=(_inputError=inputError)!==null&&_inputError!==void 0?_inputError:/*#__PURE__*/_jsx(Trans,{id:\"Select a token\"});}if(!parsedAmount){var _inputError2;inputError=(_inputError2=inputError)!==null&&_inputError2!==void 0?_inputError2:/*#__PURE__*/_jsx(Trans,{id:\"Enter an amount\"});}var formattedTo=isAddress(to);if(!to||!formattedTo){var _inputError3;inputError=(_inputError3=inputError)!==null&&_inputError3!==void 0?_inputError3:/*#__PURE__*/_jsx(Trans,{id:\"Enter a recipient\"});}else{if(BAD_RECIPIENT_ADDRESSES[formattedTo]){var _inputError4;inputError=(_inputError4=inputError)!==null&&_inputError4!==void 0?_inputError4:/*#__PURE__*/_jsx(Trans,{id:\"Invalid recipient\"});}}// compare input balance to max input based on version\nvar _ref6=[currencyBalances[Field.INPUT],(_trade$trade=trade.trade)===null||_trade$trade===void 0?void 0:_trade$trade.maximumAmountIn(allowedSlippage)],balanceIn=_ref6[0],amountIn=_ref6[1];if(balanceIn&&amountIn&&balanceIn.lessThan(amountIn)){inputError=/*#__PURE__*/_jsx(Trans,{id:\"Insufficient {0} balance\",values:{0:amountIn.currency.symbol}});}return inputError;},[account,allowedSlippage,currencies,currencyBalances,parsedAmount,to,trade.trade]);return useMemo(function(){return{currencies:currencies,currencyBalances:currencyBalances,parsedAmount:parsedAmount,inputError:inputError,trade:trade,allowedSlippage:allowedSlippage};},[allowedSlippage,currencies,currencyBalances,inputError,parsedAmount,trade]);}function parseCurrencyFromURLParameter(urlParam){if(typeof urlParam==='string'){var valid=isAddress(urlParam);if(valid)return valid;var upper=urlParam.toUpperCase();if(upper==='ETH')return'ETH';if(upper in TOKEN_SHORTHANDS)return upper;}return'';}function parseTokenAmountURLParameter(urlParam){return typeof urlParam==='string'&&!isNaN(parseFloat(urlParam))?urlParam:'';}function parseIndependentFieldURLParameter(urlParam){return typeof urlParam==='string'&&urlParam.toLowerCase()==='output'?Field.OUTPUT:Field.INPUT;}var ENS_NAME_REGEX=/^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/;var ADDRESS_REGEX=/^0x[a-fA-F0-9]{40}$/;function validatedRecipient(recipient){if(typeof recipient!=='string')return null;var address=isAddress(recipient);if(address)return address;if(ENS_NAME_REGEX.test(recipient))return recipient;if(ADDRESS_REGEX.test(recipient))return recipient;return null;}export function queryParametersToSwapState(parsedQs){var _inputCurrency,_outputCurrency,_ref7;var inputCurrency=parseCurrencyFromURLParameter(parsedQs.inputCurrency);var outputCurrency=parseCurrencyFromURLParameter(parsedQs.outputCurrency);var typedValue=parseTokenAmountURLParameter(parsedQs.exactAmount);var independentField=parseIndependentFieldURLParameter(parsedQs.exactField);if(inputCurrency===''&&outputCurrency===''&&typedValue===''&&independentField===Field.INPUT){// Defaults to having the native currency selected\ninputCurrency='ETH';}else if(inputCurrency===outputCurrency){// clear output if identical\noutputCurrency='';}var recipient=validatedRecipient(parsedQs.recipient);return _ref7={},_defineProperty(_ref7,Field.INPUT,{currencyId:inputCurrency===''?null:(_inputCurrency=inputCurrency)!==null&&_inputCurrency!==void 0?_inputCurrency:null}),_defineProperty(_ref7,Field.OUTPUT,{currencyId:outputCurrency===''?null:(_outputCurrency=outputCurrency)!==null&&_outputCurrency!==void 0?_outputCurrency:null}),_defineProperty(_ref7,\"typedValue\",typedValue),_defineProperty(_ref7,\"independentField\",independentField),_defineProperty(_ref7,\"recipient\",recipient),_ref7;}// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch(){var _useWeb3React2=useWeb3React(),chainId=_useWeb3React2.chainId;var dispatch=useAppDispatch();var parsedQs=useParsedQueryString();var parsedSwapState=useMemo(function(){return queryParametersToSwapState(parsedQs);},[parsedQs]);useEffect(function(){var _parsedSwapState$Fiel,_parsedSwapState$Fiel2;if(!chainId)return;var inputCurrencyId=(_parsedSwapState$Fiel=parsedSwapState[Field.INPUT].currencyId)!==null&&_parsedSwapState$Fiel!==void 0?_parsedSwapState$Fiel:undefined;var outputCurrencyId=(_parsedSwapState$Fiel2=parsedSwapState[Field.OUTPUT].currencyId)!==null&&_parsedSwapState$Fiel2!==void 0?_parsedSwapState$Fiel2:undefined;dispatch(replaceSwapState({typedValue:parsedSwapState.typedValue,field:parsedSwapState.independentField,inputCurrencyId:inputCurrencyId,outputCurrencyId:outputCurrencyId,recipient:parsedSwapState.recipient}));// eslint-disable-next-line react-hooks/exhaustive-deps\n},[dispatch,chainId]);return parsedSwapState;}","map":{"version":3,"names":["TradeType","useWeb3React","useAutoSlippageTolerance","useBestTrade","tryParseCurrencyAmount","useCallback","useEffect","useMemo","useAppDispatch","useAppSelector","useUserSlippageToleranceWithDefault","TOKEN_SHORTHANDS","useCurrency","useENS","useParsedQueryString","isAddress","useCurrencyBalances","Field","replaceSwapState","selectCurrency","setRecipient","switchCurrencies","typeInput","useSwapState","state","swap","useSwapActionHandlers","dispatch","onCurrencySelection","field","currency","currencyId","isToken","address","isNative","onSwitchTokens","onUserInput","typedValue","onChangeRecipient","recipient","BAD_RECIPIENT_ADDRESSES","useDerivedSwapInfo","account","independentField","inputCurrencyId","INPUT","outputCurrencyId","OUTPUT","inputCurrency","outputCurrency","recipientLookup","undefined","to","relevantTokenBalances","isExactIn","parsedAmount","trade","EXACT_INPUT","EXACT_OUTPUT","currencyBalances","currencies","autoSlippageTolerance","allowedSlippage","inputError","formattedTo","maximumAmountIn","balanceIn","amountIn","lessThan","symbol","parseCurrencyFromURLParameter","urlParam","valid","upper","toUpperCase","parseTokenAmountURLParameter","isNaN","parseFloat","parseIndependentFieldURLParameter","toLowerCase","ENS_NAME_REGEX","ADDRESS_REGEX","validatedRecipient","test","queryParametersToSwapState","parsedQs","exactAmount","exactField","useDefaultsFromURLSearch","chainId","parsedSwapState"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/swap/hooks.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Currency, CurrencyAmount, Percent, TradeType } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport useAutoSlippageTolerance from 'hooks/useAutoSlippageTolerance'\nimport { useBestTrade } from 'hooks/useBestTrade'\nimport tryParseCurrencyAmount from 'lib/utils/tryParseCurrencyAmount'\nimport { ParsedQs } from 'qs'\nimport { ReactNode, useCallback, useEffect, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { InterfaceTrade, TradeState } from 'state/routing/types'\nimport { useUserSlippageToleranceWithDefault } from 'state/user/hooks'\n\nimport { TOKEN_SHORTHANDS } from '../../constants/tokens'\nimport { useCurrency } from '../../hooks/Tokens'\nimport useENS from '../../hooks/useENS'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport { isAddress } from '../../utils'\nimport { useCurrencyBalances } from '../connection/hooks'\nimport { AppState } from '../index'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\n\nexport function useSwapState(): AppState['swap'] {\n  return useAppSelector((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useAppDispatch()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency.isToken ? currency.address : currency.isNative ? 'ETH' : '',\n        })\n      )\n    },\n    [dispatch]\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch]\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch]\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\nconst BAD_RECIPIENT_ADDRESSES: { [address: string]: true } = {\n  '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f': true, // v2 factory\n  '0xf164fC0Ec4E93095b804a4795bBe1e041497b92a': true, // v2 router 01\n  '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D': true, // v2 router 02\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency | null }\n  currencyBalances: { [field in Field]?: CurrencyAmount<Currency> }\n  parsedAmount: CurrencyAmount<Currency> | undefined\n  inputError?: ReactNode\n  trade: {\n    trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n    state: TradeState\n  }\n  allowedSlippage: Percent\n} {\n  const { account } = useWeb3React()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(\n    account ?? undefined,\n    useMemo(() => [inputCurrency ?? undefined, outputCurrency ?? undefined], [inputCurrency, outputCurrency])\n  )\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = useMemo(\n    () => tryParseCurrencyAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined),\n    [inputCurrency, isExactIn, outputCurrency, typedValue]\n  )\n\n  const trade = useBestTrade(\n    isExactIn ? TradeType.EXACT_INPUT : TradeType.EXACT_OUTPUT,\n    parsedAmount,\n    (isExactIn ? outputCurrency : inputCurrency) ?? undefined\n  )\n\n  const currencyBalances = useMemo(\n    () => ({\n      [Field.INPUT]: relevantTokenBalances[0],\n      [Field.OUTPUT]: relevantTokenBalances[1],\n    }),\n    [relevantTokenBalances]\n  )\n\n  const currencies: { [field in Field]?: Currency | null } = useMemo(\n    () => ({\n      [Field.INPUT]: inputCurrency,\n      [Field.OUTPUT]: outputCurrency,\n    }),\n    [inputCurrency, outputCurrency]\n  )\n\n  // allowed slippage is either auto slippage, or custom user defined slippage if auto slippage disabled\n  const autoSlippageTolerance = useAutoSlippageTolerance(trade.trade)\n  const allowedSlippage = useUserSlippageToleranceWithDefault(autoSlippageTolerance)\n\n  const inputError = useMemo(() => {\n    let inputError: ReactNode | undefined\n\n    if (!account) {\n      inputError = <Trans>Connect Wallet</Trans>\n    }\n\n    if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n      inputError = inputError ?? <Trans>Select a token</Trans>\n    }\n\n    if (!parsedAmount) {\n      inputError = inputError ?? <Trans>Enter an amount</Trans>\n    }\n\n    const formattedTo = isAddress(to)\n    if (!to || !formattedTo) {\n      inputError = inputError ?? <Trans>Enter a recipient</Trans>\n    } else {\n      if (BAD_RECIPIENT_ADDRESSES[formattedTo]) {\n        inputError = inputError ?? <Trans>Invalid recipient</Trans>\n      }\n    }\n\n    // compare input balance to max input based on version\n    const [balanceIn, amountIn] = [currencyBalances[Field.INPUT], trade.trade?.maximumAmountIn(allowedSlippage)]\n\n    if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n      inputError = <Trans>Insufficient {amountIn.currency.symbol} balance</Trans>\n    }\n\n    return inputError\n  }, [account, allowedSlippage, currencies, currencyBalances, parsedAmount, to, trade.trade])\n\n  return useMemo(\n    () => ({\n      currencies,\n      currencyBalances,\n      parsedAmount,\n      inputError,\n      trade,\n      allowedSlippage,\n    }),\n    [allowedSlippage, currencies, currencyBalances, inputError, parsedAmount, trade]\n  )\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: ParsedQs[string]): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    const upper = urlParam.toUpperCase()\n    if (upper === 'ETH') return 'ETH'\n    if (upper in TOKEN_SHORTHANDS) return upper\n  }\n  return ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  const typedValue = parseTokenAmountURLParameter(parsedQs.exactAmount)\n  const independentField = parseIndependentFieldURLParameter(parsedQs.exactField)\n\n  if (inputCurrency === '' && outputCurrency === '' && typedValue === '' && independentField === Field.INPUT) {\n    // Defaults to having the native currency selected\n    inputCurrency = 'ETH'\n  } else if (inputCurrency === outputCurrency) {\n    // clear output if identical\n    outputCurrency = ''\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency === '' ? null : inputCurrency ?? null,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency === '' ? null : outputCurrency ?? null,\n    },\n    typedValue,\n    independentField,\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch(): SwapState {\n  const { chainId } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const parsedQs = useParsedQueryString()\n\n  const parsedSwapState = useMemo(() => {\n    return queryParametersToSwapState(parsedQs)\n  }, [parsedQs])\n\n  useEffect(() => {\n    if (!chainId) return\n    const inputCurrencyId = parsedSwapState[Field.INPUT].currencyId ?? undefined\n    const outputCurrencyId = parsedSwapState[Field.OUTPUT].currencyId ?? undefined\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsedSwapState.typedValue,\n        field: parsedSwapState.independentField,\n        inputCurrencyId,\n        outputCurrencyId,\n        recipient: parsedSwapState.recipient,\n      })\n    )\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return parsedSwapState\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}