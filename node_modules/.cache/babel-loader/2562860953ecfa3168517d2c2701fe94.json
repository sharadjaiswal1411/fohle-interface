{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { WINDOW } from '@sentry/browser';\nimport { getNumberOfUrlSegments, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React__default from 'react';\nvar _jsxFileName = \"/home/runner/work/sentry-javascript/sentry-javascript/packages/react/src/reactrouterv6.tsx\"; // Inspired from Donnie McNeal's solution:\n\nvar activeTransaction;\nvar _useEffect;\nvar _useLocation;\nvar _useNavigationType;\nvar _createRoutesFromChildren;\nvar _matchRoutes;\nvar _customStartTransaction;\nvar _startTransactionOnLocationChange;\nvar SENTRY_TAGS = {\n  'routing.instrumentation': 'react-router-v6'\n};\nfunction reactRouterV6Instrumentation(useEffect, useLocation, useNavigationType, createRoutesFromChildren, matchRoutes) {\n  return function (customStartTransaction) {\n    var startTransactionOnPageLoad = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var startTransactionOnLocationChange = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    var initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        op: 'pageload',\n        tags: SENTRY_TAGS,\n        metadata: {\n          source: 'url'\n        }\n      });\n    }\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\nfunction getNormalizedName(routes, location, matchRoutes) {\n  if (!routes || routes.length === 0 || !matchRoutes) {\n    return [location.pathname, 'url'];\n  }\n  var branches = matchRoutes(routes, location);\n  var pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (var x = 0; x < branches.length; x++) {\n      var branch = branches[x];\n      var route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [branch.pathname, 'route'];\n        }\n        var path = route.path;\n        if (path) {\n          var newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : \"/\".concat(path);\n          pathBuilder += newPath;\n          if (branch.pathname === location.pathname) {\n            if (\n            // If the route defined on the element is something like\n            // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n            // We should check against the branch.pathname for the number of / seperators\n            getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n            // We should not count wildcard operators in the url segments calculation\n            pathBuilder.slice(-2) !== '/*') {\n              return [newPath, 'route'];\n            }\n            return [pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n  return [location.pathname, 'url'];\n}\nfunction updatePageloadTransaction(location, routes) {\n  if (activeTransaction) {\n    var _activeTransaction;\n    (_activeTransaction = activeTransaction).setName.apply(_activeTransaction, _toConsumableArray(getNormalizedName(routes, location, _matchRoutes)));\n  }\n}\nfunction handleNavigation(location, routes, navigationType, isBaseLocation) {\n  if (isBaseLocation) {\n    if (activeTransaction) {\n      activeTransaction.finish();\n    }\n    return;\n  }\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP')) {\n    if (activeTransaction) {\n      activeTransaction.finish();\n    }\n    var _getNormalizedName = getNormalizedName(routes, location, _matchRoutes),\n      _getNormalizedName2 = _slicedToArray(_getNormalizedName, 2),\n      name = _getNormalizedName2[0],\n      source = _getNormalizedName2[1];\n    activeTransaction = _customStartTransaction({\n      name: name,\n      op: 'navigation',\n      tags: SENTRY_TAGS,\n      metadata: {\n        source: source\n      }\n    });\n  }\n}\nfunction withSentryReactRouterV6Routing(Routes) {\n  var _this = this;\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes || !_customStartTransaction) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn(\"reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\\n      useEffect: \".concat(_useEffect, \". useLocation: \").concat(_useLocation, \". useNavigationType: \").concat(_useNavigationType, \".\\n      createRoutesFromChildren: \").concat(_createRoutesFromChildren, \". matchRoutes: \").concat(_matchRoutes, \". customStartTransaction: \").concat(_customStartTransaction, \".\"));\n    return Routes;\n  }\n  var isBaseLocation = false;\n  var routes;\n  var SentryRoutes = function SentryRoutes(props) {\n    var location = _useLocation();\n    var navigationType = _useNavigationType();\n    _useEffect(function () {\n      // Performance concern:\n      // This is repeated when <Routes /> is rendered.\n      routes = _createRoutesFromChildren(props.children);\n      isBaseLocation = true;\n      updatePageloadTransaction(location, routes);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.children]);\n    _useEffect(function () {\n      handleNavigation(location, routes, navigationType, isBaseLocation);\n    }, [props.children, location, navigationType, isBaseLocation]);\n    isBaseLocation = false;\n\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return React__default.createElement(Routes, _objectSpread(_objectSpread({}, props), {}, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      }\n    }));\n  };\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\nfunction wrapUseRoutes(origUseRoutes) {\n  var _this2 = this;\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__) && logger.warn('reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.');\n    return origUseRoutes;\n  }\n  var isBaseLocation = false;\n  return function (routes, location) {\n    var SentryRoutes = function SentryRoutes(props) {\n      var Routes = origUseRoutes(routes, location);\n      var locationArgObject = typeof location === 'string' ? {\n        pathname: location\n      } : location;\n      var locationObject = locationArgObject || _useLocation();\n      var navigationType = _useNavigationType();\n      _useEffect(function () {\n        isBaseLocation = true;\n        updatePageloadTransaction(locationObject, routes);\n      }, [props]);\n      _useEffect(function () {\n        handleNavigation(locationObject, routes, navigationType, isBaseLocation);\n      }, [props, locationObject, navigationType, isBaseLocation]);\n      isBaseLocation = false;\n      return Routes;\n    };\n    return React__default.createElement(SentryRoutes, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      }\n    });\n  };\n}\nexport { reactRouterV6Instrumentation, withSentryReactRouterV6Routing, wrapUseRoutes };","map":{"version":3,"sources":["../../src/reactrouterv6.tsx"],"names":[],"mappings":"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","sourcesContent":["// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\nimport { WINDOW } from '@sentry/browser';\nimport { Transaction, TransactionContext, TransactionSource } from '@sentry/types';\nimport { getNumberOfUrlSegments, logger } from '@sentry/utils';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React from 'react';\n\nimport { Action, Location } from './types';\n\ninterface NonIndexRouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  index?: false;\n  path?: string;\n}\n\ninterface IndexRouteObject {\n  caseSensitive?: boolean;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  index?: true;\n  path?: string;\n}\n\n// This type was originally just `type RouteObject = IndexRouteObject`, but this was changed\n// in https://github.com/remix-run/react-router/pull/9366, which was released with `6.4.2`\n// See https://github.com/remix-run/react-router/issues/9427 for a discussion on this.\ntype RouteObject = IndexRouteObject | NonIndexRouteObject;\n\ntype Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\ntype UseRoutes = (routes: RouteObject[], locationArg?: Partial<Location> | string) => React.ReactElement | null;\n\n// https://github.com/remix-run/react-router/blob/9fa54d643134cd75a0335581a75db8100ed42828/packages/react-router/lib/router.ts#L114-L134\ninterface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\ntype UseEffect = (cb: () => void, deps: unknown[]) => void;\ntype UseLocation = () => Location;\ntype UseNavigationType = () => Action;\n\n// For both of these types, use `any` instead of `RouteObject[]` or `RouteMatch[]`.\n// Have to do this so we maintain backwards compatability between\n// react-router > 6.0.0 and >= 6.4.2.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype RouteObjectArrayAlias = any;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype RouteMatchAlias = any;\ntype CreateRoutesFromChildren = (children: JSX.Element[]) => RouteObjectArrayAlias;\ntype MatchRoutes = (routes: RouteObjectArrayAlias, location: Location) => RouteMatchAlias[] | null;\n\nlet activeTransaction: Transaction | undefined;\n\nlet _useEffect: UseEffect;\nlet _useLocation: UseLocation;\nlet _useNavigationType: UseNavigationType;\nlet _createRoutesFromChildren: CreateRoutesFromChildren;\nlet _matchRoutes: MatchRoutes;\nlet _customStartTransaction: (context: TransactionContext) => Transaction | undefined;\nlet _startTransactionOnLocationChange: boolean;\n\nconst SENTRY_TAGS = {\n  'routing.instrumentation': 'react-router-v6',\n};\n\nexport function reactRouterV6Instrumentation(\n  useEffect: UseEffect,\n  useLocation: UseLocation,\n  useNavigationType: UseNavigationType,\n  createRoutesFromChildren: CreateRoutesFromChildren,\n  matchRoutes: MatchRoutes,\n) {\n  return (\n    customStartTransaction: (context: TransactionContext) => Transaction | undefined,\n    startTransactionOnPageLoad = true,\n    startTransactionOnLocationChange = true,\n  ): void => {\n    const initPathName = WINDOW && WINDOW.location && WINDOW.location.pathname;\n    if (startTransactionOnPageLoad && initPathName) {\n      activeTransaction = customStartTransaction({\n        name: initPathName,\n        op: 'pageload',\n        tags: SENTRY_TAGS,\n        metadata: {\n          source: 'url',\n        },\n      });\n    }\n\n    _useEffect = useEffect;\n    _useLocation = useLocation;\n    _useNavigationType = useNavigationType;\n    _matchRoutes = matchRoutes;\n    _createRoutesFromChildren = createRoutesFromChildren;\n\n    _customStartTransaction = customStartTransaction;\n    _startTransactionOnLocationChange = startTransactionOnLocationChange;\n  };\n}\n\nfunction getNormalizedName(\n  routes: RouteObject[],\n  location: Location,\n  matchRoutes: MatchRoutes,\n): [string, TransactionSource] {\n  if (!routes || routes.length === 0 || !matchRoutes) {\n    return [location.pathname, 'url'];\n  }\n\n  const branches = matchRoutes(routes, location) as unknown as RouteMatch[];\n\n  let pathBuilder = '';\n  if (branches) {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let x = 0; x < branches.length; x++) {\n      const branch = branches[x];\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return [branch.pathname, 'route'];\n        }\n\n        const path = route.path;\n        if (path) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder += newPath;\n          if (branch.pathname === location.pathname) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / seperators\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              pathBuilder.slice(-2) !== '/*'\n            ) {\n              return [newPath, 'route'];\n            }\n            return [pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  return [location.pathname, 'url'];\n}\n\nfunction updatePageloadTransaction(location: Location, routes: RouteObject[]): void {\n  if (activeTransaction) {\n    activeTransaction.setName(...getNormalizedName(routes, location, _matchRoutes));\n  }\n}\n\nfunction handleNavigation(\n  location: Location,\n  routes: RouteObject[],\n  navigationType: Action,\n  isBaseLocation: boolean,\n): void {\n  if (isBaseLocation) {\n    if (activeTransaction) {\n      activeTransaction.finish();\n    }\n\n    return;\n  }\n\n  if (_startTransactionOnLocationChange && (navigationType === 'PUSH' || navigationType === 'POP')) {\n    if (activeTransaction) {\n      activeTransaction.finish();\n    }\n\n    const [name, source] = getNormalizedName(routes, location, _matchRoutes);\n    activeTransaction = _customStartTransaction({\n      name,\n      op: 'navigation',\n      tags: SENTRY_TAGS,\n      metadata: {\n        source,\n      },\n    });\n  }\n}\n\nexport function withSentryReactRouterV6Routing<P extends Record<string, any>, R extends React.FC<P>>(Routes: R): R {\n  if (\n    !_useEffect ||\n    !_useLocation ||\n    !_useNavigationType ||\n    !_createRoutesFromChildren ||\n    !_matchRoutes ||\n    !_customStartTransaction\n  ) {\n    __DEBUG_BUILD__ &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}. customStartTransaction: ${_customStartTransaction}.`);\n\n    return Routes;\n  }\n\n  let isBaseLocation: boolean = false;\n  let routes: RouteObject[];\n\n  const SentryRoutes: React.FC<P> = (props: P) => {\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(() => {\n      // Performance concern:\n      // This is repeated when <Routes /> is rendered.\n      routes = _createRoutesFromChildren(props.children) as RouteObject[];\n      isBaseLocation = true;\n\n      updatePageloadTransaction(location, routes);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [props.children]);\n\n    _useEffect(() => {\n      handleNavigation(location, routes, navigationType, isBaseLocation);\n    }, [props.children, location, navigationType, isBaseLocation]);\n\n    isBaseLocation = false;\n\n    // @ts-ignore Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return <Routes {...props} />;\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-ignore Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nexport function wrapUseRoutes(origUseRoutes: UseRoutes): UseRoutes {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes || !_customStartTransaction) {\n    __DEBUG_BUILD__ &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  let isBaseLocation: boolean = false;\n\n  return (routes: RouteObject[], location?: Partial<Location> | string): React.ReactElement | null => {\n    const SentryRoutes: React.FC<unknown> = (props: unknown) => {\n      const Routes = origUseRoutes(routes, location);\n\n      const locationArgObject = typeof location === 'string' ? { pathname: location } : location;\n      const locationObject = (locationArgObject as Location) || _useLocation();\n      const navigationType = _useNavigationType();\n\n      _useEffect(() => {\n        isBaseLocation = true;\n\n        updatePageloadTransaction(locationObject, routes);\n      }, [props]);\n\n      _useEffect(() => {\n        handleNavigation(locationObject, routes, navigationType, isBaseLocation);\n      }, [props, locationObject, navigationType, isBaseLocation]);\n\n      isBaseLocation = false;\n\n      return Routes;\n    };\n\n    return <SentryRoutes />;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}