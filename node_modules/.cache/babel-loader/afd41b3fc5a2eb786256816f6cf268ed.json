{"ast":null,"code":"import numbro from 'numbro';\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = function (num) {\n  let digits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  let round = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  if (num === 0) return '$0.00';\n  if (!num) return '-';\n  if (num < 0.001 && digits <= 3) {\n    return '<$0.001';\n  }\n  return numbro(num).formatCurrency({\n    average: round,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B'\n    }\n  });\n};","map":{"version":3,"names":["numbro","formatDollarAmount","num","digits","round","formatCurrency","average","mantissa","abbreviations","million","billion"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/numbers.ts"],"sourcesContent":["import numbro from 'numbro'\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num: number | undefined, digits = 2, round = true) => {\n  if (num === 0) return '$0.00'\n  if (!num) return '-'\n  if (num < 0.001 && digits <= 3) {\n    return '<$0.001'\n  }\n\n  return numbro(num).formatCurrency({\n    average: round,\n    mantissa: num > 1000 ? 2 : digits,\n    abbreviations: {\n      million: 'M',\n      billion: 'B',\n    },\n  })\n}\n\n\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,QAAQ;;AAE3B;AACA,OAAO,MAAMC,kBAAkB,GAAG,UAACC,GAAuB,EAA+B;EAAA,IAA7BC,MAAM,uEAAG,CAAC;EAAA,IAAEC,KAAK,uEAAG,IAAI;EAClF,IAAIF,GAAG,KAAK,CAAC,EAAE,OAAO,OAAO;EAC7B,IAAI,CAACA,GAAG,EAAE,OAAO,GAAG;EACpB,IAAIA,GAAG,GAAG,KAAK,IAAIC,MAAM,IAAI,CAAC,EAAE;IAC9B,OAAO,SAAS;EAClB;EAEA,OAAOH,MAAM,CAACE,GAAG,CAAC,CAACG,cAAc,CAAC;IAChCC,OAAO,EAAEF,KAAK;IACdG,QAAQ,EAAEL,GAAG,GAAG,IAAI,GAAG,CAAC,GAAGC,MAAM;IACjCK,aAAa,EAAE;MACbC,OAAO,EAAE,GAAG;MACZC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module"}