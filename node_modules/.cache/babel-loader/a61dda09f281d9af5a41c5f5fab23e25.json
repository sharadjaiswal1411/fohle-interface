{"ast":null,"code":"var _s = $RefreshSig$();\nimport { atom, useAtom } from 'jotai';\nimport { useCallback } from 'react';\nexport let TokenSortMethod;\n\n//export const filterStringAtom = atomWithReset<string>('')\n//export const filterTimeAtom = atom<TimePeriod>(TimePeriod.DAY)\n(function (TokenSortMethod) {\n  TokenSortMethod[\"feeTier\"] = \"feeTier\";\n  TokenSortMethod[\"volumeUSD\"] = \"volumeUSD\";\n  TokenSortMethod[\"tvlUSD\"] = \"tvlUSD\";\n  TokenSortMethod[\"volumeUSDWeek\"] = \"volumeUSDWeek\";\n  TokenSortMethod[\"tvlUSDChange\"] = \"tvlUSDChange\";\n})(TokenSortMethod || (TokenSortMethod = {}));\nexport const sortMethodAtom = atom(TokenSortMethod.tvlUSD);\nexport const sortAscendingAtom = atom(false);\n\n/* keep track of sort category for token table */\nexport function useSetSortMethod(newSortMethod) {\n  _s();\n  const [sortMethod, setSortMethod] = useAtom(sortMethodAtom);\n  const [sortAscending, setSortAscending] = useAtom(sortAscendingAtom);\n  return useCallback(() => {\n    if (sortMethod === newSortMethod) {\n      setSortAscending(!sortAscending);\n    } else {\n      setSortMethod(newSortMethod);\n      setSortAscending(false);\n    }\n  }, [sortMethod, setSortMethod, setSortAscending, sortAscending, newSortMethod]);\n}\n_s(useSetSortMethod, \"pTxGe2qQMcqfMi9GbBKml/SuP3g=\", false, function () {\n  return [useAtom, useAtom];\n});","map":{"version":3,"names":["atom","useAtom","useCallback","TokenSortMethod","sortMethodAtom","tvlUSD","sortAscendingAtom","useSetSortMethod","newSortMethod","sortMethod","setSortMethod","sortAscending","setSortAscending"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Pools/state.ts"],"sourcesContent":["import { atom, useAtom } from 'jotai'\nimport { useCallback } from 'react'\n\nexport enum TokenSortMethod {\n  feeTier = 'feeTier',\n  volumeUSD = 'volumeUSD',\n  tvlUSD = 'tvlUSD',\n  volumeUSDWeek = 'volumeUSDWeek',\n  tvlUSDChange = 'tvlUSDChange',\n}\n\n//export const filterStringAtom = atomWithReset<string>('')\n//export const filterTimeAtom = atom<TimePeriod>(TimePeriod.DAY)\nexport const sortMethodAtom = atom<TokenSortMethod>(TokenSortMethod.tvlUSD)\nexport const sortAscendingAtom = atom<boolean>(false)\n\n/* keep track of sort category for token table */\nexport function useSetSortMethod(newSortMethod: TokenSortMethod) {\n  const [sortMethod, setSortMethod] = useAtom(sortMethodAtom)\n  const [sortAscending, setSortAscending] = useAtom(sortAscendingAtom)\n\n  return useCallback(() => {\n    if (sortMethod === newSortMethod) {\n      setSortAscending(!sortAscending)\n    } else {\n      setSortMethod(newSortMethod)\n      setSortAscending(false)\n    }\n  }, [sortMethod, setSortMethod, setSortAscending, sortAscending, newSortMethod])\n}\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,OAAO,QAAQ,OAAO;AACrC,SAASC,WAAW,QAAQ,OAAO;AAEnC,WAAYC,eAAe;;AAQ3B;AACA;AAAA,WATYA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;EAAfA,eAAe;AAAA,GAAfA,eAAe,KAAfA,eAAe;AAU3B,OAAO,MAAMC,cAAc,GAAGJ,IAAI,CAAkBG,eAAe,CAACE,MAAM,CAAC;AAC3E,OAAO,MAAMC,iBAAiB,GAAGN,IAAI,CAAU,KAAK,CAAC;;AAErD;AACA,OAAO,SAASO,gBAAgB,CAACC,aAA8B,EAAE;EAAA;EAC/D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,OAAO,CAACG,cAAc,CAAC;EAC3D,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,OAAO,CAACK,iBAAiB,CAAC;EAEpE,OAAOJ,WAAW,CAAC,MAAM;IACvB,IAAIO,UAAU,KAAKD,aAAa,EAAE;MAChCI,gBAAgB,CAAC,CAACD,aAAa,CAAC;IAClC,CAAC,MAAM;MACLD,aAAa,CAACF,aAAa,CAAC;MAC5BI,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACH,UAAU,EAAEC,aAAa,EAAEE,gBAAgB,EAAED,aAAa,EAAEH,aAAa,CAAC,CAAC;AACjF;AAAC,GAZeD,gBAAgB;EAAA,QACMN,OAAO,EACDA,OAAO;AAAA"},"metadata":{},"sourceType":"module"}