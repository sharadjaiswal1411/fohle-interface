{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Trans}from\"@lingui/react\";import{Trace}from'@uniswap/analytics';import{ModalName}from'@uniswap/analytics-events';import{useCallback,useMemo,useState}from'react';import{tradeMeaningfullyDiffers}from'utils/tradeMeaningFullyDiffer';import TransactionConfirmationModal,{ConfirmationModalContent,TransactionErrorContent}from'../TransactionConfirmationModal';import SwapModalFooter from'./SwapModalFooter';import SwapModalHeader from'./SwapModalHeader';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ConfirmSwapModal(_ref){var _trade$inputAmount,_trade$inputAmount2,_trade$inputAmount2$c,_trade$outputAmount,_trade$outputAmount2,_trade$outputAmount2$;var trade=_ref.trade,originalTrade=_ref.originalTrade,onAcceptChanges=_ref.onAcceptChanges,allowedSlippage=_ref.allowedSlippage,onConfirm=_ref.onConfirm,onDismiss=_ref.onDismiss,recipient=_ref.recipient,swapErrorMessage=_ref.swapErrorMessage,isOpen=_ref.isOpen,attemptingTxn=_ref.attemptingTxn,txHash=_ref.txHash,swapQuoteReceivedDate=_ref.swapQuoteReceivedDate,fiatValueInput=_ref.fiatValueInput,fiatValueOutput=_ref.fiatValueOutput;// shouldLogModalCloseEvent lets the child SwapModalHeader component know when modal has been closed\n// and an event triggered by modal closing should be logged.\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),shouldLogModalCloseEvent=_useState2[0],setShouldLogModalCloseEvent=_useState2[1];var showAcceptChanges=useMemo(function(){return Boolean(trade&&originalTrade&&tradeMeaningfullyDiffers(trade,originalTrade));},[originalTrade,trade]);var onModalDismiss=useCallback(function(){if(isOpen)setShouldLogModalCloseEvent(true);onDismiss();},[isOpen,onDismiss]);var modalHeader=useCallback(function(){return trade?/*#__PURE__*/_jsx(SwapModalHeader,{trade:trade,shouldLogModalCloseEvent:shouldLogModalCloseEvent,setShouldLogModalCloseEvent:setShouldLogModalCloseEvent,allowedSlippage:allowedSlippage,recipient:recipient,showAcceptChanges:showAcceptChanges,onAcceptChanges:onAcceptChanges}):null;},[allowedSlippage,onAcceptChanges,recipient,showAcceptChanges,trade,shouldLogModalCloseEvent]);var modalBottom=useCallback(function(){return trade?/*#__PURE__*/_jsx(SwapModalFooter,{onConfirm:onConfirm,trade:trade,hash:txHash,allowedSlippage:allowedSlippage,disabledConfirm:showAcceptChanges,swapErrorMessage:swapErrorMessage,swapQuoteReceivedDate:swapQuoteReceivedDate,fiatValueInput:fiatValueInput,fiatValueOutput:fiatValueOutput}):null;},[onConfirm,showAcceptChanges,swapErrorMessage,trade,allowedSlippage,txHash,swapQuoteReceivedDate,fiatValueInput,fiatValueOutput]);// text to show while loading\nvar pendingText=/*#__PURE__*/_jsx(Trans,{id:\"Swapping {0} {1} for {2} {3}\",values:{0:trade===null||trade===void 0?void 0:(_trade$inputAmount=trade.inputAmount)===null||_trade$inputAmount===void 0?void 0:_trade$inputAmount.toSignificant(6),1:trade===null||trade===void 0?void 0:(_trade$inputAmount2=trade.inputAmount)===null||_trade$inputAmount2===void 0?void 0:(_trade$inputAmount2$c=_trade$inputAmount2.currency)===null||_trade$inputAmount2$c===void 0?void 0:_trade$inputAmount2$c.symbol,2:trade===null||trade===void 0?void 0:(_trade$outputAmount=trade.outputAmount)===null||_trade$outputAmount===void 0?void 0:_trade$outputAmount.toSignificant(6),3:trade===null||trade===void 0?void 0:(_trade$outputAmount2=trade.outputAmount)===null||_trade$outputAmount2===void 0?void 0:(_trade$outputAmount2$=_trade$outputAmount2.currency)===null||_trade$outputAmount2$===void 0?void 0:_trade$outputAmount2$.symbol}});var confirmationContent=useCallback(function(){return swapErrorMessage?/*#__PURE__*/_jsx(TransactionErrorContent,{onDismiss:onModalDismiss,message:swapErrorMessage}):/*#__PURE__*/_jsx(ConfirmationModalContent,{title:/*#__PURE__*/_jsx(Trans,{id:\"Confirm Swap\"}),onDismiss:onModalDismiss,topContent:modalHeader,bottomContent:modalBottom});},[onModalDismiss,modalBottom,modalHeader,swapErrorMessage]);return/*#__PURE__*/_jsx(Trace,{modal:ModalName.CONFIRM_SWAP,children:/*#__PURE__*/_jsx(TransactionConfirmationModal,{isOpen:isOpen,onDismiss:onModalDismiss,attemptingTxn:attemptingTxn,hash:txHash,content:confirmationContent,pendingText:pendingText,currencyToAdd:trade===null||trade===void 0?void 0:trade.outputAmount.currency})});}","map":{"version":3,"names":["Trace","ModalName","useCallback","useMemo","useState","tradeMeaningfullyDiffers","TransactionConfirmationModal","ConfirmationModalContent","TransactionErrorContent","SwapModalFooter","SwapModalHeader","ConfirmSwapModal","trade","originalTrade","onAcceptChanges","allowedSlippage","onConfirm","onDismiss","recipient","swapErrorMessage","isOpen","attemptingTxn","txHash","swapQuoteReceivedDate","fiatValueInput","fiatValueOutput","shouldLogModalCloseEvent","setShouldLogModalCloseEvent","showAcceptChanges","Boolean","onModalDismiss","modalHeader","modalBottom","pendingText","inputAmount","toSignificant","currency","symbol","outputAmount","confirmationContent","CONFIRM_SWAP"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/swap/ConfirmSwapModal.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { Trace } from '@uniswap/analytics'\nimport { ModalName } from '@uniswap/analytics-events'\nimport { Trade } from '@uniswap/router-sdk'\nimport { Currency, CurrencyAmount, Percent, Token, TradeType } from '@uniswap/sdk-core'\nimport { ReactNode, useCallback, useMemo, useState } from 'react'\nimport { InterfaceTrade } from 'state/routing/types'\nimport { tradeMeaningfullyDiffers } from 'utils/tradeMeaningFullyDiffer'\n\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from '../TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\nexport default function ConfirmSwapModal({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  swapQuoteReceivedDate,\n  fiatValueInput,\n  fiatValueOutput,\n}: {\n  isOpen: boolean\n  trade: InterfaceTrade<Currency, Currency, TradeType> | undefined\n  originalTrade: Trade<Currency, Currency, TradeType> | undefined\n  attemptingTxn: boolean\n  txHash: string | undefined\n  recipient: string | null\n  allowedSlippage: Percent\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage: ReactNode | undefined\n  onDismiss: () => void\n  swapQuoteReceivedDate: Date | undefined\n  fiatValueInput?: CurrencyAmount<Token> | null\n  fiatValueOutput?: CurrencyAmount<Token> | null\n}) {\n  // shouldLogModalCloseEvent lets the child SwapModalHeader component know when modal has been closed\n  // and an event triggered by modal closing should be logged.\n  const [shouldLogModalCloseEvent, setShouldLogModalCloseEvent] = useState(false)\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade]\n  )\n\n  const onModalDismiss = useCallback(() => {\n    if (isOpen) setShouldLogModalCloseEvent(true)\n    onDismiss()\n  }, [isOpen, onDismiss])\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        shouldLogModalCloseEvent={shouldLogModalCloseEvent}\n        setShouldLogModalCloseEvent={setShouldLogModalCloseEvent}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade, shouldLogModalCloseEvent])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        hash={txHash}\n        allowedSlippage={allowedSlippage}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        swapQuoteReceivedDate={swapQuoteReceivedDate}\n        fiatValueInput={fiatValueInput}\n        fiatValueOutput={fiatValueOutput}\n      />\n    ) : null\n  }, [\n    onConfirm,\n    showAcceptChanges,\n    swapErrorMessage,\n    trade,\n    allowedSlippage,\n    txHash,\n    swapQuoteReceivedDate,\n    fiatValueInput,\n    fiatValueOutput,\n  ])\n\n  // text to show while loading\n  const pendingText = (\n    <Trans>\n      Swapping {trade?.inputAmount?.toSignificant(6)} {trade?.inputAmount?.currency?.symbol} for{' '}\n      {trade?.outputAmount?.toSignificant(6)} {trade?.outputAmount?.currency?.symbol}\n    </Trans>\n  )\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onModalDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent\n          title={<Trans>Confirm Swap</Trans>}\n          onDismiss={onModalDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onModalDismiss, modalBottom, modalHeader, swapErrorMessage]\n  )\n\n  return (\n    <Trace modal={ModalName.CONFIRM_SWAP}>\n      <TransactionConfirmationModal\n        isOpen={isOpen}\n        onDismiss={onModalDismiss}\n        attemptingTxn={attemptingTxn}\n        hash={txHash}\n        content={confirmationContent}\n        pendingText={pendingText}\n        currencyToAdd={trade?.outputAmount.currency}\n      />\n    </Trace>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}