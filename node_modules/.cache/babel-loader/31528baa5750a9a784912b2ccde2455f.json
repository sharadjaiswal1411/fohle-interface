{"ast":null,"code":"export function getRarityStatus(rarityStatusCache, id, assets) {\n  if (rarityStatusCache.has(id)) {\n    return rarityStatusCache.get(id);\n  }\n  const hasRarity = assets && Array.from(assets).reduce((reducer, asset) => !!(reducer || (asset === null || asset === void 0 ? void 0 : asset.rarity)), false);\n  if (hasRarity) {\n    rarityStatusCache.set(id, hasRarity);\n  }\n  return hasRarity;\n}\nexport const getAssetHref = (asset, origin) => {\n  const address = asset.address !== undefined ? asset.address : asset.asset_contract.address;\n  return `/nfts/asset/${address}/${asset.tokenId}${origin ? `?origin=${origin}` : ''}`;\n};\nexport const getMarketplaceIcon = marketplace => {\n  return `/nft/svgs/marketplaces/${marketplace.toLowerCase()}.svg`;\n};\nexport const generateTweetForAsset = asset => {\n  return `https://twitter.com/intent/tweet?text=Check%20out%20${asset.name ? encodeURIComponent(asset.name) : `${asset.collectionName}%20%23${asset.tokenId}`}%20(${asset.collectionName})%20https://app.uniswap.org/%23/nfts/asset/${asset.address}/${asset.tokenId}%20via%20@uniswap`;\n};\nexport const generateTweetForPurchase = (assets, txHashUrl) => {\n  var _assets$0$collectionN;\n  const multipleCollections = assets.length > 0 && assets.some(asset => asset.address !== assets[0].address);\n  const tweetText = `I just purchased ${multipleCollections ? `${assets.length} NFTs` : `${assets.length} ${(_assets$0$collectionN = assets[0].collectionName) !== null && _assets$0$collectionN !== void 0 ? _assets$0$collectionN : 'NFT'}`} with Uniswap ðŸ¦„\\n\\nhttps://app.uniswap.org/#/nfts/collection/0x60bb1e2aa1c9acafb4d34f71585d7e959f387769\\n${txHashUrl}`;\n  return `https://twitter.com/intent/tweet?text=${encodeURIComponent(tweetText)}`;\n};","map":{"version":3,"names":["getRarityStatus","rarityStatusCache","id","assets","has","get","hasRarity","Array","from","reduce","reducer","asset","rarity","set","getAssetHref","origin","address","undefined","asset_contract","tokenId","getMarketplaceIcon","marketplace","toLowerCase","generateTweetForAsset","name","encodeURIComponent","collectionName","generateTweetForPurchase","txHashUrl","multipleCollections","length","some","tweetText"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/asset.ts"],"sourcesContent":["import { DetailsOrigin, GenieAsset, UpdatedGenieAsset, WalletAsset } from 'nft/types'\n\nexport function getRarityStatus(\n  rarityStatusCache: Map<string, boolean>,\n  id: string,\n  assets?: (GenieAsset | undefined)[]\n) {\n  if (rarityStatusCache.has(id)) {\n    return rarityStatusCache.get(id)\n  }\n  const hasRarity = assets && Array.from(assets).reduce((reducer, asset) => !!(reducer || asset?.rarity), false)\n\n  if (hasRarity) {\n    rarityStatusCache.set(id, hasRarity)\n  }\n\n  return hasRarity\n}\n\nexport const getAssetHref = (asset: GenieAsset | WalletAsset, origin?: DetailsOrigin) => {\n  const address =\n    (asset as GenieAsset).address !== undefined\n      ? (asset as GenieAsset).address\n      : (asset as WalletAsset).asset_contract.address\n  return `/nfts/asset/${address}/${asset.tokenId}${origin ? `?origin=${origin}` : ''}`\n}\n\nexport const getMarketplaceIcon = (marketplace: string) => {\n  return `/nft/svgs/marketplaces/${marketplace.toLowerCase()}.svg`\n}\n\nexport const generateTweetForAsset = (asset: GenieAsset): string => {\n  return `https://twitter.com/intent/tweet?text=Check%20out%20${\n    asset.name ? encodeURIComponent(asset.name) : `${asset.collectionName}%20%23${asset.tokenId}`\n  }%20(${asset.collectionName})%20https://app.uniswap.org/%23/nfts/asset/${asset.address}/${\n    asset.tokenId\n  }%20via%20@uniswap`\n}\n\nexport const generateTweetForPurchase = (assets: UpdatedGenieAsset[], txHashUrl: string): string => {\n  const multipleCollections = assets.length > 0 && assets.some((asset) => asset.address !== assets[0].address)\n  const tweetText = `I just purchased ${\n    multipleCollections ? `${assets.length} NFTs` : `${assets.length} ${assets[0].collectionName ?? 'NFT'}`\n  } with Uniswap ðŸ¦„\\n\\nhttps://app.uniswap.org/#/nfts/collection/0x60bb1e2aa1c9acafb4d34f71585d7e959f387769\\n${txHashUrl}`\n  return `https://twitter.com/intent/tweet?text=${encodeURIComponent(tweetText)}`\n}\n"],"mappings":"AAEA,OAAO,SAASA,eAAe,CAC7BC,iBAAuC,EACvCC,EAAU,EACVC,MAAmC,EACnC;EACA,IAAIF,iBAAiB,CAACG,GAAG,CAACF,EAAE,CAAC,EAAE;IAC7B,OAAOD,iBAAiB,CAACI,GAAG,CAACH,EAAE,CAAC;EAClC;EACA,MAAMI,SAAS,GAAGH,MAAM,IAAII,KAAK,CAACC,IAAI,CAACL,MAAM,CAAC,CAACM,MAAM,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK,CAAC,EAAED,OAAO,KAAIC,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,MAAM,EAAC,EAAE,KAAK,CAAC;EAE9G,IAAIN,SAAS,EAAE;IACbL,iBAAiB,CAACY,GAAG,CAACX,EAAE,EAAEI,SAAS,CAAC;EACtC;EAEA,OAAOA,SAAS;AAClB;AAEA,OAAO,MAAMQ,YAAY,GAAG,CAACH,KAA+B,EAAEI,MAAsB,KAAK;EACvF,MAAMC,OAAO,GACVL,KAAK,CAAgBK,OAAO,KAAKC,SAAS,GACtCN,KAAK,CAAgBK,OAAO,GAC5BL,KAAK,CAAiBO,cAAc,CAACF,OAAO;EACnD,OAAQ,eAAcA,OAAQ,IAAGL,KAAK,CAACQ,OAAQ,GAAEJ,MAAM,GAAI,WAAUA,MAAO,EAAC,GAAG,EAAG,EAAC;AACtF,CAAC;AAED,OAAO,MAAMK,kBAAkB,GAAIC,WAAmB,IAAK;EACzD,OAAQ,0BAAyBA,WAAW,CAACC,WAAW,EAAG,MAAK;AAClE,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIZ,KAAiB,IAAa;EAClE,OAAQ,uDACNA,KAAK,CAACa,IAAI,GAAGC,kBAAkB,CAACd,KAAK,CAACa,IAAI,CAAC,GAAI,GAAEb,KAAK,CAACe,cAAe,SAAQf,KAAK,CAACQ,OAAQ,EAC7F,OAAMR,KAAK,CAACe,cAAe,8CAA6Cf,KAAK,CAACK,OAAQ,IACrFL,KAAK,CAACQ,OACP,mBAAkB;AACrB,CAAC;AAED,OAAO,MAAMQ,wBAAwB,GAAG,CAACxB,MAA2B,EAAEyB,SAAiB,KAAa;EAAA;EAClG,MAAMC,mBAAmB,GAAG1B,MAAM,CAAC2B,MAAM,GAAG,CAAC,IAAI3B,MAAM,CAAC4B,IAAI,CAAEpB,KAAK,IAAKA,KAAK,CAACK,OAAO,KAAKb,MAAM,CAAC,CAAC,CAAC,CAACa,OAAO,CAAC;EAC5G,MAAMgB,SAAS,GAAI,oBACjBH,mBAAmB,GAAI,GAAE1B,MAAM,CAAC2B,MAAO,OAAM,GAAI,GAAE3B,MAAM,CAAC2B,MAAO,IAAC,yBAAE3B,MAAM,CAAC,CAAC,CAAC,CAACuB,cAAc,yEAAI,KAAM,EACvG,6GAA4GE,SAAU,EAAC;EACxH,OAAQ,yCAAwCH,kBAAkB,CAACO,SAAS,CAAE,EAAC;AACjF,CAAC"},"metadata":{},"sourceType":"module"}