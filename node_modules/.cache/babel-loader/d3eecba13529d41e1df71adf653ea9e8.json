{"ast":null,"code":"import{nativeOnChain,WRAPPED_NATIVE_CURRENCY}from'../constants/tokens';import{supportedChainId}from'./supportedChainId';export function unwrappedToken(currency){var _WRAPPED_NATIVE_CURRE;if(currency.isNative)return currency;var formattedChainId=supportedChainId(currency.chainId);if(formattedChainId&&((_WRAPPED_NATIVE_CURRE=WRAPPED_NATIVE_CURRENCY[formattedChainId])===null||_WRAPPED_NATIVE_CURRE===void 0?void 0:_WRAPPED_NATIVE_CURRE.equals(currency)))return nativeOnChain(currency.chainId);return currency;}","map":{"version":3,"names":["nativeOnChain","WRAPPED_NATIVE_CURRENCY","supportedChainId","unwrappedToken","currency","isNative","formattedChainId","chainId","equals"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/unwrappedToken.ts"],"sourcesContent":["import { Currency } from '@uniswap/sdk-core'\n\nimport { nativeOnChain, WRAPPED_NATIVE_CURRENCY } from '../constants/tokens'\nimport { supportedChainId } from './supportedChainId'\n\nexport function unwrappedToken(currency: Currency): Currency {\n  if (currency.isNative) return currency\n  const formattedChainId = supportedChainId(currency.chainId)\n  if (formattedChainId && WRAPPED_NATIVE_CURRENCY[formattedChainId]?.equals(currency))\n    return nativeOnChain(currency.chainId)\n  return currency\n}\n"],"mappings":"AAEA,OAASA,aAAa,CAAEC,uBAAuB,KAAQ,qBAAqB,CAC5E,OAASC,gBAAgB,KAAQ,oBAAoB,CAErD,MAAO,SAASC,eAAc,CAACC,QAAkB,CAAY,2BAC3D,GAAIA,QAAQ,CAACC,QAAQ,CAAE,MAAOD,SAAQ,CACtC,GAAME,iBAAgB,CAAGJ,gBAAgB,CAACE,QAAQ,CAACG,OAAO,CAAC,CAC3D,GAAID,gBAAgB,0BAAIL,uBAAuB,CAACK,gBAAgB,CAAC,gDAAzC,sBAA2CE,MAAM,CAACJ,QAAQ,CAAC,EACjF,MAAOJ,cAAa,CAACI,QAAQ,CAACG,OAAO,CAAC,CACxC,MAAOH,SAAQ,CACjB"},"metadata":{},"sourceType":"module"}