{"ast":null,"code":"import _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error ? thrownValue : new NonErrorThrown(thrownValue);\n}\nvar NonErrorThrown = /*#__PURE__*/function (_Error) {\n  _inherits(NonErrorThrown, _Error);\n  var _super = _createSuper(NonErrorThrown);\n  function NonErrorThrown(thrownValue) {\n    var _this;\n    _classCallCheck(this, NonErrorThrown);\n    _this = _super.call(this, 'Unexpected error value: ' + inspect(thrownValue));\n    _this.name = 'NonErrorThrown';\n    _this.thrownValue = thrownValue;\n    return _this;\n  }\n  return _createClass(NonErrorThrown);\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"names":["inspect","toError","thrownValue","Error","NonErrorThrown","name"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/graphql/jsutils/toError.mjs"],"sourcesContent":["import { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + inspect(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n"],"mappings":";;;;;AAAA,SAASA,OAAO,QAAQ,eAAe;AACvC;AACA;AACA;;AAEA,OAAO,SAASC,OAAO,CAACC,WAAW,EAAE;EACnC,OAAOA,WAAW,YAAYC,KAAK,GAC/BD,WAAW,GACX,IAAIE,cAAc,CAACF,WAAW,CAAC;AACrC;AAAC,IAEKE,cAAc;EAAA;EAAA;EAClB,wBAAYF,WAAW,EAAE;IAAA;IAAA;IACvB,0BAAM,0BAA0B,GAAGF,OAAO,CAACE,WAAW,CAAC;IACvD,MAAKG,IAAI,GAAG,gBAAgB;IAC5B,MAAKH,WAAW,GAAGA,WAAW;IAAC;EACjC;EAAC;AAAA,iCAL0BC,KAAK"},"metadata":{},"sourceType":"module"}