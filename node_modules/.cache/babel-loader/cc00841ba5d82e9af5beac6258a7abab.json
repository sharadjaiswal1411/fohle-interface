{"ast":null,"code":"import _regeneratorRuntime from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nvar PrecacheCacheKeyPlugin = /*#__PURE__*/_createClass(function PrecacheCacheKeyPlugin(_ref) {\n  var _this = this;\n  var precacheController = _ref.precacheController;\n  _classCallCheck(this, PrecacheCacheKeyPlugin);\n  this.cacheKeyWillBeUsed = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var request, params, cacheKey;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              request = _ref2.request, params = _ref2.params;\n              cacheKey = params && params.cacheKey || _this._precacheController.getCacheKeyForURL(request.url);\n              return _context.abrupt(\"return\", cacheKey ? new Request(cacheKey) : request);\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  this._precacheController = precacheController;\n});\nexport { PrecacheCacheKeyPlugin };","map":{"version":3,"names":["PrecacheCacheKeyPlugin","precacheController","cacheKeyWillBeUsed","request","params","cacheKey","_precacheController","getCacheKeyForURL","url","Request"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js"],"sourcesContent":["/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            const cacheKey = params && params.cacheKey ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            return cacheKey ? new Request(cacheKey) : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAgB;AACvB;AACA;AACA;AACA;AACA;AACA;AALA,IAMMA,sBAAsB,6BACxB,sCAAoC;EAAA;EAAA,IAAtBC,kBAAkB,QAAlBA,kBAAkB;EAAA;EAC5B,IAAI,CAACC,kBAAkB;IAAA,qEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAASC,OAAO,SAAPA,OAAO,EAAEC,MAAM,SAANA,MAAM;cACxCC,QAAQ,GAAGD,MAAM,IAAIA,MAAM,CAACC,QAAQ,IACtC,KAAI,CAACC,mBAAmB,CAACC,iBAAiB,CAACJ,OAAO,CAACK,GAAG,CAAC;cAAA,iCACpDH,QAAQ,GAAG,IAAII,OAAO,CAACJ,QAAQ,CAAC,GAAGF,OAAO;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CACpD;IAAA;MAAA;IAAA;EAAA;EACD,IAAI,CAACG,mBAAmB,GAAGL,kBAAkB;AACjD,CAAC;AAEL,SAASD,sBAAsB"},"metadata":{},"sourceType":"module"}