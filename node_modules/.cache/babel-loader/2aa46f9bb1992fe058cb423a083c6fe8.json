{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Tokens/TokenDetails/ChartSection.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { ParentSize } from '@visx/responsive';\nimport { ChartContainer, LoadingChart } from 'components/Tokens/TokenDetails/Skeleton';\nimport { isPricePoint } from 'graphql/data/util';\nimport { useAtomValue } from 'jotai/utils';\nimport { pageTimePeriodAtom } from 'pages/TokenDetails';\nimport { startTransition, Suspense, useMemo } from 'react';\nimport { PriceChart } from './PriceChart';\nimport TimePeriodSelector from './TimeSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction usePriceHistory(tokenPriceData) {\n  _s();\n  // Appends the current price to the end of the priceHistory array\n  const priceHistory = useMemo(() => {\n    var _tokenPriceData$token, _tokenPriceData$token2, _market$priceHistory, _market$price;\n    const market = (_tokenPriceData$token = tokenPriceData.tokens) === null || _tokenPriceData$token === void 0 ? void 0 : (_tokenPriceData$token2 = _tokenPriceData$token[0]) === null || _tokenPriceData$token2 === void 0 ? void 0 : _tokenPriceData$token2.market;\n    const priceHistory = market === null || market === void 0 ? void 0 : (_market$priceHistory = market.priceHistory) === null || _market$priceHistory === void 0 ? void 0 : _market$priceHistory.filter(isPricePoint);\n    const currentPrice = market === null || market === void 0 ? void 0 : (_market$price = market.price) === null || _market$price === void 0 ? void 0 : _market$price.value;\n    if (Array.isArray(priceHistory) && currentPrice !== undefined) {\n      const timestamp = Date.now() / 1000;\n      return [...priceHistory, {\n        timestamp,\n        value: currentPrice\n      }];\n    }\n    return priceHistory;\n  }, [tokenPriceData]);\n  return priceHistory;\n}\n_s(usePriceHistory, \"Cmn2TWEqvkSm+kQB14xOTzMKCPA=\");\nexport default function ChartSection(_ref) {\n  let {\n    tokenPriceQuery,\n    onChangeTimePeriod\n  } = _ref;\n  if (!tokenPriceQuery) {\n    return /*#__PURE__*/_jsxDEV(LoadingChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(LoadingChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(ChartContainer, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        tokenPriceQuery: tokenPriceQuery,\n        onChangeTimePeriod: onChangeTimePeriod\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartSection;\nfunction Chart(_ref2) {\n  _s2();\n  let {\n    tokenPriceQuery,\n    onChangeTimePeriod\n  } = _ref2;\n  const prices = usePriceHistory(tokenPriceQuery);\n  // Initializes time period to global & maintain separate time period for subsequent changes\n  const timePeriod = useAtomValue(pageTimePeriodAtom);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ParentSize, {\n      children: _ref3 => {\n        let {\n          width\n        } = _ref3;\n        return /*#__PURE__*/_jsxDEV(PriceChart, {\n          prices: prices !== null && prices !== void 0 ? prices : null,\n          width: width,\n          height: 436,\n          timePeriod: timePeriod\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimePeriodSelector, {\n      currentTimePeriod: timePeriod,\n      onTimeChange: t => {\n        startTransition(() => onChangeTimePeriod(t));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s2(Chart, \"uepn7YyXx899JF2Fzz7tlZLa07E=\", false, function () {\n  return [usePriceHistory, useAtomValue];\n});\n_c2 = Chart;\nvar _c, _c2;\n$RefreshReg$(_c, \"ChartSection\");\n$RefreshReg$(_c2, \"Chart\");","map":{"version":3,"names":["ParentSize","ChartContainer","LoadingChart","isPricePoint","useAtomValue","pageTimePeriodAtom","startTransition","Suspense","useMemo","PriceChart","TimePeriodSelector","usePriceHistory","tokenPriceData","priceHistory","market","tokens","filter","currentPrice","price","value","Array","isArray","undefined","timestamp","Date","now","ChartSection","tokenPriceQuery","onChangeTimePeriod","Chart","prices","timePeriod","width","t"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/Tokens/TokenDetails/ChartSection.tsx"],"sourcesContent":["import { ParentSize } from '@visx/responsive'\nimport { ChartContainer, LoadingChart } from 'components/Tokens/TokenDetails/Skeleton'\nimport { TokenPriceQuery } from 'graphql/data/TokenPrice'\nimport { isPricePoint, PricePoint } from 'graphql/data/util'\nimport { TimePeriod } from 'graphql/data/util'\nimport { useAtomValue } from 'jotai/utils'\nimport { pageTimePeriodAtom } from 'pages/TokenDetails'\nimport { startTransition, Suspense, useMemo } from 'react'\n\nimport { PriceChart } from './PriceChart'\nimport TimePeriodSelector from './TimeSelector'\n\nfunction usePriceHistory(tokenPriceData: TokenPriceQuery): PricePoint[] | undefined {\n  // Appends the current price to the end of the priceHistory array\n  const priceHistory = useMemo(() => {\n    const market = tokenPriceData.tokens?.[0]?.market\n    const priceHistory = market?.priceHistory?.filter(isPricePoint)\n    const currentPrice = market?.price?.value\n    if (Array.isArray(priceHistory) && currentPrice !== undefined) {\n      const timestamp = Date.now() / 1000\n      return [...priceHistory, { timestamp, value: currentPrice }]\n    }\n    return priceHistory\n  }, [tokenPriceData])\n\n  return priceHistory\n}\nexport default function ChartSection({\n  tokenPriceQuery,\n  onChangeTimePeriod,\n}: {\n  tokenPriceQuery?: TokenPriceQuery\n  onChangeTimePeriod: OnChangeTimePeriod\n}) {\n  if (!tokenPriceQuery) {\n    return <LoadingChart />\n  }\n\n  return (\n    <Suspense fallback={<LoadingChart />}>\n      <ChartContainer>\n        <Chart tokenPriceQuery={tokenPriceQuery} onChangeTimePeriod={onChangeTimePeriod} />\n      </ChartContainer>\n    </Suspense>\n  )\n}\n\nexport type OnChangeTimePeriod = (t: TimePeriod) => void\nfunction Chart({\n  tokenPriceQuery,\n  onChangeTimePeriod,\n}: {\n  tokenPriceQuery: TokenPriceQuery\n  onChangeTimePeriod: OnChangeTimePeriod\n}) {\n  const prices = usePriceHistory(tokenPriceQuery)\n  // Initializes time period to global & maintain separate time period for subsequent changes\n  const timePeriod = useAtomValue(pageTimePeriodAtom)\n\n  return (\n    <ChartContainer>\n      <ParentSize>\n        {({ width }) => <PriceChart prices={prices ?? null} width={width} height={436} timePeriod={timePeriod} />}\n      </ParentSize>\n      <TimePeriodSelector\n        currentTimePeriod={timePeriod}\n        onTimeChange={(t: TimePeriod) => {\n          startTransition(() => onChangeTimePeriod(t))\n        }}\n      />\n    </ChartContainer>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}