{"ast":null,"code":"import { Pair } from '@uniswap/v2-sdk';\nimport { Pool } from '@uniswap/v3-sdk';\nimport { log } from '../../../util/log';\nimport { routeToString } from '../../../util/routes';\nimport { MixedRoute, V2Route, V3Route } from '../../router';\nexport function computeAllV3Routes(tokenIn, tokenOut, pools, maxHops) {\n  return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n    return new V3Route(route, tokenIn, tokenOut);\n  }, pools, maxHops);\n}\nexport function computeAllV2Routes(tokenIn, tokenOut, pools, maxHops) {\n  return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n    return new V2Route(route, tokenIn, tokenOut);\n  }, pools, maxHops);\n}\nexport function computeAllMixedRoutes(tokenIn, tokenOut, parts, maxHops) {\n  const routesRaw = computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n    return new MixedRoute(route, tokenIn, tokenOut);\n  }, parts, maxHops);\n  /// filter out pure v3 and v2 routes\n  return routesRaw.filter(route => {\n    return !route.pools.every(pool => pool instanceof Pool) && !route.pools.every(pool => pool instanceof Pair);\n  });\n}\nexport function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {\n  const poolsUsed = Array(pools.length).fill(false);\n  const routes = [];\n  const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, _previousTokenOut) => {\n    if (currentRoute.length > maxHops) {\n      return;\n    }\n    if (currentRoute.length > 0 && currentRoute[currentRoute.length - 1].involvesToken(tokenOut)) {\n      routes.push(buildRoute([...currentRoute], tokenIn, tokenOut));\n      return;\n    }\n    for (let i = 0; i < pools.length; i++) {\n      if (poolsUsed[i]) {\n        continue;\n      }\n      const curPool = pools[i];\n      const previousTokenOut = _previousTokenOut ? _previousTokenOut : tokenIn;\n      if (!curPool.involvesToken(previousTokenOut)) {\n        continue;\n      }\n      const currentTokenOut = curPool.token0.equals(previousTokenOut) ? curPool.token1 : curPool.token0;\n      currentRoute.push(curPool);\n      poolsUsed[i] = true;\n      computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, currentTokenOut);\n      poolsUsed[i] = false;\n      currentRoute.pop();\n    }\n  };\n  computeRoutes(tokenIn, tokenOut, [], poolsUsed);\n  log.info({\n    routes: routes.map(routeToString)\n  }, `Computed ${routes.length} possible routes.`);\n  return routes;\n}","map":{"version":3,"sources":["../../../../../src/routers/alpha-router/functions/compute-all-routes.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { Pair } from '@uniswap/v2-sdk';\nimport { Pool } from '@uniswap/v3-sdk';\nimport { log } from '../../../util/log';\nimport { routeToString } from '../../../util/routes';\nimport { MixedRoute, V2Route, V3Route } from '../../router';\nexport function computeAllV3Routes(tokenIn, tokenOut, pools, maxHops) {\n    return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n        return new V3Route(route, tokenIn, tokenOut);\n    }, pools, maxHops);\n}\nexport function computeAllV2Routes(tokenIn, tokenOut, pools, maxHops) {\n    return computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n        return new V2Route(route, tokenIn, tokenOut);\n    }, pools, maxHops);\n}\nexport function computeAllMixedRoutes(tokenIn, tokenOut, parts, maxHops) {\n    const routesRaw = computeAllRoutes(tokenIn, tokenOut, (route, tokenIn, tokenOut) => {\n        return new MixedRoute(route, tokenIn, tokenOut);\n    }, parts, maxHops);\n    /// filter out pure v3 and v2 routes\n    return routesRaw.filter((route) => {\n        return (!route.pools.every((pool) => pool instanceof Pool) &&\n            !route.pools.every((pool) => pool instanceof Pair));\n    });\n}\nexport function computeAllRoutes(tokenIn, tokenOut, buildRoute, pools, maxHops) {\n    const poolsUsed = Array(pools.length).fill(false);\n    const routes = [];\n    const computeRoutes = (tokenIn, tokenOut, currentRoute, poolsUsed, _previousTokenOut) => {\n        if (currentRoute.length > maxHops) {\n            return;\n        }\n        if (currentRoute.length > 0 &&\n            currentRoute[currentRoute.length - 1].involvesToken(tokenOut)) {\n            routes.push(buildRoute([...currentRoute], tokenIn, tokenOut));\n            return;\n        }\n        for (let i = 0; i < pools.length; i++) {\n            if (poolsUsed[i]) {\n                continue;\n            }\n            const curPool = pools[i];\n            const previousTokenOut = _previousTokenOut ? _previousTokenOut : tokenIn;\n            if (!curPool.involvesToken(previousTokenOut)) {\n                continue;\n            }\n            const currentTokenOut = curPool.token0.equals(previousTokenOut)\n                ? curPool.token1\n                : curPool.token0;\n            currentRoute.push(curPool);\n            poolsUsed[i] = true;\n            computeRoutes(tokenIn, tokenOut, currentRoute, poolsUsed, currentTokenOut);\n            poolsUsed[i] = false;\n            currentRoute.pop();\n        }\n    };\n    computeRoutes(tokenIn, tokenOut, [], poolsUsed);\n    log.info({\n        routes: routes.map(routeToString),\n    }, `Computed ${routes.length} possible routes.`);\n    return routes;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcHV0ZS1hbGwtcm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL3JvdXRlcnMvYWxwaGEtcm91dGVyL2Z1bmN0aW9ucy9jb21wdXRlLWFsbC1yb3V0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDeEMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUU1RCxNQUFNLFVBQVUsa0JBQWtCLENBQ2hDLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBYSxFQUNiLE9BQWU7SUFFZixPQUFPLGdCQUFnQixDQUNyQixPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBYSxFQUFFLE9BQWMsRUFBRSxRQUFlLEVBQUUsRUFBRTtRQUNqRCxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENBQ1IsQ0FBQztBQUNKLENBQUM7QUFFRCxNQUFNLFVBQVUsa0JBQWtCLENBQ2hDLE9BQWMsRUFDZCxRQUFlLEVBQ2YsS0FBYSxFQUNiLE9BQWU7SUFFZixPQUFPLGdCQUFnQixDQUNyQixPQUFPLEVBQ1AsUUFBUSxFQUNSLENBQUMsS0FBYSxFQUFFLE9BQWMsRUFBRSxRQUFlLEVBQUUsRUFBRTtRQUNqRCxPQUFPLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRSxPQUFPLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDL0MsQ0FBQyxFQUNELEtBQUssRUFDTCxPQUFPLENB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"]},"metadata":{},"sourceType":"module"}