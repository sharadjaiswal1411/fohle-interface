{"ast":null,"code":"import{useCallback}from'react';import{useAppDispatch,useAppSelector}from'state/hooks';import{addConnectedWallet}from'./reducer';export function useConnectedWallets(){var dispatch=useAppDispatch();var connectedWallets=useAppSelector(function(state){return state.wallets.connectedWallets;});var addWallet=useCallback(function(wallet){dispatch(addConnectedWallet(wallet));},[dispatch]);return[connectedWallets,addWallet];}","map":{"version":3,"names":["useCallback","useAppDispatch","useAppSelector","addConnectedWallet","useConnectedWallets","dispatch","connectedWallets","state","wallets","addWallet","wallet"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/wallets/hooks.tsx"],"sourcesContent":["import { useCallback } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { addConnectedWallet } from './reducer'\nimport { Wallet } from './types'\n\nexport function useConnectedWallets(): [Wallet[], (wallet: Wallet) => void] {\n  const dispatch = useAppDispatch()\n  const connectedWallets = useAppSelector((state) => state.wallets.connectedWallets)\n  const addWallet = useCallback(\n    (wallet: Wallet) => {\n      dispatch(addConnectedWallet(wallet))\n    },\n    [dispatch]\n  )\n  return [connectedWallets, addWallet]\n}\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CACnC,OAASC,cAAc,CAAEC,cAAc,KAAQ,aAAa,CAE5D,OAASC,kBAAkB,KAAQ,WAAW,CAG9C,MAAO,SAASC,oBAAmB,EAAyC,CAC1E,GAAMC,SAAQ,CAAGJ,cAAc,EAAE,CACjC,GAAMK,iBAAgB,CAAGJ,cAAc,CAAC,SAACK,KAAK,QAAKA,MAAK,CAACC,OAAO,CAACF,gBAAgB,GAAC,CAClF,GAAMG,UAAS,CAAGT,WAAW,CAC3B,SAACU,MAAc,CAAK,CAClBL,QAAQ,CAACF,kBAAkB,CAACO,MAAM,CAAC,CAAC,CACtC,CAAC,CACD,CAACL,QAAQ,CAAC,CACX,CACD,MAAO,CAACC,gBAAgB,CAAEG,SAAS,CAAC,CACtC"},"metadata":{},"sourceType":"module"}