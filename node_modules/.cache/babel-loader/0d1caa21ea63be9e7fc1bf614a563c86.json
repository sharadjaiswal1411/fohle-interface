{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var fetchRoute=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref){var toSell,toBuy,senderAddress,url,payload,r,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:toSell=_ref.toSell,toBuy=_ref.toBuy,senderAddress=_ref.senderAddress;url=\"\".concat(process.env.REACT_APP_TEMP_API_URL,\"/nft/route\");payload={sell:_toConsumableArray(toSell).map(function(x){return buildRouteItem(x);}),buy:_toConsumableArray(toBuy).filter(function(x){return x.tokenType!=='Dust';}).map(function(x){return buildRouteItem(x);}),sender:senderAddress};_context.next=5;return fetch(url,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});case 5:r=_context.sent;_context.next=8;return r.json();case 8:data=_context.sent;return _context.abrupt(\"return\",data);case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchRoute(_x){return _ref2.apply(this,arguments);};}();var buildRouteItem=function buildRouteItem(item){var _item$name;return{id:item.id,symbol:item.priceInfo.baseAsset,name:(_item$name=item.name)!==null&&_item$name!==void 0?_item$name:'',decimals:parseFloat(item.priceInfo.baseDecimals),address:item.address,tokenType:item.tokenType,tokenId:item.tokenId,marketplace:item.marketplace,collectionName:item.collectionName,amount:1,priceInfo:{basePrice:item.priceInfo.basePrice,baseAsset:item.priceInfo.baseAsset,ETHPrice:item.priceInfo.ETHPrice}};};","map":{"version":3,"names":["fetchRoute","toSell","toBuy","senderAddress","url","process","env","REACT_APP_TEMP_API_URL","payload","sell","map","x","buildRouteItem","buy","filter","tokenType","sender","fetch","method","headers","body","JSON","stringify","r","json","data","item","id","symbol","priceInfo","baseAsset","name","decimals","parseFloat","baseDecimals","address","tokenId","marketplace","collectionName","amount","basePrice","ETHPrice"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/queries/genie/RouteFetcher.ts"],"sourcesContent":["import { NftStandard } from 'graphql/data/__generated__/types-and-hooks'\nimport { GenieAsset, RouteResponse } from 'nft/types'\n\nexport const fetchRoute = async ({\n  toSell,\n  toBuy,\n  senderAddress,\n}: {\n  toSell: any\n  toBuy: any\n  senderAddress: string\n}): Promise<RouteResponse> => {\n  const url = `${process.env.REACT_APP_TEMP_API_URL}/nft/route`\n  const payload = {\n    sell: [...toSell].map((x) => buildRouteItem(x)),\n    buy: [...toBuy].filter((x) => x.tokenType !== 'Dust').map((x) => buildRouteItem(x)),\n    sender: senderAddress,\n  }\n\n  const r = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(payload),\n  })\n  const data = await r.json()\n\n  return data\n}\n\ntype ApiPriceInfo = {\n  basePrice: string\n  baseAsset: string\n  ETHPrice: string\n}\n\ntype RouteItem = {\n  id?: string\n  symbol?: string\n  name: string\n  decimals: number\n  address: string\n  priceInfo: ApiPriceInfo\n  tokenType?: NftStandard\n  tokenId: string\n  amount: number\n  marketplace?: string\n  collectionName?: string\n}\n\nconst buildRouteItem = (item: GenieAsset): RouteItem => {\n  return {\n    id: item.id,\n    symbol: item.priceInfo.baseAsset,\n    name: item.name ?? '',\n    decimals: parseFloat(item.priceInfo.baseDecimals),\n    address: item.address,\n    tokenType: item.tokenType,\n    tokenId: item.tokenId,\n    marketplace: item.marketplace,\n    collectionName: item.collectionName,\n    amount: 1,\n    priceInfo: {\n      basePrice: item.priceInfo.basePrice,\n      baseAsset: item.priceInfo.baseAsset,\n      ETHPrice: item.priceInfo.ETHPrice,\n    },\n  }\n}\n"],"mappings":"ygBAGA,MAAO,IAAMA,WAAU,2FAAG,yLACxBC,MAAM,MAANA,MAAM,CACNC,KAAK,MAALA,KAAK,CACLC,aAAa,MAAbA,aAAa,CAMPC,GAAG,WAAMC,OAAO,CAACC,GAAG,CAACC,sBAAsB,eAC3CC,OAAO,CAAG,CACdC,IAAI,CAAE,mBAAIR,MAAM,EAAES,GAAG,CAAC,SAACC,CAAC,QAAKC,eAAc,CAACD,CAAC,CAAC,GAAC,CAC/CE,GAAG,CAAE,mBAAIX,KAAK,EAAEY,MAAM,CAAC,SAACH,CAAC,QAAKA,EAAC,CAACI,SAAS,GAAK,MAAM,GAAC,CAACL,GAAG,CAAC,SAACC,CAAC,QAAKC,eAAc,CAACD,CAAC,CAAC,GAAC,CACnFK,MAAM,CAAEb,aACV,CAAC,uBAEec,MAAK,CAACb,GAAG,CAAE,CACzBc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACd,OAAO,CAC9B,CAAC,CAAC,QANIe,CAAC,qCAOYA,EAAC,CAACC,IAAI,EAAE,QAArBC,IAAI,+CAEHA,IAAI,yDACZ,kBA1BYzB,WAAU,6CA0BtB,CAsBD,GAAMY,eAAc,CAAG,QAAjBA,eAAc,CAAIc,IAAgB,CAAgB,gBACtD,MAAO,CACLC,EAAE,CAAED,IAAI,CAACC,EAAE,CACXC,MAAM,CAAEF,IAAI,CAACG,SAAS,CAACC,SAAS,CAChCC,IAAI,aAAEL,IAAI,CAACK,IAAI,yCAAI,EAAE,CACrBC,QAAQ,CAAEC,UAAU,CAACP,IAAI,CAACG,SAAS,CAACK,YAAY,CAAC,CACjDC,OAAO,CAAET,IAAI,CAACS,OAAO,CACrBpB,SAAS,CAAEW,IAAI,CAACX,SAAS,CACzBqB,OAAO,CAAEV,IAAI,CAACU,OAAO,CACrBC,WAAW,CAAEX,IAAI,CAACW,WAAW,CAC7BC,cAAc,CAAEZ,IAAI,CAACY,cAAc,CACnCC,MAAM,CAAE,CAAC,CACTV,SAAS,CAAE,CACTW,SAAS,CAAEd,IAAI,CAACG,SAAS,CAACW,SAAS,CACnCV,SAAS,CAAEJ,IAAI,CAACG,SAAS,CAACC,SAAS,CACnCW,QAAQ,CAAEf,IAAI,CAACG,SAAS,CAACY,QAC3B,CACF,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module"}