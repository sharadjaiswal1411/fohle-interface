{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\n// Number formatting follows the standards laid out in this spec:\n// https://www.notion.so/uniswaplabs/Number-standards-fbb9f533f10e4e22820722c2f66d23c0\nvar FIVE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 5\n});\nvar FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 5,\n  minimumFractionDigits: 2\n});\nvar FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN_NO_COMMAS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 5,\n  minimumFractionDigits: 2,\n  useGrouping: false\n});\nvar THREE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 0\n});\nvar THREE_DECIMALS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 3\n});\nvar THREE_DECIMALS_USD = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 3,\n  minimumFractionDigits: 3,\n  currency: 'USD',\n  style: 'currency'\n});\nvar TWO_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 2\n});\nvar TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2\n});\nvar TWO_DECIMALS_USD = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n  currency: 'USD',\n  style: 'currency'\n});\nvar SHORTHAND_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n  notation: 'compact',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nvar SHORTHAND_TWO_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n  notation: 'compact',\n  maximumFractionDigits: 2\n});\nvar SHORTHAND_FIVE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n  notation: 'compact',\n  maximumFractionDigits: 5\n});\nvar SHORTHAND_USD_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n  notation: 'compact',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  currency: 'USD',\n  style: 'currency'\n});\nvar SHORTHAND_USD_ONE_DECIMAL = new Intl.NumberFormat('en-US', {\n  notation: 'compact',\n  minimumFractionDigits: 1,\n  maximumFractionDigits: 1,\n  currency: 'USD',\n  style: 'currency'\n});\nvar SIX_SIG_FIGS_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumSignificantDigits: 6,\n  minimumSignificantDigits: 3,\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2\n});\nvar SIX_SIG_FIGS_NO_COMMAS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumSignificantDigits: 6,\n  useGrouping: false\n});\nvar SIX_SIG_FIGS_TWO_DECIMALS_NO_COMMAS = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  maximumSignificantDigits: 6,\n  minimumSignificantDigits: 3,\n  maximumFractionDigits: 2,\n  minimumFractionDigits: 2,\n  useGrouping: false\n});\nvar THREE_SIG_FIGS_USD = new Intl.NumberFormat('en-US', {\n  notation: 'standard',\n  minimumSignificantDigits: 3,\n  maximumSignificantDigits: 3,\n  currency: 'USD',\n  style: 'currency'\n});\n// these formatter objects dictate which formatter rule to use based on the interval that\n// the number falls into. for example, based on the rule set below, if your number\n// falls between 1 and 1e6, you'd use TWO_DECIMALS as the formatter.\nvar tokenNonTxFormatter = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.001,\n  formatter: '<0.001'\n}, {\n  upperBound: 1,\n  formatter: THREE_DECIMALS\n}, {\n  upperBound: 1e6,\n  formatter: TWO_DECIMALS\n}, {\n  upperBound: 1e15,\n  formatter: SHORTHAND_TWO_DECIMALS\n}, {\n  upperBound: Infinity,\n  formatter: '>999T'\n}];\nvar tokenTxFormatter = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.00001,\n  formatter: '<0.00001'\n}, {\n  upperBound: 1,\n  formatter: FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN\n}, {\n  upperBound: 10000,\n  formatter: SIX_SIG_FIGS_TWO_DECIMALS\n}, {\n  upperBound: Infinity,\n  formatter: TWO_DECIMALS\n}];\nvar swapTradeAmountFormatter = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.1,\n  formatter: SIX_SIG_FIGS_NO_COMMAS\n}, {\n  upperBound: 1,\n  formatter: FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN_NO_COMMAS\n}, {\n  upperBound: Infinity,\n  formatter: SIX_SIG_FIGS_TWO_DECIMALS_NO_COMMAS\n}];\nvar fiatTokenDetailsFormatter = [{\n  exact: 0,\n  formatter: '$0.00'\n}, {\n  upperBound: 0.00000001,\n  formatter: '<$0.00000001'\n}, {\n  upperBound: 0.1,\n  formatter: THREE_SIG_FIGS_USD\n}, {\n  upperBound: 1.05,\n  formatter: THREE_DECIMALS_USD\n}, {\n  upperBound: 1e6,\n  formatter: TWO_DECIMALS_USD\n}, {\n  upperBound: Infinity,\n  formatter: SHORTHAND_USD_TWO_DECIMALS\n}];\nvar fiatTokenPricesFormatter = [{\n  exact: 0,\n  formatter: '$0.00'\n}, {\n  upperBound: 0.00000001,\n  formatter: '<$0.00000001'\n}, {\n  upperBound: 0.1,\n  formatter: THREE_SIG_FIGS_USD\n}, {\n  upperBound: 1.05,\n  formatter: THREE_DECIMALS_USD\n}, {\n  upperBound: 1000000,\n  formatter: TWO_DECIMALS_USD\n}, {\n  upperBound: 1000000000000000,\n  formatter: SHORTHAND_USD_TWO_DECIMALS\n}, {\n  upperBound: Infinity,\n  formatter: '>$999T'\n} // Use M/B/T abbreviations\n];\n\nvar fiatTokenStatsFormatter = [\n// if token stat value is 0, we probably don't have the data for it, so show '-' as a placeholder\n{\n  exact: 0,\n  formatter: '-'\n}, {\n  upperBound: 0.01,\n  formatter: '<$0.01'\n}, {\n  upperBound: 1000,\n  formatter: TWO_DECIMALS_USD\n}, {\n  upperBound: Infinity,\n  formatter: SHORTHAND_USD_ONE_DECIMAL\n}];\nvar fiatGasPriceFormatter = [{\n  upperBound: 0.01,\n  formatter: '<$0.01'\n}, {\n  upperBound: 1e6,\n  formatter: TWO_DECIMALS_USD\n}, {\n  upperBound: Infinity,\n  formatter: SHORTHAND_USD_TWO_DECIMALS\n}];\nvar fiatTokenQuantityFormatter = __spreadArray([{\n  exact: 0,\n  formatter: '$0.00'\n}], __read(fiatGasPriceFormatter), false);\nvar portfolioBalanceFormatter = [{\n  exact: 0,\n  formatter: '$0.00'\n}, {\n  upperBound: Infinity,\n  formatter: TWO_DECIMALS_USD\n}];\nvar ntfTokenFloorPriceFormatterTrailingZeros = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.001,\n  formatter: '<0.001'\n}, {\n  upperBound: 1,\n  formatter: THREE_DECIMALS\n}, {\n  upperBound: 1000,\n  formatter: TWO_DECIMALS\n}, {\n  upperBound: 1e15,\n  formatter: SHORTHAND_TWO_DECIMALS\n}, {\n  upperBound: Infinity,\n  formatter: '>999T'\n}];\nvar ntfTokenFloorPriceFormatter = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.001,\n  formatter: '<0.001'\n}, {\n  upperBound: 1,\n  formatter: THREE_DECIMALS_NO_TRAILING_ZEROS\n}, {\n  upperBound: 1000,\n  formatter: TWO_DECIMALS_NO_TRAILING_ZEROS\n}, {\n  upperBound: 1e15,\n  formatter: SHORTHAND_TWO_DECIMALS_NO_TRAILING_ZEROS\n}, {\n  upperBound: Infinity,\n  formatter: '>999T'\n}];\nvar ntfCollectionStatsFormatter = [{\n  exact: 0,\n  formatter: '0'\n}, {\n  upperBound: 0.00001,\n  formatter: '<0.00001'\n}, {\n  upperBound: 1,\n  formatter: FIVE_DECIMALS_NO_TRAILING_ZEROS\n}, {\n  upperBound: 1e6,\n  formatter: SIX_SIG_FIGS_NO_COMMAS\n}, {\n  upperBound: 1e15,\n  formatter: SHORTHAND_FIVE_DECIMALS_NO_TRAILING_ZEROS\n}, {\n  upperBound: Infinity,\n  formatter: '>999T'\n}];\nexport var NumberType;\n(function (NumberType) {\n  // used for token quantities in non-transaction contexts (e.g. portfolio balances)\n  NumberType[\"TokenNonTx\"] = \"token-non-tx\";\n  // used for token quantities in transaction contexts (e.g. swap, send)\n  NumberType[\"TokenTx\"] = \"token-tx\";\n  // this formatter is only used for displaying the swap trade output amount\n  // in the text input boxes. Output amounts on review screen should use the above TokenTx formatter\n  NumberType[\"SwapTradeAmount\"] = \"swap-trade-amount\";\n  // fiat prices in any component that belongs in the Token Details flow (except for token stats)\n  NumberType[\"FiatTokenDetails\"] = \"fiat-token-details\";\n  // fiat prices everywhere except Token Details flow\n  NumberType[\"FiatTokenPrice\"] = \"fiat-token-price\";\n  // fiat values for market cap, TVL, volume in the Token Details screen\n  NumberType[\"FiatTokenStats\"] = \"fiat-token-stats\";\n  // fiat price of token balances\n  NumberType[\"FiatTokenQuantity\"] = \"fiat-token-quantity\";\n  // fiat gas prices\n  NumberType[\"FiatGasPrice\"] = \"fiat-gas-price\";\n  // portfolio balance\n  NumberType[\"PortfolioBalance\"] = \"portfolio-balance\";\n  // nft floor price denominated in a token (e.g, ETH)\n  NumberType[\"NFTTokenFloorPrice\"] = \"nft-token-floor-price\";\n  // nft collection stats like number of items, holder, and sales\n  NumberType[\"NFTCollectionStats\"] = \"nft-collection-stats\";\n  // nft floor price with trailing zeros\n  NumberType[\"NFTTokenFloorPriceTrailingZeros\"] = \"nft-token-floor-price-trailing-zeros\";\n})(NumberType || (NumberType = {}));\nvar TYPE_TO_FORMATTER_RULES = (_a = {}, _a[NumberType.TokenNonTx] = tokenNonTxFormatter, _a[NumberType.TokenTx] = tokenTxFormatter, _a[NumberType.SwapTradeAmount] = swapTradeAmountFormatter, _a[NumberType.FiatTokenQuantity] = fiatTokenQuantityFormatter, _a[NumberType.FiatTokenDetails] = fiatTokenDetailsFormatter, _a[NumberType.FiatTokenPrice] = fiatTokenPricesFormatter, _a[NumberType.FiatTokenStats] = fiatTokenStatsFormatter, _a[NumberType.FiatGasPrice] = fiatGasPriceFormatter, _a[NumberType.PortfolioBalance] = portfolioBalanceFormatter, _a[NumberType.NFTTokenFloorPrice] = ntfTokenFloorPriceFormatter, _a[NumberType.NFTTokenFloorPriceTrailingZeros] = ntfTokenFloorPriceFormatterTrailingZeros, _a[NumberType.NFTCollectionStats] = ntfCollectionStatsFormatter, _a);\nfunction getFormatterRule(input, type) {\n  var rules = TYPE_TO_FORMATTER_RULES[type];\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (rule.exact !== undefined && input === rule.exact || rule.upperBound !== undefined && input < rule.upperBound) {\n      return rule.formatter;\n    }\n  }\n  throw new Error(\"formatter for type \".concat(type, \" not configured correctly\"));\n}\nexport function formatNumber(input, type, placeholder) {\n  if (type === void 0) {\n    type = NumberType.TokenNonTx;\n  }\n  if (placeholder === void 0) {\n    placeholder = '-';\n  }\n  if (input === null || input === undefined) {\n    return placeholder;\n  }\n  var formatter = getFormatterRule(input, type);\n  if (typeof formatter === 'string') return formatter;\n  return formatter.format(input);\n}\nexport function formatCurrencyAmount(amount, type, placeholder) {\n  if (type === void 0) {\n    type = NumberType.TokenNonTx;\n  }\n  return formatNumber(amount ? parseFloat(amount.toSignificant()) : undefined, type, placeholder);\n}\nexport function formatPriceImpact(priceImpact) {\n  if (!priceImpact) return '-';\n  return \"\".concat(priceImpact.multiply(-1).toFixed(3), \"%\");\n}\nexport function formatPrice(price, type) {\n  if (type === void 0) {\n    type = NumberType.FiatTokenPrice;\n  }\n  if (price === null || price === undefined) {\n    return '-';\n  }\n  return formatNumber(parseFloat(price.toSignificant()), type);\n}\n/**\n * Very simple date formatter\n * Feel free to add more options / adapt to your needs.\n */\nexport function formatDate(date) {\n  return date.toLocaleString('en-US', {\n    day: 'numeric',\n    year: 'numeric',\n    month: 'short',\n    hour: 'numeric',\n    minute: 'numeric' // numeric, 2-digit\n  });\n}\n\nexport function formatNumberOrString(price, type) {\n  if (price === null || price === undefined) return '-';\n  if (typeof price === 'string') return formatNumber(parseFloat(price), type);\n  return formatNumber(price, type);\n}\nexport function formatUSDPrice(price, type) {\n  if (type === void 0) {\n    type = NumberType.FiatTokenPrice;\n  }\n  return formatNumberOrString(price, type);\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spreadArray","to","from","pack","arguments","length","l","Array","prototype","slice","concat","_a","FIVE_DECIMALS_NO_TRAILING_ZEROS","Intl","NumberFormat","notation","maximumFractionDigits","FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN","minimumFractionDigits","FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN_NO_COMMAS","useGrouping","THREE_DECIMALS_NO_TRAILING_ZEROS","THREE_DECIMALS","THREE_DECIMALS_USD","currency","style","TWO_DECIMALS_NO_TRAILING_ZEROS","TWO_DECIMALS","TWO_DECIMALS_USD","SHORTHAND_TWO_DECIMALS","SHORTHAND_TWO_DECIMALS_NO_TRAILING_ZEROS","SHORTHAND_FIVE_DECIMALS_NO_TRAILING_ZEROS","SHORTHAND_USD_TWO_DECIMALS","SHORTHAND_USD_ONE_DECIMAL","SIX_SIG_FIGS_TWO_DECIMALS","maximumSignificantDigits","minimumSignificantDigits","SIX_SIG_FIGS_NO_COMMAS","SIX_SIG_FIGS_TWO_DECIMALS_NO_COMMAS","THREE_SIG_FIGS_USD","tokenNonTxFormatter","exact","formatter","upperBound","Infinity","tokenTxFormatter","swapTradeAmountFormatter","fiatTokenDetailsFormatter","fiatTokenPricesFormatter","fiatTokenStatsFormatter","fiatGasPriceFormatter","fiatTokenQuantityFormatter","portfolioBalanceFormatter","ntfTokenFloorPriceFormatterTrailingZeros","ntfTokenFloorPriceFormatter","ntfCollectionStatsFormatter","NumberType","TYPE_TO_FORMATTER_RULES","TokenNonTx","TokenTx","SwapTradeAmount","FiatTokenQuantity","FiatTokenDetails","FiatTokenPrice","FiatTokenStats","FiatGasPrice","PortfolioBalance","NFTTokenFloorPrice","NFTTokenFloorPriceTrailingZeros","NFTCollectionStats","getFormatterRule","input","type","rules","rule","undefined","Error","formatNumber","placeholder","format","formatCurrencyAmount","amount","parseFloat","toSignificant","formatPriceImpact","priceImpact","multiply","toFixed","formatPrice","price","formatDate","date","toLocaleString","day","year","month","hour","minute","formatNumberOrString","formatUSDPrice"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/@uniswap/conedison/dist/format.js"],"sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar _a;\n// Number formatting follows the standards laid out in this spec:\n// https://www.notion.so/uniswaplabs/Number-standards-fbb9f533f10e4e22820722c2f66d23c0\nvar FIVE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 5,\n});\nvar FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 5,\n    minimumFractionDigits: 2,\n});\nvar FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN_NO_COMMAS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 5,\n    minimumFractionDigits: 2,\n    useGrouping: false,\n});\nvar THREE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 3,\n    minimumFractionDigits: 0,\n});\nvar THREE_DECIMALS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 3,\n    minimumFractionDigits: 3,\n});\nvar THREE_DECIMALS_USD = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 3,\n    minimumFractionDigits: 3,\n    currency: 'USD',\n    style: 'currency',\n});\nvar TWO_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 2,\n});\nvar TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n});\nvar TWO_DECIMALS_USD = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n    currency: 'USD',\n    style: 'currency',\n});\nvar SHORTHAND_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n});\nvar SHORTHAND_TWO_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    maximumFractionDigits: 2,\n});\nvar SHORTHAND_FIVE_DECIMALS_NO_TRAILING_ZEROS = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    maximumFractionDigits: 5,\n});\nvar SHORTHAND_USD_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n    currency: 'USD',\n    style: 'currency',\n});\nvar SHORTHAND_USD_ONE_DECIMAL = new Intl.NumberFormat('en-US', {\n    notation: 'compact',\n    minimumFractionDigits: 1,\n    maximumFractionDigits: 1,\n    currency: 'USD',\n    style: 'currency',\n});\nvar SIX_SIG_FIGS_TWO_DECIMALS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumSignificantDigits: 6,\n    minimumSignificantDigits: 3,\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n});\nvar SIX_SIG_FIGS_NO_COMMAS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumSignificantDigits: 6,\n    useGrouping: false,\n});\nvar SIX_SIG_FIGS_TWO_DECIMALS_NO_COMMAS = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    maximumSignificantDigits: 6,\n    minimumSignificantDigits: 3,\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2,\n    useGrouping: false,\n});\nvar THREE_SIG_FIGS_USD = new Intl.NumberFormat('en-US', {\n    notation: 'standard',\n    minimumSignificantDigits: 3,\n    maximumSignificantDigits: 3,\n    currency: 'USD',\n    style: 'currency',\n});\n// these formatter objects dictate which formatter rule to use based on the interval that\n// the number falls into. for example, based on the rule set below, if your number\n// falls between 1 and 1e6, you'd use TWO_DECIMALS as the formatter.\nvar tokenNonTxFormatter = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.001, formatter: '<0.001' },\n    { upperBound: 1, formatter: THREE_DECIMALS },\n    { upperBound: 1e6, formatter: TWO_DECIMALS },\n    { upperBound: 1e15, formatter: SHORTHAND_TWO_DECIMALS },\n    { upperBound: Infinity, formatter: '>999T' },\n];\nvar tokenTxFormatter = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.00001, formatter: '<0.00001' },\n    { upperBound: 1, formatter: FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN },\n    { upperBound: 10000, formatter: SIX_SIG_FIGS_TWO_DECIMALS },\n    { upperBound: Infinity, formatter: TWO_DECIMALS },\n];\nvar swapTradeAmountFormatter = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.1, formatter: SIX_SIG_FIGS_NO_COMMAS },\n    { upperBound: 1, formatter: FIVE_DECIMALS_MAX_TWO_DECIMALS_MIN_NO_COMMAS },\n    { upperBound: Infinity, formatter: SIX_SIG_FIGS_TWO_DECIMALS_NO_COMMAS },\n];\nvar fiatTokenDetailsFormatter = [\n    { exact: 0, formatter: '$0.00' },\n    { upperBound: 0.00000001, formatter: '<$0.00000001' },\n    { upperBound: 0.1, formatter: THREE_SIG_FIGS_USD },\n    { upperBound: 1.05, formatter: THREE_DECIMALS_USD },\n    { upperBound: 1e6, formatter: TWO_DECIMALS_USD },\n    { upperBound: Infinity, formatter: SHORTHAND_USD_TWO_DECIMALS },\n];\nvar fiatTokenPricesFormatter = [\n    { exact: 0, formatter: '$0.00' },\n    { upperBound: 0.00000001, formatter: '<$0.00000001' },\n    { upperBound: 0.1, formatter: THREE_SIG_FIGS_USD },\n    { upperBound: 1.05, formatter: THREE_DECIMALS_USD },\n    { upperBound: 1000000, formatter: TWO_DECIMALS_USD },\n    { upperBound: 1000000000000000, formatter: SHORTHAND_USD_TWO_DECIMALS },\n    { upperBound: Infinity, formatter: '>$999T' }, // Use M/B/T abbreviations\n];\nvar fiatTokenStatsFormatter = [\n    // if token stat value is 0, we probably don't have the data for it, so show '-' as a placeholder\n    { exact: 0, formatter: '-' },\n    { upperBound: 0.01, formatter: '<$0.01' },\n    { upperBound: 1000, formatter: TWO_DECIMALS_USD },\n    { upperBound: Infinity, formatter: SHORTHAND_USD_ONE_DECIMAL },\n];\nvar fiatGasPriceFormatter = [\n    { upperBound: 0.01, formatter: '<$0.01' },\n    { upperBound: 1e6, formatter: TWO_DECIMALS_USD },\n    { upperBound: Infinity, formatter: SHORTHAND_USD_TWO_DECIMALS },\n];\nvar fiatTokenQuantityFormatter = __spreadArray([{ exact: 0, formatter: '$0.00' }], __read(fiatGasPriceFormatter), false);\nvar portfolioBalanceFormatter = [\n    { exact: 0, formatter: '$0.00' },\n    { upperBound: Infinity, formatter: TWO_DECIMALS_USD },\n];\nvar ntfTokenFloorPriceFormatterTrailingZeros = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.001, formatter: '<0.001' },\n    { upperBound: 1, formatter: THREE_DECIMALS },\n    { upperBound: 1000, formatter: TWO_DECIMALS },\n    { upperBound: 1e15, formatter: SHORTHAND_TWO_DECIMALS },\n    { upperBound: Infinity, formatter: '>999T' },\n];\nvar ntfTokenFloorPriceFormatter = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.001, formatter: '<0.001' },\n    { upperBound: 1, formatter: THREE_DECIMALS_NO_TRAILING_ZEROS },\n    { upperBound: 1000, formatter: TWO_DECIMALS_NO_TRAILING_ZEROS },\n    { upperBound: 1e15, formatter: SHORTHAND_TWO_DECIMALS_NO_TRAILING_ZEROS },\n    { upperBound: Infinity, formatter: '>999T' },\n];\nvar ntfCollectionStatsFormatter = [\n    { exact: 0, formatter: '0' },\n    { upperBound: 0.00001, formatter: '<0.00001' },\n    { upperBound: 1, formatter: FIVE_DECIMALS_NO_TRAILING_ZEROS },\n    { upperBound: 1e6, formatter: SIX_SIG_FIGS_NO_COMMAS },\n    { upperBound: 1e15, formatter: SHORTHAND_FIVE_DECIMALS_NO_TRAILING_ZEROS },\n    { upperBound: Infinity, formatter: '>999T' },\n];\nexport var NumberType;\n(function (NumberType) {\n    // used for token quantities in non-transaction contexts (e.g. portfolio balances)\n    NumberType[\"TokenNonTx\"] = \"token-non-tx\";\n    // used for token quantities in transaction contexts (e.g. swap, send)\n    NumberType[\"TokenTx\"] = \"token-tx\";\n    // this formatter is only used for displaying the swap trade output amount\n    // in the text input boxes. Output amounts on review screen should use the above TokenTx formatter\n    NumberType[\"SwapTradeAmount\"] = \"swap-trade-amount\";\n    // fiat prices in any component that belongs in the Token Details flow (except for token stats)\n    NumberType[\"FiatTokenDetails\"] = \"fiat-token-details\";\n    // fiat prices everywhere except Token Details flow\n    NumberType[\"FiatTokenPrice\"] = \"fiat-token-price\";\n    // fiat values for market cap, TVL, volume in the Token Details screen\n    NumberType[\"FiatTokenStats\"] = \"fiat-token-stats\";\n    // fiat price of token balances\n    NumberType[\"FiatTokenQuantity\"] = \"fiat-token-quantity\";\n    // fiat gas prices\n    NumberType[\"FiatGasPrice\"] = \"fiat-gas-price\";\n    // portfolio balance\n    NumberType[\"PortfolioBalance\"] = \"portfolio-balance\";\n    // nft floor price denominated in a token (e.g, ETH)\n    NumberType[\"NFTTokenFloorPrice\"] = \"nft-token-floor-price\";\n    // nft collection stats like number of items, holder, and sales\n    NumberType[\"NFTCollectionStats\"] = \"nft-collection-stats\";\n    // nft floor price with trailing zeros\n    NumberType[\"NFTTokenFloorPriceTrailingZeros\"] = \"nft-token-floor-price-trailing-zeros\";\n})(NumberType || (NumberType = {}));\nvar TYPE_TO_FORMATTER_RULES = (_a = {},\n    _a[NumberType.TokenNonTx] = tokenNonTxFormatter,\n    _a[NumberType.TokenTx] = tokenTxFormatter,\n    _a[NumberType.SwapTradeAmount] = swapTradeAmountFormatter,\n    _a[NumberType.FiatTokenQuantity] = fiatTokenQuantityFormatter,\n    _a[NumberType.FiatTokenDetails] = fiatTokenDetailsFormatter,\n    _a[NumberType.FiatTokenPrice] = fiatTokenPricesFormatter,\n    _a[NumberType.FiatTokenStats] = fiatTokenStatsFormatter,\n    _a[NumberType.FiatGasPrice] = fiatGasPriceFormatter,\n    _a[NumberType.PortfolioBalance] = portfolioBalanceFormatter,\n    _a[NumberType.NFTTokenFloorPrice] = ntfTokenFloorPriceFormatter,\n    _a[NumberType.NFTTokenFloorPriceTrailingZeros] = ntfTokenFloorPriceFormatterTrailingZeros,\n    _a[NumberType.NFTCollectionStats] = ntfCollectionStatsFormatter,\n    _a);\nfunction getFormatterRule(input, type) {\n    var rules = TYPE_TO_FORMATTER_RULES[type];\n    for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if ((rule.exact !== undefined && input === rule.exact) ||\n            (rule.upperBound !== undefined && input < rule.upperBound)) {\n            return rule.formatter;\n        }\n    }\n    throw new Error(\"formatter for type \".concat(type, \" not configured correctly\"));\n}\nexport function formatNumber(input, type, placeholder) {\n    if (type === void 0) { type = NumberType.TokenNonTx; }\n    if (placeholder === void 0) { placeholder = '-'; }\n    if (input === null || input === undefined) {\n        return placeholder;\n    }\n    var formatter = getFormatterRule(input, type);\n    if (typeof formatter === 'string')\n        return formatter;\n    return formatter.format(input);\n}\nexport function formatCurrencyAmount(amount, type, placeholder) {\n    if (type === void 0) { type = NumberType.TokenNonTx; }\n    return formatNumber(amount ? parseFloat(amount.toSignificant()) : undefined, type, placeholder);\n}\nexport function formatPriceImpact(priceImpact) {\n    if (!priceImpact)\n        return '-';\n    return \"\".concat(priceImpact.multiply(-1).toFixed(3), \"%\");\n}\nexport function formatPrice(price, type) {\n    if (type === void 0) { type = NumberType.FiatTokenPrice; }\n    if (price === null || price === undefined) {\n        return '-';\n    }\n    return formatNumber(parseFloat(price.toSignificant()), type);\n}\n/**\n * Very simple date formatter\n * Feel free to add more options / adapt to your needs.\n */\nexport function formatDate(date) {\n    return date.toLocaleString('en-US', {\n        day: 'numeric',\n        year: 'numeric',\n        month: 'short',\n        hour: 'numeric',\n        minute: 'numeric', // numeric, 2-digit\n    });\n}\nexport function formatNumberOrString(price, type) {\n    if (price === null || price === undefined)\n        return '-';\n    if (typeof price === 'string')\n        return formatNumber(parseFloat(price), type);\n    return formatNumber(price, type);\n}\nexport function formatUSDPrice(price, type) {\n    if (type === void 0) { type = NumberType.FiatTokenPrice; }\n    return formatNumberOrString(price, type);\n}\n"],"mappings":"AAAA,IAAIA,MAAM,GAAI,IAAI,IAAI,IAAI,CAACA,MAAM,IAAK,UAAUC,CAAC,EAAEC,CAAC,EAAE;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAM,KAAK,UAAU,IAAIH,CAAC,CAACG,MAAM,CAACC,QAAQ,CAAC;EAC1D,IAAI,CAACF,CAAC,EAAE,OAAOF,CAAC;EAChB,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAI,CAACN,CAAC,CAAC;IAAEO,CAAC;IAAEC,EAAE,GAAG,EAAE;IAAEC,CAAC;EAChC,IAAI;IACA,OAAO,CAACR,CAAC,KAAK,KAAK,CAAC,IAAIA,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAI,EAAE,EAAEC,IAAI,EAAEH,EAAE,CAACI,IAAI,CAACL,CAAC,CAACM,KAAK,CAAC;EAC9E,CAAC,CACD,OAAOC,KAAK,EAAE;IAAEL,CAAC,GAAG;MAAEK,KAAK,EAAEA;IAAM,CAAC;EAAE,CAAC,SAC/B;IACJ,IAAI;MACA,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAI,KAAKT,CAAC,GAAGG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAEH,CAAC,CAACI,IAAI,CAACD,CAAC,CAAC;IACpD,CAAC,SACO;MAAE,IAAII,CAAC,EAAE,MAAMA,CAAC,CAACK,KAAK;IAAE;EACpC;EACA,OAAON,EAAE;AACb,CAAC;AACD,IAAIO,aAAa,GAAI,IAAI,IAAI,IAAI,CAACA,aAAa,IAAK,UAAUC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAC1E,IAAIA,IAAI,IAAIC,SAAS,CAACC,MAAM,KAAK,CAAC,EAAE,KAAK,IAAIf,CAAC,GAAG,CAAC,EAAEgB,CAAC,GAAGJ,IAAI,CAACG,MAAM,EAAEZ,EAAE,EAAEH,CAAC,GAAGgB,CAAC,EAAEhB,CAAC,EAAE,EAAE;IACjF,IAAIG,EAAE,IAAI,EAAEH,CAAC,IAAIY,IAAI,CAAC,EAAE;MACpB,IAAI,CAACT,EAAE,EAAEA,EAAE,GAAGc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,EAAE,CAAC,EAAEZ,CAAC,CAAC;MACpDG,EAAE,CAACH,CAAC,CAAC,GAAGY,IAAI,CAACZ,CAAC,CAAC;IACnB;EACJ;EACA,OAAOW,EAAE,CAACS,MAAM,CAACjB,EAAE,IAAIc,KAAK,CAACC,SAAS,CAACC,KAAK,CAAClB,IAAI,CAACW,IAAI,CAAC,CAAC;AAC5D,CAAC;AACD,IAAIS,EAAE;AACN;AACA;AACA,IAAIC,+BAA+B,GAAG,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACjEC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIC,kCAAkC,GAAG,IAAIJ,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpEC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIC,4CAA4C,GAAG,IAAIN,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC9EC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE,CAAC;EACxBE,WAAW,EAAE;AACjB,CAAC,CAAC;AACF,IAAIC,gCAAgC,GAAG,IAAIR,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAClEC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAII,cAAc,GAAG,IAAIT,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAChDC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIK,kBAAkB,GAAG,IAAIV,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpDC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE,CAAC;EACxBM,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,IAAIC,8BAA8B,GAAG,IAAIb,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAChEC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIW,YAAY,GAAG,IAAId,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC9CC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIU,gBAAgB,GAAG,IAAIf,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAClDC,QAAQ,EAAE,UAAU;EACpBC,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE,CAAC;EACxBM,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,IAAII,sBAAsB,GAAG,IAAIhB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACxDC,QAAQ,EAAE,SAAS;EACnBG,qBAAqB,EAAE,CAAC;EACxBF,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIc,wCAAwC,GAAG,IAAIjB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC1EC,QAAQ,EAAE,SAAS;EACnBC,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIe,yCAAyC,GAAG,IAAIlB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC3EC,QAAQ,EAAE,SAAS;EACnBC,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAIgB,0BAA0B,GAAG,IAAInB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC5DC,QAAQ,EAAE,SAAS;EACnBG,qBAAqB,EAAE,CAAC;EACxBF,qBAAqB,EAAE,CAAC;EACxBQ,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,IAAIQ,yBAAyB,GAAG,IAAIpB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC3DC,QAAQ,EAAE,SAAS;EACnBG,qBAAqB,EAAE,CAAC;EACxBF,qBAAqB,EAAE,CAAC;EACxBQ,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACX,CAAC,CAAC;AACF,IAAIS,yBAAyB,GAAG,IAAIrB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EAC3DC,QAAQ,EAAE,UAAU;EACpBoB,wBAAwB,EAAE,CAAC;EAC3BC,wBAAwB,EAAE,CAAC;EAC3BpB,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE;AAC3B,CAAC,CAAC;AACF,IAAImB,sBAAsB,GAAG,IAAIxB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACxDC,QAAQ,EAAE,UAAU;EACpBoB,wBAAwB,EAAE,CAAC;EAC3Bf,WAAW,EAAE;AACjB,CAAC,CAAC;AACF,IAAIkB,mCAAmC,GAAG,IAAIzB,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACrEC,QAAQ,EAAE,UAAU;EACpBoB,wBAAwB,EAAE,CAAC;EAC3BC,wBAAwB,EAAE,CAAC;EAC3BpB,qBAAqB,EAAE,CAAC;EACxBE,qBAAqB,EAAE,CAAC;EACxBE,WAAW,EAAE;AACjB,CAAC,CAAC;AACF,IAAImB,kBAAkB,GAAG,IAAI1B,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;EACpDC,QAAQ,EAAE,UAAU;EACpBqB,wBAAwB,EAAE,CAAC;EAC3BD,wBAAwB,EAAE,CAAC;EAC3BX,QAAQ,EAAE,KAAK;EACfC,KAAK,EAAE;AACX,CAAC,CAAC;AACF;AACA;AACA;AACA,IAAIe,mBAAmB,GAAG,CACtB;EAAEC,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,KAAK;EAAED,SAAS,EAAE;AAAS,CAAC,EAC1C;EAAEC,UAAU,EAAE,CAAC;EAAED,SAAS,EAAEpB;AAAe,CAAC,EAC5C;EAAEqB,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEf;AAAa,CAAC,EAC5C;EAAEgB,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEb;AAAuB,CAAC,EACvD;EAAEc,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAE;AAAQ,CAAC,CAC/C;AACD,IAAIG,gBAAgB,GAAG,CACnB;EAAEJ,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,OAAO;EAAED,SAAS,EAAE;AAAW,CAAC,EAC9C;EAAEC,UAAU,EAAE,CAAC;EAAED,SAAS,EAAEzB;AAAmC,CAAC,EAChE;EAAE0B,UAAU,EAAE,KAAK;EAAED,SAAS,EAAER;AAA0B,CAAC,EAC3D;EAAES,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAEf;AAAa,CAAC,CACpD;AACD,IAAImB,wBAAwB,GAAG,CAC3B;EAAEL,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEL;AAAuB,CAAC,EACtD;EAAEM,UAAU,EAAE,CAAC;EAAED,SAAS,EAAEvB;AAA6C,CAAC,EAC1E;EAAEwB,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAEJ;AAAoC,CAAC,CAC3E;AACD,IAAIS,yBAAyB,GAAG,CAC5B;EAAEN,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAQ,CAAC,EAChC;EAAEC,UAAU,EAAE,UAAU;EAAED,SAAS,EAAE;AAAe,CAAC,EACrD;EAAEC,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEH;AAAmB,CAAC,EAClD;EAAEI,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEnB;AAAmB,CAAC,EACnD;EAAEoB,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEd;AAAiB,CAAC,EAChD;EAAEe,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAEV;AAA2B,CAAC,CAClE;AACD,IAAIgB,wBAAwB,GAAG,CAC3B;EAAEP,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAQ,CAAC,EAChC;EAAEC,UAAU,EAAE,UAAU;EAAED,SAAS,EAAE;AAAe,CAAC,EACrD;EAAEC,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEH;AAAmB,CAAC,EAClD;EAAEI,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEnB;AAAmB,CAAC,EACnD;EAAEoB,UAAU,EAAE,OAAO;EAAED,SAAS,EAAEd;AAAiB,CAAC,EACpD;EAAEe,UAAU,EAAE,gBAAgB;EAAED,SAAS,EAAEV;AAA2B,CAAC,EACvE;EAAEW,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAE;AAAS,CAAC,CAAE;AAAA,CAClD;;AACD,IAAIO,uBAAuB,GAAG;AAC1B;AACA;EAAER,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,IAAI;EAAED,SAAS,EAAE;AAAS,CAAC,EACzC;EAAEC,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEd;AAAiB,CAAC,EACjD;EAAEe,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAET;AAA0B,CAAC,CACjE;AACD,IAAIiB,qBAAqB,GAAG,CACxB;EAAEP,UAAU,EAAE,IAAI;EAAED,SAAS,EAAE;AAAS,CAAC,EACzC;EAAEC,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEd;AAAiB,CAAC,EAChD;EAAEe,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAEV;AAA2B,CAAC,CAClE;AACD,IAAImB,0BAA0B,GAAGnD,aAAa,CAAC,CAAC;EAAEyC,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAQ,CAAC,CAAC,EAAE1D,MAAM,CAACkE,qBAAqB,CAAC,EAAE,KAAK,CAAC;AACxH,IAAIE,yBAAyB,GAAG,CAC5B;EAAEX,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAQ,CAAC,EAChC;EAAEC,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAEd;AAAiB,CAAC,CACxD;AACD,IAAIyB,wCAAwC,GAAG,CAC3C;EAAEZ,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,KAAK;EAAED,SAAS,EAAE;AAAS,CAAC,EAC1C;EAAEC,UAAU,EAAE,CAAC;EAAED,SAAS,EAAEpB;AAAe,CAAC,EAC5C;EAAEqB,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEf;AAAa,CAAC,EAC7C;EAAEgB,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEb;AAAuB,CAAC,EACvD;EAAEc,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAE;AAAQ,CAAC,CAC/C;AACD,IAAIY,2BAA2B,GAAG,CAC9B;EAAEb,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,KAAK;EAAED,SAAS,EAAE;AAAS,CAAC,EAC1C;EAAEC,UAAU,EAAE,CAAC;EAAED,SAAS,EAAErB;AAAiC,CAAC,EAC9D;EAAEsB,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEhB;AAA+B,CAAC,EAC/D;EAAEiB,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEZ;AAAyC,CAAC,EACzE;EAAEa,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAE;AAAQ,CAAC,CAC/C;AACD,IAAIa,2BAA2B,GAAG,CAC9B;EAAEd,KAAK,EAAE,CAAC;EAAEC,SAAS,EAAE;AAAI,CAAC,EAC5B;EAAEC,UAAU,EAAE,OAAO;EAAED,SAAS,EAAE;AAAW,CAAC,EAC9C;EAAEC,UAAU,EAAE,CAAC;EAAED,SAAS,EAAE9B;AAAgC,CAAC,EAC7D;EAAE+B,UAAU,EAAE,GAAG;EAAED,SAAS,EAAEL;AAAuB,CAAC,EACtD;EAAEM,UAAU,EAAE,IAAI;EAAED,SAAS,EAAEX;AAA0C,CAAC,EAC1E;EAAEY,UAAU,EAAEC,QAAQ;EAAEF,SAAS,EAAE;AAAQ,CAAC,CAC/C;AACD,OAAO,IAAIc,UAAU;AACrB,CAAC,UAAUA,UAAU,EAAE;EACnB;EACAA,UAAU,CAAC,YAAY,CAAC,GAAG,cAAc;EACzC;EACAA,UAAU,CAAC,SAAS,CAAC,GAAG,UAAU;EAClC;EACA;EACAA,UAAU,CAAC,iBAAiB,CAAC,GAAG,mBAAmB;EACnD;EACAA,UAAU,CAAC,kBAAkB,CAAC,GAAG,oBAAoB;EACrD;EACAA,UAAU,CAAC,gBAAgB,CAAC,GAAG,kBAAkB;EACjD;EACAA,UAAU,CAAC,gBAAgB,CAAC,GAAG,kBAAkB;EACjD;EACAA,UAAU,CAAC,mBAAmB,CAAC,GAAG,qBAAqB;EACvD;EACAA,UAAU,CAAC,cAAc,CAAC,GAAG,gBAAgB;EAC7C;EACAA,UAAU,CAAC,kBAAkB,CAAC,GAAG,mBAAmB;EACpD;EACAA,UAAU,CAAC,oBAAoB,CAAC,GAAG,uBAAuB;EAC1D;EACAA,UAAU,CAAC,oBAAoB,CAAC,GAAG,sBAAsB;EACzD;EACAA,UAAU,CAAC,iCAAiC,CAAC,GAAG,sCAAsC;AAC1F,CAAC,EAAEA,UAAU,KAAKA,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;AACnC,IAAIC,uBAAuB,IAAI9C,EAAE,GAAG,CAAC,CAAC,EAClCA,EAAE,CAAC6C,UAAU,CAACE,UAAU,CAAC,GAAGlB,mBAAmB,EAC/C7B,EAAE,CAAC6C,UAAU,CAACG,OAAO,CAAC,GAAGd,gBAAgB,EACzClC,EAAE,CAAC6C,UAAU,CAACI,eAAe,CAAC,GAAGd,wBAAwB,EACzDnC,EAAE,CAAC6C,UAAU,CAACK,iBAAiB,CAAC,GAAGV,0BAA0B,EAC7DxC,EAAE,CAAC6C,UAAU,CAACM,gBAAgB,CAAC,GAAGf,yBAAyB,EAC3DpC,EAAE,CAAC6C,UAAU,CAACO,cAAc,CAAC,GAAGf,wBAAwB,EACxDrC,EAAE,CAAC6C,UAAU,CAACQ,cAAc,CAAC,GAAGf,uBAAuB,EACvDtC,EAAE,CAAC6C,UAAU,CAACS,YAAY,CAAC,GAAGf,qBAAqB,EACnDvC,EAAE,CAAC6C,UAAU,CAACU,gBAAgB,CAAC,GAAGd,yBAAyB,EAC3DzC,EAAE,CAAC6C,UAAU,CAACW,kBAAkB,CAAC,GAAGb,2BAA2B,EAC/D3C,EAAE,CAAC6C,UAAU,CAACY,+BAA+B,CAAC,GAAGf,wCAAwC,EACzF1C,EAAE,CAAC6C,UAAU,CAACa,kBAAkB,CAAC,GAAGd,2BAA2B,EAC/D5C,EAAE,CAAC;AACP,SAAS2D,gBAAgB,CAACC,KAAK,EAAEC,IAAI,EAAE;EACnC,IAAIC,KAAK,GAAGhB,uBAAuB,CAACe,IAAI,CAAC;EACzC,KAAK,IAAIlF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGmF,KAAK,CAACpE,MAAM,EAAEf,CAAC,EAAE,EAAE;IACnC,IAAIoF,IAAI,GAAGD,KAAK,CAACnF,CAAC,CAAC;IACnB,IAAKoF,IAAI,CAACjC,KAAK,KAAKkC,SAAS,IAAIJ,KAAK,KAAKG,IAAI,CAACjC,KAAK,IAChDiC,IAAI,CAAC/B,UAAU,KAAKgC,SAAS,IAAIJ,KAAK,GAAGG,IAAI,CAAC/B,UAAW,EAAE;MAC5D,OAAO+B,IAAI,CAAChC,SAAS;IACzB;EACJ;EACA,MAAM,IAAIkC,KAAK,CAAC,qBAAqB,CAAClE,MAAM,CAAC8D,IAAI,EAAE,2BAA2B,CAAC,CAAC;AACpF;AACA,OAAO,SAASK,YAAY,CAACN,KAAK,EAAEC,IAAI,EAAEM,WAAW,EAAE;EACnD,IAAIN,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAGhB,UAAU,CAACE,UAAU;EAAE;EACrD,IAAIoB,WAAW,KAAK,KAAK,CAAC,EAAE;IAAEA,WAAW,GAAG,GAAG;EAAE;EACjD,IAAIP,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKI,SAAS,EAAE;IACvC,OAAOG,WAAW;EACtB;EACA,IAAIpC,SAAS,GAAG4B,gBAAgB,CAACC,KAAK,EAAEC,IAAI,CAAC;EAC7C,IAAI,OAAO9B,SAAS,KAAK,QAAQ,EAC7B,OAAOA,SAAS;EACpB,OAAOA,SAAS,CAACqC,MAAM,CAACR,KAAK,CAAC;AAClC;AACA,OAAO,SAASS,oBAAoB,CAACC,MAAM,EAAET,IAAI,EAAEM,WAAW,EAAE;EAC5D,IAAIN,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAGhB,UAAU,CAACE,UAAU;EAAE;EACrD,OAAOmB,YAAY,CAACI,MAAM,GAAGC,UAAU,CAACD,MAAM,CAACE,aAAa,EAAE,CAAC,GAAGR,SAAS,EAAEH,IAAI,EAAEM,WAAW,CAAC;AACnG;AACA,OAAO,SAASM,iBAAiB,CAACC,WAAW,EAAE;EAC3C,IAAI,CAACA,WAAW,EACZ,OAAO,GAAG;EACd,OAAO,EAAE,CAAC3E,MAAM,CAAC2E,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC;AAC9D;AACA,OAAO,SAASC,WAAW,CAACC,KAAK,EAAEjB,IAAI,EAAE;EACrC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAGhB,UAAU,CAACO,cAAc;EAAE;EACzD,IAAI0B,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKd,SAAS,EAAE;IACvC,OAAO,GAAG;EACd;EACA,OAAOE,YAAY,CAACK,UAAU,CAACO,KAAK,CAACN,aAAa,EAAE,CAAC,EAAEX,IAAI,CAAC;AAChE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASkB,UAAU,CAACC,IAAI,EAAE;EAC7B,OAAOA,IAAI,CAACC,cAAc,CAAC,OAAO,EAAE;IAChCC,GAAG,EAAE,SAAS;IACdC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,OAAO;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS,CAAE;EACvB,CAAC,CAAC;AACN;;AACA,OAAO,SAASC,oBAAoB,CAACT,KAAK,EAAEjB,IAAI,EAAE;EAC9C,IAAIiB,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKd,SAAS,EACrC,OAAO,GAAG;EACd,IAAI,OAAOc,KAAK,KAAK,QAAQ,EACzB,OAAOZ,YAAY,CAACK,UAAU,CAACO,KAAK,CAAC,EAAEjB,IAAI,CAAC;EAChD,OAAOK,YAAY,CAACY,KAAK,EAAEjB,IAAI,CAAC;AACpC;AACA,OAAO,SAAS2B,cAAc,CAACV,KAAK,EAAEjB,IAAI,EAAE;EACxC,IAAIA,IAAI,KAAK,KAAK,CAAC,EAAE;IAAEA,IAAI,GAAGhB,UAAU,CAACO,cAAc;EAAE;EACzD,OAAOmC,oBAAoB,CAACT,KAAK,EAAEjB,IAAI,CAAC;AAC5C"},"metadata":{},"sourceType":"module"}