{"ast":null,"code":"import _toConsumableArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useMemo}from'react';import{ADDITIONAL_BASES,BASES_TO_CHECK_TRADES_AGAINST,CUSTOM_BASES}from'../constants/routing';export function useAllCurrencyCombinations(currencyA,currencyB){var chainId=currencyA===null||currencyA===void 0?void 0:currencyA.chainId;var _ref=chainId?[currencyA===null||currencyA===void 0?void 0:currencyA.wrapped,currencyB===null||currencyB===void 0?void 0:currencyB.wrapped]:[undefined,undefined],_ref2=_slicedToArray(_ref,2),tokenA=_ref2[0],tokenB=_ref2[1];var bases=useMemo(function(){var _BASES_TO_CHECK_TRADE,_ADDITIONAL_BASES$cha,_ADDITIONAL_BASES$cha2,_ADDITIONAL_BASES$cha3,_ADDITIONAL_BASES$cha4;if(!chainId||chainId!==(tokenB===null||tokenB===void 0?void 0:tokenB.chainId))return[];var common=(_BASES_TO_CHECK_TRADE=BASES_TO_CHECK_TRADES_AGAINST[chainId])!==null&&_BASES_TO_CHECK_TRADE!==void 0?_BASES_TO_CHECK_TRADE:[];var additionalA=tokenA?(_ADDITIONAL_BASES$cha=(_ADDITIONAL_BASES$cha2=ADDITIONAL_BASES[chainId])===null||_ADDITIONAL_BASES$cha2===void 0?void 0:_ADDITIONAL_BASES$cha2[tokenA.address])!==null&&_ADDITIONAL_BASES$cha!==void 0?_ADDITIONAL_BASES$cha:[]:[];var additionalB=tokenB?(_ADDITIONAL_BASES$cha3=(_ADDITIONAL_BASES$cha4=ADDITIONAL_BASES[chainId])===null||_ADDITIONAL_BASES$cha4===void 0?void 0:_ADDITIONAL_BASES$cha4[tokenB.address])!==null&&_ADDITIONAL_BASES$cha3!==void 0?_ADDITIONAL_BASES$cha3:[]:[];return[].concat(_toConsumableArray(common),_toConsumableArray(additionalA),_toConsumableArray(additionalB));},[chainId,tokenA,tokenB]);var basePairs=useMemo(function(){return bases.flatMap(function(base){return bases.map(function(otherBase){return[base,otherBase];});})// though redundant with the first filter below, that expression runs more often, so this is probably worthwhile\n.filter(function(_ref3){var _ref4=_slicedToArray(_ref3,2),t0=_ref4[0],t1=_ref4[1];return!t0.equals(t1);});},[bases]);return useMemo(function(){return tokenA&&tokenB?[// the direct pair\n[tokenA,tokenB]].concat(_toConsumableArray(bases.map(function(base){return[tokenA,base];})),_toConsumableArray(bases.map(function(base){return[tokenB,base];})),_toConsumableArray(basePairs))// filter out invalid pairs comprised of the same asset (e.g. WETH<>WETH)\n.filter(function(_ref5){var _ref6=_slicedToArray(_ref5,2),t0=_ref6[0],t1=_ref6[1];return!t0.equals(t1);})// filter out duplicate pairs\n.filter(function(_ref7,i,otherPairs){var _ref8=_slicedToArray(_ref7,2),t0=_ref8[0],t1=_ref8[1];// find the first index in the array at which there are the same 2 tokens as the current\nvar firstIndexInOtherPairs=otherPairs.findIndex(function(_ref9){var _ref10=_slicedToArray(_ref9,2),t0Other=_ref10[0],t1Other=_ref10[1];return t0.equals(t0Other)&&t1.equals(t1Other)||t0.equals(t1Other)&&t1.equals(t0Other);});// only accept the first occurrence of the same 2 tokens\nreturn firstIndexInOtherPairs===i;})// optionally filter out some pairs for tokens with custom bases defined\n.filter(function(_ref11){var _ref12=_slicedToArray(_ref11,2),tokenA=_ref12[0],tokenB=_ref12[1];if(!chainId)return true;var customBases=CUSTOM_BASES[chainId];var customBasesA=customBases===null||customBases===void 0?void 0:customBases[tokenA.address];var customBasesB=customBases===null||customBases===void 0?void 0:customBases[tokenB.address];if(!customBasesA&&!customBasesB)return true;if(customBasesA&&!customBasesA.find(function(base){return tokenB.equals(base);}))return false;if(customBasesB&&!customBasesB.find(function(base){return tokenA.equals(base);}))return false;return true;}):[];},[tokenA,tokenB,bases,basePairs,chainId]);}","map":{"version":3,"names":["useMemo","ADDITIONAL_BASES","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","useAllCurrencyCombinations","currencyA","currencyB","chainId","wrapped","undefined","tokenA","tokenB","bases","common","additionalA","address","additionalB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","equals","i","otherPairs","firstIndexInOtherPairs","findIndex","t0Other","t1Other","customBases","customBasesA","customBasesB","find"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useAllCurrencyCombinations.ts"],"sourcesContent":["import { Currency, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\n\nimport { ADDITIONAL_BASES, BASES_TO_CHECK_TRADES_AGAINST, CUSTOM_BASES } from '../constants/routing'\n\nexport function useAllCurrencyCombinations(currencyA?: Currency, currencyB?: Currency): [Token, Token][] {\n  const chainId = currencyA?.chainId\n\n  const [tokenA, tokenB] = chainId ? [currencyA?.wrapped, currencyB?.wrapped] : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId || chainId !== tokenB?.chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () =>\n      bases\n        .flatMap((base): [Token, Token][] => bases.map((otherBase) => [base, otherBase]))\n        // though redundant with the first filter below, that expression runs more often, so this is probably worthwhile\n        .filter(([t0, t1]) => !t0.equals(t1)),\n    [bases]\n  )\n\n  return useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB] as [Token, Token],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            // filter out invalid pairs comprised of the same asset (e.g. WETH<>WETH)\n            .filter(([t0, t1]) => !t0.equals(t1))\n            // filter out duplicate pairs\n            .filter(([t0, t1], i, otherPairs) => {\n              // find the first index in the array at which there are the same 2 tokens as the current\n              const firstIndexInOtherPairs = otherPairs.findIndex(([t0Other, t1Other]) => {\n                return (t0.equals(t0Other) && t1.equals(t1Other)) || (t0.equals(t1Other) && t1.equals(t0Other))\n              })\n              // only accept the first occurrence of the same 2 tokens\n              return firstIndexInOtherPairs === i\n            })\n            // optionally filter out some pairs for tokens with custom bases defined\n            .filter(([tokenA, tokenB]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId]\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}