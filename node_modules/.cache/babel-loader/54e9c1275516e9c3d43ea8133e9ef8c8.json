{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps';\nimport { useActiveNetworkVersion, useClients } from 'state/application/hooks';\nimport { get2DayChange } from 'utils/data';\nimport { useDeltaTimestamps } from 'utils/queries';\nimport { formatTokenName, formatTokenSymbol } from 'utils/tokens';\nexport const POOLS_BULK = (block, pools) => {\n  let poolString = `[`;\n  pools.map(address => {\n    return poolString += `\"${address}\",`;\n  });\n  poolString += ']';\n  const queryString = `\n    query pools {\n      pools(where: {id_in: ${poolString}},` + (block ? `block: {number: ${block}} ,` : ``) + ` orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n        id\n        feeTier\n        liquidity\n        sqrtPrice\n        tick\n        token0 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token1 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token0Price\n        token1Price\n        volumeUSD\n        volumeToken0\n        volumeToken1\n        txCount\n        totalValueLockedToken0\n        totalValueLockedToken1\n        totalValueLockedUSD\n      }\n      bundles (where: {id: \"1\"}) {\n        ethPriceUSD\n      }\n    }\n    `;\n  return gql(queryString);\n};\n_c = POOLS_BULK;\n/**\n * Fetch top addresses by volume\n */\nexport function usePoolDatas(poolAddresses) {\n  _s();\n  var _data$bundles, _data$bundles$, _data$bundles2, _data$bundles2$;\n  // get client\n  const {\n    dataClient\n  } = useClients();\n  const [activeNetwork] = useActiveNetworkVersion();\n\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps();\n  const {\n    blocks,\n    error: blockError\n  } = useBlocksFromTimestamps([t24, t48, tWeek]);\n  const [block24, block48, blockWeek] = blocks !== null && blocks !== void 0 ? blocks : [];\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(POOLS_BULK(undefined, poolAddresses), {\n    client: dataClient\n  });\n  const {\n    loading: loading24,\n    error: error24,\n    data: data24\n  } = useQuery(POOLS_BULK(block24 === null || block24 === void 0 ? void 0 : block24.number, poolAddresses), {\n    client: dataClient\n  });\n  const {\n    loading: loading48,\n    error: error48,\n    data: data48\n  } = useQuery(POOLS_BULK(block48 === null || block48 === void 0 ? void 0 : block48.number, poolAddresses), {\n    client: dataClient\n  });\n  const {\n    loading: loadingWeek,\n    error: errorWeek,\n    data: dataWeek\n  } = useQuery(POOLS_BULK(blockWeek === null || blockWeek === void 0 ? void 0 : blockWeek.number, poolAddresses), {\n    client: dataClient\n  });\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek);\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek);\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined\n    };\n  }\n  const ethPriceUSD = (data === null || data === void 0 ? void 0 : (_data$bundles = data.bundles) === null || _data$bundles === void 0 ? void 0 : (_data$bundles$ = _data$bundles[0]) === null || _data$bundles$ === void 0 ? void 0 : _data$bundles$.ethPriceUSD) ? parseFloat(data === null || data === void 0 ? void 0 : (_data$bundles2 = data.bundles) === null || _data$bundles2 === void 0 ? void 0 : (_data$bundles2$ = _data$bundles2[0]) === null || _data$bundles2$ === void 0 ? void 0 : _data$bundles2$.ethPriceUSD) : 0;\n  const parsed = (data === null || data === void 0 ? void 0 : data.pools) ? data.pools.reduce((accum, poolData) => {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n  const parsed24 = (data24 === null || data24 === void 0 ? void 0 : data24.pools) ? data24.pools.reduce((accum, poolData) => {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n  const parsed48 = (data48 === null || data48 === void 0 ? void 0 : data48.pools) ? data48.pools.reduce((accum, poolData) => {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n  const parsedWeek = (dataWeek === null || dataWeek === void 0 ? void 0 : dataWeek.pools) ? dataWeek.pools.reduce((accum, poolData) => {\n    accum[poolData.id] = poolData;\n    return accum;\n  }, {}) : {};\n\n  // format data and calculate daily changes\n  const formatted = poolAddresses.reduce((accum, address) => {\n    const current = parsed[address];\n    const oneDay = parsed24[address];\n    const twoDay = parsed48[address];\n    const week = parsedWeek[address];\n    const [volumeUSD, volumeUSDChange] = current && oneDay && twoDay ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD) : current ? [parseFloat(current.volumeUSD), 0] : [0, 0];\n    const volumeUSDWeek = current && week ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD) : current ? parseFloat(current.volumeUSD) : 0;\n\n    // Hotifx: Subtract fees from TVL to correct data while subgraph is fixed.\n    /**\n     * Note: see issue desribed here https://github.com/Uniswap/v3-subgraph/issues/74\n     * During subgraph deploy switch this month we lost logic to fix this accounting.\n     * Grafted sync pending fix now.\n     */\n    const feePercent = current ? parseFloat(current.feeTier) / 10000 / 100 : 0;\n    const tvlAdjust0 = (current === null || current === void 0 ? void 0 : current.volumeToken0) ? parseFloat(current.volumeToken0) * feePercent / 2 : 0;\n    const tvlAdjust1 = (current === null || current === void 0 ? void 0 : current.volumeToken1) ? parseFloat(current.volumeToken1) * feePercent / 2 : 0;\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) - tvlAdjust0 : 0;\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) - tvlAdjust1 : 0;\n    let tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0;\n    const tvlUSDChange = current && oneDay ? (parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) / parseFloat(oneDay.totalValueLockedUSD === '0' ? '1' : oneDay.totalValueLockedUSD) * 100 : 0;\n\n    // Part of TVL fix\n    const tvlUpdated = current ? tvlToken0 * parseFloat(current.token0.derivedETH) * ethPriceUSD + tvlToken1 * parseFloat(current.token1.derivedETH) * ethPriceUSD : undefined;\n    if (tvlUpdated) {\n      tvlUSD = tvlUpdated;\n    }\n    const feeTier = current ? parseInt(current.feeTier) : 0;\n    if (current) {\n      accum[address] = {\n        address,\n        feeTier,\n        liquidity: parseFloat(current.liquidity),\n        sqrtPrice: parseFloat(current.sqrtPrice),\n        tick: parseFloat(current.tick),\n        token0: {\n          address: current.token0.id,\n          name: formatTokenName(current.token0.id, current.token0.name, activeNetwork),\n          symbol: formatTokenSymbol(current.token0.id, current.token0.symbol, activeNetwork),\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH)\n        },\n        token1: {\n          address: current.token1.id,\n          name: formatTokenName(current.token1.id, current.token1.name, activeNetwork),\n          symbol: formatTokenSymbol(current.token1.id, current.token1.symbol, activeNetwork),\n          decimals: parseInt(current.token1.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH)\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken0,\n        tvlToken1\n      };\n    }\n    return accum;\n  }, {});\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted\n  };\n}\n_s(usePoolDatas, \"bCt7WOoi/UWJ+AsE7B4pae3nPJE=\", false, function () {\n  return [useClients, useActiveNetworkVersion, useDeltaTimestamps, useBlocksFromTimestamps, useQuery, useQuery, useQuery, useQuery];\n});\nvar _c;\n$RefreshReg$(_c, \"POOLS_BULK\");","map":{"version":3,"names":["useQuery","gql","useBlocksFromTimestamps","useActiveNetworkVersion","useClients","get2DayChange","useDeltaTimestamps","formatTokenName","formatTokenSymbol","POOLS_BULK","block","pools","poolString","map","address","queryString","usePoolDatas","poolAddresses","dataClient","activeNetwork","t24","t48","tWeek","blocks","error","blockError","block24","block48","blockWeek","loading","data","undefined","client","loading24","error24","data24","number","loading48","error48","data48","loadingWeek","errorWeek","dataWeek","anyError","Boolean","anyLoading","ethPriceUSD","bundles","parseFloat","parsed","reduce","accum","poolData","id","parsed24","parsed48","parsedWeek","formatted","current","oneDay","twoDay","week","volumeUSD","volumeUSDChange","volumeUSDWeek","feePercent","feeTier","tvlAdjust0","volumeToken0","tvlAdjust1","volumeToken1","tvlToken0","totalValueLockedToken0","tvlToken1","totalValueLockedToken1","tvlUSD","totalValueLockedUSD","tvlUSDChange","tvlUpdated","token0","derivedETH","token1","parseInt","liquidity","sqrtPrice","tick","name","symbol","decimals","token0Price","token1Price"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/data/pools/poolData.ts"],"sourcesContent":["import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport { useBlocksFromTimestamps } from 'hooks/useBlocksFromTimestamps'\nimport { useActiveNetworkVersion, useClients } from 'state/application/hooks'\nimport { PoolData } from 'state/pools/reducer'\nimport { get2DayChange } from 'utils/data'\nimport { useDeltaTimestamps } from 'utils/queries'\nimport { formatTokenName, formatTokenSymbol } from 'utils/tokens'\n\nexport const POOLS_BULK = (block: number | undefined, pools: string[]) => {\n  let poolString = `[`\n  pools.map((address) => {\n    return (poolString += `\"${address}\",`)\n  })\n  poolString += ']'\n  const queryString =\n    `\n    query pools {\n      pools(where: {id_in: ${poolString}},` +\n    (block ? `block: {number: ${block}} ,` : ``) +\n    ` orderBy: totalValueLockedUSD, orderDirection: desc, subgraphError: allow) {\n        id\n        feeTier\n        liquidity\n        sqrtPrice\n        tick\n        token0 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token1 {\n            id\n            symbol \n            name\n            decimals\n            derivedETH\n        }\n        token0Price\n        token1Price\n        volumeUSD\n        volumeToken0\n        volumeToken1\n        txCount\n        totalValueLockedToken0\n        totalValueLockedToken1\n        totalValueLockedUSD\n      }\n      bundles (where: {id: \"1\"}) {\n        ethPriceUSD\n      }\n    }\n    `\n  return gql(queryString)\n}\n\ninterface PoolFields {\n  id: string\n  feeTier: string\n  liquidity: string\n  sqrtPrice: string\n  tick: string\n  token0: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token1: {\n    id: string\n    symbol: string\n    name: string\n    decimals: string\n    derivedETH: string\n  }\n  token0Price: string\n  token1Price: string\n  volumeUSD: string\n  volumeToken0: string\n  volumeToken1: string\n  txCount: string\n  totalValueLockedToken0: string\n  totalValueLockedToken1: string\n  totalValueLockedUSD: string\n}\n\ninterface PoolDataResponse {\n  pools: PoolFields[]\n  bundles: {\n    ethPriceUSD: string\n  }[]\n}\n\n/**\n * Fetch top addresses by volume\n */\nexport function usePoolDatas(poolAddresses: string[]): {\n  loading: boolean\n  error: boolean\n  data:\n    | {\n        [address: string]: PoolData\n      }\n    | undefined\n} {\n  // get client\n  const { dataClient } = useClients()\n  const [activeNetwork] = useActiveNetworkVersion()\n\n  // get blocks from historic timestamps\n  const [t24, t48, tWeek] = useDeltaTimestamps()\n  const { blocks, error: blockError } = useBlocksFromTimestamps([t24, t48, tWeek])\n  const [block24, block48, blockWeek] = blocks ?? []\n\n  const { loading, error, data } = useQuery<PoolDataResponse>(POOLS_BULK(undefined, poolAddresses), {\n    client: dataClient,\n  })\n\n  const {\n    loading: loading24,\n    error: error24,\n    data: data24,\n  } = useQuery<PoolDataResponse>(POOLS_BULK(block24?.number, poolAddresses), { client: dataClient })\n  const {\n    loading: loading48,\n    error: error48,\n    data: data48,\n  } = useQuery<PoolDataResponse>(POOLS_BULK(block48?.number, poolAddresses), { client: dataClient })\n  const {\n    loading: loadingWeek,\n    error: errorWeek,\n    data: dataWeek,\n  } = useQuery<PoolDataResponse>(POOLS_BULK(blockWeek?.number, poolAddresses), { client: dataClient })\n\n  const anyError = Boolean(error || error24 || error48 || blockError || errorWeek)\n  const anyLoading = Boolean(loading || loading24 || loading48 || loadingWeek)\n\n  // return early if not all data yet\n  if (anyError || anyLoading) {\n    return {\n      loading: anyLoading,\n      error: anyError,\n      data: undefined,\n    }\n  }\n\n  const ethPriceUSD = data?.bundles?.[0]?.ethPriceUSD ? parseFloat(data?.bundles?.[0]?.ethPriceUSD) : 0\n\n  const parsed = data?.pools\n    ? data.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed24 = data24?.pools\n    ? data24.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsed48 = data48?.pools\n    ? data48.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n  const parsedWeek = dataWeek?.pools\n    ? dataWeek.pools.reduce((accum: { [address: string]: PoolFields }, poolData) => {\n        accum[poolData.id] = poolData\n        return accum\n      }, {})\n    : {}\n\n  // format data and calculate daily changes\n  const formatted = poolAddresses.reduce((accum: { [address: string]: PoolData }, address) => {\n    const current: PoolFields | undefined = parsed[address]\n    const oneDay: PoolFields | undefined = parsed24[address]\n    const twoDay: PoolFields | undefined = parsed48[address]\n    const week: PoolFields | undefined = parsedWeek[address]\n\n    const [volumeUSD, volumeUSDChange] =\n      current && oneDay && twoDay\n        ? get2DayChange(current.volumeUSD, oneDay.volumeUSD, twoDay.volumeUSD)\n        : current\n        ? [parseFloat(current.volumeUSD), 0]\n        : [0, 0]\n\n    const volumeUSDWeek =\n      current && week\n        ? parseFloat(current.volumeUSD) - parseFloat(week.volumeUSD)\n        : current\n        ? parseFloat(current.volumeUSD)\n        : 0\n\n    // Hotifx: Subtract fees from TVL to correct data while subgraph is fixed.\n    /**\n     * Note: see issue desribed here https://github.com/Uniswap/v3-subgraph/issues/74\n     * During subgraph deploy switch this month we lost logic to fix this accounting.\n     * Grafted sync pending fix now.\n     */\n    const feePercent = current ? parseFloat(current.feeTier) / 10000 / 100 : 0\n    const tvlAdjust0 = current?.volumeToken0 ? (parseFloat(current.volumeToken0) * feePercent) / 2 : 0\n    const tvlAdjust1 = current?.volumeToken1 ? (parseFloat(current.volumeToken1) * feePercent) / 2 : 0\n    const tvlToken0 = current ? parseFloat(current.totalValueLockedToken0) - tvlAdjust0 : 0\n    const tvlToken1 = current ? parseFloat(current.totalValueLockedToken1) - tvlAdjust1 : 0\n    let tvlUSD = current ? parseFloat(current.totalValueLockedUSD) : 0\n\n    const tvlUSDChange =\n      current && oneDay\n        ? ((parseFloat(current.totalValueLockedUSD) - parseFloat(oneDay.totalValueLockedUSD)) /\n            parseFloat(oneDay.totalValueLockedUSD === '0' ? '1' : oneDay.totalValueLockedUSD)) *\n          100\n        : 0\n\n    // Part of TVL fix\n    const tvlUpdated = current\n      ? tvlToken0 * parseFloat(current.token0.derivedETH) * ethPriceUSD +\n        tvlToken1 * parseFloat(current.token1.derivedETH) * ethPriceUSD\n      : undefined\n    if (tvlUpdated) {\n      tvlUSD = tvlUpdated\n    }\n\n    const feeTier = current ? parseInt(current.feeTier) : 0\n\n    if (current) {\n      accum[address] = {\n        address,\n        feeTier,\n        liquidity: parseFloat(current.liquidity),\n        sqrtPrice: parseFloat(current.sqrtPrice),\n        tick: parseFloat(current.tick),\n        token0: {\n          address: current.token0.id,\n          name: formatTokenName(current.token0.id, current.token0.name, activeNetwork),\n          symbol: formatTokenSymbol(current.token0.id, current.token0.symbol, activeNetwork),\n          decimals: parseInt(current.token0.decimals),\n          derivedETH: parseFloat(current.token0.derivedETH),\n        },\n        token1: {\n          address: current.token1.id,\n          name: formatTokenName(current.token1.id, current.token1.name, activeNetwork),\n          symbol: formatTokenSymbol(current.token1.id, current.token1.symbol, activeNetwork),\n          decimals: parseInt(current.token1.decimals),\n          derivedETH: parseFloat(current.token1.derivedETH),\n        },\n        token0Price: parseFloat(current.token0Price),\n        token1Price: parseFloat(current.token1Price),\n        volumeUSD,\n        volumeUSDChange,\n        volumeUSDWeek,\n        tvlUSD,\n        tvlUSDChange,\n        tvlToken0,\n        tvlToken1,\n      }\n    }\n\n    return accum\n  }, {})\n\n  return {\n    loading: anyLoading,\n    error: anyError,\n    data: formatted,\n  }\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,GAAG,MAAM,aAAa;AAC7B,SAASC,uBAAuB,QAAQ,+BAA+B;AACvE,SAASC,uBAAuB,EAAEC,UAAU,QAAQ,yBAAyB;AAE7E,SAASC,aAAa,QAAQ,YAAY;AAC1C,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,eAAe,EAAEC,iBAAiB,QAAQ,cAAc;AAEjE,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAyB,EAAEC,KAAe,KAAK;EACxE,IAAIC,UAAU,GAAI,GAAE;EACpBD,KAAK,CAACE,GAAG,CAAEC,OAAO,IAAK;IACrB,OAAQF,UAAU,IAAK,IAAGE,OAAQ,IAAG;EACvC,CAAC,CAAC;EACFF,UAAU,IAAI,GAAG;EACjB,MAAMG,WAAW,GACd;AACL;AACA,6BAA6BH,UAAW,IAAG,IACtCF,KAAK,GAAI,mBAAkBA,KAAM,KAAI,GAAI,EAAC,CAAC,GAC3C;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;EACH,OAAOT,GAAG,CAACc,WAAW,CAAC;AACzB,CAAC;AAAA,KA/CYN,UAAU;AAuFvB;AACA;AACA;AACA,OAAO,SAASO,YAAY,CAACC,aAAuB,EAQlD;EAAA;EAAA;EACA;EACA,MAAM;IAAEC;EAAW,CAAC,GAAGd,UAAU,EAAE;EACnC,MAAM,CAACe,aAAa,CAAC,GAAGhB,uBAAuB,EAAE;;EAEjD;EACA,MAAM,CAACiB,GAAG,EAAEC,GAAG,EAAEC,KAAK,CAAC,GAAGhB,kBAAkB,EAAE;EAC9C,MAAM;IAAEiB,MAAM;IAAEC,KAAK,EAAEC;EAAW,CAAC,GAAGvB,uBAAuB,CAAC,CAACkB,GAAG,EAAEC,GAAG,EAAEC,KAAK,CAAC,CAAC;EAChF,MAAM,CAACI,OAAO,EAAEC,OAAO,EAAEC,SAAS,CAAC,GAAGL,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE;EAElD,MAAM;IAAEM,OAAO;IAAEL,KAAK;IAAEM;EAAK,CAAC,GAAG9B,QAAQ,CAAmBS,UAAU,CAACsB,SAAS,EAAEd,aAAa,CAAC,EAAE;IAChGe,MAAM,EAAEd;EACV,CAAC,CAAC;EAEF,MAAM;IACJW,OAAO,EAAEI,SAAS;IAClBT,KAAK,EAAEU,OAAO;IACdJ,IAAI,EAAEK;EACR,CAAC,GAAGnC,QAAQ,CAAmBS,UAAU,CAACiB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,MAAM,EAAEnB,aAAa,CAAC,EAAE;IAAEe,MAAM,EAAEd;EAAW,CAAC,CAAC;EAClG,MAAM;IACJW,OAAO,EAAEQ,SAAS;IAClBb,KAAK,EAAEc,OAAO;IACdR,IAAI,EAAES;EACR,CAAC,GAAGvC,QAAQ,CAAmBS,UAAU,CAACkB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAES,MAAM,EAAEnB,aAAa,CAAC,EAAE;IAAEe,MAAM,EAAEd;EAAW,CAAC,CAAC;EAClG,MAAM;IACJW,OAAO,EAAEW,WAAW;IACpBhB,KAAK,EAAEiB,SAAS;IAChBX,IAAI,EAAEY;EACR,CAAC,GAAG1C,QAAQ,CAAmBS,UAAU,CAACmB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEQ,MAAM,EAAEnB,aAAa,CAAC,EAAE;IAAEe,MAAM,EAAEd;EAAW,CAAC,CAAC;EAEpG,MAAMyB,QAAQ,GAAGC,OAAO,CAACpB,KAAK,IAAIU,OAAO,IAAII,OAAO,IAAIb,UAAU,IAAIgB,SAAS,CAAC;EAChF,MAAMI,UAAU,GAAGD,OAAO,CAACf,OAAO,IAAII,SAAS,IAAII,SAAS,IAAIG,WAAW,CAAC;;EAE5E;EACA,IAAIG,QAAQ,IAAIE,UAAU,EAAE;IAC1B,OAAO;MACLhB,OAAO,EAAEgB,UAAU;MACnBrB,KAAK,EAAEmB,QAAQ;MACfb,IAAI,EAAEC;IACR,CAAC;EACH;EAEA,MAAMe,WAAW,GAAG,CAAAhB,IAAI,aAAJA,IAAI,wCAAJA,IAAI,CAAEiB,OAAO,oEAAb,cAAgB,CAAC,CAAC,mDAAlB,eAAoBD,WAAW,IAAGE,UAAU,CAAClB,IAAI,aAAJA,IAAI,yCAAJA,IAAI,CAAEiB,OAAO,sEAAb,eAAgB,CAAC,CAAC,oDAAlB,gBAAoBD,WAAW,CAAC,GAAG,CAAC;EAErG,MAAMG,MAAM,GAAG,CAAAnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEnB,KAAK,IACtBmB,IAAI,CAACnB,KAAK,CAACuC,MAAM,CAAC,CAACC,KAAwC,EAAEC,QAAQ,KAAK;IACxED,KAAK,CAACC,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ;IAC7B,OAAOD,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC,GACN,CAAC,CAAC;EACN,MAAMG,QAAQ,GAAG,CAAAnB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAExB,KAAK,IAC1BwB,MAAM,CAACxB,KAAK,CAACuC,MAAM,CAAC,CAACC,KAAwC,EAAEC,QAAQ,KAAK;IAC1ED,KAAK,CAACC,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ;IAC7B,OAAOD,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC,GACN,CAAC,CAAC;EACN,MAAMI,QAAQ,GAAG,CAAAhB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE5B,KAAK,IAC1B4B,MAAM,CAAC5B,KAAK,CAACuC,MAAM,CAAC,CAACC,KAAwC,EAAEC,QAAQ,KAAK;IAC1ED,KAAK,CAACC,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ;IAC7B,OAAOD,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC,GACN,CAAC,CAAC;EACN,MAAMK,UAAU,GAAG,CAAAd,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE/B,KAAK,IAC9B+B,QAAQ,CAAC/B,KAAK,CAACuC,MAAM,CAAC,CAACC,KAAwC,EAAEC,QAAQ,KAAK;IAC5ED,KAAK,CAACC,QAAQ,CAACC,EAAE,CAAC,GAAGD,QAAQ;IAC7B,OAAOD,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC,GACN,CAAC,CAAC;;EAEN;EACA,MAAMM,SAAS,GAAGxC,aAAa,CAACiC,MAAM,CAAC,CAACC,KAAsC,EAAErC,OAAO,KAAK;IAC1F,MAAM4C,OAA+B,GAAGT,MAAM,CAACnC,OAAO,CAAC;IACvD,MAAM6C,MAA8B,GAAGL,QAAQ,CAACxC,OAAO,CAAC;IACxD,MAAM8C,MAA8B,GAAGL,QAAQ,CAACzC,OAAO,CAAC;IACxD,MAAM+C,IAA4B,GAAGL,UAAU,CAAC1C,OAAO,CAAC;IAExD,MAAM,CAACgD,SAAS,EAAEC,eAAe,CAAC,GAChCL,OAAO,IAAIC,MAAM,IAAIC,MAAM,GACvBvD,aAAa,CAACqD,OAAO,CAACI,SAAS,EAAEH,MAAM,CAACG,SAAS,EAAEF,MAAM,CAACE,SAAS,CAAC,GACpEJ,OAAO,GACP,CAACV,UAAU,CAACU,OAAO,CAACI,SAAS,CAAC,EAAE,CAAC,CAAC,GAClC,CAAC,CAAC,EAAE,CAAC,CAAC;IAEZ,MAAME,aAAa,GACjBN,OAAO,IAAIG,IAAI,GACXb,UAAU,CAACU,OAAO,CAACI,SAAS,CAAC,GAAGd,UAAU,CAACa,IAAI,CAACC,SAAS,CAAC,GAC1DJ,OAAO,GACPV,UAAU,CAACU,OAAO,CAACI,SAAS,CAAC,GAC7B,CAAC;;IAEP;IACA;AACJ;AACA;AACA;AACA;IACI,MAAMG,UAAU,GAAGP,OAAO,GAAGV,UAAU,CAACU,OAAO,CAACQ,OAAO,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,CAAC;IAC1E,MAAMC,UAAU,GAAG,CAAAT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEU,YAAY,IAAIpB,UAAU,CAACU,OAAO,CAACU,YAAY,CAAC,GAAGH,UAAU,GAAI,CAAC,GAAG,CAAC;IAClG,MAAMI,UAAU,GAAG,CAAAX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,YAAY,IAAItB,UAAU,CAACU,OAAO,CAACY,YAAY,CAAC,GAAGL,UAAU,GAAI,CAAC,GAAG,CAAC;IAClG,MAAMM,SAAS,GAAGb,OAAO,GAAGV,UAAU,CAACU,OAAO,CAACc,sBAAsB,CAAC,GAAGL,UAAU,GAAG,CAAC;IACvF,MAAMM,SAAS,GAAGf,OAAO,GAAGV,UAAU,CAACU,OAAO,CAACgB,sBAAsB,CAAC,GAAGL,UAAU,GAAG,CAAC;IACvF,IAAIM,MAAM,GAAGjB,OAAO,GAAGV,UAAU,CAACU,OAAO,CAACkB,mBAAmB,CAAC,GAAG,CAAC;IAElE,MAAMC,YAAY,GAChBnB,OAAO,IAAIC,MAAM,GACZ,CAACX,UAAU,CAACU,OAAO,CAACkB,mBAAmB,CAAC,GAAG5B,UAAU,CAACW,MAAM,CAACiB,mBAAmB,CAAC,IAChF5B,UAAU,CAACW,MAAM,CAACiB,mBAAmB,KAAK,GAAG,GAAG,GAAG,GAAGjB,MAAM,CAACiB,mBAAmB,CAAC,GACnF,GAAG,GACH,CAAC;;IAEP;IACA,MAAME,UAAU,GAAGpB,OAAO,GACtBa,SAAS,GAAGvB,UAAU,CAACU,OAAO,CAACqB,MAAM,CAACC,UAAU,CAAC,GAAGlC,WAAW,GAC/D2B,SAAS,GAAGzB,UAAU,CAACU,OAAO,CAACuB,MAAM,CAACD,UAAU,CAAC,GAAGlC,WAAW,GAC/Df,SAAS;IACb,IAAI+C,UAAU,EAAE;MACdH,MAAM,GAAGG,UAAU;IACrB;IAEA,MAAMZ,OAAO,GAAGR,OAAO,GAAGwB,QAAQ,CAACxB,OAAO,CAACQ,OAAO,CAAC,GAAG,CAAC;IAEvD,IAAIR,OAAO,EAAE;MACXP,KAAK,CAACrC,OAAO,CAAC,GAAG;QACfA,OAAO;QACPoD,OAAO;QACPiB,SAAS,EAAEnC,UAAU,CAACU,OAAO,CAACyB,SAAS,CAAC;QACxCC,SAAS,EAAEpC,UAAU,CAACU,OAAO,CAAC0B,SAAS,CAAC;QACxCC,IAAI,EAAErC,UAAU,CAACU,OAAO,CAAC2B,IAAI,CAAC;QAC9BN,MAAM,EAAE;UACNjE,OAAO,EAAE4C,OAAO,CAACqB,MAAM,CAAC1B,EAAE;UAC1BiC,IAAI,EAAE/E,eAAe,CAACmD,OAAO,CAACqB,MAAM,CAAC1B,EAAE,EAAEK,OAAO,CAACqB,MAAM,CAACO,IAAI,EAAEnE,aAAa,CAAC;UAC5EoE,MAAM,EAAE/E,iBAAiB,CAACkD,OAAO,CAACqB,MAAM,CAAC1B,EAAE,EAAEK,OAAO,CAACqB,MAAM,CAACQ,MAAM,EAAEpE,aAAa,CAAC;UAClFqE,QAAQ,EAAEN,QAAQ,CAACxB,OAAO,CAACqB,MAAM,CAACS,QAAQ,CAAC;UAC3CR,UAAU,EAAEhC,UAAU,CAACU,OAAO,CAACqB,MAAM,CAACC,UAAU;QAClD,CAAC;QACDC,MAAM,EAAE;UACNnE,OAAO,EAAE4C,OAAO,CAACuB,MAAM,CAAC5B,EAAE;UAC1BiC,IAAI,EAAE/E,eAAe,CAACmD,OAAO,CAACuB,MAAM,CAAC5B,EAAE,EAAEK,OAAO,CAACuB,MAAM,CAACK,IAAI,EAAEnE,aAAa,CAAC;UAC5EoE,MAAM,EAAE/E,iBAAiB,CAACkD,OAAO,CAACuB,MAAM,CAAC5B,EAAE,EAAEK,OAAO,CAACuB,MAAM,CAACM,MAAM,EAAEpE,aAAa,CAAC;UAClFqE,QAAQ,EAAEN,QAAQ,CAACxB,OAAO,CAACuB,MAAM,CAACO,QAAQ,CAAC;UAC3CR,UAAU,EAAEhC,UAAU,CAACU,OAAO,CAACuB,MAAM,CAACD,UAAU;QAClD,CAAC;QACDS,WAAW,EAAEzC,UAAU,CAACU,OAAO,CAAC+B,WAAW,CAAC;QAC5CC,WAAW,EAAE1C,UAAU,CAACU,OAAO,CAACgC,WAAW,CAAC;QAC5C5B,SAAS;QACTC,eAAe;QACfC,aAAa;QACbW,MAAM;QACNE,YAAY;QACZN,SAAS;QACTE;MACF,CAAC;IACH;IAEA,OAAOtB,KAAK;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAO;IACLtB,OAAO,EAAEgB,UAAU;IACnBrB,KAAK,EAAEmB,QAAQ;IACfb,IAAI,EAAE2B;EACR,CAAC;AACH;AAAC,GA1KezC,YAAY;EAAA,QAUHZ,UAAU,EACTD,uBAAuB,EAGrBG,kBAAkB,EACNJ,uBAAuB,EAG5BF,QAAQ,EAQrCA,QAAQ,EAKRA,QAAQ,EAKRA,QAAQ;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}