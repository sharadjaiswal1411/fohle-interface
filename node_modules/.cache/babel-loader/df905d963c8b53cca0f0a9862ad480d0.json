{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{Price}from'@uniswap/sdk-core';import{encodeSqrtRatioX96,nearestUsableTick,priceToClosestTick,TICK_SPACINGS,TickMath}from'@uniswap/v3-sdk';import JSBI from'jsbi';export function tryParsePrice(baseToken,quoteToken,value){var _fraction$length;if(!baseToken||!quoteToken||!value){return undefined;}if(!value.match(/^\\d*\\.?\\d+$/)){return undefined;}var _value$split=value.split('.'),_value$split2=_slicedToArray(_value$split,2),whole=_value$split2[0],fraction=_value$split2[1];var decimals=(_fraction$length=fraction===null||fraction===void 0?void 0:fraction.length)!==null&&_fraction$length!==void 0?_fraction$length:0;var withoutDecimals=JSBI.BigInt((whole!==null&&whole!==void 0?whole:'')+(fraction!==null&&fraction!==void 0?fraction:''));return new Price(baseToken,quoteToken,JSBI.multiply(JSBI.BigInt(Math.pow(10,decimals)),JSBI.BigInt(Math.pow(10,baseToken.decimals))),JSBI.multiply(withoutDecimals,JSBI.BigInt(Math.pow(10,quoteToken.decimals))));}export function tryParseTick(baseToken,quoteToken,feeAmount,value){if(!baseToken||!quoteToken||!feeAmount||!value){return undefined;}var price=tryParsePrice(baseToken,quoteToken,value);if(!price){return undefined;}var tick;// check price is within min/max bounds, if outside return min/max\nvar sqrtRatioX96=encodeSqrtRatioX96(price.numerator,price.denominator);if(JSBI.greaterThanOrEqual(sqrtRatioX96,TickMath.MAX_SQRT_RATIO)){tick=TickMath.MAX_TICK;}else if(JSBI.lessThanOrEqual(sqrtRatioX96,TickMath.MIN_SQRT_RATIO)){tick=TickMath.MIN_TICK;}else{// this function is agnostic to the base, will always return the correct tick\ntick=priceToClosestTick(price);}return nearestUsableTick(tick,TICK_SPACINGS[feeAmount]);}","map":{"version":3,"names":["Price","encodeSqrtRatioX96","nearestUsableTick","priceToClosestTick","TICK_SPACINGS","TickMath","JSBI","tryParsePrice","baseToken","quoteToken","value","undefined","match","split","whole","fraction","decimals","length","withoutDecimals","BigInt","multiply","tryParseTick","feeAmount","price","tick","sqrtRatioX96","numerator","denominator","greaterThanOrEqual","MAX_SQRT_RATIO","MAX_TICK","lessThanOrEqual","MIN_SQRT_RATIO","MIN_TICK"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/mint/v3/utils.ts"],"sourcesContent":["import { Price, Token } from '@uniswap/sdk-core'\nimport {\n  encodeSqrtRatioX96,\n  FeeAmount,\n  nearestUsableTick,\n  priceToClosestTick,\n  TICK_SPACINGS,\n  TickMath,\n} from '@uniswap/v3-sdk'\nimport JSBI from 'jsbi'\n\nexport function tryParsePrice(baseToken?: Token, quoteToken?: Token, value?: string) {\n  if (!baseToken || !quoteToken || !value) {\n    return undefined\n  }\n\n  if (!value.match(/^\\d*\\.?\\d+$/)) {\n    return undefined\n  }\n\n  const [whole, fraction] = value.split('.')\n\n  const decimals = fraction?.length ?? 0\n  const withoutDecimals = JSBI.BigInt((whole ?? '') + (fraction ?? ''))\n\n  return new Price(\n    baseToken,\n    quoteToken,\n    JSBI.multiply(JSBI.BigInt(10 ** decimals), JSBI.BigInt(10 ** baseToken.decimals)),\n    JSBI.multiply(withoutDecimals, JSBI.BigInt(10 ** quoteToken.decimals))\n  )\n}\n\nexport function tryParseTick(\n  baseToken?: Token,\n  quoteToken?: Token,\n  feeAmount?: FeeAmount,\n  value?: string\n): number | undefined {\n  if (!baseToken || !quoteToken || !feeAmount || !value) {\n    return undefined\n  }\n\n  const price = tryParsePrice(baseToken, quoteToken, value)\n\n  if (!price) {\n    return undefined\n  }\n\n  let tick: number\n\n  // check price is within min/max bounds, if outside return min/max\n  const sqrtRatioX96 = encodeSqrtRatioX96(price.numerator, price.denominator)\n\n  if (JSBI.greaterThanOrEqual(sqrtRatioX96, TickMath.MAX_SQRT_RATIO)) {\n    tick = TickMath.MAX_TICK\n  } else if (JSBI.lessThanOrEqual(sqrtRatioX96, TickMath.MIN_SQRT_RATIO)) {\n    tick = TickMath.MIN_TICK\n  } else {\n    // this function is agnostic to the base, will always return the correct tick\n    tick = priceToClosestTick(price)\n  }\n\n  return nearestUsableTick(tick, TICK_SPACINGS[feeAmount])\n}\n"],"mappings":"4KAAA,OAASA,KAAK,KAAe,mBAAmB,CAChD,OACEC,kBAAkB,CAElBC,iBAAiB,CACjBC,kBAAkB,CAClBC,aAAa,CACbC,QAAQ,KACH,iBAAiB,CACxB,MAAOC,KAAI,KAAM,MAAM,CAEvB,MAAO,SAASC,cAAa,CAACC,SAAiB,CAAEC,UAAkB,CAAEC,KAAc,CAAE,sBACnF,GAAI,CAACF,SAAS,EAAI,CAACC,UAAU,EAAI,CAACC,KAAK,CAAE,CACvC,MAAOC,UAAS,CAClB,CAEA,GAAI,CAACD,KAAK,CAACE,KAAK,CAAC,aAAa,CAAC,CAAE,CAC/B,MAAOD,UAAS,CAClB,CAEA,iBAA0BD,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC,8CAAnCC,KAAK,kBAAEC,QAAQ,kBAEtB,GAAMC,SAAQ,mBAAGD,QAAQ,SAARA,QAAQ,iBAARA,QAAQ,CAAEE,MAAM,qDAAI,CAAC,CACtC,GAAMC,gBAAe,CAAGZ,IAAI,CAACa,MAAM,CAAC,CAACL,KAAK,SAALA,KAAK,UAALA,KAAK,CAAI,EAAE,GAAKC,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAI,EAAE,CAAC,CAAC,CAErE,MAAO,IAAIf,MAAK,CACdQ,SAAS,CACTC,UAAU,CACVH,IAAI,CAACc,QAAQ,CAACd,IAAI,CAACa,MAAM,UAAC,EAAE,CAAIH,QAAQ,EAAC,CAAEV,IAAI,CAACa,MAAM,UAAC,EAAE,CAAIX,SAAS,CAACQ,QAAQ,EAAC,CAAC,CACjFV,IAAI,CAACc,QAAQ,CAACF,eAAe,CAAEZ,IAAI,CAACa,MAAM,UAAC,EAAE,CAAIV,UAAU,CAACO,QAAQ,EAAC,CAAC,CACvE,CACH,CAEA,MAAO,SAASK,aAAY,CAC1Bb,SAAiB,CACjBC,UAAkB,CAClBa,SAAqB,CACrBZ,KAAc,CACM,CACpB,GAAI,CAACF,SAAS,EAAI,CAACC,UAAU,EAAI,CAACa,SAAS,EAAI,CAACZ,KAAK,CAAE,CACrD,MAAOC,UAAS,CAClB,CAEA,GAAMY,MAAK,CAAGhB,aAAa,CAACC,SAAS,CAAEC,UAAU,CAAEC,KAAK,CAAC,CAEzD,GAAI,CAACa,KAAK,CAAE,CACV,MAAOZ,UAAS,CAClB,CAEA,GAAIa,KAAY,CAEhB;AACA,GAAMC,aAAY,CAAGxB,kBAAkB,CAACsB,KAAK,CAACG,SAAS,CAAEH,KAAK,CAACI,WAAW,CAAC,CAE3E,GAAIrB,IAAI,CAACsB,kBAAkB,CAACH,YAAY,CAAEpB,QAAQ,CAACwB,cAAc,CAAC,CAAE,CAClEL,IAAI,CAAGnB,QAAQ,CAACyB,QAAQ,CAC1B,CAAC,IAAM,IAAIxB,IAAI,CAACyB,eAAe,CAACN,YAAY,CAAEpB,QAAQ,CAAC2B,cAAc,CAAC,CAAE,CACtER,IAAI,CAAGnB,QAAQ,CAAC4B,QAAQ,CAC1B,CAAC,IAAM,CACL;AACAT,IAAI,CAAGrB,kBAAkB,CAACoB,KAAK,CAAC,CAClC,CAEA,MAAOrB,kBAAiB,CAACsB,IAAI,CAAEpB,aAAa,CAACkB,SAAS,CAAC,CAAC,CAC1D"},"metadata":{},"sourceType":"module"}