{"ast":null,"code":"var _s = $RefreshSig$();\nimport { sendEvent } from 'components/analytics';\nimport { useEffect } from 'react';\nimport { ApplicationModal, setOpenModal } from 'state/application/reducer';\nimport { useAppDispatch } from 'state/hooks';\nexport default function useAccountRiskCheck(account) {\n  _s();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (account) {\n      const riskCheckLocalStorageKey = `risk-check-${account}`;\n      const now = Date.now();\n      try {\n        const storedTime = localStorage.getItem(riskCheckLocalStorageKey);\n        const checkExpirationTime = storedTime ? parseInt(storedTime) : now - 1;\n        if (checkExpirationTime < Date.now()) {\n          const headers = new Headers({\n            'Content-Type': 'application/json'\n          });\n          fetch('https://screening-worker.uniswap.workers.dev', {\n            method: 'POST',\n            headers,\n            body: JSON.stringify({\n              address: account\n            })\n          }).then(res => res.json()).then(data => {\n            if (data.block) {\n              dispatch(setOpenModal(ApplicationModal.BLOCKED_ACCOUNT));\n              sendEvent({\n                category: 'Address Screening',\n                action: 'blocked',\n                label: account\n              });\n            }\n          }).catch(() => dispatch(setOpenModal(null)));\n        }\n      } finally {\n        // leaving this code in place w/ a negligible cache time in case we want to increase cache time later\n        localStorage.setItem(riskCheckLocalStorageKey, (now + 10000).toString());\n      }\n    }\n  }, [account, dispatch]);\n}\n_s(useAccountRiskCheck, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});","map":{"version":3,"names":["sendEvent","useEffect","ApplicationModal","setOpenModal","useAppDispatch","useAccountRiskCheck","account","dispatch","riskCheckLocalStorageKey","now","Date","storedTime","localStorage","getItem","checkExpirationTime","parseInt","headers","Headers","fetch","method","body","JSON","stringify","address","then","res","json","data","block","BLOCKED_ACCOUNT","category","action","label","catch","setItem","toString"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useAccountRiskCheck.ts"],"sourcesContent":["import { sendEvent } from 'components/analytics'\nimport ms from 'ms.macro'\nimport { useEffect } from 'react'\nimport { ApplicationModal, setOpenModal } from 'state/application/reducer'\nimport { useAppDispatch } from 'state/hooks'\n\nexport default function useAccountRiskCheck(account: string | null | undefined) {\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      const riskCheckLocalStorageKey = `risk-check-${account}`\n      const now = Date.now()\n      try {\n        const storedTime = localStorage.getItem(riskCheckLocalStorageKey)\n        const checkExpirationTime = storedTime ? parseInt(storedTime) : now - 1\n        if (checkExpirationTime < Date.now()) {\n          const headers = new Headers({ 'Content-Type': 'application/json' })\n          fetch('https://screening-worker.uniswap.workers.dev', {\n            method: 'POST',\n            headers,\n            body: JSON.stringify({ address: account }),\n          })\n            .then((res) => res.json())\n            .then((data) => {\n              if (data.block) {\n                dispatch(setOpenModal(ApplicationModal.BLOCKED_ACCOUNT))\n                sendEvent({\n                  category: 'Address Screening',\n                  action: 'blocked',\n                  label: account,\n                })\n              }\n            })\n            .catch(() => dispatch(setOpenModal(null)))\n        }\n      } finally {\n        // leaving this code in place w/ a negligible cache time in case we want to increase cache time later\n        localStorage.setItem(riskCheckLocalStorageKey, (now + ms`10 seconds`).toString())\n      }\n    }\n  }, [account, dispatch])\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,sBAAsB;AAEhD,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,gBAAgB,EAAEC,YAAY,QAAQ,2BAA2B;AAC1E,SAASC,cAAc,QAAQ,aAAa;AAE5C,eAAe,SAASC,mBAAmB,CAACC,OAAkC,EAAE;EAAA;EAC9E,MAAMC,QAAQ,GAAGH,cAAc,EAAE;EAEjCH,SAAS,CAAC,MAAM;IACd,IAAIK,OAAO,EAAE;MACX,MAAME,wBAAwB,GAAI,cAAaF,OAAQ,EAAC;MACxD,MAAMG,GAAG,GAAGC,IAAI,CAACD,GAAG,EAAE;MACtB,IAAI;QACF,MAAME,UAAU,GAAGC,YAAY,CAACC,OAAO,CAACL,wBAAwB,CAAC;QACjE,MAAMM,mBAAmB,GAAGH,UAAU,GAAGI,QAAQ,CAACJ,UAAU,CAAC,GAAGF,GAAG,GAAG,CAAC;QACvE,IAAIK,mBAAmB,GAAGJ,IAAI,CAACD,GAAG,EAAE,EAAE;UACpC,MAAMO,OAAO,GAAG,IAAIC,OAAO,CAAC;YAAE,cAAc,EAAE;UAAmB,CAAC,CAAC;UACnEC,KAAK,CAAC,8CAA8C,EAAE;YACpDC,MAAM,EAAE,MAAM;YACdH,OAAO;YACPI,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cAAEC,OAAO,EAAEjB;YAAQ,CAAC;UAC3C,CAAC,CAAC,CACCkB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;YACd,IAAIA,IAAI,CAACC,KAAK,EAAE;cACdrB,QAAQ,CAACJ,YAAY,CAACD,gBAAgB,CAAC2B,eAAe,CAAC,CAAC;cACxD7B,SAAS,CAAC;gBACR8B,QAAQ,EAAE,mBAAmB;gBAC7BC,MAAM,EAAE,SAAS;gBACjBC,KAAK,EAAE1B;cACT,CAAC,CAAC;YACJ;UACF,CAAC,CAAC,CACD2B,KAAK,CAAC,MAAM1B,QAAQ,CAACJ,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;QAC9C;MACF,CAAC,SAAS;QACR;QACAS,YAAY,CAACsB,OAAO,CAAC1B,wBAAwB,EAAE,CAACC,GAAG,QAAiB,EAAE0B,QAAQ,EAAE,CAAC;MACnF;IACF;EACF,CAAC,EAAE,CAAC7B,OAAO,EAAEC,QAAQ,CAAC,CAAC;AACzB;AAAC,GApCuBF,mBAAmB;EAAA,QACxBD,cAAc;AAAA"},"metadata":{},"sourceType":"module"}