{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSingleCallResult } from 'lib/hooks/multicall';\nimport { useMemo } from 'react';\nimport { safeNamehash } from 'utils/safeNamehash';\nimport isZero from '../utils/isZero';\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract';\nimport useDebounce from './useDebounce';\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName) {\n  _s();\n  var _resolverAddress$resu;\n  const debouncedName = useDebounce(ensName, 200);\n  const ensNodeArgument = useMemo(() => [debouncedName === null ? undefined : safeNamehash(debouncedName)], [debouncedName]);\n  const registrarContract = useENSRegistrarContract(false);\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument);\n  const resolverAddressResult = (_resolverAddress$resu = resolverAddress.result) === null || _resolverAddress$resu === void 0 ? void 0 : _resolverAddress$resu[0];\n  const resolverContract = useENSResolverContract(resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined, false);\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument);\n  const changed = debouncedName !== ensName;\n  return useMemo(() => {\n    var _addr$result$, _addr$result;\n    return {\n      address: changed ? null : (_addr$result$ = (_addr$result = addr.result) === null || _addr$result === void 0 ? void 0 : _addr$result[0]) !== null && _addr$result$ !== void 0 ? _addr$result$ : null,\n      loading: changed || resolverAddress.loading || addr.loading\n    };\n  }, [addr.loading, addr.result, changed, resolverAddress.loading]);\n}\n_s(useENSAddress, \"PIkXm0ys4v2aprKSXS+5vGwbczI=\", false, function () {\n  return [useDebounce, useENSRegistrarContract, useSingleCallResult, useENSResolverContract, useSingleCallResult];\n});","map":{"version":3,"names":["useSingleCallResult","useMemo","safeNamehash","isZero","useENSRegistrarContract","useENSResolverContract","useDebounce","useENSAddress","ensName","debouncedName","ensNodeArgument","undefined","registrarContract","resolverAddress","resolverAddressResult","result","resolverContract","addr","changed","address","loading"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useENSAddress.ts"],"sourcesContent":["import { useSingleCallResult } from 'lib/hooks/multicall'\nimport { useMemo } from 'react'\nimport { safeNamehash } from 'utils/safeNamehash'\n\nimport isZero from '../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from './useContract'\nimport useDebounce from './useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(\n    () => [debouncedName === null ? undefined : safeNamehash(debouncedName)],\n    [debouncedName]\n  )\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return useMemo(\n    () => ({\n      address: changed ? null : addr.result?.[0] ?? null,\n      loading: changed || resolverAddress.loading || addr.loading,\n    }),\n    [addr.loading, addr.result, changed, resolverAddress.loading]\n  )\n}\n"],"mappings":";AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,OAAO,QAAQ,OAAO;AAC/B,SAASC,YAAY,QAAQ,oBAAoB;AAEjD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,uBAAuB,EAAEC,sBAAsB,QAAQ,eAAe;AAC/E,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA,eAAe,SAASC,aAAa,CAACC,OAAuB,EAAgD;EAAA;EAAA;EAC3G,MAAMC,aAAa,GAAGH,WAAW,CAACE,OAAO,EAAE,GAAG,CAAC;EAC/C,MAAME,eAAe,GAAGT,OAAO,CAC7B,MAAM,CAACQ,aAAa,KAAK,IAAI,GAAGE,SAAS,GAAGT,YAAY,CAACO,aAAa,CAAC,CAAC,EACxE,CAACA,aAAa,CAAC,CAChB;EACD,MAAMG,iBAAiB,GAAGR,uBAAuB,CAAC,KAAK,CAAC;EACxD,MAAMS,eAAe,GAAGb,mBAAmB,CAACY,iBAAiB,EAAE,UAAU,EAAEF,eAAe,CAAC;EAC3F,MAAMI,qBAAqB,4BAAGD,eAAe,CAACE,MAAM,0DAAtB,sBAAyB,CAAC,CAAC;EACzD,MAAMC,gBAAgB,GAAGX,sBAAsB,CAC7CS,qBAAqB,IAAI,CAACX,MAAM,CAACW,qBAAqB,CAAC,GAAGA,qBAAqB,GAAGH,SAAS,EAC3F,KAAK,CACN;EACD,MAAMM,IAAI,GAAGjB,mBAAmB,CAACgB,gBAAgB,EAAE,MAAM,EAAEN,eAAe,CAAC;EAE3E,MAAMQ,OAAO,GAAGT,aAAa,KAAKD,OAAO;EACzC,OAAOP,OAAO,CACZ;IAAA;IAAA,OAAO;MACLkB,OAAO,EAAED,OAAO,GAAG,IAAI,oCAAGD,IAAI,CAACF,MAAM,iDAAX,aAAc,CAAC,CAAC,yDAAI,IAAI;MAClDK,OAAO,EAAEF,OAAO,IAAIL,eAAe,CAACO,OAAO,IAAIH,IAAI,CAACG;IACtD,CAAC;EAAA,CAAC,EACF,CAACH,IAAI,CAACG,OAAO,EAAEH,IAAI,CAACF,MAAM,EAAEG,OAAO,EAAEL,eAAe,CAACO,OAAO,CAAC,CAC9D;AACH;AAAC,GAvBuBb,aAAa;EAAA,QACbD,WAAW,EAKPF,uBAAuB,EACzBJ,mBAAmB,EAElBK,sBAAsB,EAIlCL,mBAAmB;AAAA"},"metadata":{},"sourceType":"module"}