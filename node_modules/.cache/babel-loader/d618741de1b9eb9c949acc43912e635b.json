{"ast":null,"code":"import _regeneratorRuntime from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{nanoid}from'@reduxjs/toolkit';import{SupportedChainId}from'constants/chains';import{RPC_PROVIDERS}from'constants/providers';import getTokenList from'lib/hooks/useTokenList/fetchTokenList';import resolveENSContentHash from'lib/utils/resolveENSContentHash';import{useCallback}from'react';import{useAppDispatch}from'state/hooks';import{fetchTokenList}from'../state/lists/actions';export function useFetchListCallback(){var dispatch=useAppDispatch();// note: prevent dispatch if using for list search or unsupported list\nreturn useCallback(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(listUrl){var sendDispatch,skipValidation,requestId,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:sendDispatch=_args.length>1&&_args[1]!==undefined?_args[1]:true;skipValidation=_args.length>2?_args[2]:undefined;requestId=nanoid();sendDispatch&&dispatch(fetchTokenList.pending({requestId:requestId,url:listUrl}));return _context.abrupt(\"return\",getTokenList(listUrl,function(ensName){return resolveENSContentHash(ensName,RPC_PROVIDERS[SupportedChainId.MAINNET]);},skipValidation).then(function(tokenList){sendDispatch&&dispatch(fetchTokenList.fulfilled({url:listUrl,tokenList:tokenList,requestId:requestId}));return tokenList;}).catch(function(error){console.debug(\"Failed to get list at url \".concat(listUrl),error);sendDispatch&&dispatch(fetchTokenList.rejected({url:listUrl,requestId:requestId,errorMessage:error.message}));throw error;}));case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}(),[dispatch]);}","map":{"version":3,"names":["nanoid","SupportedChainId","RPC_PROVIDERS","getTokenList","resolveENSContentHash","useCallback","useAppDispatch","fetchTokenList","useFetchListCallback","dispatch","listUrl","sendDispatch","skipValidation","requestId","pending","url","ensName","MAINNET","then","tokenList","fulfilled","catch","error","console","debug","rejected","errorMessage","message"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/hooks/useFetchListCallback.ts"],"sourcesContent":["import { nanoid } from '@reduxjs/toolkit'\nimport { TokenList } from '@uniswap/token-lists'\nimport { SupportedChainId } from 'constants/chains'\nimport { RPC_PROVIDERS } from 'constants/providers'\nimport getTokenList from 'lib/hooks/useTokenList/fetchTokenList'\nimport resolveENSContentHash from 'lib/utils/resolveENSContentHash'\nimport { useCallback } from 'react'\nimport { useAppDispatch } from 'state/hooks'\n\nimport { fetchTokenList } from '../state/lists/actions'\n\nexport function useFetchListCallback(): (\n  listUrl: string,\n  sendDispatch?: boolean,\n  skipValidation?: boolean\n) => Promise<TokenList> {\n  const dispatch = useAppDispatch()\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true, skipValidation?: boolean) => {\n      const requestId = nanoid()\n      sendDispatch && dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      return getTokenList(\n        listUrl,\n        (ensName: string) => resolveENSContentHash(ensName, RPC_PROVIDERS[SupportedChainId.MAINNET]),\n        skipValidation\n      )\n        .then((tokenList) => {\n          sendDispatch && dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          return tokenList\n        })\n        .catch((error) => {\n          console.debug(`Failed to get list at url ${listUrl}`, error)\n          sendDispatch && dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          throw error\n        })\n    },\n    [dispatch]\n  )\n}\n"],"mappings":"qVAAA,OAASA,MAAM,KAAQ,kBAAkB,CAEzC,OAASC,gBAAgB,KAAQ,kBAAkB,CACnD,OAASC,aAAa,KAAQ,qBAAqB,CACnD,MAAOC,aAAY,KAAM,uCAAuC,CAChE,MAAOC,sBAAqB,KAAM,iCAAiC,CACnE,OAASC,WAAW,KAAQ,OAAO,CACnC,OAASC,cAAc,KAAQ,aAAa,CAE5C,OAASC,cAAc,KAAQ,wBAAwB,CAEvD,MAAO,SAASC,qBAAoB,EAIZ,CACtB,GAAMC,SAAQ,CAAGH,cAAc,EAAE,CAEjC;AACA,MAAOD,YAAW,0FAChB,iBAAOK,OAAe,4KAAEC,YAAY,+CAAG,IAAI,CAAEC,cAAwB,mCAC7DC,SAAS,CAAGb,MAAM,EAAE,CAC1BW,YAAY,EAAIF,QAAQ,CAACF,cAAc,CAACO,OAAO,CAAC,CAAED,SAAS,CAATA,SAAS,CAAEE,GAAG,CAAEL,OAAQ,CAAC,CAAC,CAAC,iCACtEP,YAAY,CACjBO,OAAO,CACP,SAACM,OAAe,QAAKZ,sBAAqB,CAACY,OAAO,CAAEd,aAAa,CAACD,gBAAgB,CAACgB,OAAO,CAAC,CAAC,GAC5FL,cAAc,CACf,CACEM,IAAI,CAAC,SAACC,SAAS,CAAK,CACnBR,YAAY,EAAIF,QAAQ,CAACF,cAAc,CAACa,SAAS,CAAC,CAAEL,GAAG,CAAEL,OAAO,CAAES,SAAS,CAATA,SAAS,CAAEN,SAAS,CAATA,SAAU,CAAC,CAAC,CAAC,CAC1F,MAAOM,UAAS,CAClB,CAAC,CAAC,CACDE,KAAK,CAAC,SAACC,KAAK,CAAK,CAChBC,OAAO,CAACC,KAAK,qCAA8Bd,OAAO,EAAIY,KAAK,CAAC,CAC5DX,YAAY,EAAIF,QAAQ,CAACF,cAAc,CAACkB,QAAQ,CAAC,CAAEV,GAAG,CAAEL,OAAO,CAAEG,SAAS,CAATA,SAAS,CAAEa,YAAY,CAAEJ,KAAK,CAACK,OAAQ,CAAC,CAAC,CAAC,CAC3G,KAAML,MAAK,CACb,CAAC,CAAC,wDACL,+DACD,CAACb,QAAQ,CAAC,CACX,CACH"},"metadata":{},"sourceType":"module"}