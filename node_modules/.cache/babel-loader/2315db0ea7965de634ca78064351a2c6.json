{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n  const {\n    properties,\n    items\n  } = it.schema;\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default);\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i) => assignDefault(it, i, sch.default));\n  }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n  const {\n    gen,\n    compositeRule,\n    data,\n    opts\n  } = it;\n  if (defaultValue === undefined) return;\n  const childData = (0, codegen_1._)`${data}${(0, codegen_1.getProperty)(prop)}`;\n  if (compositeRule) {\n    (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n    return;\n  }\n  let condition = (0, codegen_1._)`${childData} === undefined`;\n  if (opts.useDefaults === \"empty\") {\n    condition = (0, codegen_1._)`${condition} || ${childData} === null || ${childData} === \"\"`;\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, (0, codegen_1._)`${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}","map":{"version":3,"sources":["../../../lib/compile/validate/defaults.ts"],"names":[],"mappings":";;;;;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AACA,MAAA,MAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,SAAgB,cAAc,CAAC,EAAgB,EAAE,EAAW,EAAA;EAC1D,MAAM;IAAC,UAAU;IAAE;EAAK,CAAC,GAAG,EAAE,CAAC,MAAM;EACrC,IAAI,EAAE,KAAK,QAAQ,IAAI,UAAU,EAAE;IACjC,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;MAC5B,aAAa,CAAC,EAAE,EAAE,GAAG,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC;IAChD;GACF,MAAM,IAAI,EAAE,KAAK,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;IACjD,KAAK,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAS,KAAK,aAAa,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;EACrE;AACH;AATA,OAAA,CAAA,cAAA,GAAA,cAAA;AAWA,SAAS,aAAa,CAAC,EAAgB,EAAE,IAAqB,EAAE,YAAqB,EAAA;EACnF,MAAM;IAAC,GAAG;IAAE,aAAa;IAAE,IAAI;IAAE;EAAI,CAAC,GAAG,EAAE;EAC3C,IAAI,YAAY,KAAK,SAAS,EAAE;EAChC,MAAM,SAAS,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,GAAG,IAAI,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,WAAW,EAAC,IAAI,CAAC,EAAE;EAChD,IAAI,aAAa,EAAE;IACjB,CAAA,CAAA,EAAA,MAAA,CAAA,eAAe,EAAC,EAAE,EAAE,2BAA2B,SAAS,EAAE,CAAC;IAC3D;EACD;EAED,IAAI,SAAS,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,GAAG,SAAS,gBAAgB;EAC7C,IAAI,IAAI,CAAC,WAAW,KAAK,OAAO,EAAE;IAChC,SAAS,GAAG,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,GAAG,SAAS,OAAO,SAAS,gBAAgB,SAAS,SAAS;EAC5E;EACD;EACA;EACA,GAAG,CAAC,EAAE,CAAC,SAAS,EAAE,CAAA,CAAA,EAAA,SAAA,CAAA,CAAC,CAAA,GAAG,SAAS,MAAM,CAAA,CAAA,EAAA,SAAA,CAAA,SAAS,EAAC,YAAY,CAAC,EAAE,CAAC;AACjE","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assignDefaults = void 0;\nconst codegen_1 = require(\"../codegen\");\nconst util_1 = require(\"../util\");\nfunction assignDefaults(it, ty) {\n    const { properties, items } = it.schema;\n    if (ty === \"object\" && properties) {\n        for (const key in properties) {\n            assignDefault(it, key, properties[key].default);\n        }\n    }\n    else if (ty === \"array\" && Array.isArray(items)) {\n        items.forEach((sch, i) => assignDefault(it, i, sch.default));\n    }\n}\nexports.assignDefaults = assignDefaults;\nfunction assignDefault(it, prop, defaultValue) {\n    const { gen, compositeRule, data, opts } = it;\n    if (defaultValue === undefined)\n        return;\n    const childData = (0, codegen_1._) `${data}${(0, codegen_1.getProperty)(prop)}`;\n    if (compositeRule) {\n        (0, util_1.checkStrictMode)(it, `default is ignored for: ${childData}`);\n        return;\n    }\n    let condition = (0, codegen_1._) `${childData} === undefined`;\n    if (opts.useDefaults === \"empty\") {\n        condition = (0, codegen_1._) `${condition} || ${childData} === null || ${childData} === \"\"`;\n    }\n    // `${childData} === undefined` +\n    // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n    gen.if(condition, (0, codegen_1._) `${childData} = ${(0, codegen_1.stringify)(defaultValue)}`);\n}\n//# sourceMappingURL=defaults.js.map"]},"metadata":{},"sourceType":"script"}