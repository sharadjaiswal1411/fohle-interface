{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getApprovalActions = exports.approvedItemAmount = void 0;\nvar ethers_1 = require(\"ethers\");\nvar ERC20_1 = require(\"../abi/ERC20\");\nvar ERC721_1 = require(\"../abi/ERC721\");\nvar constants_1 = require(\"../constants\");\nvar item_1 = require(\"./item\");\nvar usecase_1 = require(\"./usecase\");\nvar approvedItemAmount = function (owner, item, operator, multicallProvider) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contract, contract;\n    return __generator(this, function (_a) {\n      if ((0, item_1.isErc721Item)(item.itemType) || (0, item_1.isErc1155Item)(item.itemType)) {\n        contract = new ethers_1.Contract(item.token, ERC721_1.ERC721ABI, multicallProvider);\n        return [2 /*return*/, contract.isApprovedForAll(owner, operator).then(function (isApprovedForAll) {\n          // Setting to the max int to consolidate types and simplify\n          return isApprovedForAll ? constants_1.MAX_INT : ethers_1.BigNumber.from(0);\n        })];\n      } else if (item.itemType === constants_1.ItemType.ERC20) {\n        contract = new ethers_1.Contract(item.token, ERC20_1.ERC20ABI, multicallProvider);\n        return [2 /*return*/, contract.allowance(owner, operator)];\n      }\n      // We don't need to check approvals for native tokens\n      return [2 /*return*/, constants_1.MAX_INT];\n    });\n  });\n};\nexports.approvedItemAmount = approvedItemAmount;\n/**\n * Get approval actions given a list of insufficent approvals.\n */\nfunction getApprovalActions(insufficientApprovals, signer) {\n  var _this = this;\n  return Promise.all(insufficientApprovals.filter(function (approval, index) {\n    return index === insufficientApprovals.length - 1 || insufficientApprovals[index + 1].token !== approval.token;\n  }).map(function (_a) {\n    var token = _a.token,\n      operator = _a.operator,\n      itemType = _a.itemType,\n      identifierOrCriteria = _a.identifierOrCriteria;\n    return __awaiter(_this, void 0, void 0, function () {\n      var contract, contract;\n      return __generator(this, function (_b) {\n        if ((0, item_1.isErc721Item)(itemType) || (0, item_1.isErc1155Item)(itemType)) {\n          contract = new ethers_1.Contract(token, ERC721_1.ERC721ABI, signer);\n          return [2 /*return*/, {\n            type: \"approval\",\n            token: token,\n            identifierOrCriteria: identifierOrCriteria,\n            itemType: itemType,\n            operator: operator,\n            transactionMethods: (0, usecase_1.getTransactionMethods)(contract.connect(signer), \"setApprovalForAll\", [operator, true])\n          }];\n        } else {\n          contract = new ethers_1.Contract(token, ERC20_1.ERC20ABI, signer);\n          return [2 /*return*/, {\n            type: \"approval\",\n            token: token,\n            identifierOrCriteria: identifierOrCriteria,\n            itemType: itemType,\n            transactionMethods: (0, usecase_1.getTransactionMethods)(contract.connect(signer), \"approve\", [operator, constants_1.MAX_INT]),\n            operator: operator\n          }];\n        }\n        return [2 /*return*/];\n      });\n    });\n  }));\n}\n\nexports.getApprovalActions = getApprovalActions;","map":{"version":3,"sources":["../../src/utils/approval.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getApprovalActions = exports.approvedItemAmount = void 0;\nvar ethers_1 = require(\"ethers\");\nvar ERC20_1 = require(\"../abi/ERC20\");\nvar ERC721_1 = require(\"../abi/ERC721\");\nvar constants_1 = require(\"../constants\");\nvar item_1 = require(\"./item\");\nvar usecase_1 = require(\"./usecase\");\nvar approvedItemAmount = function (owner, item, operator, multicallProvider) { return __awaiter(void 0, void 0, void 0, function () {\n    var contract, contract;\n    return __generator(this, function (_a) {\n        if ((0, item_1.isErc721Item)(item.itemType) || (0, item_1.isErc1155Item)(item.itemType)) {\n            contract = new ethers_1.Contract(item.token, ERC721_1.ERC721ABI, multicallProvider);\n            return [2 /*return*/, contract.isApprovedForAll(owner, operator).then(function (isApprovedForAll) {\n                    // Setting to the max int to consolidate types and simplify\n                    return isApprovedForAll ? constants_1.MAX_INT : ethers_1.BigNumber.from(0);\n                })];\n        }\n        else if (item.itemType === constants_1.ItemType.ERC20) {\n            contract = new ethers_1.Contract(item.token, ERC20_1.ERC20ABI, multicallProvider);\n            return [2 /*return*/, contract.allowance(owner, operator)];\n        }\n        // We don't need to check approvals for native tokens\n        return [2 /*return*/, constants_1.MAX_INT];\n    });\n}); };\nexports.approvedItemAmount = approvedItemAmount;\n/**\n * Get approval actions given a list of insufficent approvals.\n */\nfunction getApprovalActions(insufficientApprovals, signer) {\n    var _this = this;\n    return Promise.all(insufficientApprovals\n        .filter(function (approval, index) {\n        return index === insufficientApprovals.length - 1 ||\n            insufficientApprovals[index + 1].token !== approval.token;\n    })\n        .map(function (_a) {\n        var token = _a.token, operator = _a.operator, itemType = _a.itemType, identifierOrCriteria = _a.identifierOrCriteria;\n        return __awaiter(_this, void 0, void 0, function () {\n            var contract, contract;\n            return __generator(this, function (_b) {\n                if ((0, item_1.isErc721Item)(itemType) || (0, item_1.isErc1155Item)(itemType)) {\n                    contract = new ethers_1.Contract(token, ERC721_1.ERC721ABI, signer);\n                    return [2 /*return*/, {\n                            type: \"approval\",\n                            token: token,\n                            identifierOrCriteria: identifierOrCriteria,\n                            itemType: itemType,\n                            operator: operator,\n                            transactionMethods: (0, usecase_1.getTransactionMethods)(contract.connect(signer), \"setApprovalForAll\", [operator, true]),\n                        }];\n                }\n                else {\n                    contract = new ethers_1.Contract(token, ERC20_1.ERC20ABI, signer);\n                    return [2 /*return*/, {\n                            type: \"approval\",\n                            token: token,\n                            identifierOrCriteria: identifierOrCriteria,\n                            itemType: itemType,\n                            transactionMethods: (0, usecase_1.getTransactionMethods)(contract.connect(signer), \"approve\", [operator, constants_1.MAX_INT]),\n                            operator: operator,\n                        }];\n                }\n                return [2 /*return*/];\n            });\n        });\n    }));\n}\nexports.getApprovalActions = getApprovalActions;\n//# sourceMappingURL=approval.js.map"]},"metadata":{},"sourceType":"script"}