{"ast":null,"code":"import _slicedToArray from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useWeb3React}from'@web3-react/core';import{useTokenBalancesWithLoadingIndicator}from'lib/hooks/useCurrencyBalance';import{useMemo}from'react';import{useAllTokens}from'../../hooks/Tokens';export{default as useCurrencyBalance,useCurrencyBalances,useCurrencyBalanceString,useNativeCurrencyBalances,useTokenBalance,useTokenBalances,useTokenBalancesWithLoadingIndicator}from'lib/hooks/useCurrencyBalance';// mimics useAllBalances\nexport function useAllTokenBalances(){var _useWeb3React=useWeb3React(),account=_useWeb3React.account;var allTokens=useAllTokens();var allTokensArray=useMemo(function(){return Object.values(allTokens!==null&&allTokens!==void 0?allTokens:{});},[allTokens]);var _useTokenBalancesWith=useTokenBalancesWithLoadingIndicator(account!==null&&account!==void 0?account:undefined,allTokensArray),_useTokenBalancesWith2=_slicedToArray(_useTokenBalancesWith,2),balances=_useTokenBalancesWith2[0],balancesIsLoading=_useTokenBalancesWith2[1];return[balances!==null&&balances!==void 0?balances:{},balancesIsLoading];}","map":{"version":3,"names":["useWeb3React","useTokenBalancesWithLoadingIndicator","useMemo","useAllTokens","default","useCurrencyBalance","useCurrencyBalances","useCurrencyBalanceString","useNativeCurrencyBalances","useTokenBalance","useTokenBalances","useAllTokenBalances","account","allTokens","allTokensArray","Object","values","undefined","balances","balancesIsLoading"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/connection/hooks.ts"],"sourcesContent":["import { CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTokenBalancesWithLoadingIndicator } from 'lib/hooks/useCurrencyBalance'\nimport { useMemo } from 'react'\n\nimport { useAllTokens } from '../../hooks/Tokens'\n\nexport {\n  default as useCurrencyBalance,\n  useCurrencyBalances,\n  useCurrencyBalanceString,\n  useNativeCurrencyBalances,\n  useTokenBalance,\n  useTokenBalances,\n  useTokenBalancesWithLoadingIndicator,\n} from 'lib/hooks/useCurrencyBalance'\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): [{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }, boolean] {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const [balances, balancesIsLoading] = useTokenBalancesWithLoadingIndicator(account ?? undefined, allTokensArray)\n  return [balances ?? {}, balancesIsLoading]\n}\n"],"mappings":"4KACA,OAASA,YAAY,KAAQ,kBAAkB,CAC/C,OAASC,oCAAoC,KAAQ,8BAA8B,CACnF,OAASC,OAAO,KAAQ,OAAO,CAE/B,OAASC,YAAY,KAAQ,oBAAoB,CAEjD,OACEC,OAAO,GAAIC,mBAAkB,CAC7BC,mBAAmB,CACnBC,wBAAwB,CACxBC,yBAAyB,CACzBC,eAAe,CACfC,gBAAgB,CAChBT,oCAAoC,KAC/B,8BAA8B,CAErC;AACA,MAAO,SAASU,oBAAmB,EAA6E,CAC9G,kBAAoBX,YAAY,EAAE,CAA1BY,OAAO,eAAPA,OAAO,CACf,GAAMC,UAAS,CAAGV,YAAY,EAAE,CAChC,GAAMW,eAAc,CAAGZ,OAAO,CAAC,iBAAMa,OAAM,CAACC,MAAM,CAACH,SAAS,SAATA,SAAS,UAATA,SAAS,CAAI,CAAC,CAAC,CAAC,GAAE,CAACA,SAAS,CAAC,CAAC,CACjF,0BAAsCZ,oCAAoC,CAACW,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAIK,SAAS,CAAEH,cAAc,CAAC,gEAAzGI,QAAQ,2BAAEC,iBAAiB,2BAClC,MAAO,CAACD,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CAAI,CAAC,CAAC,CAAEC,iBAAiB,CAAC,CAC5C"},"metadata":{},"sourceType":"module"}