{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _CHAIN_IDS_TO_NAMES;/**\n * List of all the networks supported by the Thera ECOSYSTEM\n */export var SupportedChainId;(function(SupportedChainId){SupportedChainId[SupportedChainId[\"MAINNET\"]=1]=\"MAINNET\";SupportedChainId[SupportedChainId[\"ROPSTEN\"]=3]=\"ROPSTEN\";SupportedChainId[SupportedChainId[\"RINKEBY\"]=4]=\"RINKEBY\";SupportedChainId[SupportedChainId[\"GOERLI\"]=5]=\"GOERLI\";SupportedChainId[SupportedChainId[\"KOVAN\"]=42]=\"KOVAN\";SupportedChainId[SupportedChainId[\"ARBITRUM_ONE\"]=42161]=\"ARBITRUM_ONE\";SupportedChainId[SupportedChainId[\"ARBITRUM_RINKEBY\"]=421611]=\"ARBITRUM_RINKEBY\";SupportedChainId[SupportedChainId[\"OPTIMISM\"]=10]=\"OPTIMISM\";SupportedChainId[SupportedChainId[\"OPTIMISM_GOERLI\"]=420]=\"OPTIMISM_GOERLI\";SupportedChainId[SupportedChainId[\"POLYGON\"]=137]=\"POLYGON\";SupportedChainId[SupportedChainId[\"POLYGON_MUMBAI\"]=80001]=\"POLYGON_MUMBAI\";SupportedChainId[SupportedChainId[\"CELO\"]=42220]=\"CELO\";SupportedChainId[SupportedChainId[\"CELO_ALFAJORES\"]=44787]=\"CELO_ALFAJORES\";})(SupportedChainId||(SupportedChainId={}));export var CHAIN_IDS_TO_NAMES=(_CHAIN_IDS_TO_NAMES={},_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.MAINNET,'mainnet'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.ROPSTEN,'ropsten'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.RINKEBY,'rinkeby'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.GOERLI,'goerli'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.KOVAN,'kovan'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.POLYGON,'polygon'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.POLYGON_MUMBAI,'polygon_mumbai'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.CELO,'celo'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.CELO_ALFAJORES,'celo_alfajores'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.ARBITRUM_ONE,'arbitrum'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.ARBITRUM_RINKEBY,'arbitrum_rinkeby'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.OPTIMISM,'optimism'),_defineProperty(_CHAIN_IDS_TO_NAMES,SupportedChainId.OPTIMISM_GOERLI,'optimism_goerli'),_CHAIN_IDS_TO_NAMES);/**\n * Array of all the supported chain IDs\n */export var ALL_SUPPORTED_CHAIN_IDS=Object.values(SupportedChainId).filter(function(id){return typeof id==='number';});export function isSupportedChain(chainId){return!!chainId&&!!SupportedChainId[chainId];}export var SUPPORTED_GAS_ESTIMATE_CHAIN_IDS=[SupportedChainId.MAINNET,SupportedChainId.POLYGON,SupportedChainId.CELO,SupportedChainId.OPTIMISM,SupportedChainId.ARBITRUM_ONE];/**\n * Unsupported networks for V2 pool behavior.\n */export var UNSUPPORTED_V2POOL_CHAIN_IDS=[SupportedChainId.POLYGON,SupportedChainId.OPTIMISM,SupportedChainId.ARBITRUM_ONE];export var TESTNET_CHAIN_IDS=[SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.OPTIMISM_GOERLI];/**\n * All the chain IDs that are running the Ethereum protocol.\n */export var L1_CHAIN_IDS=[SupportedChainId.MAINNET,SupportedChainId.ROPSTEN,SupportedChainId.RINKEBY,SupportedChainId.GOERLI,SupportedChainId.KOVAN,SupportedChainId.POLYGON,SupportedChainId.POLYGON_MUMBAI,SupportedChainId.CELO,SupportedChainId.CELO_ALFAJORES];/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */export var L2_CHAIN_IDS=[SupportedChainId.ARBITRUM_ONE,SupportedChainId.ARBITRUM_RINKEBY,SupportedChainId.OPTIMISM,SupportedChainId.OPTIMISM_GOERLI];","map":{"version":3,"names":["SupportedChainId","CHAIN_IDS_TO_NAMES","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","POLYGON","POLYGON_MUMBAI","CELO","CELO_ALFAJORES","ARBITRUM_ONE","ARBITRUM_RINKEBY","OPTIMISM","OPTIMISM_GOERLI","ALL_SUPPORTED_CHAIN_IDS","Object","values","filter","id","isSupportedChain","chainId","SUPPORTED_GAS_ESTIMATE_CHAIN_IDS","UNSUPPORTED_V2POOL_CHAIN_IDS","TESTNET_CHAIN_IDS","L1_CHAIN_IDS","L2_CHAIN_IDS"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/constants/chains.ts"],"sourcesContent":["/**\n * List of all the networks supported by the Thera ECOSYSTEM\n */\nexport enum SupportedChainId {\n  MAINNET = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GOERLI = 5,\n  KOVAN = 42,\n\n  ARBITRUM_ONE = 42161,\n  ARBITRUM_RINKEBY = 421611,\n\n  OPTIMISM = 10,\n  OPTIMISM_GOERLI = 420,\n\n  POLYGON = 137,\n  POLYGON_MUMBAI = 80001,\n\n  CELO = 42220,\n  CELO_ALFAJORES = 44787,\n}\n\nexport const CHAIN_IDS_TO_NAMES = {\n  [SupportedChainId.MAINNET]: 'mainnet',\n  [SupportedChainId.ROPSTEN]: 'ropsten',\n  [SupportedChainId.RINKEBY]: 'rinkeby',\n  [SupportedChainId.GOERLI]: 'goerli',\n  [SupportedChainId.KOVAN]: 'kovan',\n  [SupportedChainId.POLYGON]: 'polygon',\n  [SupportedChainId.POLYGON_MUMBAI]: 'polygon_mumbai',\n  [SupportedChainId.CELO]: 'celo',\n  [SupportedChainId.CELO_ALFAJORES]: 'celo_alfajores',\n  [SupportedChainId.ARBITRUM_ONE]: 'arbitrum',\n  [SupportedChainId.ARBITRUM_RINKEBY]: 'arbitrum_rinkeby',\n  [SupportedChainId.OPTIMISM]: 'optimism',\n  [SupportedChainId.OPTIMISM_GOERLI]: 'optimism_goerli',\n}\n\n/**\n * Array of all the supported chain IDs\n */\nexport const ALL_SUPPORTED_CHAIN_IDS: SupportedChainId[] = Object.values(SupportedChainId).filter(\n  (id) => typeof id === 'number'\n) as SupportedChainId[]\n\nexport function isSupportedChain(chainId: number | null | undefined): chainId is SupportedChainId {\n  return !!chainId && !!SupportedChainId[chainId]\n}\n\nexport const SUPPORTED_GAS_ESTIMATE_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.POLYGON,\n  SupportedChainId.CELO,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.ARBITRUM_ONE,\n]\n\n/**\n * Unsupported networks for V2 pool behavior.\n */\nexport const UNSUPPORTED_V2POOL_CHAIN_IDS = [\n  SupportedChainId.POLYGON,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.ARBITRUM_ONE,\n]\n\nexport const TESTNET_CHAIN_IDS = [\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n  SupportedChainId.POLYGON_MUMBAI,\n  SupportedChainId.ARBITRUM_RINKEBY,\n  SupportedChainId.OPTIMISM_GOERLI,\n] as const\n\nexport type SupportedTestnetChainId = typeof TESTNET_CHAIN_IDS[number]\n\n/**\n * All the chain IDs that are running the Ethereum protocol.\n */\nexport const L1_CHAIN_IDS = [\n  SupportedChainId.MAINNET,\n  SupportedChainId.ROPSTEN,\n  SupportedChainId.RINKEBY,\n  SupportedChainId.GOERLI,\n  SupportedChainId.KOVAN,\n  SupportedChainId.POLYGON,\n  SupportedChainId.POLYGON_MUMBAI,\n  SupportedChainId.CELO,\n  SupportedChainId.CELO_ALFAJORES,\n] as const\n\nexport type SupportedL1ChainId = typeof L1_CHAIN_IDS[number]\n\n/**\n * Controls some L2 specific behavior, e.g. slippage tolerance, special UI behavior.\n * The expectation is that all of these networks have immediate transaction confirmation.\n */\nexport const L2_CHAIN_IDS = [\n  SupportedChainId.ARBITRUM_ONE,\n  SupportedChainId.ARBITRUM_RINKEBY,\n  SupportedChainId.OPTIMISM,\n  SupportedChainId.OPTIMISM_GOERLI,\n] as const\n\nexport type SupportedL2ChainId = typeof L2_CHAIN_IDS[number]\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}