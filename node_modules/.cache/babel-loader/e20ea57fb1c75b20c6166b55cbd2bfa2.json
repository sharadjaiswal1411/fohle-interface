{"ast":null,"code":"import{BigNumber}from'@ethersproject/bignumber';import{formatEther}from'@ethersproject/units';export var buildActivityAsset=function buildActivityAsset(event,collectionName,ethPriceInUSD){var _event$tokenMetadata,_event$tokenMetadata2,_event$tokenMetadata3,_event$tokenMetadata4,_event$tokenMetadata5;var assetUsdPrice=event.price?formatEther(BigNumber.from(event.price).mul(BigNumber.from(Math.trunc(ethPriceInUSD*100))).div(100)):'0';return{address:event.collectionAddress,collectionName:collectionName,imageUrl:(_event$tokenMetadata=event.tokenMetadata)===null||_event$tokenMetadata===void 0?void 0:_event$tokenMetadata.imageUrl,marketplace:event.marketplace,name:(_event$tokenMetadata2=event.tokenMetadata)===null||_event$tokenMetadata2===void 0?void 0:_event$tokenMetadata2.name,tokenId:event.tokenId,susFlag:(_event$tokenMetadata3=event.tokenMetadata)===null||_event$tokenMetadata3===void 0?void 0:_event$tokenMetadata3.suspiciousFlag,smallImageUrl:(_event$tokenMetadata4=event.tokenMetadata)===null||_event$tokenMetadata4===void 0?void 0:_event$tokenMetadata4.smallImageUrl,collectionSymbol:event.symbol,priceInfo:{USDPrice:assetUsdPrice,ETHPrice:event.price,basePrice:event.price,baseAsset:'ETH'},tokenType:(_event$tokenMetadata5=event.tokenMetadata)===null||_event$tokenMetadata5===void 0?void 0:_event$tokenMetadata5.standard};};","map":{"version":3,"names":["BigNumber","formatEther","buildActivityAsset","event","collectionName","ethPriceInUSD","assetUsdPrice","price","from","mul","Math","trunc","div","address","collectionAddress","imageUrl","tokenMetadata","marketplace","name","tokenId","susFlag","suspiciousFlag","smallImageUrl","collectionSymbol","symbol","priceInfo","USDPrice","ETHPrice","basePrice","baseAsset","tokenType","standard"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/nft/utils/buildActivityAsset.ts"],"sourcesContent":["import { BigNumber } from '@ethersproject/bignumber'\nimport { formatEther } from '@ethersproject/units'\nimport { ActivityEvent, GenieAsset } from 'nft/types'\n\nexport const buildActivityAsset = (event: ActivityEvent, collectionName: string, ethPriceInUSD: number): GenieAsset => {\n  const assetUsdPrice = event.price\n    ? formatEther(\n        BigNumber.from(event.price)\n          .mul(BigNumber.from(Math.trunc(ethPriceInUSD * 100)))\n          .div(100)\n      )\n    : '0'\n\n  return {\n    address: event.collectionAddress,\n    collectionName,\n    imageUrl: event.tokenMetadata?.imageUrl,\n    marketplace: event.marketplace,\n    name: event.tokenMetadata?.name,\n    tokenId: event.tokenId,\n    susFlag: event.tokenMetadata?.suspiciousFlag,\n    smallImageUrl: event.tokenMetadata?.smallImageUrl,\n    collectionSymbol: event.symbol,\n    priceInfo: {\n      USDPrice: assetUsdPrice,\n      ETHPrice: event.price,\n      basePrice: event.price,\n      baseAsset: 'ETH',\n    },\n    tokenType: event.tokenMetadata?.standard,\n  } as GenieAsset\n}\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,0BAA0B,CACpD,OAASC,WAAW,KAAQ,sBAAsB,CAGlD,MAAO,IAAMC,mBAAkB,CAAG,QAArBA,mBAAkB,CAAIC,KAAoB,CAAEC,cAAsB,CAAEC,aAAqB,CAAiB,kHACrH,GAAMC,cAAa,CAAGH,KAAK,CAACI,KAAK,CAC7BN,WAAW,CACTD,SAAS,CAACQ,IAAI,CAACL,KAAK,CAACI,KAAK,CAAC,CACxBE,GAAG,CAACT,SAAS,CAACQ,IAAI,CAACE,IAAI,CAACC,KAAK,CAACN,aAAa,CAAG,GAAG,CAAC,CAAC,CAAC,CACpDO,GAAG,CAAC,GAAG,CAAC,CACZ,CACD,GAAG,CAEP,MAAO,CACLC,OAAO,CAAEV,KAAK,CAACW,iBAAiB,CAChCV,cAAc,CAAdA,cAAc,CACdW,QAAQ,uBAAEZ,KAAK,CAACa,aAAa,+CAAnB,qBAAqBD,QAAQ,CACvCE,WAAW,CAAEd,KAAK,CAACc,WAAW,CAC9BC,IAAI,wBAAEf,KAAK,CAACa,aAAa,gDAAnB,sBAAqBE,IAAI,CAC/BC,OAAO,CAAEhB,KAAK,CAACgB,OAAO,CACtBC,OAAO,wBAAEjB,KAAK,CAACa,aAAa,gDAAnB,sBAAqBK,cAAc,CAC5CC,aAAa,wBAAEnB,KAAK,CAACa,aAAa,gDAAnB,sBAAqBM,aAAa,CACjDC,gBAAgB,CAAEpB,KAAK,CAACqB,MAAM,CAC9BC,SAAS,CAAE,CACTC,QAAQ,CAAEpB,aAAa,CACvBqB,QAAQ,CAAExB,KAAK,CAACI,KAAK,CACrBqB,SAAS,CAAEzB,KAAK,CAACI,KAAK,CACtBsB,SAAS,CAAE,KACb,CAAC,CACDC,SAAS,wBAAE3B,KAAK,CAACa,aAAa,gDAAnB,sBAAqBe,QAClC,CAAC,CACH,CAAC"},"metadata":{},"sourceType":"module"}