{"ast":null,"code":"import _defineProperty from\"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _BLOCK_EXPLORER_PREFI;import{SupportedChainId}from'../constants/chains';var BLOCK_EXPLORER_PREFIXES=(_BLOCK_EXPLORER_PREFI={},_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.MAINNET,'https://etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.ROPSTEN,'https://ropsten.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.RINKEBY,'https://rinkeby.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.GOERLI,'https://goerli.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.KOVAN,'https://kovan.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.OPTIMISM,'https://optimistic.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.OPTIMISM_GOERLI,'https://goerli-optimism.etherscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.POLYGON,'https://polygonscan.com'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.POLYGON_MUMBAI,'https://mumbai.polygonscan.com'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.CELO,'https://celoscan.io'),_defineProperty(_BLOCK_EXPLORER_PREFI,SupportedChainId.CELO_ALFAJORES,'https://alfajores-blockscout.celo-testnet.org'),_BLOCK_EXPLORER_PREFI);export var ExplorerDataType;/**\n * Return the explorer link for the given data and data type\n * @param chainId the ID of the chain for which to return the data\n * @param data the data to return a link for\n * @param type the type of the data\n */(function(ExplorerDataType){ExplorerDataType[\"TRANSACTION\"]=\"transaction\";ExplorerDataType[\"TOKEN\"]=\"token\";ExplorerDataType[\"ADDRESS\"]=\"address\";ExplorerDataType[\"BLOCK\"]=\"block\";})(ExplorerDataType||(ExplorerDataType={}));export function getExplorerLink(chainId,data,type){var _BLOCK_EXPLORER_PREFI2;if(chainId===SupportedChainId.ARBITRUM_ONE){switch(type){case ExplorerDataType.TRANSACTION:return\"https://arbiscan.io/tx/\".concat(data);case ExplorerDataType.ADDRESS:case ExplorerDataType.TOKEN:return\"https://arbiscan.io/address/\".concat(data);case ExplorerDataType.BLOCK:return\"https://arbiscan.io/block/\".concat(data);default:return\"https://arbiscan.io/\";}}if(chainId===SupportedChainId.ARBITRUM_RINKEBY){switch(type){case ExplorerDataType.TRANSACTION:return\"https://rinkeby-explorer.arbitrum.io/tx/\".concat(data);case ExplorerDataType.ADDRESS:case ExplorerDataType.TOKEN:return\"https://rinkeby-explorer.arbitrum.io/address/\".concat(data);case ExplorerDataType.BLOCK:return\"https://rinkeby-explorer.arbitrum.io/block/\".concat(data);default:return\"https://rinkeby-explorer.arbitrum.io/\";}}var prefix=(_BLOCK_EXPLORER_PREFI2=BLOCK_EXPLORER_PREFIXES[chainId])!==null&&_BLOCK_EXPLORER_PREFI2!==void 0?_BLOCK_EXPLORER_PREFI2:'https://etherscan.io';switch(type){case ExplorerDataType.TRANSACTION:return\"\".concat(prefix,\"/tx/\").concat(data);case ExplorerDataType.TOKEN:return\"\".concat(prefix,\"/token/\").concat(data);case ExplorerDataType.BLOCK:if(chainId===SupportedChainId.OPTIMISM||chainId===SupportedChainId.OPTIMISM_GOERLI){return\"\".concat(prefix,\"/tx/\").concat(data);}return\"\".concat(prefix,\"/block/\").concat(data);case ExplorerDataType.ADDRESS:return\"\".concat(prefix,\"/address/\").concat(data);default:return\"\".concat(prefix);}}","map":{"version":3,"names":["SupportedChainId","BLOCK_EXPLORER_PREFIXES","MAINNET","ROPSTEN","RINKEBY","GOERLI","KOVAN","OPTIMISM","OPTIMISM_GOERLI","POLYGON","POLYGON_MUMBAI","CELO","CELO_ALFAJORES","ExplorerDataType","getExplorerLink","chainId","data","type","ARBITRUM_ONE","TRANSACTION","ADDRESS","TOKEN","BLOCK","ARBITRUM_RINKEBY","prefix"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/utils/getExplorerLink.ts"],"sourcesContent":["import { SupportedChainId } from '../constants/chains'\n\nconst BLOCK_EXPLORER_PREFIXES: { [chainId: number]: string } = {\n  [SupportedChainId.MAINNET]: 'https://etherscan.io',\n  [SupportedChainId.ROPSTEN]: 'https://ropsten.etherscan.io',\n  [SupportedChainId.RINKEBY]: 'https://rinkeby.etherscan.io',\n  [SupportedChainId.GOERLI]: 'https://goerli.etherscan.io',\n  [SupportedChainId.KOVAN]: 'https://kovan.etherscan.io',\n  [SupportedChainId.OPTIMISM]: 'https://optimistic.etherscan.io',\n  [SupportedChainId.OPTIMISM_GOERLI]: 'https://goerli-optimism.etherscan.io',\n  [SupportedChainId.POLYGON]: 'https://polygonscan.com',\n  [SupportedChainId.POLYGON_MUMBAI]: 'https://mumbai.polygonscan.com',\n  [SupportedChainId.CELO]: 'https://celoscan.io',\n  [SupportedChainId.CELO_ALFAJORES]: 'https://alfajores-blockscout.celo-testnet.org',\n}\n\nexport enum ExplorerDataType {\n  TRANSACTION = 'transaction',\n  TOKEN = 'token',\n  ADDRESS = 'address',\n  BLOCK = 'block',\n}\n\n/**\n * Return the explorer link for the given data and data type\n * @param chainId the ID of the chain for which to return the data\n * @param data the data to return a link for\n * @param type the type of the data\n */\nexport function getExplorerLink(chainId: number, data: string, type: ExplorerDataType): string {\n  if (chainId === SupportedChainId.ARBITRUM_ONE) {\n    switch (type) {\n      case ExplorerDataType.TRANSACTION:\n        return `https://arbiscan.io/tx/${data}`\n      case ExplorerDataType.ADDRESS:\n      case ExplorerDataType.TOKEN:\n        return `https://arbiscan.io/address/${data}`\n      case ExplorerDataType.BLOCK:\n        return `https://arbiscan.io/block/${data}`\n      default:\n        return `https://arbiscan.io/`\n    }\n  }\n\n  if (chainId === SupportedChainId.ARBITRUM_RINKEBY) {\n    switch (type) {\n      case ExplorerDataType.TRANSACTION:\n        return `https://rinkeby-explorer.arbitrum.io/tx/${data}`\n      case ExplorerDataType.ADDRESS:\n      case ExplorerDataType.TOKEN:\n        return `https://rinkeby-explorer.arbitrum.io/address/${data}`\n      case ExplorerDataType.BLOCK:\n        return `https://rinkeby-explorer.arbitrum.io/block/${data}`\n      default:\n        return `https://rinkeby-explorer.arbitrum.io/`\n    }\n  }\n\n  const prefix = BLOCK_EXPLORER_PREFIXES[chainId] ?? 'https://etherscan.io'\n\n  switch (type) {\n    case ExplorerDataType.TRANSACTION:\n      return `${prefix}/tx/${data}`\n\n    case ExplorerDataType.TOKEN:\n      return `${prefix}/token/${data}`\n\n    case ExplorerDataType.BLOCK:\n      if (chainId === SupportedChainId.OPTIMISM || chainId === SupportedChainId.OPTIMISM_GOERLI) {\n        return `${prefix}/tx/${data}`\n      }\n      return `${prefix}/block/${data}`\n\n    case ExplorerDataType.ADDRESS:\n      return `${prefix}/address/${data}`\n    default:\n      return `${prefix}`\n  }\n}\n"],"mappings":"wMAAA,OAASA,gBAAgB,KAAQ,qBAAqB,CAEtD,GAAMC,wBAAsD,iEACzDD,gBAAgB,CAACE,OAAO,CAAG,sBAAsB,wCACjDF,gBAAgB,CAACG,OAAO,CAAG,8BAA8B,wCACzDH,gBAAgB,CAACI,OAAO,CAAG,8BAA8B,wCACzDJ,gBAAgB,CAACK,MAAM,CAAG,6BAA6B,wCACvDL,gBAAgB,CAACM,KAAK,CAAG,4BAA4B,wCACrDN,gBAAgB,CAACO,QAAQ,CAAG,iCAAiC,wCAC7DP,gBAAgB,CAACQ,eAAe,CAAG,sCAAsC,wCACzER,gBAAgB,CAACS,OAAO,CAAG,yBAAyB,wCACpDT,gBAAgB,CAACU,cAAc,CAAG,gCAAgC,wCAClEV,gBAAgB,CAACW,IAAI,CAAG,qBAAqB,wCAC7CX,gBAAgB,CAACY,cAAc,CAAG,+CAA+C,wBACnF,CAED,UAAYC,iBAAgB,CAO5B;AACA;AACA;AACA;AACA;AACA,GALA,UAPYA,gBAAgB,EAAhBA,gBAAgB,8BAAhBA,gBAAgB,kBAAhBA,gBAAgB,sBAAhBA,gBAAgB,qBAAhBA,gBAAgB,GAAhBA,gBAAgB,MAa5B,MAAO,SAASC,gBAAe,CAACC,OAAe,CAAEC,IAAY,CAAEC,IAAsB,CAAU,4BAC7F,GAAIF,OAAO,GAAKf,gBAAgB,CAACkB,YAAY,CAAE,CAC7C,OAAQD,IAAI,EACV,IAAKJ,iBAAgB,CAACM,WAAW,CAC/B,uCAAiCH,IAAI,EACvC,IAAKH,iBAAgB,CAACO,OAAO,CAC7B,IAAKP,iBAAgB,CAACQ,KAAK,CACzB,4CAAsCL,IAAI,EAC5C,IAAKH,iBAAgB,CAACS,KAAK,CACzB,0CAAoCN,IAAI,EAC1C,QACE,6BAA6B,CAEnC,CAEA,GAAID,OAAO,GAAKf,gBAAgB,CAACuB,gBAAgB,CAAE,CACjD,OAAQN,IAAI,EACV,IAAKJ,iBAAgB,CAACM,WAAW,CAC/B,wDAAkDH,IAAI,EACxD,IAAKH,iBAAgB,CAACO,OAAO,CAC7B,IAAKP,iBAAgB,CAACQ,KAAK,CACzB,6DAAuDL,IAAI,EAC7D,IAAKH,iBAAgB,CAACS,KAAK,CACzB,2DAAqDN,IAAI,EAC3D,QACE,8CAA8C,CAEpD,CAEA,GAAMQ,OAAM,yBAAGvB,uBAAuB,CAACc,OAAO,CAAC,iEAAI,sBAAsB,CAEzE,OAAQE,IAAI,EACV,IAAKJ,iBAAgB,CAACM,WAAW,CAC/B,gBAAUK,MAAM,gBAAOR,IAAI,EAE7B,IAAKH,iBAAgB,CAACQ,KAAK,CACzB,gBAAUG,MAAM,mBAAUR,IAAI,EAEhC,IAAKH,iBAAgB,CAACS,KAAK,CACzB,GAAIP,OAAO,GAAKf,gBAAgB,CAACO,QAAQ,EAAIQ,OAAO,GAAKf,gBAAgB,CAACQ,eAAe,CAAE,CACzF,gBAAUgB,MAAM,gBAAOR,IAAI,EAC7B,CACA,gBAAUQ,MAAM,mBAAUR,IAAI,EAEhC,IAAKH,iBAAgB,CAACO,OAAO,CAC3B,gBAAUI,MAAM,qBAAYR,IAAI,EAClC,QACE,gBAAUQ,MAAM,EAAE,CAExB"},"metadata":{},"sourceType":"module"}