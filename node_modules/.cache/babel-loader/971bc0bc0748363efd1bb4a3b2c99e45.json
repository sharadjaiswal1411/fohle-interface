{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport { useWeb3React } from '@web3-react/core';\nimport { useCallback, useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { addTransaction } from './reducer';\nimport { TransactionType } from './types';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder() {\n  _s();\n  const {\n    chainId,\n    account\n  } = useWeb3React();\n  const dispatch = useAppDispatch();\n  return useCallback((response, info) => {\n    if (!account) return;\n    if (!chainId) return;\n    const {\n      hash\n    } = response;\n    if (!hash) {\n      throw Error('No transaction hash found.');\n    }\n    dispatch(addTransaction({\n      hash,\n      from: account,\n      info,\n      chainId\n    }));\n  }, [account, chainId, dispatch]);\n}\n\n// returns all the transactions for the current chain\n_s(useTransactionAdder, \"R2DWO2E+g39ORAHnUYoT6WEpVz4=\", false, function () {\n  return [useWeb3React, useAppDispatch];\n});\nexport function useAllTransactions() {\n  _s2();\n  var _state$chainId;\n  const {\n    chainId\n  } = useWeb3React();\n  const state = useAppSelector(state => transactions);\n  return chainId ? (_state$chainId = state[chainId]) !== null && _state$chainId !== void 0 ? _state$chainId : {} : {};\n}\n_s2(useAllTransactions, \"Idah/dr2C53TIjXn7b/yTgx2Bkk=\", false, function () {\n  return [useWeb3React, useAppSelector];\n});\nexport function useTransaction(transactionHash) {\n  _s3();\n  const allTransactions = useAllTransactions();\n  if (!transactionHash) {\n    return undefined;\n  }\n  return allTransactions[transactionHash];\n}\n_s3(useTransaction, \"Ob9bTgdRot80r/ruWRGnJTDZF0M=\", false, function () {\n  return [useAllTransactions];\n});\nexport function useIsTransactionPending(transactionHash) {\n  _s4();\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) return false;\n  return !transactions[transactionHash].receipt;\n}\n_s4(useIsTransactionPending, \"hqz1TRfIl9I1+vK9TqtScGR9Kdg=\", false, function () {\n  return [useAllTransactions];\n});\nexport function useIsTransactionConfirmed(transactionHash) {\n  _s5();\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) return false;\n  return Boolean(transactions[transactionHash].receipt);\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\n_s5(useIsTransactionConfirmed, \"hqz1TRfIl9I1+vK9TqtScGR9Kdg=\", false, function () {\n  return [useAllTransactions];\n});\nexport function isTransactionRecent(tx) {\n  return new Date().getTime() - tx.addedTime < 86400000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(token, spender) {\n  _s6();\n  const allTransactions = useAllTransactions();\n  return useMemo(() => typeof (token === null || token === void 0 ? void 0 : token.address) === 'string' && typeof spender === 'string' && Object.keys(allTransactions).some(hash => {\n    const tx = allTransactions[hash];\n    if (!tx) return false;\n    if (tx.receipt) {\n      return false;\n    } else {\n      if (tx.info.type !== TransactionType.APPROVAL) return false;\n      return tx.info.spender === spender && tx.info.tokenAddress === token.address && isTransactionRecent(tx);\n    }\n  }), [allTransactions, spender, token === null || token === void 0 ? void 0 : token.address]);\n}\n_s6(useHasPendingApproval, \"VezVe/KwFqNDaRAkqywKb3KU5lg=\", false, function () {\n  return [useAllTransactions];\n});","map":{"version":3,"names":["useWeb3React","useCallback","useMemo","useAppDispatch","useAppSelector","addTransaction","TransactionType","useTransactionAdder","chainId","account","dispatch","response","info","hash","Error","from","useAllTransactions","state","transactions","useTransaction","transactionHash","allTransactions","undefined","useIsTransactionPending","receipt","useIsTransactionConfirmed","Boolean","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","token","spender","address","Object","keys","some","type","APPROVAL","tokenAddress"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/state/transactions/hooks.tsx"],"sourcesContent":["import type { TransactionResponse } from '@ethersproject/providers'\nimport { Token } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCallback, useMemo } from 'react'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\n\nimport { addTransaction } from './reducer'\nimport { TransactionDetails, TransactionInfo, TransactionType } from './types'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (response: TransactionResponse, info: TransactionInfo) => void {\n  const { chainId, account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  return useCallback(\n    (response: TransactionResponse, info: TransactionInfo) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, info, chainId }))\n    },\n    [account, chainId, dispatch]\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWeb3React()\n\n  const state = useAppSelector((state) => transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useTransaction(transactionHash?: string): TransactionDetails | undefined {\n  const allTransactions = useAllTransactions()\n\n  if (!transactionHash) {\n    return undefined\n  }\n\n  return allTransactions[transactionHash]\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\nexport function useIsTransactionConfirmed(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return Boolean(transactions[transactionHash].receipt)\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(token?: Token, spender?: string): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof token?.address === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        } else {\n          if (tx.info.type !== TransactionType.APPROVAL) return false\n          return tx.info.spender === spender && tx.info.tokenAddress === token.address && isTransactionRecent(tx)\n        }\n      }),\n    [allTransactions, spender, token?.address]\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}