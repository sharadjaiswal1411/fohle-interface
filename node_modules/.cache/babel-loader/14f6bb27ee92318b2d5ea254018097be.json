{"ast":null,"code":"var n,\n  l,\n  u,\n  i,\n  t,\n  o,\n  r = {},\n  f = [],\n  e = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\nfunction c(n, l) {\n  for (var u in l) n[u] = l[u];\n  return n;\n}\nfunction s(n) {\n  var l = n.parentNode;\n  l && l.removeChild(n);\n}\nfunction a(n, l, u) {\n  var i,\n    t,\n    o,\n    r = arguments,\n    f = {};\n  for (o in l) \"key\" == o ? i = l[o] : \"ref\" == o ? t = l[o] : f[o] = l[o];\n  if (arguments.length > 3) for (u = [u], o = 3; o < arguments.length; o++) u.push(r[o]);\n  if (null != u && (f.children = u), \"function\" == typeof n && null != n.defaultProps) for (o in n.defaultProps) void 0 === f[o] && (f[o] = n.defaultProps[o]);\n  return v(n, f, i, t, null);\n}\nfunction v(l, u, i, t, o) {\n  var r = {\n    type: l,\n    props: u,\n    key: i,\n    ref: t,\n    __k: null,\n    __: null,\n    __b: 0,\n    __e: null,\n    __d: void 0,\n    __c: null,\n    __h: null,\n    constructor: void 0,\n    __v: null == o ? ++n.__v : o\n  };\n  return null != n.vnode && n.vnode(r), r;\n}\nfunction h() {\n  return {\n    current: null\n  };\n}\nfunction y(n) {\n  return n.children;\n}\nfunction p(n, l) {\n  this.props = n, this.context = l;\n}\nfunction d(n, l) {\n  if (null == l) return n.__ ? d(n.__, n.__.__k.indexOf(n) + 1) : null;\n  for (var u; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) return u.__e;\n  return \"function\" == typeof n.type ? d(n) : null;\n}\nfunction _(n) {\n  var l, u;\n  if (null != (n = n.__) && null != n.__c) {\n    for (n.__e = n.__c.base = null, l = 0; l < n.__k.length; l++) if (null != (u = n.__k[l]) && null != u.__e) {\n      n.__e = n.__c.base = u.__e;\n      break;\n    }\n    return _(n);\n  }\n}\nfunction k(l) {\n  (!l.__d && (l.__d = !0) && u.push(l) && !b.__r++ || t !== n.debounceRendering) && ((t = n.debounceRendering) || i)(b);\n}\nfunction b() {\n  for (var n; b.__r = u.length;) n = u.sort(function (n, l) {\n    return n.__v.__b - l.__v.__b;\n  }), u = [], n.some(function (n) {\n    var l, u, i, t, o, r;\n    n.__d && (o = (t = (l = n).__v).__e, (r = l.__P) && (u = [], (i = c({}, t)).__v = t.__v + 1, I(r, t, i, l.__n, void 0 !== r.ownerSVGElement, null != t.__h ? [o] : null, u, null == o ? d(t) : o, t.__h), T(u, t), t.__e != o && _(t)));\n  });\n}\nfunction m(n, l, u, i, t, o, e, c, s, a) {\n  var h,\n    p,\n    _,\n    k,\n    b,\n    m,\n    w,\n    A = i && i.__k || f,\n    P = A.length;\n  for (u.__k = [], h = 0; h < l.length; h++) if (null != (k = u.__k[h] = null == (k = l[h]) || \"boolean\" == typeof k ? null : \"string\" == typeof k || \"number\" == typeof k || \"bigint\" == typeof k ? v(null, k, null, null, k) : Array.isArray(k) ? v(y, {\n    children: k\n  }, null, null, null) : k.__b > 0 ? v(k.type, k.props, k.key, null, k.__v) : k)) {\n    if (k.__ = u, k.__b = u.__b + 1, null === (_ = A[h]) || _ && k.key == _.key && k.type === _.type) A[h] = void 0;else for (p = 0; p < P; p++) {\n      if ((_ = A[p]) && k.key == _.key && k.type === _.type) {\n        A[p] = void 0;\n        break;\n      }\n      _ = null;\n    }\n    I(n, k, _ = _ || r, t, o, e, c, s, a), b = k.__e, (p = k.ref) && _.ref != p && (w || (w = []), _.ref && w.push(_.ref, null, k), w.push(p, k.__c || b, k)), null != b ? (null == m && (m = b), \"function\" == typeof k.type && null != k.__k && k.__k === _.__k ? k.__d = s = g(k, s, n) : s = x(n, k, _, A, b, s), a || \"option\" !== u.type ? \"function\" == typeof u.type && (u.__d = s) : n.value = \"\") : s && _.__e == s && s.parentNode != n && (s = d(_));\n  }\n  for (u.__e = m, h = P; h--;) null != A[h] && (\"function\" == typeof u.type && null != A[h].__e && A[h].__e == u.__d && (u.__d = d(i, h + 1)), L(A[h], A[h]));\n  if (w) for (h = 0; h < w.length; h++) z(w[h], w[++h], w[++h]);\n}\nfunction g(n, l, u) {\n  var i, t;\n  for (i = 0; i < n.__k.length; i++) (t = n.__k[i]) && (t.__ = n, l = \"function\" == typeof t.type ? g(t, l, u) : x(u, t, t, n.__k, t.__e, l));\n  return l;\n}\nfunction w(n, l) {\n  return l = l || [], null == n || \"boolean\" == typeof n || (Array.isArray(n) ? n.some(function (n) {\n    w(n, l);\n  }) : l.push(n)), l;\n}\nfunction x(n, l, u, i, t, o) {\n  var r, f, e;\n  if (void 0 !== l.__d) r = l.__d, l.__d = void 0;else if (null == u || t != o || null == t.parentNode) n: if (null == o || o.parentNode !== n) n.appendChild(t), r = null;else {\n    for (f = o, e = 0; (f = f.nextSibling) && e < i.length; e += 2) if (f == t) break n;\n    n.insertBefore(t, o), r = o;\n  }\n  return void 0 !== r ? r : t.nextSibling;\n}\nfunction A(n, l, u, i, t) {\n  var o;\n  for (o in u) \"children\" === o || \"key\" === o || o in l || C(n, o, null, u[o], i);\n  for (o in l) t && \"function\" != typeof l[o] || \"children\" === o || \"key\" === o || \"value\" === o || \"checked\" === o || u[o] === l[o] || C(n, o, l[o], u[o], i);\n}\nfunction P(n, l, u) {\n  \"-\" === l[0] ? n.setProperty(l, u) : n[l] = null == u ? \"\" : \"number\" != typeof u || e.test(l) ? u : u + \"px\";\n}\nfunction C(n, l, u, i, t) {\n  var o;\n  n: if (\"style\" === l) {\n    if (\"string\" == typeof u) n.style.cssText = u;else {\n      if (\"string\" == typeof i && (n.style.cssText = i = \"\"), i) for (l in i) u && l in u || P(n.style, l, \"\");\n      if (u) for (l in u) i && u[l] === i[l] || P(n.style, l, u[l]);\n    }\n  } else if (\"o\" === l[0] && \"n\" === l[1]) o = l !== (l = l.replace(/Capture$/, \"\")), l = l.toLowerCase() in n ? l.toLowerCase().slice(2) : l.slice(2), n.l || (n.l = {}), n.l[l + o] = u, u ? i || n.addEventListener(l, o ? H : $, o) : n.removeEventListener(l, o ? H : $, o);else if (\"dangerouslySetInnerHTML\" !== l) {\n    if (t) l = l.replace(/xlink[H:h]/, \"h\").replace(/sName$/, \"s\");else if (\"href\" !== l && \"list\" !== l && \"form\" !== l && \"tabIndex\" !== l && \"download\" !== l && l in n) try {\n      n[l] = null == u ? \"\" : u;\n      break n;\n    } catch (n) {}\n    \"function\" == typeof u || (null != u && (!1 !== u || \"a\" === l[0] && \"r\" === l[1]) ? n.setAttribute(l, u) : n.removeAttribute(l));\n  }\n}\nfunction $(l) {\n  this.l[l.type + !1](n.event ? n.event(l) : l);\n}\nfunction H(l) {\n  this.l[l.type + !0](n.event ? n.event(l) : l);\n}\nfunction I(l, u, i, t, o, r, f, e, s) {\n  var a,\n    v,\n    h,\n    d,\n    _,\n    k,\n    b,\n    g,\n    w,\n    x,\n    A,\n    P = u.type;\n  if (void 0 !== u.constructor) return null;\n  null != i.__h && (s = i.__h, e = u.__e = i.__e, u.__h = null, r = [e]), (a = n.__b) && a(u);\n  try {\n    n: if (\"function\" == typeof P) {\n      if (g = u.props, w = (a = P.contextType) && t[a.__c], x = a ? w ? w.props.value : a.__ : t, i.__c ? b = (v = u.__c = i.__c).__ = v.__E : (\"prototype\" in P && P.prototype.render ? u.__c = v = new P(g, x) : (u.__c = v = new p(g, x), v.constructor = P, v.render = M), w && w.sub(v), v.props = g, v.state || (v.state = {}), v.context = x, v.__n = t, h = v.__d = !0, v.__h = []), null == v.__s && (v.__s = v.state), null != P.getDerivedStateFromProps && (v.__s == v.state && (v.__s = c({}, v.__s)), c(v.__s, P.getDerivedStateFromProps(g, v.__s))), d = v.props, _ = v.state, h) null == P.getDerivedStateFromProps && null != v.componentWillMount && v.componentWillMount(), null != v.componentDidMount && v.__h.push(v.componentDidMount);else {\n        if (null == P.getDerivedStateFromProps && g !== d && null != v.componentWillReceiveProps && v.componentWillReceiveProps(g, x), !v.__e && null != v.shouldComponentUpdate && !1 === v.shouldComponentUpdate(g, v.__s, x) || u.__v === i.__v) {\n          v.props = g, v.state = v.__s, u.__v !== i.__v && (v.__d = !1), v.__v = u, u.__e = i.__e, u.__k = i.__k, u.__k.forEach(function (n) {\n            n && (n.__ = u);\n          }), v.__h.length && f.push(v);\n          break n;\n        }\n        null != v.componentWillUpdate && v.componentWillUpdate(g, v.__s, x), null != v.componentDidUpdate && v.__h.push(function () {\n          v.componentDidUpdate(d, _, k);\n        });\n      }\n      v.context = x, v.props = g, v.state = v.__s, (a = n.__r) && a(u), v.__d = !1, v.__v = u, v.__P = l, a = v.render(v.props, v.state, v.context), v.state = v.__s, null != v.getChildContext && (t = c(c({}, t), v.getChildContext())), h || null == v.getSnapshotBeforeUpdate || (k = v.getSnapshotBeforeUpdate(d, _)), A = null != a && a.type === y && null == a.key ? a.props.children : a, m(l, Array.isArray(A) ? A : [A], u, i, t, o, r, f, e, s), v.base = u.__e, u.__h = null, v.__h.length && f.push(v), b && (v.__E = v.__ = null), v.__e = !1;\n    } else null == r && u.__v === i.__v ? (u.__k = i.__k, u.__e = i.__e) : u.__e = j(i.__e, u, i, t, o, r, f, s);\n    (a = n.diffed) && a(u);\n  } catch (l) {\n    u.__v = null, (s || null != r) && (u.__e = e, u.__h = !!s, r[r.indexOf(e)] = null), n.__e(l, u, i);\n  }\n}\nfunction T(l, u) {\n  n.__c && n.__c(u, l), l.some(function (u) {\n    try {\n      l = u.__h, u.__h = [], l.some(function (n) {\n        n.call(u);\n      });\n    } catch (l) {\n      n.__e(l, u.__v);\n    }\n  });\n}\nfunction j(n, l, u, i, t, o, e, c) {\n  var a,\n    v,\n    h,\n    y,\n    p = u.props,\n    d = l.props,\n    _ = l.type,\n    k = 0;\n  if (\"svg\" === _ && (t = !0), null != o) for (; k < o.length; k++) if ((a = o[k]) && (a === n || (_ ? a.localName == _ : 3 == a.nodeType))) {\n    n = a, o[k] = null;\n    break;\n  }\n  if (null == n) {\n    if (null === _) return document.createTextNode(d);\n    n = t ? document.createElementNS(\"http://www.w3.org/2000/svg\", _) : document.createElement(_, d.is && d), o = null, c = !1;\n  }\n  if (null === _) p === d || c && n.data === d || (n.data = d);else {\n    if (o = o && f.slice.call(n.childNodes), v = (p = u.props || r).dangerouslySetInnerHTML, h = d.dangerouslySetInnerHTML, !c) {\n      if (null != o) for (p = {}, y = 0; y < n.attributes.length; y++) p[n.attributes[y].name] = n.attributes[y].value;\n      (h || v) && (h && (v && h.__html == v.__html || h.__html === n.innerHTML) || (n.innerHTML = h && h.__html || \"\"));\n    }\n    if (A(n, d, p, t, c), h) l.__k = [];else if (k = l.props.children, m(n, Array.isArray(k) ? k : [k], l, u, i, t && \"foreignObject\" !== _, o, e, n.firstChild, c), null != o) for (k = o.length; k--;) null != o[k] && s(o[k]);\n    c || (\"value\" in d && void 0 !== (k = d.value) && (k !== n.value || \"progress\" === _ && !k) && C(n, \"value\", k, p.value, !1), \"checked\" in d && void 0 !== (k = d.checked) && k !== n.checked && C(n, \"checked\", k, p.checked, !1));\n  }\n  return n;\n}\nfunction z(l, u, i) {\n  try {\n    \"function\" == typeof l ? l(u) : l.current = u;\n  } catch (l) {\n    n.__e(l, i);\n  }\n}\nfunction L(l, u, i) {\n  var t, o, r;\n  if (n.unmount && n.unmount(l), (t = l.ref) && (t.current && t.current !== l.__e || z(t, null, u)), i || \"function\" == typeof l.type || (i = null != (o = l.__e)), l.__e = l.__d = void 0, null != (t = l.__c)) {\n    if (t.componentWillUnmount) try {\n      t.componentWillUnmount();\n    } catch (l) {\n      n.__e(l, u);\n    }\n    t.base = t.__P = null;\n  }\n  if (t = l.__k) for (r = 0; r < t.length; r++) t[r] && L(t[r], u, i);\n  null != o && s(o);\n}\nfunction M(n, l, u) {\n  return this.constructor(n, u);\n}\nfunction N(l, u, i) {\n  var t, o, e;\n  n.__ && n.__(l, u), o = (t = \"function\" == typeof i) ? null : i && i.__k || u.__k, e = [], I(u, l = (!t && i || u).__k = a(y, null, [l]), o || r, r, void 0 !== u.ownerSVGElement, !t && i ? [i] : o ? null : u.firstChild ? f.slice.call(u.childNodes) : null, e, !t && i ? i : o ? o.__e : u.firstChild, t), T(e, l);\n}\nfunction O(n, l) {\n  N(n, l, O);\n}\nfunction S(n, l, u) {\n  var i,\n    t,\n    o,\n    r = arguments,\n    f = c({}, n.props);\n  for (o in l) \"key\" == o ? i = l[o] : \"ref\" == o ? t = l[o] : f[o] = l[o];\n  if (arguments.length > 3) for (u = [u], o = 3; o < arguments.length; o++) u.push(r[o]);\n  return null != u && (f.children = u), v(n.type, f, i || n.key, t || n.ref, null);\n}\nfunction q(n, l) {\n  var u = {\n    __c: l = \"__cC\" + o++,\n    __: n,\n    Consumer: function (n, l) {\n      return n.children(l);\n    },\n    Provider: function (n) {\n      var u, i;\n      return this.getChildContext || (u = [], (i = {})[l] = this, this.getChildContext = function () {\n        return i;\n      }, this.shouldComponentUpdate = function (n) {\n        this.props.value !== n.value && u.some(k);\n      }, this.sub = function (n) {\n        u.push(n);\n        var l = n.componentWillUnmount;\n        n.componentWillUnmount = function () {\n          u.splice(u.indexOf(n), 1), l && l.call(n);\n        };\n      }), n.children;\n    }\n  };\n  return u.Provider.__ = u.Consumer.contextType = u;\n}\nn = {\n  __e: function (n, l) {\n    for (var u, i, t; l = l.__;) if ((u = l.__c) && !u.__) try {\n      if ((i = u.constructor) && null != i.getDerivedStateFromError && (u.setState(i.getDerivedStateFromError(n)), t = u.__d), null != u.componentDidCatch && (u.componentDidCatch(n), t = u.__d), t) return u.__E = u;\n    } catch (l) {\n      n = l;\n    }\n    throw n;\n  },\n  __v: 0\n}, l = function (n) {\n  return null != n && void 0 === n.constructor;\n}, p.prototype.setState = function (n, l) {\n  var u;\n  u = null != this.__s && this.__s !== this.state ? this.__s : this.__s = c({}, this.state), \"function\" == typeof n && (n = n(c({}, u), this.props)), n && c(u, n), null != n && this.__v && (l && this.__h.push(l), k(this));\n}, p.prototype.forceUpdate = function (n) {\n  this.__v && (this.__e = !0, n && this.__h.push(n), k(this));\n}, p.prototype.render = y, u = [], i = \"function\" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, b.__r = 0, o = 0;\nexport { N as render, O as hydrate, a as createElement, a as h, y as Fragment, h as createRef, l as isValidElement, p as Component, S as cloneElement, q as createContext, w as toChildArray, n as options };","map":{"version":3,"sources":["../src/constants.js","../src/options.js","../src/create-element.js","../src/component.js","../src/create-context.js","../src/util.js","../src/diff/children.js","../src/diff/props.js","../src/diff/index.js","../src/render.js","../src/clone-element.js","../src/diff/catch-error.js"],"names":["EMPTY_OBJ","EMPTY_ARR","IS_NON_DIMENSIONAL","options","createElement","type","props","children","normalizedProps","key","ref","i","arguments","length","push","defaultProps","undefined","createVNode","original","vnode","constructor","createRef","current","Fragment","isValidElement","Component","context","prototype","setState","update","callback","s","this","state","assign","enqueueRender","forceUpdate","render","getDomSibling","childIndex","indexOf","sibling","component","oldDom","parentDom","commitQueue","oldVNode","diff","ownerSVGElement","commitRoot","updateParentDomPointers","base","child","rerenderQueue","defer","Promise","then","bind","resolve","setTimeout","prevDebounce","c","process","debounceRendering","queue","sort","a","b","some","createContext","defaultValue","contextId","Consumer","contextValue","Provider","getChildContext","subs","ctx","shouldComponentUpdate","_props","value","sub","old","componentWillUnmount","splice","call","contextType","obj","removeNode","node","parentNode","removeChild","diffChildren","renderResult","newParentVNode","oldParentVNode","globalContext","isSvg","excessDomChildren","isHydrating","j","childVNode","newDom","firstChildDom","refs","oldChildren","oldChildrenLength","Array","isArray","reorderChildren","placeChild","unmount","applyRef","tmp","toChildArray","out","nextDom","outer","appendChild","sibDom","nextSibling","insertBefore","diffProps","dom","newProps","oldProps","hydrate","setProperty","setStyle","style","test","name","oldValue","useCapture","o","cssText","replace","toLowerCase","slice","_listeners","eventProxyCapture","eventProxy","addEventListener","removeEventListener","e","setAttribute","removeAttribute","event","newVNode","newType","isNew","oldState","snapshot","clearProcessingException","provider","componentContext","doRender","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","forEach","componentWillUpdate","componentDidUpdate","getSnapshotBeforeUpdate","diffElementNodes","diffed","root","cb","nodeType","localName","document","createTextNode","createElementNS","is","data","childNodes","oldHtml","dangerouslySetInnerHTML","newHtml","attributes","innerHTML","firstChild","checked","parentVNode","skipRemove","r","replaceNode","cloneElement","error","ctor","handled","getDerivedStateFromError","componentDidCatch"],"mappings":"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","sourcesContent":["export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n","import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError,\n\t_vnodeId: 0\n};\n\nexport default options;\n","import options from './options';\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\t// https://github.com/preactjs/preact/issues/1916\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++options._vnodeId : original\n\t};\n\n\tif (options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n","import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/**\n * Asynchronously schedule a callback\n * @type {(cb: () => void) => void}\n */\n/* istanbul ignore next */\n// Note the following line isn't tree-shaken by rollup cuz of rollup/rollup#2566\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet queue;\n\twhile ((process._rerenderCount = rerenderQueue.length)) {\n\t\tqueue = rerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\trerenderQueue = [];\n\t\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t\t// process() calls from getting scheduled while `queue` is still being consumed.\n\t\tqueue.some(c => {\n\t\t\tif (c._dirty) renderComponent(c);\n\t\t});\n\t}\n}\nprocess._rerenderCount = 0;\n","import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(enqueueRender);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n","/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n","import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tnull,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children != null && // Can be null if childVNode suspended\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Browsers will infer an option's `value` from `textContent` when\n\t\t\t// no value is present. This essentially bypasses our code to set it\n\t\t\t// later in `diff()`. It works fine in all browsers except for IE11\n\t\t\t// where it breaks setting `select.value`. There it will be always set\n\t\t\t// to an empty string. Re-applying an options value will fix that, so\n\t\t\t// there are probably some internal data structures that aren't\n\t\t\t// updated properly.\n\t\t\t//\n\t\t\t// To fix it we make sure to reset the inferred value, so that our own\n\t\t\t// value check in `diff()` won't be skipped.\n\t\t\tif (!isHydrating && newParentVNode.type === 'option') {\n\t\t\t\t// @ts-ignore We have validated that the type of parentDOM is 'option'\n\t\t\t\t// in the above check\n\t\t\t\tparentDom.value = '';\n\t\t\t} else if (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldParentVNode, i + 1);\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\tfor (let tmp = 0; tmp < childVNode._children.length; tmp++) {\n\t\tlet vnode = childVNode._children[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tvnode,\n\t\t\t\t\tvnode,\n\t\t\t\t\tchildVNode._children,\n\t\t\t\t\tvnode._dom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 2\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n","import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink[H:h]/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (\n\t\t\tvalue != null &&\n\t\t\t(value !== false || (name[0] === 'a' && name[1] === 'r'))\n\t\t) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tthis._listeners[e.type + false](options.event ? options.event(e) : e);\n}\n\nfunction eventProxyCapture(e) {\n\tthis._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { Component } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\tc.props = newProps;\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) c._dirty = false;\n\t\t\t\t\tc._vnode = newVNode;\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc.state = c._nextState;\n\n\t\t\tif ((tmp = options._render)) tmp(newVNode);\n\n\t\t\tc._dirty = false;\n\t\t\tc._vnode = newVNode;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t(child === dom ||\n\t\t\t\t\t(nodeType ? child.localName == nodeType : child.nodeType == 3))\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren =\n\t\t\texcessDomChildren && EMPTY_ARR.slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (let i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tdom.firstChild,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value || (nodeType === 'progress' && !i))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) applyRef(r, null, parentVNode);\n\t}\n\n\tlet dom;\n\tif (!skipRemove && typeof vnode.type != 'function') {\n\t\tskipRemove = (dom = vnode._dom) != null;\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._dom = vnode._nextDom = undefined;\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) unmount(r[i], parentVNode, skipRemove);\n\t\t}\n\t}\n\n\tif (dom != null) removeNode(dom);\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n","import { EMPTY_OBJ, EMPTY_ARR } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? EMPTY_ARR.slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n","import { assign } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 3) {\n\t\tchildren = [children];\n\t\tfor (i = 3; i < arguments.length; i++) {\n\t\t\tchildren.push(arguments[i]);\n\t\t}\n\t}\n\tif (children != null) {\n\t\tnormalizedProps.children = children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n","/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n */\nexport function _catchError(error, vnode) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error);\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n"]},"metadata":{},"sourceType":"module"}