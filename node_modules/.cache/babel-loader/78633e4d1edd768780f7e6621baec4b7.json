{"ast":null,"code":"import _styled from \"styled-components\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/WalletModal/index.tsx\",\n  _s = $RefreshSig$();\nimport { Trans } from \"@lingui/react\";\nimport { sendAnalyticsEvent, user } from '@uniswap/analytics';\nimport { CustomUserProperties, EventName, WalletConnectionResult } from '@uniswap/analytics-events';\nimport { useWeb3React } from '@web3-react/core';\nimport { sendEvent } from 'components/analytics';\nimport { AutoColumn } from 'components/Column';\nimport { AutoRow } from 'components/Row';\nimport { networkConnection } from 'connection';\nimport { getConnection, getConnectionName, getIsCoinbaseWallet, getIsInjected, getIsMetaMask } from 'connection/utils';\nimport usePrevious from 'hooks/usePrevious';\nimport { useCallback, useEffect, useState } from 'react';\nimport { ArrowLeft } from 'react-feather';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { updateConnectionError } from 'state/connection/reducer';\nimport { useAppDispatch, useAppSelector } from 'state/hooks';\nimport { updateSelectedWallet } from 'state/user/reducer';\nimport { useConnectedWallets } from 'state/wallets/hooks';\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles';\nimport { isMobile } from 'utils/userAgent';\nimport { ReactComponent as Close } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/x.svg\";\nimport { useModalIsOpen, useToggleWalletModal } from '../../state/application/hooks';\nimport { ApplicationModal } from '../../state/application/reducer';\nimport { ExternalLink, ThemedText } from '../../theme';\nimport AccountDetails from '../AccountDetails';\nimport Modal from '../Modal';\nimport { CoinbaseWalletOption, OpenCoinbaseWalletOption } from './CoinbaseWalletOption';\nimport { InjectedOption, InstallMetaMaskOption, MetaMaskOption } from './InjectedOption';\nimport PendingView from './PendingView';\nimport { WalletConnectOption } from './WalletConnectOption';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CloseIcon = _styled.div.withConfig({\n  displayName: \"WalletModal__CloseIcon\",\n  componentId: \"sc-1hmbv05-0\"\n})([\"position:absolute;right:1rem;top:14px;&:hover{cursor:pointer;opacity:\", \";}\"], _ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.opacity.hover;\n});\nconst CloseColor = _styled(Close).withConfig({\n  displayName: \"WalletModal__CloseColor\",\n  componentId: \"sc-1hmbv05-1\"\n})([\"path{stroke:\", \";}\"], _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return theme.deprecated_text4;\n});\nconst Wrapper = _styled.div.withConfig({\n  displayName: \"WalletModal__Wrapper\",\n  componentId: \"sc-1hmbv05-2\"\n})([\"\", \";background-color:\", \";outline:\", \";box-shadow:\", \";margin:0;padding:0;width:100%;\"], flexColumnNoWrap, _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return theme.backgroundSurface;\n}, _ref4 => {\n  let {\n    theme\n  } = _ref4;\n  return `1px solid ${theme.backgroundOutline}`;\n}, _ref5 => {\n  let {\n    theme\n  } = _ref5;\n  return theme.deepShadow;\n});\nconst HeaderRow = _styled.div.withConfig({\n  displayName: \"WalletModal__HeaderRow\",\n  componentId: \"sc-1hmbv05-3\"\n})([\"\", \";padding:1rem 1rem;font-weight:600;size:16px;color:\", \";\", \";\"], flexRowNoWrap, props => props.color === 'blue' ? _ref6 => {\n  let {\n    theme\n  } = _ref6;\n  return theme.accentAction;\n} : 'inherit', _ref7 => {\n  let {\n    theme\n  } = _ref7;\n  return theme.deprecated_mediaWidth.deprecated_upToMedium`\n    padding: 1rem;\n  `;\n});\nconst ContentWrapper = _styled.div.withConfig({\n  displayName: \"WalletModal__ContentWrapper\",\n  componentId: \"sc-1hmbv05-4\"\n})([\"background-color:\", \";padding:0 1rem 1rem 1rem;border-bottom-left-radius:20px;border-bottom-right-radius:20px;\", \";\"], _ref8 => {\n  let {\n    theme\n  } = _ref8;\n  return theme.backgroundSurface;\n}, _ref9 => {\n  let {\n    theme\n  } = _ref9;\n  return theme.deprecated_mediaWidth.deprecated_upToMedium`padding: 0 1rem 1rem 1rem`;\n});\nconst UpperSection = _styled.div.withConfig({\n  displayName: \"WalletModal__UpperSection\",\n  componentId: \"sc-1hmbv05-5\"\n})([\"position:relative;h5{margin:0;margin-bottom:0.5rem;font-size:1rem;font-weight:400;}h5:last-child{margin-bottom:0px;}h4{margin-top:0;font-weight:500;}\"]);\nconst OptionGrid = _styled.div.withConfig({\n  displayName: \"WalletModal__OptionGrid\",\n  componentId: \"sc-1hmbv05-6\"\n})([\"display:grid;grid-gap:10px;\", \";\"], _ref10 => {\n  let {\n    theme\n  } = _ref10;\n  return theme.deprecated_mediaWidth.deprecated_upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `;\n});\nconst HoverText = _styled.div.withConfig({\n  displayName: \"WalletModal__HoverText\",\n  componentId: \"sc-1hmbv05-7\"\n})([\"text-decoration:none;color:\", \";display:flex;align-items:center;:hover{cursor:pointer;}\"], _ref11 => {\n  let {\n    theme\n  } = _ref11;\n  return theme.textPrimary;\n});\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  ACCOUNT: 'account',\n  PENDING: 'pending'\n};\nconst sendAnalyticsEventAndUserInfo = (account, walletType, chainId, isReconnect) => {\n  sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n    result: WalletConnectionResult.SUCCEEDED,\n    wallet_address: account,\n    wallet_type: walletType,\n    is_reconnect: isReconnect\n  });\n  user.set(CustomUserProperties.WALLET_ADDRESS, account);\n  user.set(CustomUserProperties.WALLET_TYPE, walletType);\n  if (chainId) {\n    user.postInsert(CustomUserProperties.ALL_WALLET_CHAIN_IDS, chainId);\n  }\n  user.postInsert(CustomUserProperties.ALL_WALLET_ADDRESSES_CONNECTED, account);\n};\nexport default function WalletModal(_ref12) {\n  _s();\n  let {\n    pendingTransactions,\n    confirmedTransactions,\n    ENSName\n  } = _ref12;\n  const dispatch = useAppDispatch();\n  const {\n    connector,\n    account,\n    chainId\n  } = useWeb3React();\n  const previousAccount = usePrevious(account);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [connectedWallets, addWalletToConnectedWallets] = useConnectedWallets();\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT);\n  const [lastActiveWalletAddress, setLastActiveWalletAddress] = useState(account);\n  const [pendingConnector, setPendingConnector] = useState();\n  const pendingError = useAppSelector(state => pendingConnector ? state.connection.errorByConnectionType[getConnection(pendingConnector).type] : undefined);\n  const walletModalOpen = useModalIsOpen(ApplicationModal.WALLET);\n  const toggleWalletModal = useToggleWalletModal();\n  const openOptions = useCallback(() => {\n    setWalletView(WALLET_VIEWS.OPTIONS);\n  }, [setWalletView]);\n  useEffect(() => {\n    if (walletModalOpen) {\n      setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS);\n    }\n  }, [walletModalOpen, setWalletView, account]);\n  useEffect(() => {\n    if (account && account !== previousAccount && walletModalOpen) {\n      toggleWalletModal();\n      if (location.pathname === '/') {\n        navigate('/swap');\n      }\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen, location.pathname, navigate]);\n  useEffect(() => {\n    if (pendingConnector && walletView !== WALLET_VIEWS.PENDING) {\n      updateConnectionError({\n        connectionType: getConnection(pendingConnector).type,\n        error: undefined\n      });\n      setPendingConnector(undefined);\n    }\n  }, [pendingConnector, walletView]);\n\n  // Keep the network connector in sync with any active user connector to prevent chain-switching on wallet disconnection.\n  useEffect(() => {\n    if (chainId && connector !== networkConnection.connector) {\n      networkConnection.connector.activate(chainId);\n    }\n  }, [chainId, connector]);\n\n  // When new wallet is successfully set by the user, trigger logging of Amplitude analytics event.\n  useEffect(() => {\n    if (account && account !== lastActiveWalletAddress) {\n      const walletType = getConnectionName(getConnection(connector).type, getIsMetaMask());\n      const isReconnect = connectedWallets.filter(wallet => wallet.account === account && wallet.walletType === walletType).length > 0;\n      sendAnalyticsEventAndUserInfo(account, walletType, chainId, isReconnect);\n      if (!isReconnect) addWalletToConnectedWallets({\n        account,\n        walletType\n      });\n    }\n    setLastActiveWalletAddress(account);\n  }, [connectedWallets, addWalletToConnectedWallets, lastActiveWalletAddress, account, connector, chainId]);\n  const tryActivation = useCallback(async connector => {\n    const connectionType = getConnection(connector).type;\n\n    // log selected wallet\n    sendEvent({\n      category: 'Wallet',\n      action: 'Change Wallet',\n      label: connectionType\n    });\n    try {\n      setPendingConnector(connector);\n      setWalletView(WALLET_VIEWS.PENDING);\n      dispatch(updateConnectionError({\n        connectionType,\n        error: undefined\n      }));\n      await connector.activate();\n      dispatch(updateSelectedWallet({\n        wallet: connectionType\n      }));\n    } catch (error) {\n      console.debug(`web3-react connection error: ${error}`);\n      dispatch(updateConnectionError({\n        connectionType,\n        error: error.message\n      }));\n      sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n        result: WalletConnectionResult.FAILED,\n        wallet_type: getConnectionName(connectionType, getIsMetaMask())\n      });\n    }\n  }, [dispatch]);\n  function getOptions() {\n    var _ref13;\n    const isInjected = getIsInjected();\n    const isMetaMask = getIsMetaMask();\n    const isCoinbaseWallet = getIsCoinbaseWallet();\n    const isCoinbaseWalletBrowser = isMobile && isCoinbaseWallet;\n    const isMetaMaskBrowser = isMobile && isMetaMask;\n    const isInjectedMobileBrowser = isCoinbaseWalletBrowser || isMetaMaskBrowser;\n    let injectedOption;\n    if (!isInjected) {\n      if (!isMobile) {\n        injectedOption = /*#__PURE__*/_jsxDEV(InstallMetaMaskOption, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 26\n        }, this);\n      }\n    } else if (!isCoinbaseWallet) {\n      if (isMetaMask) {\n        injectedOption = /*#__PURE__*/_jsxDEV(MetaMaskOption, {\n          tryActivation: tryActivation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 26\n        }, this);\n      } else {\n        injectedOption = /*#__PURE__*/_jsxDEV(InjectedOption, {\n          tryActivation: tryActivation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 26\n        }, this);\n      }\n    }\n    let coinbaseWalletOption;\n    if (isMobile && !isInjectedMobileBrowser) {\n      coinbaseWalletOption = /*#__PURE__*/_jsxDEV(OpenCoinbaseWalletOption, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 30\n      }, this);\n    } else if (!isMobile || isCoinbaseWalletBrowser) {\n      coinbaseWalletOption = /*#__PURE__*/_jsxDEV(CoinbaseWalletOption, {\n        tryActivation: tryActivation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 30\n      }, this);\n    }\n    const walletConnectionOption = (_ref13 = !isInjectedMobileBrowser && /*#__PURE__*/_jsxDEV(WalletConnectOption, {\n      tryActivation: tryActivation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 36\n    }, this)) !== null && _ref13 !== void 0 ? _ref13 : null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [injectedOption, coinbaseWalletOption, walletConnectionOption]\n    }, void 0, true);\n  }\n  function getModalContent() {\n    if (walletView === WALLET_VIEWS.ACCOUNT) {\n      return /*#__PURE__*/_jsxDEV(AccountDetails, {\n        toggleWalletModal: toggleWalletModal,\n        pendingTransactions: pendingTransactions,\n        confirmedTransactions: confirmedTransactions,\n        ENSName: ENSName,\n        openOptions: openOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this);\n    }\n    let headerRow;\n    if (walletView === WALLET_VIEWS.PENDING || walletView === WALLET_VIEWS.ACCOUNT || !!account) {\n      headerRow = /*#__PURE__*/_jsxDEV(HeaderRow, {\n        color: \"blue\",\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          onClick: () => setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS),\n          children: /*#__PURE__*/_jsxDEV(ArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this);\n    } else {\n      headerRow = /*#__PURE__*/_jsxDEV(HeaderRow, {\n        children: /*#__PURE__*/_jsxDEV(HoverText, {\n          children: /*#__PURE__*/_jsxDEV(Trans, {\n            id: \"Connect a wallet\"\n          }, void 0, false, void 0, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this);\n    }\n    function getTermsOfService(walletView) {\n      if (walletView === WALLET_VIEWS.PENDING) return null;\n      const content = /*#__PURE__*/_jsxDEV(Trans, {\n        id: \"By connecting a wallet, you agree to Uniswap Labs\\u2019 <0>Terms of Service</0> and consent to its <1>Privacy Policy</1>.\",\n        components: {\n          0: /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"https://uniswap.org/terms-of-service/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 11\n          }, this),\n          1: /*#__PURE__*/_jsxDEV(ExternalLink, {\n            href: \"https://uniswap.org/privacy-policy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 11\n          }, this)\n        }\n      }, void 0, false, void 0, this);\n      return /*#__PURE__*/_jsxDEV(AutoRow, {\n        style: {\n          flexWrap: 'nowrap',\n          padding: '4px 16px'\n        },\n        children: /*#__PURE__*/_jsxDEV(ThemedText.BodySecondary, {\n          fontSize: 16,\n          lineHeight: \"24px\",\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(UpperSection, {\n      children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n        \"data-testid\": \"wallet-modal-close\",\n        onClick: toggleWalletModal,\n        children: /*#__PURE__*/_jsxDEV(CloseColor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), headerRow, /*#__PURE__*/_jsxDEV(ContentWrapper, {\n        children: /*#__PURE__*/_jsxDEV(AutoColumn, {\n          gap: \"16px\",\n          children: [walletView === WALLET_VIEWS.PENDING && pendingConnector && /*#__PURE__*/_jsxDEV(PendingView, {\n            openOptions: openOptions,\n            connector: pendingConnector,\n            error: !!pendingError,\n            tryActivation: tryActivation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), walletView !== WALLET_VIEWS.PENDING && /*#__PURE__*/_jsxDEV(OptionGrid, {\n            \"data-testid\": \"option-grid\",\n            children: getOptions()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 53\n          }, this), !pendingError && getTermsOfService(walletView)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: walletModalOpen,\n    onDismiss: toggleWalletModal,\n    minHeight: false,\n    maxHeight: 90,\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      \"data-testid\": \"wallet-modal\",\n      children: getModalContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n_s(WalletModal, \"MKq2fwPEgqmLYNbdJfRiWJS6Fh4=\", false, function () {\n  return [useAppDispatch, useWeb3React, usePrevious, useLocation, useNavigate, useConnectedWallets, useAppSelector, useModalIsOpen, useToggleWalletModal];\n});\n_c = WalletModal;\nvar _c;\n$RefreshReg$(_c, \"WalletModal\");","map":{"version":3,"names":["sendAnalyticsEvent","user","CustomUserProperties","EventName","WalletConnectionResult","useWeb3React","sendEvent","AutoColumn","AutoRow","networkConnection","getConnection","getConnectionName","getIsCoinbaseWallet","getIsInjected","getIsMetaMask","usePrevious","useCallback","useEffect","useState","ArrowLeft","useLocation","useNavigate","updateConnectionError","useAppDispatch","useAppSelector","updateSelectedWallet","useConnectedWallets","flexColumnNoWrap","flexRowNoWrap","isMobile","useModalIsOpen","useToggleWalletModal","ApplicationModal","ExternalLink","ThemedText","AccountDetails","Modal","CoinbaseWalletOption","OpenCoinbaseWalletOption","InjectedOption","InstallMetaMaskOption","MetaMaskOption","PendingView","WalletConnectOption","CloseIcon","styled","div","theme","opacity","hover","CloseColor","Close","deprecated_text4","Wrapper","backgroundSurface","backgroundOutline","deepShadow","HeaderRow","props","color","accentAction","deprecated_mediaWidth","deprecated_upToMedium","ContentWrapper","UpperSection","OptionGrid","HoverText","textPrimary","WALLET_VIEWS","OPTIONS","ACCOUNT","PENDING","sendAnalyticsEventAndUserInfo","account","walletType","chainId","isReconnect","WALLET_CONNECT_TXN_COMPLETED","result","SUCCEEDED","wallet_address","wallet_type","is_reconnect","set","WALLET_ADDRESS","WALLET_TYPE","postInsert","ALL_WALLET_CHAIN_IDS","ALL_WALLET_ADDRESSES_CONNECTED","WalletModal","pendingTransactions","confirmedTransactions","ENSName","dispatch","connector","previousAccount","location","navigate","connectedWallets","addWalletToConnectedWallets","walletView","setWalletView","lastActiveWalletAddress","setLastActiveWalletAddress","pendingConnector","setPendingConnector","pendingError","state","connection","errorByConnectionType","type","undefined","walletModalOpen","WALLET","toggleWalletModal","openOptions","pathname","connectionType","error","activate","filter","wallet","length","tryActivation","category","action","label","console","debug","message","FAILED","getOptions","isInjected","isMetaMask","isCoinbaseWallet","isCoinbaseWalletBrowser","isMetaMaskBrowser","isInjectedMobileBrowser","injectedOption","coinbaseWalletOption","walletConnectionOption","getModalContent","headerRow","getTermsOfService","content","flexWrap","padding"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/fohle-interface/src/components/WalletModal/index.tsx"],"sourcesContent":["import { Trans } from '@lingui/macro'\nimport { sendAnalyticsEvent, user } from '@uniswap/analytics'\nimport { CustomUserProperties, EventName, WalletConnectionResult } from '@uniswap/analytics-events'\nimport { useWeb3React } from '@web3-react/core'\nimport { Connector } from '@web3-react/types'\nimport { sendEvent } from 'components/analytics'\nimport { AutoColumn } from 'components/Column'\nimport { AutoRow } from 'components/Row'\nimport { networkConnection } from 'connection'\nimport { getConnection, getConnectionName, getIsCoinbaseWallet, getIsInjected, getIsMetaMask } from 'connection/utils'\nimport usePrevious from 'hooks/usePrevious'\nimport { useCallback, useEffect, useState } from 'react'\nimport { ArrowLeft } from 'react-feather'\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { updateConnectionError } from 'state/connection/reducer'\nimport { useAppDispatch, useAppSelector } from 'state/hooks'\nimport { updateSelectedWallet } from 'state/user/reducer'\nimport { useConnectedWallets } from 'state/wallets/hooks'\nimport styled from 'styled-components/macro'\nimport { flexColumnNoWrap, flexRowNoWrap } from 'theme/styles'\nimport { isMobile } from 'utils/userAgent'\n\nimport { ReactComponent as Close } from '../../assets/images/x.svg'\nimport { useModalIsOpen, useToggleWalletModal } from '../../state/application/hooks'\nimport { ApplicationModal } from '../../state/application/reducer'\nimport { ExternalLink, ThemedText } from '../../theme'\nimport AccountDetails from '../AccountDetails'\nimport Modal from '../Modal'\nimport { CoinbaseWalletOption, OpenCoinbaseWalletOption } from './CoinbaseWalletOption'\nimport { InjectedOption, InstallMetaMaskOption, MetaMaskOption } from './InjectedOption'\nimport PendingView from './PendingView'\nimport { WalletConnectOption } from './WalletConnectOption'\n\nconst CloseIcon = styled.div`\n  position: absolute;\n  right: 1rem;\n  top: 14px;\n  &:hover {\n    cursor: pointer;\n    opacity: ${({ theme }) => theme.opacity.hover};\n  }\n`\n\nconst CloseColor = styled(Close)`\n  path {\n    stroke: ${({ theme }) => theme.deprecated_text4};\n  }\n`\n\nconst Wrapper = styled.div`\n  ${flexColumnNoWrap};\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  outline: ${({ theme }) => `1px solid ${theme.backgroundOutline}`};\n  box-shadow: ${({ theme }) => theme.deepShadow};\n  margin: 0;\n  padding: 0;\n  width: 100%;\n`\n\nconst HeaderRow = styled.div`\n  ${flexRowNoWrap};\n  padding: 1rem 1rem;\n  font-weight: 600;\n  size: 16px;\n  color: ${(props) => (props.color === 'blue' ? ({ theme }) => theme.accentAction : 'inherit')};\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    padding: 1rem;\n  `};\n`\n\nconst ContentWrapper = styled.div`\n  background-color: ${({ theme }) => theme.backgroundSurface};\n  padding: 0 1rem 1rem 1rem;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`padding: 0 1rem 1rem 1rem`};\n`\n\nconst UpperSection = styled.div`\n  position: relative;\n  h5 {\n    margin: 0;\n    margin-bottom: 0.5rem;\n    font-size: 1rem;\n    font-weight: 400;\n  }\n  h5:last-child {\n    margin-bottom: 0px;\n  }\n  h4 {\n    margin-top: 0;\n    font-weight: 500;\n  }\n`\n\nconst OptionGrid = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  ${({ theme }) => theme.deprecated_mediaWidth.deprecated_upToMedium`\n    grid-template-columns: 1fr;\n    grid-gap: 10px;\n  `};\n`\n\nconst HoverText = styled.div`\n  text-decoration: none;\n  color: ${({ theme }) => theme.textPrimary};\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst WALLET_VIEWS = {\n  OPTIONS: 'options',\n  ACCOUNT: 'account',\n  PENDING: 'pending',\n}\n\nconst sendAnalyticsEventAndUserInfo = (\n  account: string,\n  walletType: string,\n  chainId: number | undefined,\n  isReconnect: boolean\n) => {\n  sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n    result: WalletConnectionResult.SUCCEEDED,\n    wallet_address: account,\n    wallet_type: walletType,\n    is_reconnect: isReconnect,\n  })\n  user.set(CustomUserProperties.WALLET_ADDRESS, account)\n  user.set(CustomUserProperties.WALLET_TYPE, walletType)\n  if (chainId) {\n    user.postInsert(CustomUserProperties.ALL_WALLET_CHAIN_IDS, chainId)\n  }\n  user.postInsert(CustomUserProperties.ALL_WALLET_ADDRESSES_CONNECTED, account)\n}\n\nexport default function WalletModal({\n  pendingTransactions,\n  confirmedTransactions,\n  ENSName,\n}: {\n  pendingTransactions: string[] // hashes of pending\n  confirmedTransactions: string[] // hashes of confirmed\n  ENSName?: string\n}) {\n  const dispatch = useAppDispatch()\n  const { connector, account, chainId } = useWeb3React()\n  const previousAccount = usePrevious(account)\n\n  const location = useLocation()\n  const navigate = useNavigate()\n\n  const [connectedWallets, addWalletToConnectedWallets] = useConnectedWallets()\n\n  const [walletView, setWalletView] = useState(WALLET_VIEWS.ACCOUNT)\n  const [lastActiveWalletAddress, setLastActiveWalletAddress] = useState<string | undefined>(account)\n\n  const [pendingConnector, setPendingConnector] = useState<Connector | undefined>()\n  const pendingError = useAppSelector((state) =>\n    pendingConnector ? state.connection.errorByConnectionType[getConnection(pendingConnector).type] : undefined\n  )\n\n  const walletModalOpen = useModalIsOpen(ApplicationModal.WALLET)\n  const toggleWalletModal = useToggleWalletModal()\n\n  const openOptions = useCallback(() => {\n    setWalletView(WALLET_VIEWS.OPTIONS)\n  }, [setWalletView])\n\n  useEffect(() => {\n    if (walletModalOpen) {\n      setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS)\n    }\n  }, [walletModalOpen, setWalletView, account])\n\n  useEffect(() => {\n    if (account && account !== previousAccount && walletModalOpen) {\n      toggleWalletModal()\n      if (location.pathname === '/') {\n        navigate('/swap')\n      }\n    }\n  }, [account, previousAccount, toggleWalletModal, walletModalOpen, location.pathname, navigate])\n\n  useEffect(() => {\n    if (pendingConnector && walletView !== WALLET_VIEWS.PENDING) {\n      updateConnectionError({ connectionType: getConnection(pendingConnector).type, error: undefined })\n      setPendingConnector(undefined)\n    }\n  }, [pendingConnector, walletView])\n\n  // Keep the network connector in sync with any active user connector to prevent chain-switching on wallet disconnection.\n  useEffect(() => {\n    if (chainId && connector !== networkConnection.connector) {\n      networkConnection.connector.activate(chainId)\n    }\n  }, [chainId, connector])\n\n  // When new wallet is successfully set by the user, trigger logging of Amplitude analytics event.\n  useEffect(() => {\n    if (account && account !== lastActiveWalletAddress) {\n      const walletType = getConnectionName(getConnection(connector).type, getIsMetaMask())\n      const isReconnect =\n        connectedWallets.filter((wallet) => wallet.account === account && wallet.walletType === walletType).length > 0\n      sendAnalyticsEventAndUserInfo(account, walletType, chainId, isReconnect)\n      if (!isReconnect) addWalletToConnectedWallets({ account, walletType })\n    }\n    setLastActiveWalletAddress(account)\n  }, [connectedWallets, addWalletToConnectedWallets, lastActiveWalletAddress, account, connector, chainId])\n\n  const tryActivation = useCallback(\n    async (connector: Connector) => {\n      const connectionType = getConnection(connector).type\n\n      // log selected wallet\n      sendEvent({\n        category: 'Wallet',\n        action: 'Change Wallet',\n        label: connectionType,\n      })\n\n      try {\n        setPendingConnector(connector)\n        setWalletView(WALLET_VIEWS.PENDING)\n        dispatch(updateConnectionError({ connectionType, error: undefined }))\n\n        await connector.activate()\n\n        dispatch(updateSelectedWallet({ wallet: connectionType }))\n      } catch (error) {\n        console.debug(`web3-react connection error: ${error}`)\n        dispatch(updateConnectionError({ connectionType, error: error.message }))\n\n        sendAnalyticsEvent(EventName.WALLET_CONNECT_TXN_COMPLETED, {\n          result: WalletConnectionResult.FAILED,\n          wallet_type: getConnectionName(connectionType, getIsMetaMask()),\n        })\n      }\n    },\n    [dispatch]\n  )\n\n  function getOptions() {\n    const isInjected = getIsInjected()\n    const isMetaMask = getIsMetaMask()\n    const isCoinbaseWallet = getIsCoinbaseWallet()\n\n    const isCoinbaseWalletBrowser = isMobile && isCoinbaseWallet\n    const isMetaMaskBrowser = isMobile && isMetaMask\n    const isInjectedMobileBrowser = isCoinbaseWalletBrowser || isMetaMaskBrowser\n\n    let injectedOption\n    if (!isInjected) {\n      if (!isMobile) {\n        injectedOption = <InstallMetaMaskOption />\n      }\n    } else if (!isCoinbaseWallet) {\n      if (isMetaMask) {\n        injectedOption = <MetaMaskOption tryActivation={tryActivation} />\n      } else {\n        injectedOption = <InjectedOption tryActivation={tryActivation} />\n      }\n    }\n\n    let coinbaseWalletOption\n    if (isMobile && !isInjectedMobileBrowser) {\n      coinbaseWalletOption = <OpenCoinbaseWalletOption />\n    } else if (!isMobile || isCoinbaseWalletBrowser) {\n      coinbaseWalletOption = <CoinbaseWalletOption tryActivation={tryActivation} />\n    }\n\n    const walletConnectionOption =\n      (!isInjectedMobileBrowser && <WalletConnectOption tryActivation={tryActivation} />) ?? null\n\n    return (\n      <>\n        {injectedOption}\n        {coinbaseWalletOption}\n        {walletConnectionOption}\n      </>\n    )\n  }\n\n  function getModalContent() {\n    if (walletView === WALLET_VIEWS.ACCOUNT) {\n      return (\n        <AccountDetails\n          toggleWalletModal={toggleWalletModal}\n          pendingTransactions={pendingTransactions}\n          confirmedTransactions={confirmedTransactions}\n          ENSName={ENSName}\n          openOptions={openOptions}\n        />\n      )\n    }\n\n    let headerRow\n    if (walletView === WALLET_VIEWS.PENDING || walletView === WALLET_VIEWS.ACCOUNT || !!account) {\n      headerRow = (\n        <HeaderRow color=\"blue\">\n          <HoverText onClick={() => setWalletView(account ? WALLET_VIEWS.ACCOUNT : WALLET_VIEWS.OPTIONS)}>\n            <ArrowLeft />\n          </HoverText>\n        </HeaderRow>\n      )\n    } else {\n      headerRow = (\n        <HeaderRow>\n          <HoverText>\n            <Trans>Connect a wallet</Trans>\n          </HoverText>\n        </HeaderRow>\n      )\n    }\n\n    function getTermsOfService(walletView: string) {\n      if (walletView === WALLET_VIEWS.PENDING) return null\n\n      const content = (\n        <Trans>\n          By connecting a wallet, you agree to Uniswap Labs’{' '}\n          <ExternalLink href=\"https://uniswap.org/terms-of-service/\">Terms of Service</ExternalLink> and consent to its{' '}\n          <ExternalLink href=\"https://uniswap.org/privacy-policy\">Privacy Policy</ExternalLink>.\n        </Trans>\n      )\n      return (\n        <AutoRow style={{ flexWrap: 'nowrap', padding: '4px 16px' }}>\n          <ThemedText.BodySecondary fontSize={16} lineHeight=\"24px\">\n            {content}\n          </ThemedText.BodySecondary>\n        </AutoRow>\n      )\n    }\n\n    return (\n      <UpperSection>\n        <CloseIcon data-testid=\"wallet-modal-close\" onClick={toggleWalletModal}>\n          <CloseColor />\n        </CloseIcon>\n        {headerRow}\n        <ContentWrapper>\n          <AutoColumn gap=\"16px\">\n            {walletView === WALLET_VIEWS.PENDING && pendingConnector && (\n              <PendingView\n                openOptions={openOptions}\n                connector={pendingConnector}\n                error={!!pendingError}\n                tryActivation={tryActivation}\n              />\n            )}\n            {walletView !== WALLET_VIEWS.PENDING && <OptionGrid data-testid=\"option-grid\">{getOptions()}</OptionGrid>}\n            {!pendingError && getTermsOfService(walletView)}\n          </AutoColumn>\n        </ContentWrapper>\n      </UpperSection>\n    )\n  }\n\n  return (\n    <Modal isOpen={walletModalOpen} onDismiss={toggleWalletModal} minHeight={false} maxHeight={90}>\n      <Wrapper data-testid=\"wallet-modal\">{getModalContent()}</Wrapper>\n    </Modal>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}